!function(t) {
    var e = {};
    function n(i) {
        if (e[i])
            return e[i].exports;
        var r = e[i] = {
            i: i,
            l: !1,
            exports: {}
        };
        return t[i].call(r.exports, r, r.exports, n),
        r.l = !0,
        r.exports
    }
    n.m = t,
    n.c = e,
    n.d = function(t, e, i) {
        n.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: i
        })
    }
    ,
    n.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }
    ,
    n.t = function(t, e) {
        if (1 & e && (t = n(t)),
        8 & e)
            return t;
        if (4 & e && "object" == typeof t && t && t.__esModule)
            return t;
        var i = Object.create(null);
        if (n.r(i),
        Object.defineProperty(i, "default", {
            enumerable: !0,
            value: t
        }),
        2 & e && "string" != typeof t)
            for (var r in t)
                n.d(i, r, function(e) {
                    return t[e]
                }
                .bind(null, r));
        return i
    }
    ,
    n.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        }
        : function() {
            return t
        }
        ;
        return n.d(e, "a", e),
        e
    }
    ,
    n.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }
    ,
    n.p = "",
    n(n.s = 104)
}([function(t, e, n) {
    n.d(e, "b", function() {
        return r
    }),
    n.d(e, "a", function() {
        return s
    }),
    n.d(e, "c", function() {
        return a
    }),
    n.d(e, "d", function() {
        return o
    });
    /*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
    var i = function(t, e) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e
        }
        || function(t, e) {
            for (var n in e)
                e.hasOwnProperty(n) && (t[n] = e[n])
        }
        )(t, e)
    };
    function r(t, e) {
        function n() {
            this.constructor = t
        }
        i(t, e),
        t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype,
        new n)
    }
    var s = function() {
        return (s = Object.assign || function(t) {
            for (var e, n = 1, i = arguments.length; n < i; n++)
                for (var r in e = arguments[n])
                    Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
            return t
        }
        ).apply(this, arguments)
    };
    function a(t, e) {
        var n = "function" == typeof Symbol && t[Symbol.iterator];
        if (!n)
            return t;
        var i, r, s = n.call(t), a = [];
        try {
            for (; (void 0 === e || 0 < e--) && !(i = s.next()).done; )
                a.push(i.value)
        } catch (t) {
            r = {
                error: t
            }
        } finally {
            try {
                i && !i.done && (n = s.return) && n.call(s)
            } finally {
                if (r)
                    throw r.error
            }
        }
        return a
    }
    function o() {
        for (var t = [], e = 0; e < arguments.length; e++)
            t = t.concat(a(arguments[e]));
        return t
    }
}
, , function(t, e, n) {
    (function(t, i) {
        function r(t, e) {
            return t.require(e)
        }
        n.d(e, "c", function() {
            return r
        }),
        n.d(e, "e", function() {
            return a
        }),
        n.d(e, "g", function() {
            return o
        }),
        n.d(e, "f", function() {
            return c
        }),
        n.d(e, "d", function() {
            return l
        }),
        n.d(e, "b", function() {
            return p
        }),
        n.d(e, "a", function() {
            return h
        });
        var s = {};
        function a() {
            return "[object process]" === Object.prototype.toString.call(void 0 === t ? 0 : t) ? i : "undefined" == typeof window ? "undefined" == typeof self ? s : self : window
        }
        function o() {
            var t = a()
              , e = t.crypto || t.msCrypto;
            if (void 0 !== e && e.getRandomValues) {
                var n = new Uint16Array(8);
                e.getRandomValues(n),
                n[3] = 16384 | 4095 & n[3],
                n[4] = 32768 | 16383 & n[4];
                var i = function(t) {
                    for (var e = t.toString(16); 4 > e.length; )
                        e = "0" + e;
                    return e
                };
                return i(n[0]) + i(n[1]) + i(n[2]) + i(n[3]) + i(n[4]) + i(n[5]) + i(n[6]) + i(n[7])
            }
            return "xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g, function(t) {
                var e = 0 | 16 * Math.random();
                return ("x" === t ? e : 8 | 3 & e).toString(16)
            })
        }
        function c(t) {
            if (!t)
                return {};
            var e = t.match(/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
            if (!e)
                return {};
            var n = e[6] || ""
              , i = e[8] || "";
            return {
                host: e[4],
                path: e[5],
                protocol: e[2],
                relative: e[5] + n + i
            }
        }
        function l(t) {
            if (t.message)
                return t.message;
            if (t.exception && t.exception.values && t.exception.values[0]) {
                var e = t.exception.values[0];
                return e.type && e.value ? e.type + ": " + e.value : e.type || e.value || t.event_id || "<unknown>"
            }
            return t.event_id || "<unknown>"
        }
        function p(t) {
            var e = a();
            if (!("console"in e))
                return t();
            var n = e.console
              , i = {};
            ["debug", "info", "warn", "error", "log", "assert"].forEach(function(t) {
                t in e.console && n[t].__sentry__ && (i[t] = n[t].__sentry_wrapped__,
                n[t] = n[t].__sentry_original__)
            });
            var r = t();
            return Object.keys(i).forEach(function(t) {
                n[t] = i[t]
            }),
            r
        }
        function h(t, e, n, i) {
            void 0 === i && (i = {
                handled: !0,
                type: "generic"
            }),
            t.exception = t.exception || {},
            t.exception.values = t.exception.values || [],
            t.exception.values[0] = t.exception.values[0] || {},
            t.exception.values[0].value = t.exception.values[0].value || e || "",
            t.exception.values[0].type = t.exception.values[0].type || n || "Error",
            t.exception.values[0].mechanism = t.exception.values[0].mechanism || i
        }
    }
    ).call(this, n(14), n(21))
}
, function(t, e, n) {
    var i = e.global = n(41)
      , r = e.hasBuffer = i && !!i.isBuffer
      , s = e.hasArrayBuffer = "undefined" != typeof ArrayBuffer
      , a = e.isArray = n(11);
    e.isArrayBuffer = s ? function(t) {
        return t instanceof ArrayBuffer || d(t)
    }
    : g;
    var o = e.isBuffer = r ? i.isBuffer : g
      , c = e.isView = s ? ArrayBuffer.isView || v("ArrayBuffer", "buffer") : g;
    e.alloc = f,
    e.concat = function(t, n) {
        n || (n = 0,
        Array.prototype.forEach.call(t, function(t) {
            n += t.length
        }));
        var i = this !== e && this || t[0]
          , r = f.call(i, n)
          , s = 0;
        return Array.prototype.forEach.call(t, function(t) {
            s += u.copy.call(t, r, s)
        }),
        r
    }
    ,
    e.from = function(t) {
        return "string" == typeof t ? function(t) {
            var e = 3 * t.length
              , n = f.call(this, e)
              , i = u.write.call(n, t);
            return e !== i && (n = u.slice.call(n, 0, i)),
            n
        }
        .call(this, t) : m(this).from(t)
    }
    ;
    var l = e.Array = n(43)
      , p = e.Buffer = n(44)
      , h = e.Uint8Array = n(45)
      , u = e.prototype = n(18);
    function f(t) {
        return m(this).alloc(t)
    }
    var d = v("ArrayBuffer");
    function m(t) {
        return o(t) ? p : c(t) ? h : a(t) ? l : r ? p : s ? h : l
    }
    function g() {
        return !1
    }
    function v(t, e) {
        return t = "[object " + t + "]",
        function(n) {
            return null != n && {}.toString.call(e ? n[e] : n) === t
        }
    }
}
, function(t, e, n) {
    function i() {}
    n.r(e),
    n.d(e, "ACESFilmicToneMapping", function() {
        return pt
    }),
    n.d(e, "AddEquation", function() {
        return R
    }),
    n.d(e, "AddOperation", function() {
        return rt
    }),
    n.d(e, "AdditiveBlending", function() {
        return A
    }),
    n.d(e, "AlphaFormat", function() {
        return Ut
    }),
    n.d(e, "AlwaysDepth", function() {
        return Z
    }),
    n.d(e, "AmbientLight", function() {
        return Ac
    }),
    n.d(e, "AmbientLightProbe", function() {
        return nl
    }),
    n.d(e, "AnimationClip", function() {
        return Bo
    }),
    n.d(e, "AnimationLoader", function() {
        return Vo
    }),
    n.d(e, "AnimationMixer", function() {
        return Rl
    }),
    n.d(e, "AnimationObjectGroup", function() {
        return Pl
    }),
    n.d(e, "AnimationUtils", function() {
        return So
    }),
    n.d(e, "ArcCurve", function() {
        return $o
    }),
    n.d(e, "ArrayCamera", function() {
        return bs
    }),
    n.d(e, "ArrowHelper", function() {
        return sp
    }),
    n.d(e, "Audio", function() {
        return ll
    }),
    n.d(e, "AudioAnalyser", function() {
        return hl
    }),
    n.d(e, "AudioContext", function() {
        return Jc
    }),
    n.d(e, "AudioListener", function() {
        return cl
    }),
    n.d(e, "AudioLoader", function() {
        return $c
    }),
    n.d(e, "AxesHelper", function() {
        return ap
    }),
    n.d(e, "AxisHelper", function() {
        return Rp
    }),
    n.d(e, "BackSide", function() {
        return b
    }),
    n.d(e, "BasicDepthPacking", function() {
        return Ne
    }),
    n.d(e, "BasicShadowMap", function() {
        return m
    }),
    n.d(e, "BinaryTextureLoader", function() {
        return Bp
    }),
    n.d(e, "Bone", function() {
        return Hs
    }),
    n.d(e, "BooleanKeyframeTrack", function() {
        return Po
    }),
    n.d(e, "BoundingBoxHelper", function() {
        return Ip
    }),
    n.d(e, "Box2", function() {
        return Ul
    }),
    n.d(e, "Box3", function() {
        return gn
    }),
    n.d(e, "Box3Helper", function() {
        return ip
    }),
    n.d(e, "BoxBufferGeometry", function() {
        return pi
    }),
    n.d(e, "BoxGeometry", function() {
        return li
    }),
    n.d(e, "BoxHelper", function() {
        return np
    }),
    n.d(e, "BufferAttribute", function() {
        return Zn
    }),
    n.d(e, "BufferGeometry", function() {
        return ci
    }),
    n.d(e, "BufferGeometryLoader", function() {
        return Oc
    }),
    n.d(e, "ByteType", function() {
        return Lt
    }),
    n.d(e, "Cache", function() {
        return jo
    }),
    n.d(e, "Camera", function() {
        return vs
    }),
    n.d(e, "CameraHelper", function() {
        return ep
    }),
    n.d(e, "CanvasRenderer", function() {
        return jp
    }),
    n.d(e, "CanvasTexture", function() {
        return Js
    }),
    n.d(e, "CatmullRomCurve3", function() {
        return rc
    }),
    n.d(e, "CineonToneMapping", function() {
        return lt
    }),
    n.d(e, "CircleBufferGeometry", function() {
        return po
    }),
    n.d(e, "CircleGeometry", function() {
        return lo
    }),
    n.d(e, "ClampToEdgeWrapping", function() {
        return wt
    }),
    n.d(e, "Clock", function() {
        return ol
    }),
    n.d(e, "ClosedSplineCurve3", function() {
        return Lp
    }),
    n.d(e, "Color", function() {
        return Ln
    }),
    n.d(e, "ColorKeyframeTrack", function() {
        return Co
    }),
    n.d(e, "CompressedTexture", function() {
        return Ks
    }),
    n.d(e, "CompressedTextureLoader", function() {
        return Wo
    }),
    n.d(e, "ConeBufferGeometry", function() {
        return co
    }),
    n.d(e, "ConeGeometry", function() {
        return oo
    }),
    n.d(e, "CubeCamera", function() {
        return al
    }),
    n.d(e, "CubeGeometry", function() {
        return li
    }),
    n.d(e, "CubeReflectionMapping", function() {
        return ut
    }),
    n.d(e, "CubeRefractionMapping", function() {
        return ft
    }),
    n.d(e, "CubeTexture", function() {
        return Wi
    }),
    n.d(e, "CubeTextureLoader", function() {
        return Xo
    }),
    n.d(e, "CubeUVReflectionMapping", function() {
        return vt
    }),
    n.d(e, "CubeUVRefractionMapping", function() {
        return yt
    }),
    n.d(e, "CubicBezierCurve", function() {
        return cc
    }),
    n.d(e, "CubicBezierCurve3", function() {
        return lc
    }),
    n.d(e, "CubicInterpolant", function() {
        return Eo
    }),
    n.d(e, "CullFaceBack", function() {
        return p
    }),
    n.d(e, "CullFaceFront", function() {
        return h
    }),
    n.d(e, "CullFaceFrontBack", function() {
        return u
    }),
    n.d(e, "CullFaceNone", function() {
        return l
    }),
    n.d(e, "Curve", function() {
        return Ko
    }),
    n.d(e, "CurvePath", function() {
        return gc
    }),
    n.d(e, "CustomBlending", function() {
        return C
    }),
    n.d(e, "CylinderBufferGeometry", function() {
        return ao
    }),
    n.d(e, "CylinderGeometry", function() {
        return so
    }),
    n.d(e, "Cylindrical", function() {
        return jl
    }),
    n.d(e, "DataTexture", function() {
        return mn
    }),
    n.d(e, "DataTexture2DArray", function() {
        return Yi
    }),
    n.d(e, "DataTexture3D", function() {
        return qi
    }),
    n.d(e, "DataTextureLoader", function() {
        return Yo
    }),
    n.d(e, "DefaultLoadingManager", function() {
        return Fo
    }),
    n.d(e, "DepthFormat", function() {
        return Yt
    }),
    n.d(e, "DepthStencilFormat", function() {
        return qt
    }),
    n.d(e, "DepthTexture", function() {
        return $s
    }),
    n.d(e, "DirectionalLight", function() {
        return kc
    }),
    n.d(e, "DirectionalLightHelper", function() {
        return tp
    }),
    n.d(e, "DirectionalLightShadow", function() {
        return Ec
    }),
    n.d(e, "DiscreteInterpolant", function() {
        return Ao
    }),
    n.d(e, "DodecahedronBufferGeometry", function() {
        return ha
    }),
    n.d(e, "DodecahedronGeometry", function() {
        return pa
    }),
    n.d(e, "DoubleSide", function() {
        return w
    }),
    n.d(e, "DstAlphaFactor", function() {
        return G
    }),
    n.d(e, "DstColorFactor", function() {
        return W
    }),
    n.d(e, "DynamicBufferAttribute", function() {
        return bp
    }),
    n.d(e, "EdgesGeometry", function() {
        return ro
    }),
    n.d(e, "EdgesHelper", function() {
        return Op
    }),
    n.d(e, "EllipseCurve", function() {
        return Jo
    }),
    n.d(e, "EqualDepth", function() {
        return $
    }),
    n.d(e, "EquirectangularReflectionMapping", function() {
        return dt
    }),
    n.d(e, "EquirectangularRefractionMapping", function() {
        return mt
    }),
    n.d(e, "Euler", function() {
        return zn
    }),
    n.d(e, "EventDispatcher", function() {
        return i
    }),
    n.d(e, "ExtrudeBufferGeometry", function() {
        return Va
    }),
    n.d(e, "ExtrudeGeometry", function() {
        return Ga
    }),
    n.d(e, "Face3", function() {
        return Dn
    }),
    n.d(e, "Face4", function() {
        return op
    }),
    n.d(e, "FaceColors", function() {
        return S
    }),
    n.d(e, "FaceNormalsHelper", function() {
        return Ql
    }),
    n.d(e, "FileLoader", function() {
        return Go
    }),
    n.d(e, "FlatShading", function() {
        return x
    }),
    n.d(e, "Float32Attribute", function() {
        return kp
    }),
    n.d(e, "Float32BufferAttribute", function() {
        return ii
    }),
    n.d(e, "Float64Attribute", function() {
        return Ap
    }),
    n.d(e, "Float64BufferAttribute", function() {
        return ri
    }),
    n.d(e, "FloatType", function() {
        return Ot
    }),
    n.d(e, "Fog", function() {
        return Is
    }),
    n.d(e, "FogExp2", function() {
        return Rs
    }),
    n.d(e, "Font", function() {
        return qc
    }),
    n.d(e, "FontLoader", function() {
        return Zc
    }),
    n.d(e, "FrontFaceDirectionCCW", function() {
        return d
    }),
    n.d(e, "FrontFaceDirectionCW", function() {
        return f
    }),
    n.d(e, "FrontSide", function() {
        return y
    }),
    n.d(e, "Frustum", function() {
        return bn
    }),
    n.d(e, "GammaEncoding", function() {
        return Re
    }),
    n.d(e, "Geometry", function() {
        return Xn
    }),
    n.d(e, "GeometryUtils", function() {
        return Np
    }),
    n.d(e, "GreaterDepth", function() {
        return tt
    }),
    n.d(e, "GreaterEqualDepth", function() {
        return Q
    }),
    n.d(e, "GridHelper", function() {
        return Kl
    }),
    n.d(e, "Group", function() {
        return gs
    }),
    n.d(e, "HalfFloatType", function() {
        return Dt
    }),
    n.d(e, "HemisphereLight", function() {
        return wc
    }),
    n.d(e, "HemisphereLightHelper", function() {
        return Xl
    }),
    n.d(e, "HemisphereLightProbe", function() {
        return el
    }),
    n.d(e, "IcosahedronBufferGeometry", function() {
        return la
    }),
    n.d(e, "IcosahedronGeometry", function() {
        return ca
    }),
    n.d(e, "ImageBitmapLoader", function() {
        return Wc
    }),
    n.d(e, "ImageLoader", function() {
        return qo
    }),
    n.d(e, "ImageUtils", function() {
        return cn
    }),
    n.d(e, "ImmediateRenderObject", function() {
        return Hl
    }),
    n.d(e, "InstancedBufferAttribute", function() {
        return Ic
    }),
    n.d(e, "InstancedBufferGeometry", function() {
        return Rc
    }),
    n.d(e, "InstancedInterleavedBuffer", function() {
        return Ol
    }),
    n.d(e, "Int16Attribute", function() {
        return _p
    }),
    n.d(e, "Int16BufferAttribute", function() {
        return Qn
    }),
    n.d(e, "Int32Attribute", function() {
        return Tp
    }),
    n.d(e, "Int32BufferAttribute", function() {
        return ei
    }),
    n.d(e, "Int8Attribute", function() {
        return wp
    }),
    n.d(e, "Int8BufferAttribute", function() {
        return Kn
    }),
    n.d(e, "IntType", function() {
        return Rt
    }),
    n.d(e, "InterleavedBuffer", function() {
        return Ds
    }),
    n.d(e, "InterleavedBufferAttribute", function() {
        return zs
    }),
    n.d(e, "Interpolant", function() {
        return To
    }),
    n.d(e, "InterpolateDiscrete", function() {
        return xe
    }),
    n.d(e, "InterpolateLinear", function() {
        return Me
    }),
    n.d(e, "InterpolateSmooth", function() {
        return _e
    }),
    n.d(e, "JSONLoader", function() {
        return Up
    }),
    n.d(e, "KeyframeTrack", function() {
        return Lo
    }),
    n.d(e, "LOD", function() {
        return js
    }),
    n.d(e, "LatheBufferGeometry", function() {
        return to
    }),
    n.d(e, "LatheGeometry", function() {
        return Qa
    }),
    n.d(e, "Layers", function() {
        return Bn
    }),
    n.d(e, "LensFlare", function() {
        return Hp
    }),
    n.d(e, "LessDepth", function() {
        return K
    }),
    n.d(e, "LessEqualDepth", function() {
        return J
    }),
    n.d(e, "Light", function() {
        return bc
    }),
    n.d(e, "LightProbe", function() {
        return tl
    }),
    n.d(e, "LightProbeHelper", function() {
        return Zl
    }),
    n.d(e, "LightShadow", function() {
        return xc
    }),
    n.d(e, "Line", function() {
        return Vs
    }),
    n.d(e, "Line3", function() {
        return Fl
    }),
    n.d(e, "LineBasicMaterial", function() {
        return Gs
    }),
    n.d(e, "LineCurve", function() {
        return pc
    }),
    n.d(e, "LineCurve3", function() {
        return hc
    }),
    n.d(e, "LineDashedMaterial", function() {
        return Mo
    }),
    n.d(e, "LineLoop", function() {
        return Ys
    }),
    n.d(e, "LinePieces", function() {
        return lp
    }),
    n.d(e, "LineSegments", function() {
        return Ws
    }),
    n.d(e, "LineStrip", function() {
        return cp
    }),
    n.d(e, "LinearEncoding", function() {
        return Pe
    }),
    n.d(e, "LinearFilter", function() {
        return Tt
    }),
    n.d(e, "LinearInterpolant", function() {
        return ko
    }),
    n.d(e, "LinearMipMapLinearFilter", function() {
        return kt
    }),
    n.d(e, "LinearMipMapNearestFilter", function() {
        return Et
    }),
    n.d(e, "LinearToneMapping", function() {
        return at
    }),
    n.d(e, "Loader", function() {
        return Kc
    }),
    n.d(e, "LoaderUtils", function() {
        return Cc
    }),
    n.d(e, "LoadingManager", function() {
        return Uo
    }),
    n.d(e, "LogLuvEncoding", function() {
        return Oe
    }),
    n.d(e, "LoopOnce", function() {
        return ye
    }),
    n.d(e, "LoopPingPong", function() {
        return we
    }),
    n.d(e, "LoopRepeat", function() {
        return be
    }),
    n.d(e, "LuminanceAlphaFormat", function() {
        return Vt
    }),
    n.d(e, "LuminanceFormat", function() {
        return Gt
    }),
    n.d(e, "MOUSE", function() {
        return c
    }),
    n.d(e, "Material", function() {
        return di
    }),
    n.d(e, "MaterialLoader", function() {
        return Pc
    }),
    n.d(e, "Math", function() {
        return He
    }),
    n.d(e, "Matrix3", function() {
        return Ye
    }),
    n.d(e, "Matrix4", function() {
        return wn
    }),
    n.d(e, "MaxEquation", function() {
        return z
    }),
    n.d(e, "Mesh", function() {
        return Ii
    }),
    n.d(e, "MeshBasicMaterial", function() {
        return Ri
    }),
    n.d(e, "MeshDepthMaterial", function() {
        return ps
    }),
    n.d(e, "MeshDistanceMaterial", function() {
        return hs
    }),
    n.d(e, "MeshFaceMaterial", function() {
        return pp
    }),
    n.d(e, "MeshLambertMaterial", function() {
        return wo
    }),
    n.d(e, "MeshMatcapMaterial", function() {
        return xo
    }),
    n.d(e, "MeshNormalMaterial", function() {
        return bo
    }),
    n.d(e, "MeshPhongMaterial", function() {
        return vo
    }),
    n.d(e, "MeshPhysicalMaterial", function() {
        return go
    }),
    n.d(e, "MeshStandardMaterial", function() {
        return mo
    }),
    n.d(e, "MeshToonMaterial", function() {
        return yo
    }),
    n.d(e, "MinEquation", function() {
        return D
    }),
    n.d(e, "MirroredRepeatWrapping", function() {
        return xt
    }),
    n.d(e, "MixOperation", function() {
        return it
    }),
    n.d(e, "MultiMaterial", function() {
        return hp
    }),
    n.d(e, "MultiplyBlending", function() {
        return P
    }),
    n.d(e, "MultiplyOperation", function() {
        return nt
    }),
    n.d(e, "NearestFilter", function() {
        return Mt
    }),
    n.d(e, "NearestMipMapLinearFilter", function() {
        return St
    }),
    n.d(e, "NearestMipMapNearestFilter", function() {
        return _t
    }),
    n.d(e, "NeverDepth", function() {
        return X
    }),
    n.d(e, "NoBlending", function() {
        return E
    }),
    n.d(e, "NoColors", function() {
        return _
    }),
    n.d(e, "NoToneMapping", function() {
        return st
    }),
    n.d(e, "NormalBlending", function() {
        return k
    }),
    n.d(e, "NotEqualDepth", function() {
        return et
    }),
    n.d(e, "NumberKeyframeTrack", function() {
        return Ro
    }),
    n.d(e, "Object3D", function() {
        return Vn
    }),
    n.d(e, "ObjectLoader", function() {
        return zc
    }),
    n.d(e, "ObjectSpaceNormalMap", function() {
        return Fe
    }),
    n.d(e, "OctahedronBufferGeometry", function() {
        return oa
    }),
    n.d(e, "OctahedronGeometry", function() {
        return aa
    }),
    n.d(e, "OneFactor", function() {
        return N
    }),
    n.d(e, "OneMinusDstAlphaFactor", function() {
        return V
    }),
    n.d(e, "OneMinusDstColorFactor", function() {
        return Y
    }),
    n.d(e, "OneMinusSrcAlphaFactor", function() {
        return H
    }),
    n.d(e, "OneMinusSrcColorFactor", function() {
        return U
    }),
    n.d(e, "OrthographicCamera", function() {
        return Tc
    }),
    n.d(e, "PCFShadowMap", function() {
        return g
    }),
    n.d(e, "PCFSoftShadowMap", function() {
        return v
    }),
    n.d(e, "ParametricBufferGeometry", function() {
        return ea
    }),
    n.d(e, "ParametricGeometry", function() {
        return ta
    }),
    n.d(e, "Particle", function() {
        return fp
    }),
    n.d(e, "ParticleBasicMaterial", function() {
        return gp
    }),
    n.d(e, "ParticleSystem", function() {
        return dp
    }),
    n.d(e, "ParticleSystemMaterial", function() {
        return vp
    }),
    n.d(e, "Path", function() {
        return vc
    }),
    n.d(e, "PerspectiveCamera", function() {
        return ys
    }),
    n.d(e, "Plane", function() {
        return yn
    }),
    n.d(e, "PlaneBufferGeometry", function() {
        return ui
    }),
    n.d(e, "PlaneGeometry", function() {
        return hi
    }),
    n.d(e, "PlaneHelper", function() {
        return rp
    }),
    n.d(e, "PointCloud", function() {
        return up
    }),
    n.d(e, "PointCloudMaterial", function() {
        return mp
    }),
    n.d(e, "PointLight", function() {
        return Sc
    }),
    n.d(e, "PointLightHelper", function() {
        return Yl
    }),
    n.d(e, "Points", function() {
        return Xs
    }),
    n.d(e, "PointsMaterial", function() {
        return qs
    }),
    n.d(e, "PolarGridHelper", function() {
        return Jl
    }),
    n.d(e, "PolyhedronBufferGeometry", function() {
        return ia
    }),
    n.d(e, "PolyhedronGeometry", function() {
        return na
    }),
    n.d(e, "PositionalAudio", function() {
        return pl
    }),
    n.d(e, "PositionalAudioHelper", function() {
        return $l
    }),
    n.d(e, "PropertyBinding", function() {
        return Ll
    }),
    n.d(e, "PropertyMixer", function() {
        return ul
    }),
    n.d(e, "QuadraticBezierCurve", function() {
        return uc
    }),
    n.d(e, "QuadraticBezierCurve3", function() {
        return fc
    }),
    n.d(e, "Quaternion", function() {
        return Ve
    }),
    n.d(e, "QuaternionKeyframeTrack", function() {
        return Oo
    }),
    n.d(e, "QuaternionLinearInterpolant", function() {
        return Io
    }),
    n.d(e, "REVISION", function() {
        return o
    }),
    n.d(e, "RGBADepthPacking", function() {
        return je
    }),
    n.d(e, "RGBAFormat", function() {
        return Ht
    }),
    n.d(e, "RGBA_ASTC_10x10_Format", function() {
        return me
    }),
    n.d(e, "RGBA_ASTC_10x5_Format", function() {
        return ue
    }),
    n.d(e, "RGBA_ASTC_10x6_Format", function() {
        return fe
    }),
    n.d(e, "RGBA_ASTC_10x8_Format", function() {
        return de
    }),
    n.d(e, "RGBA_ASTC_12x10_Format", function() {
        return ge
    }),
    n.d(e, "RGBA_ASTC_12x12_Format", function() {
        return ve
    }),
    n.d(e, "RGBA_ASTC_4x4_Format", function() {
        return re
    }),
    n.d(e, "RGBA_ASTC_5x4_Format", function() {
        return se
    }),
    n.d(e, "RGBA_ASTC_5x5_Format", function() {
        return ae
    }),
    n.d(e, "RGBA_ASTC_6x5_Format", function() {
        return oe
    }),
    n.d(e, "RGBA_ASTC_6x6_Format", function() {
        return ce
    }),
    n.d(e, "RGBA_ASTC_8x5_Format", function() {
        return le
    }),
    n.d(e, "RGBA_ASTC_8x6_Format", function() {
        return pe
    }),
    n.d(e, "RGBA_ASTC_8x8_Format", function() {
        return he
    }),
    n.d(e, "RGBA_PVRTC_2BPPV1_Format", function() {
        return ne
    }),
    n.d(e, "RGBA_PVRTC_4BPPV1_Format", function() {
        return ee
    }),
    n.d(e, "RGBA_S3TC_DXT1_Format", function() {
        return Kt
    }),
    n.d(e, "RGBA_S3TC_DXT3_Format", function() {
        return Jt
    }),
    n.d(e, "RGBA_S3TC_DXT5_Format", function() {
        return $t
    }),
    n.d(e, "RGBDEncoding", function() {
        return Be
    }),
    n.d(e, "RGBEEncoding", function() {
        return Ie
    }),
    n.d(e, "RGBEFormat", function() {
        return Wt
    }),
    n.d(e, "RGBFormat", function() {
        return Ft
    }),
    n.d(e, "RGBM16Encoding", function() {
        return ze
    }),
    n.d(e, "RGBM7Encoding", function() {
        return De
    }),
    n.d(e, "RGB_ETC1_Format", function() {
        return ie
    }),
    n.d(e, "RGB_PVRTC_2BPPV1_Format", function() {
        return te
    }),
    n.d(e, "RGB_PVRTC_4BPPV1_Format", function() {
        return Qt
    }),
    n.d(e, "RGB_S3TC_DXT1_Format", function() {
        return Zt
    }),
    n.d(e, "RawShaderMaterial", function() {
        return fo
    }),
    n.d(e, "Ray", function() {
        return Pi
    }),
    n.d(e, "Raycaster", function() {
        return Dl
    }),
    n.d(e, "RectAreaLight", function() {
        return Lc
    }),
    n.d(e, "RectAreaLightHelper", function() {
        return ql
    }),
    n.d(e, "RedFormat", function() {
        return Xt
    }),
    n.d(e, "ReinhardToneMapping", function() {
        return ot
    }),
    n.d(e, "RepeatWrapping", function() {
        return bt
    }),
    n.d(e, "ReverseSubtractEquation", function() {
        return O
    }),
    n.d(e, "RingBufferGeometry", function() {
        return $a
    }),
    n.d(e, "RingGeometry", function() {
        return Ja
    }),
    n.d(e, "Scene", function() {
        return Os
    }),
    n.d(e, "SceneUtils", function() {
        return Fp
    }),
    n.d(e, "ShaderChunk", function() {
        return xn
    }),
    n.d(e, "ShaderLib", function() {
        return Rn
    }),
    n.d(e, "ShaderMaterial", function() {
        return Li
    }),
    n.d(e, "ShadowMaterial", function() {
        return uo
    }),
    n.d(e, "Shape", function() {
        return yc
    }),
    n.d(e, "ShapeBufferGeometry", function() {
        return no
    }),
    n.d(e, "ShapeGeometry", function() {
        return eo
    }),
    n.d(e, "ShapePath", function() {
        return Yc
    }),
    n.d(e, "ShapeUtils", function() {
        return Ua
    }),
    n.d(e, "ShortType", function() {
        return Pt
    }),
    n.d(e, "Skeleton", function() {
        return Fs
    }),
    n.d(e, "SkeletonHelper", function() {
        return Wl
    }),
    n.d(e, "SkinnedMesh", function() {
        return Us
    }),
    n.d(e, "SmoothShading", function() {
        return M
    }),
    n.d(e, "Sphere", function() {
        return vn
    }),
    n.d(e, "SphereBufferGeometry", function() {
        return Ka
    }),
    n.d(e, "SphereGeometry", function() {
        return Za
    }),
    n.d(e, "Spherical", function() {
        return Nl
    }),
    n.d(e, "SphericalHarmonics3", function() {
        return Qc
    }),
    n.d(e, "SphericalReflectionMapping", function() {
        return gt
    }),
    n.d(e, "Spline", function() {
        return Cp
    }),
    n.d(e, "SplineCurve", function() {
        return dc
    }),
    n.d(e, "SplineCurve3", function() {
        return Pp
    }),
    n.d(e, "SpotLight", function() {
        return _c
    }),
    n.d(e, "SpotLightHelper", function() {
        return Vl
    }),
    n.d(e, "SpotLightShadow", function() {
        return Mc
    }),
    n.d(e, "Sprite", function() {
        return Ns
    }),
    n.d(e, "SpriteMaterial", function() {
        return Bs
    }),
    n.d(e, "SrcAlphaFactor", function() {
        return F
    }),
    n.d(e, "SrcAlphaSaturateFactor", function() {
        return q
    }),
    n.d(e, "SrcColorFactor", function() {
        return j
    }),
    n.d(e, "StereoCamera", function() {
        return il
    }),
    n.d(e, "StringKeyframeTrack", function() {
        return Do
    }),
    n.d(e, "SubtractEquation", function() {
        return I
    }),
    n.d(e, "SubtractiveBlending", function() {
        return L
    }),
    n.d(e, "TangentSpaceNormalMap", function() {
        return Ue
    }),
    n.d(e, "TetrahedronBufferGeometry", function() {
        return sa
    }),
    n.d(e, "TetrahedronGeometry", function() {
        return ra
    }),
    n.d(e, "TextBufferGeometry", function() {
        return Xa
    }),
    n.d(e, "TextGeometry", function() {
        return qa
    }),
    n.d(e, "Texture", function() {
        return pn
    }),
    n.d(e, "TextureLoader", function() {
        return Zo
    }),
    n.d(e, "TorusBufferGeometry", function() {
        return va
    }),
    n.d(e, "TorusGeometry", function() {
        return ga
    }),
    n.d(e, "TorusKnotBufferGeometry", function() {
        return ma
    }),
    n.d(e, "TorusKnotGeometry", function() {
        return da
    }),
    n.d(e, "Triangle", function() {
        return Ci
    }),
    n.d(e, "TriangleFanDrawMode", function() {
        return Le
    }),
    n.d(e, "TriangleStripDrawMode", function() {
        return Ae
    }),
    n.d(e, "TrianglesDrawMode", function() {
        return ke
    }),
    n.d(e, "TubeBufferGeometry", function() {
        return fa
    }),
    n.d(e, "TubeGeometry", function() {
        return ua
    }),
    n.d(e, "UVMapping", function() {
        return ht
    }),
    n.d(e, "Uint16Attribute", function() {
        return Sp
    }),
    n.d(e, "Uint16BufferAttribute", function() {
        return ti
    }),
    n.d(e, "Uint32Attribute", function() {
        return Ep
    }),
    n.d(e, "Uint32BufferAttribute", function() {
        return ni
    }),
    n.d(e, "Uint8Attribute", function() {
        return xp
    }),
    n.d(e, "Uint8BufferAttribute", function() {
        return Jn
    }),
    n.d(e, "Uint8ClampedAttribute", function() {
        return Mp
    }),
    n.d(e, "Uint8ClampedBufferAttribute", function() {
        return $n
    }),
    n.d(e, "Uncharted2ToneMapping", function() {
        return ct
    }),
    n.d(e, "Uniform", function() {
        return Il
    }),
    n.d(e, "UniformsLib", function() {
        return Cn
    }),
    n.d(e, "UniformsUtils", function() {
        return kn
    }),
    n.d(e, "UnsignedByteType", function() {
        return At
    }),
    n.d(e, "UnsignedInt248Type", function() {
        return jt
    }),
    n.d(e, "UnsignedIntType", function() {
        return It
    }),
    n.d(e, "UnsignedShort4444Type", function() {
        return zt
    }),
    n.d(e, "UnsignedShort5551Type", function() {
        return Bt
    }),
    n.d(e, "UnsignedShort565Type", function() {
        return Nt
    }),
    n.d(e, "UnsignedShortType", function() {
        return Ct
    }),
    n.d(e, "Vector2", function() {
        return Ge
    }),
    n.d(e, "Vector3", function() {
        return We
    }),
    n.d(e, "Vector4", function() {
        return hn
    }),
    n.d(e, "VectorKeyframeTrack", function() {
        return zo
    }),
    n.d(e, "Vertex", function() {
        return yp
    }),
    n.d(e, "VertexColors", function() {
        return T
    }),
    n.d(e, "VertexNormalsHelper", function() {
        return Gl
    }),
    n.d(e, "VideoTexture", function() {
        return Zs
    }),
    n.d(e, "WebGLMultisampleRenderTarget", function() {
        return fn
    }),
    n.d(e, "WebGLRenderTarget", function() {
        return un
    }),
    n.d(e, "WebGLRenderTargetCube", function() {
        return dn
    }),
    n.d(e, "WebGLRenderer", function() {
        return Cs
    }),
    n.d(e, "WebGLUtils", function() {
        return ms
    }),
    n.d(e, "WireframeGeometry", function() {
        return Qs
    }),
    n.d(e, "WireframeHelper", function() {
        return Dp
    }),
    n.d(e, "WrapAroundEnding", function() {
        return Ee
    }),
    n.d(e, "XHRLoader", function() {
        return zp
    }),
    n.d(e, "ZeroCurvatureEnding", function() {
        return Se
    }),
    n.d(e, "ZeroFactor", function() {
        return B
    }),
    n.d(e, "ZeroSlopeEnding", function() {
        return Te
    }),
    n.d(e, "sRGBEncoding", function() {
        return Ce
    }),
    void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
    void 0 === Number.isInteger && (Number.isInteger = function(t) {
        return "number" == typeof t && isFinite(t) && Math.floor(t) === t
    }
    ),
    void 0 === Math.sign && (Math.sign = function(t) {
        return t < 0 ? -1 : t > 0 ? 1 : +t
    }
    ),
    "name"in Function.prototype == !1 && Object.defineProperty(Function.prototype, "name", {
        get: function() {
            return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]
        }
    }),
    void 0 === Object.assign && (Object.assign = function(t) {
        if (null == t)
            throw new TypeError("Cannot convert undefined or null to object");
        for (var e = Object(t), n = 1; n < arguments.length; n++) {
            var i = arguments[n];
            if (null != i)
                for (var r in i)
                    Object.prototype.hasOwnProperty.call(i, r) && (e[r] = i[r])
        }
        return e
    }
    ),
    Object.assign(i.prototype, {
        addEventListener: function(t, e) {
            void 0 === this._listeners && (this._listeners = {});
            var n = this._listeners;
            void 0 === n[t] && (n[t] = []),
            -1 === n[t].indexOf(e) && n[t].push(e)
        },
        hasEventListener: function(t, e) {
            if (void 0 === this._listeners)
                return !1;
            var n = this._listeners;
            return void 0 !== n[t] && -1 !== n[t].indexOf(e)
        },
        removeEventListener: function(t, e) {
            if (void 0 !== this._listeners) {
                var n = this._listeners[t];
                if (void 0 !== n) {
                    var i = n.indexOf(e);
                    -1 !== i && n.splice(i, 1)
                }
            }
        },
        dispatchEvent: function(t) {
            if (void 0 !== this._listeners) {
                var e = this._listeners[t.type];
                if (void 0 !== e) {
                    t.target = this;
                    for (var n = e.slice(0), i = 0, r = n.length; i < r; i++)
                        n[i].call(this, t)
                }
            }
        }
    });
    var r, s, a, o = "105", c = {
        LEFT: 0,
        MIDDLE: 1,
        RIGHT: 2
    }, l = 0, p = 1, h = 2, u = 3, f = 0, d = 1, m = 0, g = 1, v = 2, y = 0, b = 1, w = 2, x = 1, M = 2, _ = 0, S = 1, T = 2, E = 0, k = 1, A = 2, L = 3, P = 4, C = 5, R = 100, I = 101, O = 102, D = 103, z = 104, B = 200, N = 201, j = 202, U = 203, F = 204, H = 205, G = 206, V = 207, W = 208, Y = 209, q = 210, X = 0, Z = 1, K = 2, J = 3, $ = 4, Q = 5, tt = 6, et = 7, nt = 0, it = 1, rt = 2, st = 0, at = 1, ot = 2, ct = 3, lt = 4, pt = 5, ht = 300, ut = 301, ft = 302, dt = 303, mt = 304, gt = 305, vt = 306, yt = 307, bt = 1e3, wt = 1001, xt = 1002, Mt = 1003, _t = 1004, St = 1005, Tt = 1006, Et = 1007, kt = 1008, At = 1009, Lt = 1010, Pt = 1011, Ct = 1012, Rt = 1013, It = 1014, Ot = 1015, Dt = 1016, zt = 1017, Bt = 1018, Nt = 1019, jt = 1020, Ut = 1021, Ft = 1022, Ht = 1023, Gt = 1024, Vt = 1025, Wt = Ht, Yt = 1026, qt = 1027, Xt = 1028, Zt = 33776, Kt = 33777, Jt = 33778, $t = 33779, Qt = 35840, te = 35841, ee = 35842, ne = 35843, ie = 36196, re = 37808, se = 37809, ae = 37810, oe = 37811, ce = 37812, le = 37813, pe = 37814, he = 37815, ue = 37816, fe = 37817, de = 37818, me = 37819, ge = 37820, ve = 37821, ye = 2200, be = 2201, we = 2202, xe = 2300, Me = 2301, _e = 2302, Se = 2400, Te = 2401, Ee = 2402, ke = 0, Ae = 1, Le = 2, Pe = 3e3, Ce = 3001, Re = 3007, Ie = 3002, Oe = 3003, De = 3004, ze = 3005, Be = 3006, Ne = 3200, je = 3201, Ue = 0, Fe = 1, He = {
        DEG2RAD: Math.PI / 180,
        RAD2DEG: 180 / Math.PI,
        generateUUID: function() {
            for (var t = [], e = 0; e < 256; e++)
                t[e] = (e < 16 ? "0" : "") + e.toString(16);
            return function() {
                var e = 4294967295 * Math.random() | 0
                  , n = 4294967295 * Math.random() | 0
                  , i = 4294967295 * Math.random() | 0
                  , r = 4294967295 * Math.random() | 0;
                return (t[255 & e] + t[e >> 8 & 255] + t[e >> 16 & 255] + t[e >> 24 & 255] + "-" + t[255 & n] + t[n >> 8 & 255] + "-" + t[n >> 16 & 15 | 64] + t[n >> 24 & 255] + "-" + t[63 & i | 128] + t[i >> 8 & 255] + "-" + t[i >> 16 & 255] + t[i >> 24 & 255] + t[255 & r] + t[r >> 8 & 255] + t[r >> 16 & 255] + t[r >> 24 & 255]).toUpperCase()
            }
        }(),
        clamp: function(t, e, n) {
            return Math.max(e, Math.min(n, t))
        },
        euclideanModulo: function(t, e) {
            return (t % e + e) % e
        },
        mapLinear: function(t, e, n, i, r) {
            return i + (t - e) * (r - i) / (n - e)
        },
        lerp: function(t, e, n) {
            return (1 - n) * t + n * e
        },
        smoothstep: function(t, e, n) {
            return t <= e ? 0 : t >= n ? 1 : (t = (t - e) / (n - e)) * t * (3 - 2 * t)
        },
        smootherstep: function(t, e, n) {
            return t <= e ? 0 : t >= n ? 1 : (t = (t - e) / (n - e)) * t * t * (t * (6 * t - 15) + 10)
        },
        randInt: function(t, e) {
            return t + Math.floor(Math.random() * (e - t + 1))
        },
        randFloat: function(t, e) {
            return t + Math.random() * (e - t)
        },
        randFloatSpread: function(t) {
            return t * (.5 - Math.random())
        },
        degToRad: function(t) {
            return t * He.DEG2RAD
        },
        radToDeg: function(t) {
            return t * He.RAD2DEG
        },
        isPowerOfTwo: function(t) {
            return 0 == (t & t - 1) && 0 !== t
        },
        ceilPowerOfTwo: function(t) {
            return Math.pow(2, Math.ceil(Math.log(t) / Math.LN2))
        },
        floorPowerOfTwo: function(t) {
            return Math.pow(2, Math.floor(Math.log(t) / Math.LN2))
        }
    };
    function Ge(t, e) {
        this.x = t || 0,
        this.y = e || 0
    }
    function Ve(t, e, n, i) {
        this._x = t || 0,
        this._y = e || 0,
        this._z = n || 0,
        this._w = void 0 !== i ? i : 1
    }
    function We(t, e, n) {
        this.x = t || 0,
        this.y = e || 0,
        this.z = n || 0
    }
    function Ye() {
        this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1],
        arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
    }
    Object.defineProperties(Ge.prototype, {
        width: {
            get: function() {
                return this.x
            },
            set: function(t) {
                this.x = t
            }
        },
        height: {
            get: function() {
                return this.y
            },
            set: function(t) {
                this.y = t
            }
        }
    }),
    Object.assign(Ge.prototype, {
        isVector2: !0,
        set: function(t, e) {
            return this.x = t,
            this.y = e,
            this
        },
        setScalar: function(t) {
            return this.x = t,
            this.y = t,
            this
        },
        setX: function(t) {
            return this.x = t,
            this
        },
        setY: function(t) {
            return this.y = t,
            this
        },
        setComponent: function(t, e) {
            switch (t) {
            case 0:
                this.x = e;
                break;
            case 1:
                this.y = e;
                break;
            default:
                throw new Error("index is out of range: " + t)
            }
            return this
        },
        getComponent: function(t) {
            switch (t) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            default:
                throw new Error("index is out of range: " + t)
            }
        },
        clone: function() {
            return new this.constructor(this.x,this.y)
        },
        copy: function(t) {
            return this.x = t.x,
            this.y = t.y,
            this
        },
        add: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
            this.addVectors(t, e)) : (this.x += t.x,
            this.y += t.y,
            this)
        },
        addScalar: function(t) {
            return this.x += t,
            this.y += t,
            this
        },
        addVectors: function(t, e) {
            return this.x = t.x + e.x,
            this.y = t.y + e.y,
            this
        },
        addScaledVector: function(t, e) {
            return this.x += t.x * e,
            this.y += t.y * e,
            this
        },
        sub: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
            this.subVectors(t, e)) : (this.x -= t.x,
            this.y -= t.y,
            this)
        },
        subScalar: function(t) {
            return this.x -= t,
            this.y -= t,
            this
        },
        subVectors: function(t, e) {
            return this.x = t.x - e.x,
            this.y = t.y - e.y,
            this
        },
        multiply: function(t) {
            return this.x *= t.x,
            this.y *= t.y,
            this
        },
        multiplyScalar: function(t) {
            return this.x *= t,
            this.y *= t,
            this
        },
        divide: function(t) {
            return this.x /= t.x,
            this.y /= t.y,
            this
        },
        divideScalar: function(t) {
            return this.multiplyScalar(1 / t)
        },
        applyMatrix3: function(t) {
            var e = this.x
              , n = this.y
              , i = t.elements;
            return this.x = i[0] * e + i[3] * n + i[6],
            this.y = i[1] * e + i[4] * n + i[7],
            this
        },
        min: function(t) {
            return this.x = Math.min(this.x, t.x),
            this.y = Math.min(this.y, t.y),
            this
        },
        max: function(t) {
            return this.x = Math.max(this.x, t.x),
            this.y = Math.max(this.y, t.y),
            this
        },
        clamp: function(t, e) {
            return this.x = Math.max(t.x, Math.min(e.x, this.x)),
            this.y = Math.max(t.y, Math.min(e.y, this.y)),
            this
        },
        clampScalar: function(t, e) {
            return this.x = Math.max(t, Math.min(e, this.x)),
            this.y = Math.max(t, Math.min(e, this.y)),
            this
        },
        clampLength: function(t, e) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)))
        },
        floor: function() {
            return this.x = Math.floor(this.x),
            this.y = Math.floor(this.y),
            this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x),
            this.y = Math.ceil(this.y),
            this
        },
        round: function() {
            return this.x = Math.round(this.x),
            this.y = Math.round(this.y),
            this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
            this
        },
        negate: function() {
            return this.x = -this.x,
            this.y = -this.y,
            this
        },
        dot: function(t) {
            return this.x * t.x + this.y * t.y
        },
        cross: function(t) {
            return this.x * t.y - this.y * t.x
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        angle: function() {
            var t = Math.atan2(this.y, this.x);
            return t < 0 && (t += 2 * Math.PI),
            t
        },
        distanceTo: function(t) {
            return Math.sqrt(this.distanceToSquared(t))
        },
        distanceToSquared: function(t) {
            var e = this.x - t.x
              , n = this.y - t.y;
            return e * e + n * n
        },
        manhattanDistanceTo: function(t) {
            return Math.abs(this.x - t.x) + Math.abs(this.y - t.y)
        },
        setLength: function(t) {
            return this.normalize().multiplyScalar(t)
        },
        lerp: function(t, e) {
            return this.x += (t.x - this.x) * e,
            this.y += (t.y - this.y) * e,
            this
        },
        lerpVectors: function(t, e, n) {
            return this.subVectors(e, t).multiplyScalar(n).add(t)
        },
        equals: function(t) {
            return t.x === this.x && t.y === this.y
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0),
            this.x = t[e],
            this.y = t[e + 1],
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this.x,
            t[e + 1] = this.y,
            t
        },
        fromBufferAttribute: function(t, e, n) {
            return void 0 !== n && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),
            this.x = t.getX(e),
            this.y = t.getY(e),
            this
        },
        rotateAround: function(t, e) {
            var n = Math.cos(e)
              , i = Math.sin(e)
              , r = this.x - t.x
              , s = this.y - t.y;
            return this.x = r * n - s * i + t.x,
            this.y = r * i + s * n + t.y,
            this
        }
    }),
    Object.assign(Ve, {
        slerp: function(t, e, n, i) {
            return n.copy(t).slerp(e, i)
        },
        slerpFlat: function(t, e, n, i, r, s, a) {
            var o = n[i + 0]
              , c = n[i + 1]
              , l = n[i + 2]
              , p = n[i + 3]
              , h = r[s + 0]
              , u = r[s + 1]
              , f = r[s + 2]
              , d = r[s + 3];
            if (p !== d || o !== h || c !== u || l !== f) {
                var m = 1 - a
                  , g = o * h + c * u + l * f + p * d
                  , v = g >= 0 ? 1 : -1
                  , y = 1 - g * g;
                if (y > Number.EPSILON) {
                    var b = Math.sqrt(y)
                      , w = Math.atan2(b, g * v);
                    m = Math.sin(m * w) / b,
                    a = Math.sin(a * w) / b
                }
                var x = a * v;
                if (o = o * m + h * x,
                c = c * m + u * x,
                l = l * m + f * x,
                p = p * m + d * x,
                m === 1 - a) {
                    var M = 1 / Math.sqrt(o * o + c * c + l * l + p * p);
                    o *= M,
                    c *= M,
                    l *= M,
                    p *= M
                }
            }
            t[e] = o,
            t[e + 1] = c,
            t[e + 2] = l,
            t[e + 3] = p
        }
    }),
    Object.defineProperties(Ve.prototype, {
        x: {
            get: function() {
                return this._x
            },
            set: function(t) {
                this._x = t,
                this.onChangeCallback()
            }
        },
        y: {
            get: function() {
                return this._y
            },
            set: function(t) {
                this._y = t,
                this.onChangeCallback()
            }
        },
        z: {
            get: function() {
                return this._z
            },
            set: function(t) {
                this._z = t,
                this.onChangeCallback()
            }
        },
        w: {
            get: function() {
                return this._w
            },
            set: function(t) {
                this._w = t,
                this.onChangeCallback()
            }
        }
    }),
    Object.assign(Ve.prototype, {
        isQuaternion: !0,
        set: function(t, e, n, i) {
            return this._x = t,
            this._y = e,
            this._z = n,
            this._w = i,
            this.onChangeCallback(),
            this
        },
        clone: function() {
            return new this.constructor(this._x,this._y,this._z,this._w)
        },
        copy: function(t) {
            return this._x = t.x,
            this._y = t.y,
            this._z = t.z,
            this._w = t.w,
            this.onChangeCallback(),
            this
        },
        setFromEuler: function(t, e) {
            if (!t || !t.isEuler)
                throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
            var n = t._x
              , i = t._y
              , r = t._z
              , s = t.order
              , a = Math.cos
              , o = Math.sin
              , c = a(n / 2)
              , l = a(i / 2)
              , p = a(r / 2)
              , h = o(n / 2)
              , u = o(i / 2)
              , f = o(r / 2);
            return "XYZ" === s ? (this._x = h * l * p + c * u * f,
            this._y = c * u * p - h * l * f,
            this._z = c * l * f + h * u * p,
            this._w = c * l * p - h * u * f) : "YXZ" === s ? (this._x = h * l * p + c * u * f,
            this._y = c * u * p - h * l * f,
            this._z = c * l * f - h * u * p,
            this._w = c * l * p + h * u * f) : "ZXY" === s ? (this._x = h * l * p - c * u * f,
            this._y = c * u * p + h * l * f,
            this._z = c * l * f + h * u * p,
            this._w = c * l * p - h * u * f) : "ZYX" === s ? (this._x = h * l * p - c * u * f,
            this._y = c * u * p + h * l * f,
            this._z = c * l * f - h * u * p,
            this._w = c * l * p + h * u * f) : "YZX" === s ? (this._x = h * l * p + c * u * f,
            this._y = c * u * p + h * l * f,
            this._z = c * l * f - h * u * p,
            this._w = c * l * p - h * u * f) : "XZY" === s && (this._x = h * l * p - c * u * f,
            this._y = c * u * p - h * l * f,
            this._z = c * l * f + h * u * p,
            this._w = c * l * p + h * u * f),
            !1 !== e && this.onChangeCallback(),
            this
        },
        setFromAxisAngle: function(t, e) {
            var n = e / 2
              , i = Math.sin(n);
            return this._x = t.x * i,
            this._y = t.y * i,
            this._z = t.z * i,
            this._w = Math.cos(n),
            this.onChangeCallback(),
            this
        },
        setFromRotationMatrix: function(t) {
            var e, n = t.elements, i = n[0], r = n[4], s = n[8], a = n[1], o = n[5], c = n[9], l = n[2], p = n[6], h = n[10], u = i + o + h;
            return u > 0 ? (e = .5 / Math.sqrt(u + 1),
            this._w = .25 / e,
            this._x = (p - c) * e,
            this._y = (s - l) * e,
            this._z = (a - r) * e) : i > o && i > h ? (e = 2 * Math.sqrt(1 + i - o - h),
            this._w = (p - c) / e,
            this._x = .25 * e,
            this._y = (r + a) / e,
            this._z = (s + l) / e) : o > h ? (e = 2 * Math.sqrt(1 + o - i - h),
            this._w = (s - l) / e,
            this._x = (r + a) / e,
            this._y = .25 * e,
            this._z = (c + p) / e) : (e = 2 * Math.sqrt(1 + h - i - o),
            this._w = (a - r) / e,
            this._x = (s + l) / e,
            this._y = (c + p) / e,
            this._z = .25 * e),
            this.onChangeCallback(),
            this
        },
        setFromUnitVectors: function(t, e) {
            var n = t.dot(e) + 1;
            return n < 1e-6 ? (n = 0,
            Math.abs(t.x) > Math.abs(t.z) ? (this._x = -t.y,
            this._y = t.x,
            this._z = 0,
            this._w = n) : (this._x = 0,
            this._y = -t.z,
            this._z = t.y,
            this._w = n)) : (this._x = t.y * e.z - t.z * e.y,
            this._y = t.z * e.x - t.x * e.z,
            this._z = t.x * e.y - t.y * e.x,
            this._w = n),
            this.normalize()
        },
        angleTo: function(t) {
            return 2 * Math.acos(Math.abs(He.clamp(this.dot(t), -1, 1)))
        },
        rotateTowards: function(t, e) {
            var n = this.angleTo(t);
            if (0 === n)
                return this;
            var i = Math.min(1, e / n);
            return this.slerp(t, i),
            this
        },
        inverse: function() {
            return this.conjugate()
        },
        conjugate: function() {
            return this._x *= -1,
            this._y *= -1,
            this._z *= -1,
            this.onChangeCallback(),
            this
        },
        dot: function(t) {
            return this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w
        },
        lengthSq: function() {
            return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
        },
        length: function() {
            return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
        },
        normalize: function() {
            var t = this.length();
            return 0 === t ? (this._x = 0,
            this._y = 0,
            this._z = 0,
            this._w = 1) : (t = 1 / t,
            this._x = this._x * t,
            this._y = this._y * t,
            this._z = this._z * t,
            this._w = this._w * t),
            this.onChangeCallback(),
            this
        },
        multiply: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),
            this.multiplyQuaternions(t, e)) : this.multiplyQuaternions(this, t)
        },
        premultiply: function(t) {
            return this.multiplyQuaternions(t, this)
        },
        multiplyQuaternions: function(t, e) {
            var n = t._x
              , i = t._y
              , r = t._z
              , s = t._w
              , a = e._x
              , o = e._y
              , c = e._z
              , l = e._w;
            return this._x = n * l + s * a + i * c - r * o,
            this._y = i * l + s * o + r * a - n * c,
            this._z = r * l + s * c + n * o - i * a,
            this._w = s * l - n * a - i * o - r * c,
            this.onChangeCallback(),
            this
        },
        slerp: function(t, e) {
            if (0 === e)
                return this;
            if (1 === e)
                return this.copy(t);
            var n = this._x
              , i = this._y
              , r = this._z
              , s = this._w
              , a = s * t._w + n * t._x + i * t._y + r * t._z;
            if (a < 0 ? (this._w = -t._w,
            this._x = -t._x,
            this._y = -t._y,
            this._z = -t._z,
            a = -a) : this.copy(t),
            a >= 1)
                return this._w = s,
                this._x = n,
                this._y = i,
                this._z = r,
                this;
            var o = 1 - a * a;
            if (o <= Number.EPSILON) {
                var c = 1 - e;
                return this._w = c * s + e * this._w,
                this._x = c * n + e * this._x,
                this._y = c * i + e * this._y,
                this._z = c * r + e * this._z,
                this.normalize()
            }
            var l = Math.sqrt(o)
              , p = Math.atan2(l, a)
              , h = Math.sin((1 - e) * p) / l
              , u = Math.sin(e * p) / l;
            return this._w = s * h + this._w * u,
            this._x = n * h + this._x * u,
            this._y = i * h + this._y * u,
            this._z = r * h + this._z * u,
            this.onChangeCallback(),
            this
        },
        equals: function(t) {
            return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0),
            this._x = t[e],
            this._y = t[e + 1],
            this._z = t[e + 2],
            this._w = t[e + 3],
            this.onChangeCallback(),
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this._x,
            t[e + 1] = this._y,
            t[e + 2] = this._z,
            t[e + 3] = this._w,
            t
        },
        onChange: function(t) {
            return this.onChangeCallback = t,
            this
        },
        onChangeCallback: function() {}
    }),
    Object.assign(We.prototype, {
        isVector3: !0,
        set: function(t, e, n) {
            return this.x = t,
            this.y = e,
            this.z = n,
            this
        },
        setScalar: function(t) {
            return this.x = t,
            this.y = t,
            this.z = t,
            this
        },
        setX: function(t) {
            return this.x = t,
            this
        },
        setY: function(t) {
            return this.y = t,
            this
        },
        setZ: function(t) {
            return this.z = t,
            this
        },
        setComponent: function(t, e) {
            switch (t) {
            case 0:
                this.x = e;
                break;
            case 1:
                this.y = e;
                break;
            case 2:
                this.z = e;
                break;
            default:
                throw new Error("index is out of range: " + t)
            }
            return this
        },
        getComponent: function(t) {
            switch (t) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            default:
                throw new Error("index is out of range: " + t)
            }
        },
        clone: function() {
            return new this.constructor(this.x,this.y,this.z)
        },
        copy: function(t) {
            return this.x = t.x,
            this.y = t.y,
            this.z = t.z,
            this
        },
        add: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
            this.addVectors(t, e)) : (this.x += t.x,
            this.y += t.y,
            this.z += t.z,
            this)
        },
        addScalar: function(t) {
            return this.x += t,
            this.y += t,
            this.z += t,
            this
        },
        addVectors: function(t, e) {
            return this.x = t.x + e.x,
            this.y = t.y + e.y,
            this.z = t.z + e.z,
            this
        },
        addScaledVector: function(t, e) {
            return this.x += t.x * e,
            this.y += t.y * e,
            this.z += t.z * e,
            this
        },
        sub: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
            this.subVectors(t, e)) : (this.x -= t.x,
            this.y -= t.y,
            this.z -= t.z,
            this)
        },
        subScalar: function(t) {
            return this.x -= t,
            this.y -= t,
            this.z -= t,
            this
        },
        subVectors: function(t, e) {
            return this.x = t.x - e.x,
            this.y = t.y - e.y,
            this.z = t.z - e.z,
            this
        },
        multiply: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),
            this.multiplyVectors(t, e)) : (this.x *= t.x,
            this.y *= t.y,
            this.z *= t.z,
            this)
        },
        multiplyScalar: function(t) {
            return this.x *= t,
            this.y *= t,
            this.z *= t,
            this
        },
        multiplyVectors: function(t, e) {
            return this.x = t.x * e.x,
            this.y = t.y * e.y,
            this.z = t.z * e.z,
            this
        },
        applyEuler: (s = new Ve,
        function(t) {
            return t && t.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),
            this.applyQuaternion(s.setFromEuler(t))
        }
        ),
        applyAxisAngle: function() {
            var t = new Ve;
            return function(e, n) {
                return this.applyQuaternion(t.setFromAxisAngle(e, n))
            }
        }(),
        applyMatrix3: function(t) {
            var e = this.x
              , n = this.y
              , i = this.z
              , r = t.elements;
            return this.x = r[0] * e + r[3] * n + r[6] * i,
            this.y = r[1] * e + r[4] * n + r[7] * i,
            this.z = r[2] * e + r[5] * n + r[8] * i,
            this
        },
        applyMatrix4: function(t) {
            var e = this.x
              , n = this.y
              , i = this.z
              , r = t.elements
              , s = 1 / (r[3] * e + r[7] * n + r[11] * i + r[15]);
            return this.x = (r[0] * e + r[4] * n + r[8] * i + r[12]) * s,
            this.y = (r[1] * e + r[5] * n + r[9] * i + r[13]) * s,
            this.z = (r[2] * e + r[6] * n + r[10] * i + r[14]) * s,
            this
        },
        applyQuaternion: function(t) {
            var e = this.x
              , n = this.y
              , i = this.z
              , r = t.x
              , s = t.y
              , a = t.z
              , o = t.w
              , c = o * e + s * i - a * n
              , l = o * n + a * e - r * i
              , p = o * i + r * n - s * e
              , h = -r * e - s * n - a * i;
            return this.x = c * o + h * -r + l * -a - p * -s,
            this.y = l * o + h * -s + p * -r - c * -a,
            this.z = p * o + h * -a + c * -s - l * -r,
            this
        },
        project: function(t) {
            return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)
        },
        unproject: function(t) {
            return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)
        },
        transformDirection: function(t) {
            var e = this.x
              , n = this.y
              , i = this.z
              , r = t.elements;
            return this.x = r[0] * e + r[4] * n + r[8] * i,
            this.y = r[1] * e + r[5] * n + r[9] * i,
            this.z = r[2] * e + r[6] * n + r[10] * i,
            this.normalize()
        },
        divide: function(t) {
            return this.x /= t.x,
            this.y /= t.y,
            this.z /= t.z,
            this
        },
        divideScalar: function(t) {
            return this.multiplyScalar(1 / t)
        },
        min: function(t) {
            return this.x = Math.min(this.x, t.x),
            this.y = Math.min(this.y, t.y),
            this.z = Math.min(this.z, t.z),
            this
        },
        max: function(t) {
            return this.x = Math.max(this.x, t.x),
            this.y = Math.max(this.y, t.y),
            this.z = Math.max(this.z, t.z),
            this
        },
        clamp: function(t, e) {
            return this.x = Math.max(t.x, Math.min(e.x, this.x)),
            this.y = Math.max(t.y, Math.min(e.y, this.y)),
            this.z = Math.max(t.z, Math.min(e.z, this.z)),
            this
        },
        clampScalar: function(t, e) {
            return this.x = Math.max(t, Math.min(e, this.x)),
            this.y = Math.max(t, Math.min(e, this.y)),
            this.z = Math.max(t, Math.min(e, this.z)),
            this
        },
        clampLength: function(t, e) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)))
        },
        floor: function() {
            return this.x = Math.floor(this.x),
            this.y = Math.floor(this.y),
            this.z = Math.floor(this.z),
            this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x),
            this.y = Math.ceil(this.y),
            this.z = Math.ceil(this.z),
            this
        },
        round: function() {
            return this.x = Math.round(this.x),
            this.y = Math.round(this.y),
            this.z = Math.round(this.z),
            this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
            this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
            this
        },
        negate: function() {
            return this.x = -this.x,
            this.y = -this.y,
            this.z = -this.z,
            this
        },
        dot: function(t) {
            return this.x * t.x + this.y * t.y + this.z * t.z
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        setLength: function(t) {
            return this.normalize().multiplyScalar(t)
        },
        lerp: function(t, e) {
            return this.x += (t.x - this.x) * e,
            this.y += (t.y - this.y) * e,
            this.z += (t.z - this.z) * e,
            this
        },
        lerpVectors: function(t, e, n) {
            return this.subVectors(e, t).multiplyScalar(n).add(t)
        },
        cross: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),
            this.crossVectors(t, e)) : this.crossVectors(this, t)
        },
        crossVectors: function(t, e) {
            var n = t.x
              , i = t.y
              , r = t.z
              , s = e.x
              , a = e.y
              , o = e.z;
            return this.x = i * o - r * a,
            this.y = r * s - n * o,
            this.z = n * a - i * s,
            this
        },
        projectOnVector: function(t) {
            var e = t.dot(this) / t.lengthSq();
            return this.copy(t).multiplyScalar(e)
        },
        projectOnPlane: (r = new We,
        function(t) {
            return r.copy(this).projectOnVector(t),
            this.sub(r)
        }
        ),
        reflect: function() {
            var t = new We;
            return function(e) {
                return this.sub(t.copy(e).multiplyScalar(2 * this.dot(e)))
            }
        }(),
        angleTo: function(t) {
            var e = this.dot(t) / Math.sqrt(this.lengthSq() * t.lengthSq());
            return Math.acos(He.clamp(e, -1, 1))
        },
        distanceTo: function(t) {
            return Math.sqrt(this.distanceToSquared(t))
        },
        distanceToSquared: function(t) {
            var e = this.x - t.x
              , n = this.y - t.y
              , i = this.z - t.z;
            return e * e + n * n + i * i
        },
        manhattanDistanceTo: function(t) {
            return Math.abs(this.x - t.x) + Math.abs(this.y - t.y) + Math.abs(this.z - t.z)
        },
        setFromSpherical: function(t) {
            return this.setFromSphericalCoords(t.radius, t.phi, t.theta)
        },
        setFromSphericalCoords: function(t, e, n) {
            var i = Math.sin(e) * t;
            return this.x = i * Math.sin(n),
            this.y = Math.cos(e) * t,
            this.z = i * Math.cos(n),
            this
        },
        setFromCylindrical: function(t) {
            return this.setFromCylindricalCoords(t.radius, t.theta, t.y)
        },
        setFromCylindricalCoords: function(t, e, n) {
            return this.x = t * Math.sin(e),
            this.y = n,
            this.z = t * Math.cos(e),
            this
        },
        setFromMatrixPosition: function(t) {
            var e = t.elements;
            return this.x = e[12],
            this.y = e[13],
            this.z = e[14],
            this
        },
        setFromMatrixScale: function(t) {
            var e = this.setFromMatrixColumn(t, 0).length()
              , n = this.setFromMatrixColumn(t, 1).length()
              , i = this.setFromMatrixColumn(t, 2).length();
            return this.x = e,
            this.y = n,
            this.z = i,
            this
        },
        setFromMatrixColumn: function(t, e) {
            return this.fromArray(t.elements, 4 * e)
        },
        equals: function(t) {
            return t.x === this.x && t.y === this.y && t.z === this.z
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0),
            this.x = t[e],
            this.y = t[e + 1],
            this.z = t[e + 2],
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this.x,
            t[e + 1] = this.y,
            t[e + 2] = this.z,
            t
        },
        fromBufferAttribute: function(t, e, n) {
            return void 0 !== n && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),
            this.x = t.getX(e),
            this.y = t.getY(e),
            this.z = t.getZ(e),
            this
        }
    }),
    Object.assign(Ye.prototype, {
        isMatrix3: !0,
        set: function(t, e, n, i, r, s, a, o, c) {
            var l = this.elements;
            return l[0] = t,
            l[1] = i,
            l[2] = a,
            l[3] = e,
            l[4] = r,
            l[5] = o,
            l[6] = n,
            l[7] = s,
            l[8] = c,
            this
        },
        identity: function() {
            return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
            this
        },
        clone: function() {
            return (new this.constructor).fromArray(this.elements)
        },
        copy: function(t) {
            var e = this.elements
              , n = t.elements;
            return e[0] = n[0],
            e[1] = n[1],
            e[2] = n[2],
            e[3] = n[3],
            e[4] = n[4],
            e[5] = n[5],
            e[6] = n[6],
            e[7] = n[7],
            e[8] = n[8],
            this
        },
        setFromMatrix4: function(t) {
            var e = t.elements;
            return this.set(e[0], e[4], e[8], e[1], e[5], e[9], e[2], e[6], e[10]),
            this
        },
        applyToBufferAttribute: function() {
            var t = new We;
            return function(e) {
                for (var n = 0, i = e.count; n < i; n++)
                    t.x = e.getX(n),
                    t.y = e.getY(n),
                    t.z = e.getZ(n),
                    t.applyMatrix3(this),
                    e.setXYZ(n, t.x, t.y, t.z);
                return e
            }
        }(),
        multiply: function(t) {
            return this.multiplyMatrices(this, t)
        },
        premultiply: function(t) {
            return this.multiplyMatrices(t, this)
        },
        multiplyMatrices: function(t, e) {
            var n = t.elements
              , i = e.elements
              , r = this.elements
              , s = n[0]
              , a = n[3]
              , o = n[6]
              , c = n[1]
              , l = n[4]
              , p = n[7]
              , h = n[2]
              , u = n[5]
              , f = n[8]
              , d = i[0]
              , m = i[3]
              , g = i[6]
              , v = i[1]
              , y = i[4]
              , b = i[7]
              , w = i[2]
              , x = i[5]
              , M = i[8];
            return r[0] = s * d + a * v + o * w,
            r[3] = s * m + a * y + o * x,
            r[6] = s * g + a * b + o * M,
            r[1] = c * d + l * v + p * w,
            r[4] = c * m + l * y + p * x,
            r[7] = c * g + l * b + p * M,
            r[2] = h * d + u * v + f * w,
            r[5] = h * m + u * y + f * x,
            r[8] = h * g + u * b + f * M,
            this
        },
        multiplyScalar: function(t) {
            var e = this.elements;
            return e[0] *= t,
            e[3] *= t,
            e[6] *= t,
            e[1] *= t,
            e[4] *= t,
            e[7] *= t,
            e[2] *= t,
            e[5] *= t,
            e[8] *= t,
            this
        },
        determinant: function() {
            var t = this.elements
              , e = t[0]
              , n = t[1]
              , i = t[2]
              , r = t[3]
              , s = t[4]
              , a = t[5]
              , o = t[6]
              , c = t[7]
              , l = t[8];
            return e * s * l - e * a * c - n * r * l + n * a * o + i * r * c - i * s * o
        },
        getInverse: function(t, e) {
            t && t.isMatrix4 && console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");
            var n = t.elements
              , i = this.elements
              , r = n[0]
              , s = n[1]
              , a = n[2]
              , o = n[3]
              , c = n[4]
              , l = n[5]
              , p = n[6]
              , h = n[7]
              , u = n[8]
              , f = u * c - l * h
              , d = l * p - u * o
              , m = h * o - c * p
              , g = r * f + s * d + a * m;
            if (0 === g) {
                var v = "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
                if (!0 === e)
                    throw new Error(v);
                return console.warn(v),
                this.identity()
            }
            var y = 1 / g;
            return i[0] = f * y,
            i[1] = (a * h - u * s) * y,
            i[2] = (l * s - a * c) * y,
            i[3] = d * y,
            i[4] = (u * r - a * p) * y,
            i[5] = (a * o - l * r) * y,
            i[6] = m * y,
            i[7] = (s * p - h * r) * y,
            i[8] = (c * r - s * o) * y,
            this
        },
        transpose: function() {
            var t, e = this.elements;
            return t = e[1],
            e[1] = e[3],
            e[3] = t,
            t = e[2],
            e[2] = e[6],
            e[6] = t,
            t = e[5],
            e[5] = e[7],
            e[7] = t,
            this
        },
        getNormalMatrix: function(t) {
            return this.setFromMatrix4(t).getInverse(this).transpose()
        },
        transposeIntoArray: function(t) {
            var e = this.elements;
            return t[0] = e[0],
            t[1] = e[3],
            t[2] = e[6],
            t[3] = e[1],
            t[4] = e[4],
            t[5] = e[7],
            t[6] = e[2],
            t[7] = e[5],
            t[8] = e[8],
            this
        },
        setUvTransform: function(t, e, n, i, r, s, a) {
            var o = Math.cos(r)
              , c = Math.sin(r);
            this.set(n * o, n * c, -n * (o * s + c * a) + s + t, -i * c, i * o, -i * (-c * s + o * a) + a + e, 0, 0, 1)
        },
        scale: function(t, e) {
            var n = this.elements;
            return n[0] *= t,
            n[3] *= t,
            n[6] *= t,
            n[1] *= e,
            n[4] *= e,
            n[7] *= e,
            this
        },
        rotate: function(t) {
            var e = Math.cos(t)
              , n = Math.sin(t)
              , i = this.elements
              , r = i[0]
              , s = i[3]
              , a = i[6]
              , o = i[1]
              , c = i[4]
              , l = i[7];
            return i[0] = e * r + n * o,
            i[3] = e * s + n * c,
            i[6] = e * a + n * l,
            i[1] = -n * r + e * o,
            i[4] = -n * s + e * c,
            i[7] = -n * a + e * l,
            this
        },
        translate: function(t, e) {
            var n = this.elements;
            return n[0] += t * n[2],
            n[3] += t * n[5],
            n[6] += t * n[8],
            n[1] += e * n[2],
            n[4] += e * n[5],
            n[7] += e * n[8],
            this
        },
        equals: function(t) {
            for (var e = this.elements, n = t.elements, i = 0; i < 9; i++)
                if (e[i] !== n[i])
                    return !1;
            return !0
        },
        fromArray: function(t, e) {
            void 0 === e && (e = 0);
            for (var n = 0; n < 9; n++)
                this.elements[n] = t[n + e];
            return this
        },
        toArray: function(t, e) {
            void 0 === t && (t = []),
            void 0 === e && (e = 0);
            var n = this.elements;
            return t[e] = n[0],
            t[e + 1] = n[1],
            t[e + 2] = n[2],
            t[e + 3] = n[3],
            t[e + 4] = n[4],
            t[e + 5] = n[5],
            t[e + 6] = n[6],
            t[e + 7] = n[7],
            t[e + 8] = n[8],
            t
        }
    });
    var qe, Xe, Ze, Ke, Je, $e, Qe, tn, en, nn, rn, sn, an, on, cn = {
        getDataURL: function(t) {
            var e;
            if ("undefined" == typeof HTMLCanvasElement)
                return t.src;
            if (t instanceof HTMLCanvasElement)
                e = t;
            else {
                void 0 === a && (a = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")),
                a.width = t.width,
                a.height = t.height;
                var n = a.getContext("2d");
                t instanceof ImageData ? n.putImageData(t, 0, 0) : n.drawImage(t, 0, 0, t.width, t.height),
                e = a
            }
            return e.width > 2048 || e.height > 2048 ? e.toDataURL("image/jpeg", .6) : e.toDataURL("image/png")
        }
    }, ln = 0;
    function pn(t, e, n, i, r, s, a, o, c, l) {
        Object.defineProperty(this, "id", {
            value: ln++
        }),
        this.uuid = He.generateUUID(),
        this.name = "",
        this.image = void 0 !== t ? t : pn.DEFAULT_IMAGE,
        this.mipmaps = [],
        this.mapping = void 0 !== e ? e : pn.DEFAULT_MAPPING,
        this.wrapS = void 0 !== n ? n : wt,
        this.wrapT = void 0 !== i ? i : wt,
        this.magFilter = void 0 !== r ? r : Tt,
        this.minFilter = void 0 !== s ? s : kt,
        this.anisotropy = void 0 !== c ? c : 1,
        this.format = void 0 !== a ? a : Ht,
        this.type = void 0 !== o ? o : At,
        this.offset = new Ge(0,0),
        this.repeat = new Ge(1,1),
        this.center = new Ge(0,0),
        this.rotation = 0,
        this.matrixAutoUpdate = !0,
        this.matrix = new Ye,
        this.generateMipmaps = !0,
        this.premultiplyAlpha = !1,
        this.flipY = !0,
        this.unpackAlignment = 4,
        this.encoding = void 0 !== l ? l : Pe,
        this.version = 0,
        this.onUpdate = null
    }
    function hn(t, e, n, i) {
        this.x = t || 0,
        this.y = e || 0,
        this.z = n || 0,
        this.w = void 0 !== i ? i : 1
    }
    function un(t, e, n) {
        this.width = t,
        this.height = e,
        this.scissor = new hn(0,0,t,e),
        this.scissorTest = !1,
        this.viewport = new hn(0,0,t,e),
        n = n || {},
        this.texture = new pn(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),
        this.texture.generateMipmaps = void 0 !== n.generateMipmaps && n.generateMipmaps,
        this.texture.minFilter = void 0 !== n.minFilter ? n.minFilter : Tt,
        this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer,
        this.stencilBuffer = void 0 === n.stencilBuffer || n.stencilBuffer,
        this.depthTexture = void 0 !== n.depthTexture ? n.depthTexture : null
    }
    function fn(t, e, n) {
        un.call(this, t, e, n),
        this.samples = 4
    }
    function dn(t, e, n) {
        un.call(this, t, e, n)
    }
    function mn(t, e, n, i, r, s, a, o, c, l, p, h) {
        pn.call(this, null, s, a, o, c, l, i, r, p, h),
        this.image = {
            data: t,
            width: e,
            height: n
        },
        this.magFilter = void 0 !== c ? c : Mt,
        this.minFilter = void 0 !== l ? l : Mt,
        this.generateMipmaps = !1,
        this.flipY = !1,
        this.unpackAlignment = 1
    }
    function gn(t, e) {
        this.min = void 0 !== t ? t : new We(1 / 0,1 / 0,1 / 0),
        this.max = void 0 !== e ? e : new We(-1 / 0,-1 / 0,-1 / 0)
    }
    function vn(t, e) {
        this.center = void 0 !== t ? t : new We,
        this.radius = void 0 !== e ? e : 0
    }
    function yn(t, e) {
        this.normal = void 0 !== t ? t : new We(1,0,0),
        this.constant = void 0 !== e ? e : 0
    }
    function bn(t, e, n, i, r, s) {
        this.planes = [void 0 !== t ? t : new yn, void 0 !== e ? e : new yn, void 0 !== n ? n : new yn, void 0 !== i ? i : new yn, void 0 !== r ? r : new yn, void 0 !== s ? s : new yn]
    }
    function wn() {
        this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
        arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
    }
    pn.DEFAULT_IMAGE = void 0,
    pn.DEFAULT_MAPPING = ht,
    pn.prototype = Object.assign(Object.create(i.prototype), {
        constructor: pn,
        isTexture: !0,
        updateMatrix: function() {
            this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.name = t.name,
            this.image = t.image,
            this.mipmaps = t.mipmaps.slice(0),
            this.mapping = t.mapping,
            this.wrapS = t.wrapS,
            this.wrapT = t.wrapT,
            this.magFilter = t.magFilter,
            this.minFilter = t.minFilter,
            this.anisotropy = t.anisotropy,
            this.format = t.format,
            this.type = t.type,
            this.offset.copy(t.offset),
            this.repeat.copy(t.repeat),
            this.center.copy(t.center),
            this.rotation = t.rotation,
            this.matrixAutoUpdate = t.matrixAutoUpdate,
            this.matrix.copy(t.matrix),
            this.generateMipmaps = t.generateMipmaps,
            this.premultiplyAlpha = t.premultiplyAlpha,
            this.flipY = t.flipY,
            this.unpackAlignment = t.unpackAlignment,
            this.encoding = t.encoding,
            this
        },
        toJSON: function(t) {
            var e = void 0 === t || "string" == typeof t;
            if (!e && void 0 !== t.textures[this.uuid])
                return t.textures[this.uuid];
            var n = {
                metadata: {
                    version: 4.5,
                    type: "Texture",
                    generator: "Texture.toJSON"
                },
                uuid: this.uuid,
                name: this.name,
                mapping: this.mapping,
                repeat: [this.repeat.x, this.repeat.y],
                offset: [this.offset.x, this.offset.y],
                center: [this.center.x, this.center.y],
                rotation: this.rotation,
                wrap: [this.wrapS, this.wrapT],
                format: this.format,
                type: this.type,
                encoding: this.encoding,
                minFilter: this.minFilter,
                magFilter: this.magFilter,
                anisotropy: this.anisotropy,
                flipY: this.flipY,
                premultiplyAlpha: this.premultiplyAlpha,
                unpackAlignment: this.unpackAlignment
            };
            if (void 0 !== this.image) {
                var i = this.image;
                if (void 0 === i.uuid && (i.uuid = He.generateUUID()),
                !e && void 0 === t.images[i.uuid]) {
                    var r;
                    if (Array.isArray(i)) {
                        r = [];
                        for (var s = 0, a = i.length; s < a; s++)
                            r.push(cn.getDataURL(i[s]))
                    } else
                        r = cn.getDataURL(i);
                    t.images[i.uuid] = {
                        uuid: i.uuid,
                        url: r
                    }
                }
                n.image = i.uuid
            }
            return e || (t.textures[this.uuid] = n),
            n
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        },
        transformUv: function(t) {
            if (this.mapping !== ht)
                return t;
            if (t.applyMatrix3(this.matrix),
            t.x < 0 || t.x > 1)
                switch (this.wrapS) {
                case bt:
                    t.x = t.x - Math.floor(t.x);
                    break;
                case wt:
                    t.x = t.x < 0 ? 0 : 1;
                    break;
                case xt:
                    1 === Math.abs(Math.floor(t.x) % 2) ? t.x = Math.ceil(t.x) - t.x : t.x = t.x - Math.floor(t.x)
                }
            if (t.y < 0 || t.y > 1)
                switch (this.wrapT) {
                case bt:
                    t.y = t.y - Math.floor(t.y);
                    break;
                case wt:
                    t.y = t.y < 0 ? 0 : 1;
                    break;
                case xt:
                    1 === Math.abs(Math.floor(t.y) % 2) ? t.y = Math.ceil(t.y) - t.y : t.y = t.y - Math.floor(t.y)
                }
            return this.flipY && (t.y = 1 - t.y),
            t
        }
    }),
    Object.defineProperty(pn.prototype, "needsUpdate", {
        set: function(t) {
            !0 === t && this.version++
        }
    }),
    Object.assign(hn.prototype, {
        isVector4: !0,
        set: function(t, e, n, i) {
            return this.x = t,
            this.y = e,
            this.z = n,
            this.w = i,
            this
        },
        setScalar: function(t) {
            return this.x = t,
            this.y = t,
            this.z = t,
            this.w = t,
            this
        },
        setX: function(t) {
            return this.x = t,
            this
        },
        setY: function(t) {
            return this.y = t,
            this
        },
        setZ: function(t) {
            return this.z = t,
            this
        },
        setW: function(t) {
            return this.w = t,
            this
        },
        setComponent: function(t, e) {
            switch (t) {
            case 0:
                this.x = e;
                break;
            case 1:
                this.y = e;
                break;
            case 2:
                this.z = e;
                break;
            case 3:
                this.w = e;
                break;
            default:
                throw new Error("index is out of range: " + t)
            }
            return this
        },
        getComponent: function(t) {
            switch (t) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            case 3:
                return this.w;
            default:
                throw new Error("index is out of range: " + t)
            }
        },
        clone: function() {
            return new this.constructor(this.x,this.y,this.z,this.w)
        },
        copy: function(t) {
            return this.x = t.x,
            this.y = t.y,
            this.z = t.z,
            this.w = void 0 !== t.w ? t.w : 1,
            this
        },
        add: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
            this.addVectors(t, e)) : (this.x += t.x,
            this.y += t.y,
            this.z += t.z,
            this.w += t.w,
            this)
        },
        addScalar: function(t) {
            return this.x += t,
            this.y += t,
            this.z += t,
            this.w += t,
            this
        },
        addVectors: function(t, e) {
            return this.x = t.x + e.x,
            this.y = t.y + e.y,
            this.z = t.z + e.z,
            this.w = t.w + e.w,
            this
        },
        addScaledVector: function(t, e) {
            return this.x += t.x * e,
            this.y += t.y * e,
            this.z += t.z * e,
            this.w += t.w * e,
            this
        },
        sub: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
            this.subVectors(t, e)) : (this.x -= t.x,
            this.y -= t.y,
            this.z -= t.z,
            this.w -= t.w,
            this)
        },
        subScalar: function(t) {
            return this.x -= t,
            this.y -= t,
            this.z -= t,
            this.w -= t,
            this
        },
        subVectors: function(t, e) {
            return this.x = t.x - e.x,
            this.y = t.y - e.y,
            this.z = t.z - e.z,
            this.w = t.w - e.w,
            this
        },
        multiplyScalar: function(t) {
            return this.x *= t,
            this.y *= t,
            this.z *= t,
            this.w *= t,
            this
        },
        applyMatrix4: function(t) {
            var e = this.x
              , n = this.y
              , i = this.z
              , r = this.w
              , s = t.elements;
            return this.x = s[0] * e + s[4] * n + s[8] * i + s[12] * r,
            this.y = s[1] * e + s[5] * n + s[9] * i + s[13] * r,
            this.z = s[2] * e + s[6] * n + s[10] * i + s[14] * r,
            this.w = s[3] * e + s[7] * n + s[11] * i + s[15] * r,
            this
        },
        divideScalar: function(t) {
            return this.multiplyScalar(1 / t)
        },
        setAxisAngleFromQuaternion: function(t) {
            this.w = 2 * Math.acos(t.w);
            var e = Math.sqrt(1 - t.w * t.w);
            return e < 1e-4 ? (this.x = 1,
            this.y = 0,
            this.z = 0) : (this.x = t.x / e,
            this.y = t.y / e,
            this.z = t.z / e),
            this
        },
        setAxisAngleFromRotationMatrix: function(t) {
            var e, n, i, r, s = t.elements, a = s[0], o = s[4], c = s[8], l = s[1], p = s[5], h = s[9], u = s[2], f = s[6], d = s[10];
            if (Math.abs(o - l) < .01 && Math.abs(c - u) < .01 && Math.abs(h - f) < .01) {
                if (Math.abs(o + l) < .1 && Math.abs(c + u) < .1 && Math.abs(h + f) < .1 && Math.abs(a + p + d - 3) < .1)
                    return this.set(1, 0, 0, 0),
                    this;
                e = Math.PI;
                var m = (a + 1) / 2
                  , g = (p + 1) / 2
                  , v = (d + 1) / 2
                  , y = (o + l) / 4
                  , b = (c + u) / 4
                  , w = (h + f) / 4;
                return m > g && m > v ? m < .01 ? (n = 0,
                i = .707106781,
                r = .707106781) : (i = y / (n = Math.sqrt(m)),
                r = b / n) : g > v ? g < .01 ? (n = .707106781,
                i = 0,
                r = .707106781) : (n = y / (i = Math.sqrt(g)),
                r = w / i) : v < .01 ? (n = .707106781,
                i = .707106781,
                r = 0) : (n = b / (r = Math.sqrt(v)),
                i = w / r),
                this.set(n, i, r, e),
                this
            }
            var x = Math.sqrt((f - h) * (f - h) + (c - u) * (c - u) + (l - o) * (l - o));
            return Math.abs(x) < .001 && (x = 1),
            this.x = (f - h) / x,
            this.y = (c - u) / x,
            this.z = (l - o) / x,
            this.w = Math.acos((a + p + d - 1) / 2),
            this
        },
        min: function(t) {
            return this.x = Math.min(this.x, t.x),
            this.y = Math.min(this.y, t.y),
            this.z = Math.min(this.z, t.z),
            this.w = Math.min(this.w, t.w),
            this
        },
        max: function(t) {
            return this.x = Math.max(this.x, t.x),
            this.y = Math.max(this.y, t.y),
            this.z = Math.max(this.z, t.z),
            this.w = Math.max(this.w, t.w),
            this
        },
        clamp: function(t, e) {
            return this.x = Math.max(t.x, Math.min(e.x, this.x)),
            this.y = Math.max(t.y, Math.min(e.y, this.y)),
            this.z = Math.max(t.z, Math.min(e.z, this.z)),
            this.w = Math.max(t.w, Math.min(e.w, this.w)),
            this
        },
        clampScalar: function(t, e) {
            return void 0 === qe && (qe = new hn,
            Xe = new hn),
            qe.set(t, t, t, t),
            Xe.set(e, e, e, e),
            this.clamp(qe, Xe)
        },
        clampLength: function(t, e) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)))
        },
        floor: function() {
            return this.x = Math.floor(this.x),
            this.y = Math.floor(this.y),
            this.z = Math.floor(this.z),
            this.w = Math.floor(this.w),
            this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x),
            this.y = Math.ceil(this.y),
            this.z = Math.ceil(this.z),
            this.w = Math.ceil(this.w),
            this
        },
        round: function() {
            return this.x = Math.round(this.x),
            this.y = Math.round(this.y),
            this.z = Math.round(this.z),
            this.w = Math.round(this.w),
            this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
            this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
            this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w),
            this
        },
        negate: function() {
            return this.x = -this.x,
            this.y = -this.y,
            this.z = -this.z,
            this.w = -this.w,
            this
        },
        dot: function(t) {
            return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        setLength: function(t) {
            return this.normalize().multiplyScalar(t)
        },
        lerp: function(t, e) {
            return this.x += (t.x - this.x) * e,
            this.y += (t.y - this.y) * e,
            this.z += (t.z - this.z) * e,
            this.w += (t.w - this.w) * e,
            this
        },
        lerpVectors: function(t, e, n) {
            return this.subVectors(e, t).multiplyScalar(n).add(t)
        },
        equals: function(t) {
            return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0),
            this.x = t[e],
            this.y = t[e + 1],
            this.z = t[e + 2],
            this.w = t[e + 3],
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this.x,
            t[e + 1] = this.y,
            t[e + 2] = this.z,
            t[e + 3] = this.w,
            t
        },
        fromBufferAttribute: function(t, e, n) {
            return void 0 !== n && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),
            this.x = t.getX(e),
            this.y = t.getY(e),
            this.z = t.getZ(e),
            this.w = t.getW(e),
            this
        }
    }),
    un.prototype = Object.assign(Object.create(i.prototype), {
        constructor: un,
        isWebGLRenderTarget: !0,
        setSize: function(t, e) {
            this.width === t && this.height === e || (this.width = t,
            this.height = e,
            this.dispose()),
            this.viewport.set(0, 0, t, e),
            this.scissor.set(0, 0, t, e)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.width = t.width,
            this.height = t.height,
            this.viewport.copy(t.viewport),
            this.texture = t.texture.clone(),
            this.depthBuffer = t.depthBuffer,
            this.stencilBuffer = t.stencilBuffer,
            this.depthTexture = t.depthTexture,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
    fn.prototype = Object.assign(Object.create(un.prototype), {
        constructor: fn,
        isWebGLMultisampleRenderTarget: !0,
        copy: function(t) {
            return un.prototype.copy.call(this, t),
            this.samples = t.samples,
            this
        }
    }),
    dn.prototype = Object.create(un.prototype),
    dn.prototype.constructor = dn,
    dn.prototype.isWebGLRenderTargetCube = !0,
    mn.prototype = Object.create(pn.prototype),
    mn.prototype.constructor = mn,
    mn.prototype.isDataTexture = !0,
    Object.assign(gn.prototype, {
        isBox3: !0,
        set: function(t, e) {
            return this.min.copy(t),
            this.max.copy(e),
            this
        },
        setFromArray: function(t) {
            for (var e = 1 / 0, n = 1 / 0, i = 1 / 0, r = -1 / 0, s = -1 / 0, a = -1 / 0, o = 0, c = t.length; o < c; o += 3) {
                var l = t[o]
                  , p = t[o + 1]
                  , h = t[o + 2];
                l < e && (e = l),
                p < n && (n = p),
                h < i && (i = h),
                l > r && (r = l),
                p > s && (s = p),
                h > a && (a = h)
            }
            return this.min.set(e, n, i),
            this.max.set(r, s, a),
            this
        },
        setFromBufferAttribute: function(t) {
            for (var e = 1 / 0, n = 1 / 0, i = 1 / 0, r = -1 / 0, s = -1 / 0, a = -1 / 0, o = 0, c = t.count; o < c; o++) {
                var l = t.getX(o)
                  , p = t.getY(o)
                  , h = t.getZ(o);
                l < e && (e = l),
                p < n && (n = p),
                h < i && (i = h),
                l > r && (r = l),
                p > s && (s = p),
                h > a && (a = h)
            }
            return this.min.set(e, n, i),
            this.max.set(r, s, a),
            this
        },
        setFromPoints: function(t) {
            this.makeEmpty();
            for (var e = 0, n = t.length; e < n; e++)
                this.expandByPoint(t[e]);
            return this
        },
        setFromCenterAndSize: function() {
            var t = new We;
            return function(e, n) {
                var i = t.copy(n).multiplyScalar(.5);
                return this.min.copy(e).sub(i),
                this.max.copy(e).add(i),
                this
            }
        }(),
        setFromObject: function(t) {
            return this.makeEmpty(),
            this.expandByObject(t)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.min.copy(t.min),
            this.max.copy(t.max),
            this
        },
        makeEmpty: function() {
            return this.min.x = this.min.y = this.min.z = 1 / 0,
            this.max.x = this.max.y = this.max.z = -1 / 0,
            this
        },
        isEmpty: function() {
            return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
        },
        getCenter: function(t) {
            return void 0 === t && (console.warn("THREE.Box3: .getCenter() target is now required"),
            t = new We),
            this.isEmpty() ? t.set(0, 0, 0) : t.addVectors(this.min, this.max).multiplyScalar(.5)
        },
        getSize: function(t) {
            return void 0 === t && (console.warn("THREE.Box3: .getSize() target is now required"),
            t = new We),
            this.isEmpty() ? t.set(0, 0, 0) : t.subVectors(this.max, this.min)
        },
        expandByPoint: function(t) {
            return this.min.min(t),
            this.max.max(t),
            this
        },
        expandByVector: function(t) {
            return this.min.sub(t),
            this.max.add(t),
            this
        },
        expandByScalar: function(t) {
            return this.min.addScalar(-t),
            this.max.addScalar(t),
            this
        },
        expandByObject: function() {
            var t, e, n, i = new We;
            function r(r) {
                var s = r.geometry;
                if (void 0 !== s)
                    if (s.isGeometry) {
                        var a = s.vertices;
                        for (e = 0,
                        n = a.length; e < n; e++)
                            i.copy(a[e]),
                            i.applyMatrix4(r.matrixWorld),
                            t.expandByPoint(i)
                    } else if (s.isBufferGeometry) {
                        var o = s.attributes.position;
                        if (void 0 !== o)
                            for (e = 0,
                            n = o.count; e < n; e++)
                                i.fromBufferAttribute(o, e).applyMatrix4(r.matrixWorld),
                                t.expandByPoint(i)
                    }
            }
            return function(e) {
                return t = this,
                e.updateMatrixWorld(!0),
                e.traverse(r),
                this
            }
        }(),
        containsPoint: function(t) {
            return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z)
        },
        containsBox: function(t) {
            return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z
        },
        getParameter: function(t, e) {
            return void 0 === e && (console.warn("THREE.Box3: .getParameter() target is now required"),
            e = new We),
            e.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z))
        },
        intersectsBox: function(t) {
            return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z)
        },
        intersectsSphere: (Ke = new We,
        function(t) {
            return this.clampPoint(t.center, Ke),
            Ke.distanceToSquared(t.center) <= t.radius * t.radius
        }
        ),
        intersectsPlane: function(t) {
            var e, n;
            return t.normal.x > 0 ? (e = t.normal.x * this.min.x,
            n = t.normal.x * this.max.x) : (e = t.normal.x * this.max.x,
            n = t.normal.x * this.min.x),
            t.normal.y > 0 ? (e += t.normal.y * this.min.y,
            n += t.normal.y * this.max.y) : (e += t.normal.y * this.max.y,
            n += t.normal.y * this.min.y),
            t.normal.z > 0 ? (e += t.normal.z * this.min.z,
            n += t.normal.z * this.max.z) : (e += t.normal.z * this.max.z,
            n += t.normal.z * this.min.z),
            e <= -t.constant && n >= -t.constant
        },
        intersectsTriangle: function() {
            var t = new We
              , e = new We
              , n = new We
              , i = new We
              , r = new We
              , s = new We
              , a = new We
              , o = new We
              , c = new We
              , l = new We;
            function p(i) {
                var r, s;
                for (r = 0,
                s = i.length - 3; r <= s; r += 3) {
                    a.fromArray(i, r);
                    var o = c.x * Math.abs(a.x) + c.y * Math.abs(a.y) + c.z * Math.abs(a.z)
                      , l = t.dot(a)
                      , p = e.dot(a)
                      , h = n.dot(a);
                    if (Math.max(-Math.max(l, p, h), Math.min(l, p, h)) > o)
                        return !1
                }
                return !0
            }
            return function(a) {
                if (this.isEmpty())
                    return !1;
                this.getCenter(o),
                c.subVectors(this.max, o),
                t.subVectors(a.a, o),
                e.subVectors(a.b, o),
                n.subVectors(a.c, o),
                i.subVectors(e, t),
                r.subVectors(n, e),
                s.subVectors(t, n);
                var h = [0, -i.z, i.y, 0, -r.z, r.y, 0, -s.z, s.y, i.z, 0, -i.x, r.z, 0, -r.x, s.z, 0, -s.x, -i.y, i.x, 0, -r.y, r.x, 0, -s.y, s.x, 0];
                return !!p(h) && (!!p(h = [1, 0, 0, 0, 1, 0, 0, 0, 1]) && (l.crossVectors(i, r),
                p(h = [l.x, l.y, l.z])))
            }
        }(),
        clampPoint: function(t, e) {
            return void 0 === e && (console.warn("THREE.Box3: .clampPoint() target is now required"),
            e = new We),
            e.copy(t).clamp(this.min, this.max)
        },
        distanceToPoint: function() {
            var t = new We;
            return function(e) {
                return t.copy(e).clamp(this.min, this.max).sub(e).length()
            }
        }(),
        getBoundingSphere: function() {
            var t = new We;
            return function(e) {
                return void 0 === e && console.error("THREE.Box3: .getBoundingSphere() target is now required"),
                this.getCenter(e.center),
                e.radius = .5 * this.getSize(t).length(),
                e
            }
        }(),
        intersect: function(t) {
            return this.min.max(t.min),
            this.max.min(t.max),
            this.isEmpty() && this.makeEmpty(),
            this
        },
        union: function(t) {
            return this.min.min(t.min),
            this.max.max(t.max),
            this
        },
        applyMatrix4: (Ze = [new We, new We, new We, new We, new We, new We, new We, new We],
        function(t) {
            return this.isEmpty() ? this : (Ze[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(t),
            Ze[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(t),
            Ze[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(t),
            Ze[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(t),
            Ze[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(t),
            Ze[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(t),
            Ze[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(t),
            Ze[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(t),
            this.setFromPoints(Ze),
            this)
        }
        ),
        translate: function(t) {
            return this.min.add(t),
            this.max.add(t),
            this
        },
        equals: function(t) {
            return t.min.equals(this.min) && t.max.equals(this.max)
        }
    }),
    Object.assign(vn.prototype, {
        set: function(t, e) {
            return this.center.copy(t),
            this.radius = e,
            this
        },
        setFromPoints: (Je = new gn,
        function(t, e) {
            var n = this.center;
            void 0 !== e ? n.copy(e) : Je.setFromPoints(t).getCenter(n);
            for (var i = 0, r = 0, s = t.length; r < s; r++)
                i = Math.max(i, n.distanceToSquared(t[r]));
            return this.radius = Math.sqrt(i),
            this
        }
        ),
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.center.copy(t.center),
            this.radius = t.radius,
            this
        },
        empty: function() {
            return this.radius <= 0
        },
        containsPoint: function(t) {
            return t.distanceToSquared(this.center) <= this.radius * this.radius
        },
        distanceToPoint: function(t) {
            return t.distanceTo(this.center) - this.radius
        },
        intersectsSphere: function(t) {
            var e = this.radius + t.radius;
            return t.center.distanceToSquared(this.center) <= e * e
        },
        intersectsBox: function(t) {
            return t.intersectsSphere(this)
        },
        intersectsPlane: function(t) {
            return Math.abs(t.distanceToPoint(this.center)) <= this.radius
        },
        clampPoint: function(t, e) {
            var n = this.center.distanceToSquared(t);
            return void 0 === e && (console.warn("THREE.Sphere: .clampPoint() target is now required"),
            e = new We),
            e.copy(t),
            n > this.radius * this.radius && (e.sub(this.center).normalize(),
            e.multiplyScalar(this.radius).add(this.center)),
            e
        },
        getBoundingBox: function(t) {
            return void 0 === t && (console.warn("THREE.Sphere: .getBoundingBox() target is now required"),
            t = new gn),
            t.set(this.center, this.center),
            t.expandByScalar(this.radius),
            t
        },
        applyMatrix4: function(t) {
            return this.center.applyMatrix4(t),
            this.radius = this.radius * t.getMaxScaleOnAxis(),
            this
        },
        translate: function(t) {
            return this.center.add(t),
            this
        },
        equals: function(t) {
            return t.center.equals(this.center) && t.radius === this.radius
        }
    }),
    Object.assign(yn.prototype, {
        set: function(t, e) {
            return this.normal.copy(t),
            this.constant = e,
            this
        },
        setComponents: function(t, e, n, i) {
            return this.normal.set(t, e, n),
            this.constant = i,
            this
        },
        setFromNormalAndCoplanarPoint: function(t, e) {
            return this.normal.copy(t),
            this.constant = -e.dot(this.normal),
            this
        },
        setFromCoplanarPoints: function() {
            var t = new We
              , e = new We;
            return function(n, i, r) {
                var s = t.subVectors(r, i).cross(e.subVectors(n, i)).normalize();
                return this.setFromNormalAndCoplanarPoint(s, n),
                this
            }
        }(),
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.normal.copy(t.normal),
            this.constant = t.constant,
            this
        },
        normalize: function() {
            var t = 1 / this.normal.length();
            return this.normal.multiplyScalar(t),
            this.constant *= t,
            this
        },
        negate: function() {
            return this.constant *= -1,
            this.normal.negate(),
            this
        },
        distanceToPoint: function(t) {
            return this.normal.dot(t) + this.constant
        },
        distanceToSphere: function(t) {
            return this.distanceToPoint(t.center) - t.radius
        },
        projectPoint: function(t, e) {
            return void 0 === e && (console.warn("THREE.Plane: .projectPoint() target is now required"),
            e = new We),
            e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)
        },
        intersectLine: function() {
            var t = new We;
            return function(e, n) {
                void 0 === n && (console.warn("THREE.Plane: .intersectLine() target is now required"),
                n = new We);
                var i = e.delta(t)
                  , r = this.normal.dot(i);
                if (0 === r)
                    return 0 === this.distanceToPoint(e.start) ? n.copy(e.start) : void 0;
                var s = -(e.start.dot(this.normal) + this.constant) / r;
                return s < 0 || s > 1 ? void 0 : n.copy(i).multiplyScalar(s).add(e.start)
            }
        }(),
        intersectsLine: function(t) {
            var e = this.distanceToPoint(t.start)
              , n = this.distanceToPoint(t.end);
            return e < 0 && n > 0 || n < 0 && e > 0
        },
        intersectsBox: function(t) {
            return t.intersectsPlane(this)
        },
        intersectsSphere: function(t) {
            return t.intersectsPlane(this)
        },
        coplanarPoint: function(t) {
            return void 0 === t && (console.warn("THREE.Plane: .coplanarPoint() target is now required"),
            t = new We),
            t.copy(this.normal).multiplyScalar(-this.constant)
        },
        applyMatrix4: function() {
            var t = new We
              , e = new Ye;
            return function(n, i) {
                var r = i || e.getNormalMatrix(n)
                  , s = this.coplanarPoint(t).applyMatrix4(n)
                  , a = this.normal.applyMatrix3(r).normalize();
                return this.constant = -s.dot(a),
                this
            }
        }(),
        translate: function(t) {
            return this.constant -= t.dot(this.normal),
            this
        },
        equals: function(t) {
            return t.normal.equals(this.normal) && t.constant === this.constant
        }
    }),
    Object.assign(bn.prototype, {
        set: function(t, e, n, i, r, s) {
            var a = this.planes;
            return a[0].copy(t),
            a[1].copy(e),
            a[2].copy(n),
            a[3].copy(i),
            a[4].copy(r),
            a[5].copy(s),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            for (var e = this.planes, n = 0; n < 6; n++)
                e[n].copy(t.planes[n]);
            return this
        },
        setFromMatrix: function(t) {
            var e = this.planes
              , n = t.elements
              , i = n[0]
              , r = n[1]
              , s = n[2]
              , a = n[3]
              , o = n[4]
              , c = n[5]
              , l = n[6]
              , p = n[7]
              , h = n[8]
              , u = n[9]
              , f = n[10]
              , d = n[11]
              , m = n[12]
              , g = n[13]
              , v = n[14]
              , y = n[15];
            return e[0].setComponents(a - i, p - o, d - h, y - m).normalize(),
            e[1].setComponents(a + i, p + o, d + h, y + m).normalize(),
            e[2].setComponents(a + r, p + c, d + u, y + g).normalize(),
            e[3].setComponents(a - r, p - c, d - u, y - g).normalize(),
            e[4].setComponents(a - s, p - l, d - f, y - v).normalize(),
            e[5].setComponents(a + s, p + l, d + f, y + v).normalize(),
            this
        },
        intersectsObject: (Qe = new vn,
        function(t) {
            var e = t.geometry;
            return null === e.boundingSphere && e.computeBoundingSphere(),
            Qe.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),
            this.intersectsSphere(Qe)
        }
        ),
        intersectsSprite: function() {
            var t = new vn;
            return function(e) {
                return t.center.set(0, 0, 0),
                t.radius = .7071067811865476,
                t.applyMatrix4(e.matrixWorld),
                this.intersectsSphere(t)
            }
        }(),
        intersectsSphere: function(t) {
            for (var e = this.planes, n = t.center, i = -t.radius, r = 0; r < 6; r++) {
                if (e[r].distanceToPoint(n) < i)
                    return !1
            }
            return !0
        },
        intersectsBox: ($e = new We,
        function(t) {
            for (var e = this.planes, n = 0; n < 6; n++) {
                var i = e[n];
                if ($e.x = i.normal.x > 0 ? t.max.x : t.min.x,
                $e.y = i.normal.y > 0 ? t.max.y : t.min.y,
                $e.z = i.normal.z > 0 ? t.max.z : t.min.z,
                i.distanceToPoint($e) < 0)
                    return !1
            }
            return !0
        }
        ),
        containsPoint: function(t) {
            for (var e = this.planes, n = 0; n < 6; n++)
                if (e[n].distanceToPoint(t) < 0)
                    return !1;
            return !0
        }
    }),
    Object.assign(wn.prototype, {
        isMatrix4: !0,
        set: function(t, e, n, i, r, s, a, o, c, l, p, h, u, f, d, m) {
            var g = this.elements;
            return g[0] = t,
            g[4] = e,
            g[8] = n,
            g[12] = i,
            g[1] = r,
            g[5] = s,
            g[9] = a,
            g[13] = o,
            g[2] = c,
            g[6] = l,
            g[10] = p,
            g[14] = h,
            g[3] = u,
            g[7] = f,
            g[11] = d,
            g[15] = m,
            this
        },
        identity: function() {
            return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
            this
        },
        clone: function() {
            return (new wn).fromArray(this.elements)
        },
        copy: function(t) {
            var e = this.elements
              , n = t.elements;
            return e[0] = n[0],
            e[1] = n[1],
            e[2] = n[2],
            e[3] = n[3],
            e[4] = n[4],
            e[5] = n[5],
            e[6] = n[6],
            e[7] = n[7],
            e[8] = n[8],
            e[9] = n[9],
            e[10] = n[10],
            e[11] = n[11],
            e[12] = n[12],
            e[13] = n[13],
            e[14] = n[14],
            e[15] = n[15],
            this
        },
        copyPosition: function(t) {
            var e = this.elements
              , n = t.elements;
            return e[12] = n[12],
            e[13] = n[13],
            e[14] = n[14],
            this
        },
        extractBasis: function(t, e, n) {
            return t.setFromMatrixColumn(this, 0),
            e.setFromMatrixColumn(this, 1),
            n.setFromMatrixColumn(this, 2),
            this
        },
        makeBasis: function(t, e, n) {
            return this.set(t.x, e.x, n.x, 0, t.y, e.y, n.y, 0, t.z, e.z, n.z, 0, 0, 0, 0, 1),
            this
        },
        extractRotation: function() {
            var t = new We;
            return function(e) {
                var n = this.elements
                  , i = e.elements
                  , r = 1 / t.setFromMatrixColumn(e, 0).length()
                  , s = 1 / t.setFromMatrixColumn(e, 1).length()
                  , a = 1 / t.setFromMatrixColumn(e, 2).length();
                return n[0] = i[0] * r,
                n[1] = i[1] * r,
                n[2] = i[2] * r,
                n[3] = 0,
                n[4] = i[4] * s,
                n[5] = i[5] * s,
                n[6] = i[6] * s,
                n[7] = 0,
                n[8] = i[8] * a,
                n[9] = i[9] * a,
                n[10] = i[10] * a,
                n[11] = 0,
                n[12] = 0,
                n[13] = 0,
                n[14] = 0,
                n[15] = 1,
                this
            }
        }(),
        makeRotationFromEuler: function(t) {
            t && t.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
            var e = this.elements
              , n = t.x
              , i = t.y
              , r = t.z
              , s = Math.cos(n)
              , a = Math.sin(n)
              , o = Math.cos(i)
              , c = Math.sin(i)
              , l = Math.cos(r)
              , p = Math.sin(r);
            if ("XYZ" === t.order) {
                var h = s * l
                  , u = s * p
                  , f = a * l
                  , d = a * p;
                e[0] = o * l,
                e[4] = -o * p,
                e[8] = c,
                e[1] = u + f * c,
                e[5] = h - d * c,
                e[9] = -a * o,
                e[2] = d - h * c,
                e[6] = f + u * c,
                e[10] = s * o
            } else if ("YXZ" === t.order) {
                var m = o * l
                  , g = o * p
                  , v = c * l
                  , y = c * p;
                e[0] = m + y * a,
                e[4] = v * a - g,
                e[8] = s * c,
                e[1] = s * p,
                e[5] = s * l,
                e[9] = -a,
                e[2] = g * a - v,
                e[6] = y + m * a,
                e[10] = s * o
            } else if ("ZXY" === t.order) {
                m = o * l,
                g = o * p,
                v = c * l,
                y = c * p;
                e[0] = m - y * a,
                e[4] = -s * p,
                e[8] = v + g * a,
                e[1] = g + v * a,
                e[5] = s * l,
                e[9] = y - m * a,
                e[2] = -s * c,
                e[6] = a,
                e[10] = s * o
            } else if ("ZYX" === t.order) {
                h = s * l,
                u = s * p,
                f = a * l,
                d = a * p;
                e[0] = o * l,
                e[4] = f * c - u,
                e[8] = h * c + d,
                e[1] = o * p,
                e[5] = d * c + h,
                e[9] = u * c - f,
                e[2] = -c,
                e[6] = a * o,
                e[10] = s * o
            } else if ("YZX" === t.order) {
                var b = s * o
                  , w = s * c
                  , x = a * o
                  , M = a * c;
                e[0] = o * l,
                e[4] = M - b * p,
                e[8] = x * p + w,
                e[1] = p,
                e[5] = s * l,
                e[9] = -a * l,
                e[2] = -c * l,
                e[6] = w * p + x,
                e[10] = b - M * p
            } else if ("XZY" === t.order) {
                b = s * o,
                w = s * c,
                x = a * o,
                M = a * c;
                e[0] = o * l,
                e[4] = -p,
                e[8] = c * l,
                e[1] = b * p + M,
                e[5] = s * l,
                e[9] = w * p - x,
                e[2] = x * p - w,
                e[6] = a * l,
                e[10] = M * p + b
            }
            return e[3] = 0,
            e[7] = 0,
            e[11] = 0,
            e[12] = 0,
            e[13] = 0,
            e[14] = 0,
            e[15] = 1,
            this
        },
        makeRotationFromQuaternion: (an = new We(0,0,0),
        on = new We(1,1,1),
        function(t) {
            return this.compose(an, t, on)
        }
        ),
        lookAt: (nn = new We,
        rn = new We,
        sn = new We,
        function(t, e, n) {
            var i = this.elements;
            return sn.subVectors(t, e),
            0 === sn.lengthSq() && (sn.z = 1),
            sn.normalize(),
            nn.crossVectors(n, sn),
            0 === nn.lengthSq() && (1 === Math.abs(n.z) ? sn.x += 1e-4 : sn.z += 1e-4,
            sn.normalize(),
            nn.crossVectors(n, sn)),
            nn.normalize(),
            rn.crossVectors(sn, nn),
            i[0] = nn.x,
            i[4] = rn.x,
            i[8] = sn.x,
            i[1] = nn.y,
            i[5] = rn.y,
            i[9] = sn.y,
            i[2] = nn.z,
            i[6] = rn.z,
            i[10] = sn.z,
            this
        }
        ),
        multiply: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),
            this.multiplyMatrices(t, e)) : this.multiplyMatrices(this, t)
        },
        premultiply: function(t) {
            return this.multiplyMatrices(t, this)
        },
        multiplyMatrices: function(t, e) {
            var n = t.elements
              , i = e.elements
              , r = this.elements
              , s = n[0]
              , a = n[4]
              , o = n[8]
              , c = n[12]
              , l = n[1]
              , p = n[5]
              , h = n[9]
              , u = n[13]
              , f = n[2]
              , d = n[6]
              , m = n[10]
              , g = n[14]
              , v = n[3]
              , y = n[7]
              , b = n[11]
              , w = n[15]
              , x = i[0]
              , M = i[4]
              , _ = i[8]
              , S = i[12]
              , T = i[1]
              , E = i[5]
              , k = i[9]
              , A = i[13]
              , L = i[2]
              , P = i[6]
              , C = i[10]
              , R = i[14]
              , I = i[3]
              , O = i[7]
              , D = i[11]
              , z = i[15];
            return r[0] = s * x + a * T + o * L + c * I,
            r[4] = s * M + a * E + o * P + c * O,
            r[8] = s * _ + a * k + o * C + c * D,
            r[12] = s * S + a * A + o * R + c * z,
            r[1] = l * x + p * T + h * L + u * I,
            r[5] = l * M + p * E + h * P + u * O,
            r[9] = l * _ + p * k + h * C + u * D,
            r[13] = l * S + p * A + h * R + u * z,
            r[2] = f * x + d * T + m * L + g * I,
            r[6] = f * M + d * E + m * P + g * O,
            r[10] = f * _ + d * k + m * C + g * D,
            r[14] = f * S + d * A + m * R + g * z,
            r[3] = v * x + y * T + b * L + w * I,
            r[7] = v * M + y * E + b * P + w * O,
            r[11] = v * _ + y * k + b * C + w * D,
            r[15] = v * S + y * A + b * R + w * z,
            this
        },
        multiplyScalar: function(t) {
            var e = this.elements;
            return e[0] *= t,
            e[4] *= t,
            e[8] *= t,
            e[12] *= t,
            e[1] *= t,
            e[5] *= t,
            e[9] *= t,
            e[13] *= t,
            e[2] *= t,
            e[6] *= t,
            e[10] *= t,
            e[14] *= t,
            e[3] *= t,
            e[7] *= t,
            e[11] *= t,
            e[15] *= t,
            this
        },
        applyToBufferAttribute: function() {
            var t = new We;
            return function(e) {
                for (var n = 0, i = e.count; n < i; n++)
                    t.x = e.getX(n),
                    t.y = e.getY(n),
                    t.z = e.getZ(n),
                    t.applyMatrix4(this),
                    e.setXYZ(n, t.x, t.y, t.z);
                return e
            }
        }(),
        determinant: function() {
            var t = this.elements
              , e = t[0]
              , n = t[4]
              , i = t[8]
              , r = t[12]
              , s = t[1]
              , a = t[5]
              , o = t[9]
              , c = t[13]
              , l = t[2]
              , p = t[6]
              , h = t[10]
              , u = t[14];
            return t[3] * (+r * o * p - i * c * p - r * a * h + n * c * h + i * a * u - n * o * u) + t[7] * (+e * o * u - e * c * h + r * s * h - i * s * u + i * c * l - r * o * l) + t[11] * (+e * c * p - e * a * u - r * s * p + n * s * u + r * a * l - n * c * l) + t[15] * (-i * a * l - e * o * p + e * a * h + i * s * p - n * s * h + n * o * l)
        },
        transpose: function() {
            var t, e = this.elements;
            return t = e[1],
            e[1] = e[4],
            e[4] = t,
            t = e[2],
            e[2] = e[8],
            e[8] = t,
            t = e[6],
            e[6] = e[9],
            e[9] = t,
            t = e[3],
            e[3] = e[12],
            e[12] = t,
            t = e[7],
            e[7] = e[13],
            e[13] = t,
            t = e[11],
            e[11] = e[14],
            e[14] = t,
            this
        },
        setPosition: function(t, e, n) {
            var i = this.elements;
            return t.isVector3 ? (i[12] = t.x,
            i[13] = t.y,
            i[14] = t.z) : (i[12] = t,
            i[13] = e,
            i[14] = n),
            this
        },
        getInverse: function(t, e) {
            var n = this.elements
              , i = t.elements
              , r = i[0]
              , s = i[1]
              , a = i[2]
              , o = i[3]
              , c = i[4]
              , l = i[5]
              , p = i[6]
              , h = i[7]
              , u = i[8]
              , f = i[9]
              , d = i[10]
              , m = i[11]
              , g = i[12]
              , v = i[13]
              , y = i[14]
              , b = i[15]
              , w = f * y * h - v * d * h + v * p * m - l * y * m - f * p * b + l * d * b
              , x = g * d * h - u * y * h - g * p * m + c * y * m + u * p * b - c * d * b
              , M = u * v * h - g * f * h + g * l * m - c * v * m - u * l * b + c * f * b
              , _ = g * f * p - u * v * p - g * l * d + c * v * d + u * l * y - c * f * y
              , S = r * w + s * x + a * M + o * _;
            if (0 === S) {
                var T = "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
                if (!0 === e)
                    throw new Error(T);
                return console.warn(T),
                this.identity()
            }
            var E = 1 / S;
            return n[0] = w * E,
            n[1] = (v * d * o - f * y * o - v * a * m + s * y * m + f * a * b - s * d * b) * E,
            n[2] = (l * y * o - v * p * o + v * a * h - s * y * h - l * a * b + s * p * b) * E,
            n[3] = (f * p * o - l * d * o - f * a * h + s * d * h + l * a * m - s * p * m) * E,
            n[4] = x * E,
            n[5] = (u * y * o - g * d * o + g * a * m - r * y * m - u * a * b + r * d * b) * E,
            n[6] = (g * p * o - c * y * o - g * a * h + r * y * h + c * a * b - r * p * b) * E,
            n[7] = (c * d * o - u * p * o + u * a * h - r * d * h - c * a * m + r * p * m) * E,
            n[8] = M * E,
            n[9] = (g * f * o - u * v * o - g * s * m + r * v * m + u * s * b - r * f * b) * E,
            n[10] = (c * v * o - g * l * o + g * s * h - r * v * h - c * s * b + r * l * b) * E,
            n[11] = (u * l * o - c * f * o - u * s * h + r * f * h + c * s * m - r * l * m) * E,
            n[12] = _ * E,
            n[13] = (u * v * a - g * f * a + g * s * d - r * v * d - u * s * y + r * f * y) * E,
            n[14] = (g * l * a - c * v * a - g * s * p + r * v * p + c * s * y - r * l * y) * E,
            n[15] = (c * f * a - u * l * a + u * s * p - r * f * p - c * s * d + r * l * d) * E,
            this
        },
        scale: function(t) {
            var e = this.elements
              , n = t.x
              , i = t.y
              , r = t.z;
            return e[0] *= n,
            e[4] *= i,
            e[8] *= r,
            e[1] *= n,
            e[5] *= i,
            e[9] *= r,
            e[2] *= n,
            e[6] *= i,
            e[10] *= r,
            e[3] *= n,
            e[7] *= i,
            e[11] *= r,
            this
        },
        getMaxScaleOnAxis: function() {
            var t = this.elements
              , e = t[0] * t[0] + t[1] * t[1] + t[2] * t[2]
              , n = t[4] * t[4] + t[5] * t[5] + t[6] * t[6]
              , i = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];
            return Math.sqrt(Math.max(e, n, i))
        },
        makeTranslation: function(t, e, n) {
            return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, n, 0, 0, 0, 1),
            this
        },
        makeRotationX: function(t) {
            var e = Math.cos(t)
              , n = Math.sin(t);
            return this.set(1, 0, 0, 0, 0, e, -n, 0, 0, n, e, 0, 0, 0, 0, 1),
            this
        },
        makeRotationY: function(t) {
            var e = Math.cos(t)
              , n = Math.sin(t);
            return this.set(e, 0, n, 0, 0, 1, 0, 0, -n, 0, e, 0, 0, 0, 0, 1),
            this
        },
        makeRotationZ: function(t) {
            var e = Math.cos(t)
              , n = Math.sin(t);
            return this.set(e, -n, 0, 0, n, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
            this
        },
        makeRotationAxis: function(t, e) {
            var n = Math.cos(e)
              , i = Math.sin(e)
              , r = 1 - n
              , s = t.x
              , a = t.y
              , o = t.z
              , c = r * s
              , l = r * a;
            return this.set(c * s + n, c * a - i * o, c * o + i * a, 0, c * a + i * o, l * a + n, l * o - i * s, 0, c * o - i * a, l * o + i * s, r * o * o + n, 0, 0, 0, 0, 1),
            this
        },
        makeScale: function(t, e, n) {
            return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, n, 0, 0, 0, 0, 1),
            this
        },
        makeShear: function(t, e, n) {
            return this.set(1, e, n, 0, t, 1, n, 0, t, e, 1, 0, 0, 0, 0, 1),
            this
        },
        compose: function(t, e, n) {
            var i = this.elements
              , r = e._x
              , s = e._y
              , a = e._z
              , o = e._w
              , c = r + r
              , l = s + s
              , p = a + a
              , h = r * c
              , u = r * l
              , f = r * p
              , d = s * l
              , m = s * p
              , g = a * p
              , v = o * c
              , y = o * l
              , b = o * p
              , w = n.x
              , x = n.y
              , M = n.z;
            return i[0] = (1 - (d + g)) * w,
            i[1] = (u + b) * w,
            i[2] = (f - y) * w,
            i[3] = 0,
            i[4] = (u - b) * x,
            i[5] = (1 - (h + g)) * x,
            i[6] = (m + v) * x,
            i[7] = 0,
            i[8] = (f + y) * M,
            i[9] = (m - v) * M,
            i[10] = (1 - (h + d)) * M,
            i[11] = 0,
            i[12] = t.x,
            i[13] = t.y,
            i[14] = t.z,
            i[15] = 1,
            this
        },
        decompose: (tn = new We,
        en = new wn,
        function(t, e, n) {
            var i = this.elements
              , r = tn.set(i[0], i[1], i[2]).length()
              , s = tn.set(i[4], i[5], i[6]).length()
              , a = tn.set(i[8], i[9], i[10]).length();
            this.determinant() < 0 && (r = -r),
            t.x = i[12],
            t.y = i[13],
            t.z = i[14],
            en.copy(this);
            var o = 1 / r
              , c = 1 / s
              , l = 1 / a;
            return en.elements[0] *= o,
            en.elements[1] *= o,
            en.elements[2] *= o,
            en.elements[4] *= c,
            en.elements[5] *= c,
            en.elements[6] *= c,
            en.elements[8] *= l,
            en.elements[9] *= l,
            en.elements[10] *= l,
            e.setFromRotationMatrix(en),
            n.x = r,
            n.y = s,
            n.z = a,
            this
        }
        ),
        makePerspective: function(t, e, n, i, r, s) {
            void 0 === s && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
            var a = this.elements
              , o = 2 * r / (e - t)
              , c = 2 * r / (n - i)
              , l = (e + t) / (e - t)
              , p = (n + i) / (n - i)
              , h = -(s + r) / (s - r)
              , u = -2 * s * r / (s - r);
            return a[0] = o,
            a[4] = 0,
            a[8] = l,
            a[12] = 0,
            a[1] = 0,
            a[5] = c,
            a[9] = p,
            a[13] = 0,
            a[2] = 0,
            a[6] = 0,
            a[10] = h,
            a[14] = u,
            a[3] = 0,
            a[7] = 0,
            a[11] = -1,
            a[15] = 0,
            this
        },
        makeOrthographic: function(t, e, n, i, r, s) {
            var a = this.elements
              , o = 1 / (e - t)
              , c = 1 / (n - i)
              , l = 1 / (s - r)
              , p = (e + t) * o
              , h = (n + i) * c
              , u = (s + r) * l;
            return a[0] = 2 * o,
            a[4] = 0,
            a[8] = 0,
            a[12] = -p,
            a[1] = 0,
            a[5] = 2 * c,
            a[9] = 0,
            a[13] = -h,
            a[2] = 0,
            a[6] = 0,
            a[10] = -2 * l,
            a[14] = -u,
            a[3] = 0,
            a[7] = 0,
            a[11] = 0,
            a[15] = 1,
            this
        },
        equals: function(t) {
            for (var e = this.elements, n = t.elements, i = 0; i < 16; i++)
                if (e[i] !== n[i])
                    return !1;
            return !0
        },
        fromArray: function(t, e) {
            void 0 === e && (e = 0);
            for (var n = 0; n < 16; n++)
                this.elements[n] = t[n + e];
            return this
        },
        toArray: function(t, e) {
            void 0 === t && (t = []),
            void 0 === e && (e = 0);
            var n = this.elements;
            return t[e] = n[0],
            t[e + 1] = n[1],
            t[e + 2] = n[2],
            t[e + 3] = n[3],
            t[e + 4] = n[4],
            t[e + 5] = n[5],
            t[e + 6] = n[6],
            t[e + 7] = n[7],
            t[e + 8] = n[8],
            t[e + 9] = n[9],
            t[e + 10] = n[10],
            t[e + 11] = n[11],
            t[e + 12] = n[12],
            t[e + 13] = n[13],
            t[e + 14] = n[14],
            t[e + 15] = n[15],
            t
        }
    });
    var xn = {
        alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",
        alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
        alphatest_fragment: "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",
        aomap_fragment: "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",
        aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
        begin_vertex: "vec3 transformed = vec3( position );",
        beginnormal_vertex: "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",
        bsdfs: "vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}",
        bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
        clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",
        clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",
        clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvarying vec3 vViewPosition;\n#endif",
        clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif",
        color_fragment: "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
        color_pars_fragment: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
        color_pars_vertex: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
        color_vertex: "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",
        common: "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}",
        cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif",
        defaultnormal_vertex: "vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = normalMatrix * objectTangent;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",
        displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",
        displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif",
        emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",
        emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",
        encodings_fragment: "gl_FragColor = linearToOutputTexel( gl_FragColor );",
        encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",
        envmap_fragment: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
        envmap_pars_fragment: "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
        envmap_pars_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",
        envmap_physical_pars_fragment: "#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",
        envmap_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
        fog_vertex: "#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",
        fog_pars_vertex: "#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",
        fog_fragment: "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",
        fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
        gradientmap_pars_fragment: "#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif",
        lightmap_fragment: "#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif",
        lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
        lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif",
        lights_pars_begin: "uniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",
        lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
        lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",
        lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif",
        lights_physical_pars_fragment: "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#endif\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\tfloat clearCoatInv = 1.0 - clearCoatDHR;\n\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec3 singleScattering = vec3( 0.0 );\n\t\tvec3 multiScattering = vec3( 0.0 );\n\t\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\t\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\t\treflectedLight.indirectSpecular += clearCoatInv * radiance * singleScattering;\n\t\treflectedLight.indirectDiffuse += multiScattering * cosineWeightedIrradiance;\n\t\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n\t#else\n\t\treflectedLight.indirectSpecular += clearCoatInv * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#endif\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
        lights_fragment_begin: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearCoatRadiance = vec3( 0.0 );\n#endif",
        lights_fragment_maps: "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\n\t#ifndef STANDARD\n\t\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\n\t#endif\n#endif",
        lights_fragment_end: "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, irradiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif",
        logdepthbuf_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
        logdepthbuf_pars_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n#endif",
        logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",
        logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\tgl_Position.z *= gl_Position.w;\n\t#endif\n#endif",
        map_fragment: "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",
        map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",
        map_particle_fragment: "#ifdef USE_MAP\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif",
        map_particle_pars_fragment: "#ifdef USE_MAP\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n#endif",
        metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",
        metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
        morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif",
        morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
        morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",
        normal_fragment_begin: "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t#endif\n#endif",
        normal_fragment_maps: "#ifdef USE_NORMALMAP\n\t#ifdef OBJECTSPACE_NORMALMAP\n\t\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t#ifdef FLIP_SIDED\n\t\t\tnormal = - normal;\n\t\t#endif\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\tnormal = normalize( normalMatrix * normal );\n\t#else\n\t\t#ifdef USE_TANGENT\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t\tmapN.xy = normalScale * mapN.xy;\n\t\t\tnormal = normalize( vTBN * mapN );\n\t\t#else\n\t\t\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\t\t#endif\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",
        normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\t#ifdef OBJECTSPACE_NORMALMAP\n\t\tuniform mat3 normalMatrix;\n\t#else\n\t\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\t\tvec2 st0 = dFdx( vUv.st );\n\t\t\tvec2 st1 = dFdy( vUv.st );\n\t\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\t\tvec3 N = normalize( surf_norm );\n\t\t\tmat3 tsn = mat3( S, T, N );\n\t\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t\tmapN.xy *= normalScale;\n\t\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\treturn normalize( tsn * mapN );\n\t\t}\n\t#endif\n#endif",
        packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",
        premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",
        project_vertex: "vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;",
        dithering_fragment: "#if defined( DITHERING )\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",
        dithering_pars_fragment: "#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",
        roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",
        roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
        shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",
        shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif",
        shadowmap_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif",
        shadowmask_pars_fragment: "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}",
        skinbase_vertex: "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
        skinning_pars_vertex: "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",
        skinning_vertex: "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",
        skinnormal_vertex: "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
        specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
        specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
        tonemapping_fragment: "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",
        tonemapping_pars_fragment: "#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}",
        uv_pars_fragment: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",
        uv_pars_vertex: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif",
        uv_vertex: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",
        uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
        uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",
        uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",
        worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif",
        background_frag: "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
        background_vert: "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",
        cube_frag: "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
        cube_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
        depth_frag: "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}",
        depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}",
        distanceRGBA_frag: "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",
        distanceRGBA_vert: "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",
        equirect_frag: "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
        equirect_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",
        linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
        meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",
        meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        meshmatcap_frag: "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        meshmatcap_vert: "#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",
        meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        meshphysical_frag: "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshphysical_vert: "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",
        normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",
        points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",
        shadow_frag: "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}",
        shadow_vert: "#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        sprite_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        sprite_vert: "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"
    };
    function Mn(t) {
        var e = {};
        for (var n in t)
            for (var i in e[n] = {},
            t[n]) {
                var r = t[n][i];
                r && (r.isColor || r.isMatrix3 || r.isMatrix4 || r.isVector2 || r.isVector3 || r.isVector4 || r.isTexture) ? e[n][i] = r.clone() : Array.isArray(r) ? e[n][i] = r.slice() : e[n][i] = r
            }
        return e
    }
    function _n(t) {
        for (var e = {}, n = 0; n < t.length; n++) {
            var i = Mn(t[n]);
            for (var r in i)
                e[r] = i[r]
        }
        return e
    }
    var Sn, Tn, En, kn = {
        clone: Mn,
        merge: _n
    }, An = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
    };
    function Ln(t, e, n) {
        return void 0 === e && void 0 === n ? this.set(t) : this.setRGB(t, e, n)
    }
    Object.assign(Ln.prototype, {
        isColor: !0,
        r: 1,
        g: 1,
        b: 1,
        set: function(t) {
            return t && t.isColor ? this.copy(t) : "number" == typeof t ? this.setHex(t) : "string" == typeof t && this.setStyle(t),
            this
        },
        setScalar: function(t) {
            return this.r = t,
            this.g = t,
            this.b = t,
            this
        },
        setHex: function(t) {
            return t = Math.floor(t),
            this.r = (t >> 16 & 255) / 255,
            this.g = (t >> 8 & 255) / 255,
            this.b = (255 & t) / 255,
            this
        },
        setRGB: function(t, e, n) {
            return this.r = t,
            this.g = e,
            this.b = n,
            this
        },
        setHSL: function() {
            function t(t, e, n) {
                return n < 0 && (n += 1),
                n > 1 && (n -= 1),
                n < 1 / 6 ? t + 6 * (e - t) * n : n < .5 ? e : n < 2 / 3 ? t + 6 * (e - t) * (2 / 3 - n) : t
            }
            return function(e, n, i) {
                if (e = He.euclideanModulo(e, 1),
                n = He.clamp(n, 0, 1),
                i = He.clamp(i, 0, 1),
                0 === n)
                    this.r = this.g = this.b = i;
                else {
                    var r = i <= .5 ? i * (1 + n) : i + n - i * n
                      , s = 2 * i - r;
                    this.r = t(s, r, e + 1 / 3),
                    this.g = t(s, r, e),
                    this.b = t(s, r, e - 1 / 3)
                }
                return this
            }
        }(),
        setStyle: function(t) {
            function e(e) {
                void 0 !== e && parseFloat(e) < 1 && console.warn("THREE.Color: Alpha component of " + t + " will be ignored.")
            }
            var n;
            if (n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)) {
                var i, r = n[1], s = n[2];
                switch (r) {
                case "rgb":
                case "rgba":
                    if (i = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s))
                        return this.r = Math.min(255, parseInt(i[1], 10)) / 255,
                        this.g = Math.min(255, parseInt(i[2], 10)) / 255,
                        this.b = Math.min(255, parseInt(i[3], 10)) / 255,
                        e(i[5]),
                        this;
                    if (i = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s))
                        return this.r = Math.min(100, parseInt(i[1], 10)) / 100,
                        this.g = Math.min(100, parseInt(i[2], 10)) / 100,
                        this.b = Math.min(100, parseInt(i[3], 10)) / 100,
                        e(i[5]),
                        this;
                    break;
                case "hsl":
                case "hsla":
                    if (i = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s)) {
                        var a = parseFloat(i[1]) / 360
                          , o = parseInt(i[2], 10) / 100
                          , c = parseInt(i[3], 10) / 100;
                        return e(i[5]),
                        this.setHSL(a, o, c)
                    }
                }
            } else if (n = /^\#([A-Fa-f0-9]+)$/.exec(t)) {
                var l, p = (l = n[1]).length;
                if (3 === p)
                    return this.r = parseInt(l.charAt(0) + l.charAt(0), 16) / 255,
                    this.g = parseInt(l.charAt(1) + l.charAt(1), 16) / 255,
                    this.b = parseInt(l.charAt(2) + l.charAt(2), 16) / 255,
                    this;
                if (6 === p)
                    return this.r = parseInt(l.charAt(0) + l.charAt(1), 16) / 255,
                    this.g = parseInt(l.charAt(2) + l.charAt(3), 16) / 255,
                    this.b = parseInt(l.charAt(4) + l.charAt(5), 16) / 255,
                    this
            }
            t && t.length > 0 && (void 0 !== (l = An[t]) ? this.setHex(l) : console.warn("THREE.Color: Unknown color " + t));
            return this
        },
        clone: function() {
            return new this.constructor(this.r,this.g,this.b)
        },
        copy: function(t) {
            return this.r = t.r,
            this.g = t.g,
            this.b = t.b,
            this
        },
        copyGammaToLinear: function(t, e) {
            return void 0 === e && (e = 2),
            this.r = Math.pow(t.r, e),
            this.g = Math.pow(t.g, e),
            this.b = Math.pow(t.b, e),
            this
        },
        copyLinearToGamma: function(t, e) {
            void 0 === e && (e = 2);
            var n = e > 0 ? 1 / e : 1;
            return this.r = Math.pow(t.r, n),
            this.g = Math.pow(t.g, n),
            this.b = Math.pow(t.b, n),
            this
        },
        convertGammaToLinear: function(t) {
            return this.copyGammaToLinear(this, t),
            this
        },
        convertLinearToGamma: function(t) {
            return this.copyLinearToGamma(this, t),
            this
        },
        copySRGBToLinear: function() {
            function t(t) {
                return t < .04045 ? .0773993808 * t : Math.pow(.9478672986 * t + .0521327014, 2.4)
            }
            return function(e) {
                return this.r = t(e.r),
                this.g = t(e.g),
                this.b = t(e.b),
                this
            }
        }(),
        copyLinearToSRGB: function() {
            function t(t) {
                return t < .0031308 ? 12.92 * t : 1.055 * Math.pow(t, .41666) - .055
            }
            return function(e) {
                return this.r = t(e.r),
                this.g = t(e.g),
                this.b = t(e.b),
                this
            }
        }(),
        convertSRGBToLinear: function() {
            return this.copySRGBToLinear(this),
            this
        },
        convertLinearToSRGB: function() {
            return this.copyLinearToSRGB(this),
            this
        },
        getHex: function() {
            return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
        },
        getHexString: function() {
            return ("000000" + this.getHex().toString(16)).slice(-6)
        },
        getHSL: function(t) {
            void 0 === t && (console.warn("THREE.Color: .getHSL() target is now required"),
            t = {
                h: 0,
                s: 0,
                l: 0
            });
            var e, n, i = this.r, r = this.g, s = this.b, a = Math.max(i, r, s), o = Math.min(i, r, s), c = (o + a) / 2;
            if (o === a)
                e = 0,
                n = 0;
            else {
                var l = a - o;
                switch (n = c <= .5 ? l / (a + o) : l / (2 - a - o),
                a) {
                case i:
                    e = (r - s) / l + (r < s ? 6 : 0);
                    break;
                case r:
                    e = (s - i) / l + 2;
                    break;
                case s:
                    e = (i - r) / l + 4
                }
                e /= 6
            }
            return t.h = e,
            t.s = n,
            t.l = c,
            t
        },
        getStyle: function() {
            return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
        },
        offsetHSL: (En = {},
        function(t, e, n) {
            return this.getHSL(En),
            En.h += t,
            En.s += e,
            En.l += n,
            this.setHSL(En.h, En.s, En.l),
            this
        }
        ),
        add: function(t) {
            return this.r += t.r,
            this.g += t.g,
            this.b += t.b,
            this
        },
        addColors: function(t, e) {
            return this.r = t.r + e.r,
            this.g = t.g + e.g,
            this.b = t.b + e.b,
            this
        },
        addScalar: function(t) {
            return this.r += t,
            this.g += t,
            this.b += t,
            this
        },
        sub: function(t) {
            return this.r = Math.max(0, this.r - t.r),
            this.g = Math.max(0, this.g - t.g),
            this.b = Math.max(0, this.b - t.b),
            this
        },
        multiply: function(t) {
            return this.r *= t.r,
            this.g *= t.g,
            this.b *= t.b,
            this
        },
        multiplyScalar: function(t) {
            return this.r *= t,
            this.g *= t,
            this.b *= t,
            this
        },
        lerp: function(t, e) {
            return this.r += (t.r - this.r) * e,
            this.g += (t.g - this.g) * e,
            this.b += (t.b - this.b) * e,
            this
        },
        lerpHSL: (Sn = {
            h: 0,
            s: 0,
            l: 0
        },
        Tn = {
            h: 0,
            s: 0,
            l: 0
        },
        function(t, e) {
            this.getHSL(Sn),
            t.getHSL(Tn);
            var n = He.lerp(Sn.h, Tn.h, e)
              , i = He.lerp(Sn.s, Tn.s, e)
              , r = He.lerp(Sn.l, Tn.l, e);
            return this.setHSL(n, i, r),
            this
        }
        ),
        equals: function(t) {
            return t.r === this.r && t.g === this.g && t.b === this.b
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0),
            this.r = t[e],
            this.g = t[e + 1],
            this.b = t[e + 2],
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this.r,
            t[e + 1] = this.g,
            t[e + 2] = this.b,
            t
        },
        toJSON: function() {
            return this.getHex()
        }
    });
    var Pn, Cn = {
        common: {
            diffuse: {
                value: new Ln(15658734)
            },
            opacity: {
                value: 1
            },
            map: {
                value: null
            },
            uvTransform: {
                value: new Ye
            },
            alphaMap: {
                value: null
            }
        },
        specularmap: {
            specularMap: {
                value: null
            }
        },
        envmap: {
            envMap: {
                value: null
            },
            flipEnvMap: {
                value: -1
            },
            reflectivity: {
                value: 1
            },
            refractionRatio: {
                value: .98
            },
            maxMipLevel: {
                value: 0
            }
        },
        aomap: {
            aoMap: {
                value: null
            },
            aoMapIntensity: {
                value: 1
            }
        },
        lightmap: {
            lightMap: {
                value: null
            },
            lightMapIntensity: {
                value: 1
            }
        },
        emissivemap: {
            emissiveMap: {
                value: null
            }
        },
        bumpmap: {
            bumpMap: {
                value: null
            },
            bumpScale: {
                value: 1
            }
        },
        normalmap: {
            normalMap: {
                value: null
            },
            normalScale: {
                value: new Ge(1,1)
            }
        },
        displacementmap: {
            displacementMap: {
                value: null
            },
            displacementScale: {
                value: 1
            },
            displacementBias: {
                value: 0
            }
        },
        roughnessmap: {
            roughnessMap: {
                value: null
            }
        },
        metalnessmap: {
            metalnessMap: {
                value: null
            }
        },
        gradientmap: {
            gradientMap: {
                value: null
            }
        },
        fog: {
            fogDensity: {
                value: 25e-5
            },
            fogNear: {
                value: 1
            },
            fogFar: {
                value: 2e3
            },
            fogColor: {
                value: new Ln(16777215)
            }
        },
        lights: {
            ambientLightColor: {
                value: []
            },
            lightProbe: {
                value: []
            },
            directionalLights: {
                value: [],
                properties: {
                    direction: {},
                    color: {},
                    shadow: {},
                    shadowBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            directionalShadowMap: {
                value: []
            },
            directionalShadowMatrix: {
                value: []
            },
            spotLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    direction: {},
                    distance: {},
                    coneCos: {},
                    penumbraCos: {},
                    decay: {},
                    shadow: {},
                    shadowBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            spotShadowMap: {
                value: []
            },
            spotShadowMatrix: {
                value: []
            },
            pointLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    decay: {},
                    distance: {},
                    shadow: {},
                    shadowBias: {},
                    shadowRadius: {},
                    shadowMapSize: {},
                    shadowCameraNear: {},
                    shadowCameraFar: {}
                }
            },
            pointShadowMap: {
                value: []
            },
            pointShadowMatrix: {
                value: []
            },
            hemisphereLights: {
                value: [],
                properties: {
                    direction: {},
                    skyColor: {},
                    groundColor: {}
                }
            },
            rectAreaLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    width: {},
                    height: {}
                }
            }
        },
        points: {
            diffuse: {
                value: new Ln(15658734)
            },
            opacity: {
                value: 1
            },
            size: {
                value: 1
            },
            scale: {
                value: 1
            },
            map: {
                value: null
            },
            uvTransform: {
                value: new Ye
            }
        },
        sprite: {
            diffuse: {
                value: new Ln(15658734)
            },
            opacity: {
                value: 1
            },
            center: {
                value: new Ge(.5,.5)
            },
            rotation: {
                value: 0
            },
            map: {
                value: null
            },
            uvTransform: {
                value: new Ye
            }
        }
    }, Rn = {
        basic: {
            uniforms: _n([Cn.common, Cn.specularmap, Cn.envmap, Cn.aomap, Cn.lightmap, Cn.fog]),
            vertexShader: xn.meshbasic_vert,
            fragmentShader: xn.meshbasic_frag
        },
        lambert: {
            uniforms: _n([Cn.common, Cn.specularmap, Cn.envmap, Cn.aomap, Cn.lightmap, Cn.emissivemap, Cn.fog, Cn.lights, {
                emissive: {
                    value: new Ln(0)
                }
            }]),
            vertexShader: xn.meshlambert_vert,
            fragmentShader: xn.meshlambert_frag
        },
        phong: {
            uniforms: _n([Cn.common, Cn.specularmap, Cn.envmap, Cn.aomap, Cn.lightmap, Cn.emissivemap, Cn.bumpmap, Cn.normalmap, Cn.displacementmap, Cn.gradientmap, Cn.fog, Cn.lights, {
                emissive: {
                    value: new Ln(0)
                },
                specular: {
                    value: new Ln(1118481)
                },
                shininess: {
                    value: 30
                }
            }]),
            vertexShader: xn.meshphong_vert,
            fragmentShader: xn.meshphong_frag
        },
        standard: {
            uniforms: _n([Cn.common, Cn.envmap, Cn.aomap, Cn.lightmap, Cn.emissivemap, Cn.bumpmap, Cn.normalmap, Cn.displacementmap, Cn.roughnessmap, Cn.metalnessmap, Cn.fog, Cn.lights, {
                emissive: {
                    value: new Ln(0)
                },
                roughness: {
                    value: .5
                },
                metalness: {
                    value: .5
                },
                envMapIntensity: {
                    value: 1
                }
            }]),
            vertexShader: xn.meshphysical_vert,
            fragmentShader: xn.meshphysical_frag
        },
        matcap: {
            uniforms: _n([Cn.common, Cn.bumpmap, Cn.normalmap, Cn.displacementmap, Cn.fog, {
                matcap: {
                    value: null
                }
            }]),
            vertexShader: xn.meshmatcap_vert,
            fragmentShader: xn.meshmatcap_frag
        },
        points: {
            uniforms: _n([Cn.points, Cn.fog]),
            vertexShader: xn.points_vert,
            fragmentShader: xn.points_frag
        },
        dashed: {
            uniforms: _n([Cn.common, Cn.fog, {
                scale: {
                    value: 1
                },
                dashSize: {
                    value: 1
                },
                totalSize: {
                    value: 2
                }
            }]),
            vertexShader: xn.linedashed_vert,
            fragmentShader: xn.linedashed_frag
        },
        depth: {
            uniforms: _n([Cn.common, Cn.displacementmap]),
            vertexShader: xn.depth_vert,
            fragmentShader: xn.depth_frag
        },
        normal: {
            uniforms: _n([Cn.common, Cn.bumpmap, Cn.normalmap, Cn.displacementmap, {
                opacity: {
                    value: 1
                }
            }]),
            vertexShader: xn.normal_vert,
            fragmentShader: xn.normal_frag
        },
        sprite: {
            uniforms: _n([Cn.sprite, Cn.fog]),
            vertexShader: xn.sprite_vert,
            fragmentShader: xn.sprite_frag
        },
        background: {
            uniforms: {
                uvTransform: {
                    value: new Ye
                },
                t2D: {
                    value: null
                }
            },
            vertexShader: xn.background_vert,
            fragmentShader: xn.background_frag
        },
        cube: {
            uniforms: {
                tCube: {
                    value: null
                },
                tFlip: {
                    value: -1
                },
                opacity: {
                    value: 1
                }
            },
            vertexShader: xn.cube_vert,
            fragmentShader: xn.cube_frag
        },
        equirect: {
            uniforms: {
                tEquirect: {
                    value: null
                }
            },
            vertexShader: xn.equirect_vert,
            fragmentShader: xn.equirect_frag
        },
        distanceRGBA: {
            uniforms: _n([Cn.common, Cn.displacementmap, {
                referencePosition: {
                    value: new We
                },
                nearDistance: {
                    value: 1
                },
                farDistance: {
                    value: 1e3
                }
            }]),
            vertexShader: xn.distanceRGBA_vert,
            fragmentShader: xn.distanceRGBA_frag
        },
        shadow: {
            uniforms: _n([Cn.lights, Cn.fog, {
                color: {
                    value: new Ln(0)
                },
                opacity: {
                    value: 1
                }
            }]),
            vertexShader: xn.shadow_vert,
            fragmentShader: xn.shadow_frag
        }
    };
    function In() {
        var t = null
          , e = !1
          , n = null;
        function i(r, s) {
            !1 !== e && (n(r, s),
            t.requestAnimationFrame(i))
        }
        return {
            start: function() {
                !0 !== e && null !== n && (t.requestAnimationFrame(i),
                e = !0)
            },
            stop: function() {
                e = !1
            },
            setAnimationLoop: function(t) {
                n = t
            },
            setContext: function(e) {
                t = e
            }
        }
    }
    function On(t) {
        var e = new WeakMap;
        return {
            get: function(t) {
                return t.isInterleavedBufferAttribute && (t = t.data),
                e.get(t)
            },
            remove: function(n) {
                n.isInterleavedBufferAttribute && (n = n.data);
                var i = e.get(n);
                i && (t.deleteBuffer(i.buffer),
                e.delete(n))
            },
            update: function(n, i) {
                n.isInterleavedBufferAttribute && (n = n.data);
                var r = e.get(n);
                void 0 === r ? e.set(n, function(e, n) {
                    var i = e.array
                      , r = e.dynamic ? 35048 : 35044
                      , s = t.createBuffer();
                    t.bindBuffer(n, s),
                    t.bufferData(n, i, r),
                    e.onUploadCallback();
                    var a = 5126;
                    return i instanceof Float32Array ? a = 5126 : i instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : i instanceof Uint16Array ? a = 5123 : i instanceof Int16Array ? a = 5122 : i instanceof Uint32Array ? a = 5125 : i instanceof Int32Array ? a = 5124 : i instanceof Int8Array ? a = 5120 : i instanceof Uint8Array && (a = 5121),
                    {
                        buffer: s,
                        type: a,
                        bytesPerElement: i.BYTES_PER_ELEMENT,
                        version: e.version
                    }
                }(n, i)) : r.version < n.version && (function(e, n, i) {
                    var r = n.array
                      , s = n.updateRange;
                    t.bindBuffer(i, e),
                    !1 === n.dynamic ? t.bufferData(i, r, 35044) : -1 === s.count ? t.bufferSubData(i, 0, r) : 0 === s.count ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.") : (t.bufferSubData(i, s.offset * r.BYTES_PER_ELEMENT, r.subarray(s.offset, s.offset + s.count)),
                    s.count = -1)
                }(r.buffer, n, i),
                r.version = n.version)
            }
        }
    }
    function Dn(t, e, n, i, r, s) {
        this.a = t,
        this.b = e,
        this.c = n,
        this.normal = i && i.isVector3 ? i : new We,
        this.vertexNormals = Array.isArray(i) ? i : [],
        this.color = r && r.isColor ? r : new Ln,
        this.vertexColors = Array.isArray(r) ? r : [],
        this.materialIndex = void 0 !== s ? s : 0
    }
    function zn(t, e, n, i) {
        this._x = t || 0,
        this._y = e || 0,
        this._z = n || 0,
        this._order = i || zn.DefaultOrder
    }
    function Bn() {
        this.mask = 1
    }
    Rn.physical = {
        uniforms: _n([Rn.standard.uniforms, {
            clearCoat: {
                value: 0
            },
            clearCoatRoughness: {
                value: 0
            }
        }]),
        vertexShader: xn.meshphysical_vert,
        fragmentShader: xn.meshphysical_frag
    },
    Object.assign(Dn.prototype, {
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            this.a = t.a,
            this.b = t.b,
            this.c = t.c,
            this.normal.copy(t.normal),
            this.color.copy(t.color),
            this.materialIndex = t.materialIndex;
            for (var e = 0, n = t.vertexNormals.length; e < n; e++)
                this.vertexNormals[e] = t.vertexNormals[e].clone();
            for (e = 0,
            n = t.vertexColors.length; e < n; e++)
                this.vertexColors[e] = t.vertexColors[e].clone();
            return this
        }
    }),
    zn.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"],
    zn.DefaultOrder = "XYZ",
    Object.defineProperties(zn.prototype, {
        x: {
            get: function() {
                return this._x
            },
            set: function(t) {
                this._x = t,
                this.onChangeCallback()
            }
        },
        y: {
            get: function() {
                return this._y
            },
            set: function(t) {
                this._y = t,
                this.onChangeCallback()
            }
        },
        z: {
            get: function() {
                return this._z
            },
            set: function(t) {
                this._z = t,
                this.onChangeCallback()
            }
        },
        order: {
            get: function() {
                return this._order
            },
            set: function(t) {
                this._order = t,
                this.onChangeCallback()
            }
        }
    }),
    Object.assign(zn.prototype, {
        isEuler: !0,
        set: function(t, e, n, i) {
            return this._x = t,
            this._y = e,
            this._z = n,
            this._order = i || this._order,
            this.onChangeCallback(),
            this
        },
        clone: function() {
            return new this.constructor(this._x,this._y,this._z,this._order)
        },
        copy: function(t) {
            return this._x = t._x,
            this._y = t._y,
            this._z = t._z,
            this._order = t._order,
            this.onChangeCallback(),
            this
        },
        setFromRotationMatrix: function(t, e, n) {
            var i = He.clamp
              , r = t.elements
              , s = r[0]
              , a = r[4]
              , o = r[8]
              , c = r[1]
              , l = r[5]
              , p = r[9]
              , h = r[2]
              , u = r[6]
              , f = r[10];
            return "XYZ" === (e = e || this._order) ? (this._y = Math.asin(i(o, -1, 1)),
            Math.abs(o) < .99999 ? (this._x = Math.atan2(-p, f),
            this._z = Math.atan2(-a, s)) : (this._x = Math.atan2(u, l),
            this._z = 0)) : "YXZ" === e ? (this._x = Math.asin(-i(p, -1, 1)),
            Math.abs(p) < .99999 ? (this._y = Math.atan2(o, f),
            this._z = Math.atan2(c, l)) : (this._y = Math.atan2(-h, s),
            this._z = 0)) : "ZXY" === e ? (this._x = Math.asin(i(u, -1, 1)),
            Math.abs(u) < .99999 ? (this._y = Math.atan2(-h, f),
            this._z = Math.atan2(-a, l)) : (this._y = 0,
            this._z = Math.atan2(c, s))) : "ZYX" === e ? (this._y = Math.asin(-i(h, -1, 1)),
            Math.abs(h) < .99999 ? (this._x = Math.atan2(u, f),
            this._z = Math.atan2(c, s)) : (this._x = 0,
            this._z = Math.atan2(-a, l))) : "YZX" === e ? (this._z = Math.asin(i(c, -1, 1)),
            Math.abs(c) < .99999 ? (this._x = Math.atan2(-p, l),
            this._y = Math.atan2(-h, s)) : (this._x = 0,
            this._y = Math.atan2(o, f))) : "XZY" === e ? (this._z = Math.asin(-i(a, -1, 1)),
            Math.abs(a) < .99999 ? (this._x = Math.atan2(u, l),
            this._y = Math.atan2(o, s)) : (this._x = Math.atan2(-p, f),
            this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + e),
            this._order = e,
            !1 !== n && this.onChangeCallback(),
            this
        },
        setFromQuaternion: function() {
            var t = new wn;
            return function(e, n, i) {
                return t.makeRotationFromQuaternion(e),
                this.setFromRotationMatrix(t, n, i)
            }
        }(),
        setFromVector3: function(t, e) {
            return this.set(t.x, t.y, t.z, e || this._order)
        },
        reorder: (Pn = new Ve,
        function(t) {
            return Pn.setFromEuler(this),
            this.setFromQuaternion(Pn, t)
        }
        ),
        equals: function(t) {
            return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order
        },
        fromArray: function(t) {
            return this._x = t[0],
            this._y = t[1],
            this._z = t[2],
            void 0 !== t[3] && (this._order = t[3]),
            this.onChangeCallback(),
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this._x,
            t[e + 1] = this._y,
            t[e + 2] = this._z,
            t[e + 3] = this._order,
            t
        },
        toVector3: function(t) {
            return t ? t.set(this._x, this._y, this._z) : new We(this._x,this._y,this._z)
        },
        onChange: function(t) {
            return this.onChangeCallback = t,
            this
        },
        onChangeCallback: function() {}
    }),
    Object.assign(Bn.prototype, {
        set: function(t) {
            this.mask = 1 << t | 0
        },
        enable: function(t) {
            this.mask |= 1 << t | 0
        },
        toggle: function(t) {
            this.mask ^= 1 << t | 0
        },
        disable: function(t) {
            this.mask &= ~(1 << t | 0)
        },
        test: function(t) {
            return 0 != (this.mask & t.mask)
        }
    });
    var Nn, jn, Un, Fn, Hn, Gn = 0;
    function Vn() {
        Object.defineProperty(this, "id", {
            value: Gn++
        }),
        this.uuid = He.generateUUID(),
        this.name = "",
        this.type = "Object3D",
        this.parent = null,
        this.children = [],
        this.up = Vn.DefaultUp.clone();
        var t = new We
          , e = new zn
          , n = new Ve
          , i = new We(1,1,1);
        e.onChange(function() {
            n.setFromEuler(e, !1)
        }),
        n.onChange(function() {
            e.setFromQuaternion(n, void 0, !1)
        }),
        Object.defineProperties(this, {
            position: {
                configurable: !0,
                enumerable: !0,
                value: t
            },
            rotation: {
                configurable: !0,
                enumerable: !0,
                value: e
            },
            quaternion: {
                configurable: !0,
                enumerable: !0,
                value: n
            },
            scale: {
                configurable: !0,
                enumerable: !0,
                value: i
            },
            modelViewMatrix: {
                value: new wn
            },
            normalMatrix: {
                value: new Ye
            }
        }),
        this.matrix = new wn,
        this.matrixWorld = new wn,
        this.matrixAutoUpdate = Vn.DefaultMatrixAutoUpdate,
        this.matrixWorldNeedsUpdate = !1,
        this.layers = new Bn,
        this.visible = !0,
        this.castShadow = !1,
        this.receiveShadow = !1,
        this.frustumCulled = !0,
        this.renderOrder = 0,
        this.userData = {}
    }
    Vn.DefaultUp = new We(0,1,0),
    Vn.DefaultMatrixAutoUpdate = !0,
    Vn.prototype = Object.assign(Object.create(i.prototype), {
        constructor: Vn,
        isObject3D: !0,
        onBeforeRender: function() {},
        onAfterRender: function() {},
        applyMatrix: function(t) {
            this.matrixAutoUpdate && this.updateMatrix(),
            this.matrix.premultiply(t),
            this.matrix.decompose(this.position, this.quaternion, this.scale)
        },
        applyQuaternion: function(t) {
            return this.quaternion.premultiply(t),
            this
        },
        setRotationFromAxisAngle: function(t, e) {
            this.quaternion.setFromAxisAngle(t, e)
        },
        setRotationFromEuler: function(t) {
            this.quaternion.setFromEuler(t, !0)
        },
        setRotationFromMatrix: function(t) {
            this.quaternion.setFromRotationMatrix(t)
        },
        setRotationFromQuaternion: function(t) {
            this.quaternion.copy(t)
        },
        rotateOnAxis: (Hn = new Ve,
        function(t, e) {
            return Hn.setFromAxisAngle(t, e),
            this.quaternion.multiply(Hn),
            this
        }
        ),
        rotateOnWorldAxis: function() {
            var t = new Ve;
            return function(e, n) {
                return t.setFromAxisAngle(e, n),
                this.quaternion.premultiply(t),
                this
            }
        }(),
        rotateX: function() {
            var t = new We(1,0,0);
            return function(e) {
                return this.rotateOnAxis(t, e)
            }
        }(),
        rotateY: function() {
            var t = new We(0,1,0);
            return function(e) {
                return this.rotateOnAxis(t, e)
            }
        }(),
        rotateZ: function() {
            var t = new We(0,0,1);
            return function(e) {
                return this.rotateOnAxis(t, e)
            }
        }(),
        translateOnAxis: function() {
            var t = new We;
            return function(e, n) {
                return t.copy(e).applyQuaternion(this.quaternion),
                this.position.add(t.multiplyScalar(n)),
                this
            }
        }(),
        translateX: function() {
            var t = new We(1,0,0);
            return function(e) {
                return this.translateOnAxis(t, e)
            }
        }(),
        translateY: function() {
            var t = new We(0,1,0);
            return function(e) {
                return this.translateOnAxis(t, e)
            }
        }(),
        translateZ: function() {
            var t = new We(0,0,1);
            return function(e) {
                return this.translateOnAxis(t, e)
            }
        }(),
        localToWorld: function(t) {
            return t.applyMatrix4(this.matrixWorld)
        },
        worldToLocal: (Fn = new wn,
        function(t) {
            return t.applyMatrix4(Fn.getInverse(this.matrixWorld))
        }
        ),
        lookAt: function() {
            var t = new Ve
              , e = new wn
              , n = new We
              , i = new We;
            return function(r, s, a) {
                r.isVector3 ? n.copy(r) : n.set(r, s, a);
                var o = this.parent;
                this.updateWorldMatrix(!0, !1),
                i.setFromMatrixPosition(this.matrixWorld),
                this.isCamera || this.isLight ? e.lookAt(i, n, this.up) : e.lookAt(n, i, this.up),
                this.quaternion.setFromRotationMatrix(e),
                o && (e.extractRotation(o.matrixWorld),
                t.setFromRotationMatrix(e),
                this.quaternion.premultiply(t.inverse()))
            }
        }(),
        add: function(t) {
            if (arguments.length > 1) {
                for (var e = 0; e < arguments.length; e++)
                    this.add(arguments[e]);
                return this
            }
            return t === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", t),
            this) : (t && t.isObject3D ? (null !== t.parent && t.parent.remove(t),
            t.parent = this,
            t.dispatchEvent({
                type: "added"
            }),
            this.children.push(t)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", t),
            this)
        },
        remove: function(t) {
            if (arguments.length > 1) {
                for (var e = 0; e < arguments.length; e++)
                    this.remove(arguments[e]);
                return this
            }
            var n = this.children.indexOf(t);
            return -1 !== n && (t.parent = null,
            t.dispatchEvent({
                type: "removed"
            }),
            this.children.splice(n, 1)),
            this
        },
        attach: (Un = new wn,
        function(t) {
            return this.updateWorldMatrix(!0, !1),
            Un.getInverse(this.matrixWorld),
            null !== t.parent && (t.parent.updateWorldMatrix(!0, !1),
            Un.multiply(t.parent.matrixWorld)),
            t.applyMatrix(Un),
            t.updateWorldMatrix(!1, !1),
            this.add(t),
            this
        }
        ),
        getObjectById: function(t) {
            return this.getObjectByProperty("id", t)
        },
        getObjectByName: function(t) {
            return this.getObjectByProperty("name", t)
        },
        getObjectByProperty: function(t, e) {
            if (this[t] === e)
                return this;
            for (var n = 0, i = this.children.length; n < i; n++) {
                var r = this.children[n].getObjectByProperty(t, e);
                if (void 0 !== r)
                    return r
            }
        },
        getWorldPosition: function(t) {
            return void 0 === t && (console.warn("THREE.Object3D: .getWorldPosition() target is now required"),
            t = new We),
            this.updateMatrixWorld(!0),
            t.setFromMatrixPosition(this.matrixWorld)
        },
        getWorldQuaternion: (Nn = new We,
        jn = new We,
        function(t) {
            return void 0 === t && (console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),
            t = new Ve),
            this.updateMatrixWorld(!0),
            this.matrixWorld.decompose(Nn, t, jn),
            t
        }
        ),
        getWorldScale: function() {
            var t = new We
              , e = new Ve;
            return function(n) {
                return void 0 === n && (console.warn("THREE.Object3D: .getWorldScale() target is now required"),
                n = new We),
                this.updateMatrixWorld(!0),
                this.matrixWorld.decompose(t, e, n),
                n
            }
        }(),
        getWorldDirection: function(t) {
            void 0 === t && (console.warn("THREE.Object3D: .getWorldDirection() target is now required"),
            t = new We),
            this.updateMatrixWorld(!0);
            var e = this.matrixWorld.elements;
            return t.set(e[8], e[9], e[10]).normalize()
        },
        raycast: function() {},
        traverse: function(t) {
            t(this);
            for (var e = this.children, n = 0, i = e.length; n < i; n++)
                e[n].traverse(t)
        },
        traverseVisible: function(t) {
            if (!1 !== this.visible) {
                t(this);
                for (var e = this.children, n = 0, i = e.length; n < i; n++)
                    e[n].traverseVisible(t)
            }
        },
        traverseAncestors: function(t) {
            var e = this.parent;
            null !== e && (t(e),
            e.traverseAncestors(t))
        },
        updateMatrix: function() {
            this.matrix.compose(this.position, this.quaternion, this.scale),
            this.matrixWorldNeedsUpdate = !0
        },
        updateMatrixWorld: function(t) {
            this.matrixAutoUpdate && this.updateMatrix(),
            (this.matrixWorldNeedsUpdate || t) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
            this.matrixWorldNeedsUpdate = !1,
            t = !0);
            for (var e = this.children, n = 0, i = e.length; n < i; n++)
                e[n].updateMatrixWorld(t)
        },
        updateWorldMatrix: function(t, e) {
            var n = this.parent;
            if (!0 === t && null !== n && n.updateWorldMatrix(!0, !1),
            this.matrixAutoUpdate && this.updateMatrix(),
            null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
            !0 === e)
                for (var i = this.children, r = 0, s = i.length; r < s; r++)
                    i[r].updateWorldMatrix(!1, !0)
        },
        toJSON: function(t) {
            var e = void 0 === t || "string" == typeof t
              , n = {};
            e && (t = {
                geometries: {},
                materials: {},
                textures: {},
                images: {},
                shapes: {}
            },
            n.metadata = {
                version: 4.5,
                type: "Object",
                generator: "Object3D.toJSON"
            });
            var i = {};
            function r(e, n) {
                return void 0 === e[n.uuid] && (e[n.uuid] = n.toJSON(t)),
                n.uuid
            }
            if (i.uuid = this.uuid,
            i.type = this.type,
            "" !== this.name && (i.name = this.name),
            !0 === this.castShadow && (i.castShadow = !0),
            !0 === this.receiveShadow && (i.receiveShadow = !0),
            !1 === this.visible && (i.visible = !1),
            !1 === this.frustumCulled && (i.frustumCulled = !1),
            0 !== this.renderOrder && (i.renderOrder = this.renderOrder),
            "{}" !== JSON.stringify(this.userData) && (i.userData = this.userData),
            i.layers = this.layers.mask,
            i.matrix = this.matrix.toArray(),
            !1 === this.matrixAutoUpdate && (i.matrixAutoUpdate = !1),
            this.isMesh && this.drawMode !== ke && (i.drawMode = this.drawMode),
            this.isMesh || this.isLine || this.isPoints) {
                i.geometry = r(t.geometries, this.geometry);
                var s = this.geometry.parameters;
                if (void 0 !== s && void 0 !== s.shapes) {
                    var a = s.shapes;
                    if (Array.isArray(a))
                        for (var o = 0, c = a.length; o < c; o++) {
                            var l = a[o];
                            r(t.shapes, l)
                        }
                    else
                        r(t.shapes, a)
                }
            }
            if (void 0 !== this.material)
                if (Array.isArray(this.material)) {
                    var p = [];
                    for (o = 0,
                    c = this.material.length; o < c; o++)
                        p.push(r(t.materials, this.material[o]));
                    i.material = p
                } else
                    i.material = r(t.materials, this.material);
            if (this.children.length > 0) {
                i.children = [];
                for (o = 0; o < this.children.length; o++)
                    i.children.push(this.children[o].toJSON(t).object)
            }
            if (e) {
                var h = m(t.geometries)
                  , u = m(t.materials)
                  , f = m(t.textures)
                  , d = m(t.images);
                a = m(t.shapes);
                h.length > 0 && (n.geometries = h),
                u.length > 0 && (n.materials = u),
                f.length > 0 && (n.textures = f),
                d.length > 0 && (n.images = d),
                a.length > 0 && (n.shapes = a)
            }
            return n.object = i,
            n;
            function m(t) {
                var e = [];
                for (var n in t) {
                    var i = t[n];
                    delete i.metadata,
                    e.push(i)
                }
                return e
            }
        },
        clone: function(t) {
            return (new this.constructor).copy(this, t)
        },
        copy: function(t, e) {
            if (void 0 === e && (e = !0),
            this.name = t.name,
            this.up.copy(t.up),
            this.position.copy(t.position),
            this.quaternion.copy(t.quaternion),
            this.scale.copy(t.scale),
            this.matrix.copy(t.matrix),
            this.matrixWorld.copy(t.matrixWorld),
            this.matrixAutoUpdate = t.matrixAutoUpdate,
            this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate,
            this.layers.mask = t.layers.mask,
            this.visible = t.visible,
            this.castShadow = t.castShadow,
            this.receiveShadow = t.receiveShadow,
            this.frustumCulled = t.frustumCulled,
            this.renderOrder = t.renderOrder,
            this.userData = JSON.parse(JSON.stringify(t.userData)),
            !0 === e)
                for (var n = 0; n < t.children.length; n++) {
                    var i = t.children[n];
                    this.add(i.clone())
                }
            return this
        }
    });
    var Wn, Yn, qn = 0;
    function Xn() {
        Object.defineProperty(this, "id", {
            value: qn += 2
        }),
        this.uuid = He.generateUUID(),
        this.name = "",
        this.type = "Geometry",
        this.vertices = [],
        this.colors = [],
        this.faces = [],
        this.faceVertexUvs = [[]],
        this.morphTargets = [],
        this.morphNormals = [],
        this.skinWeights = [],
        this.skinIndices = [],
        this.lineDistances = [],
        this.boundingBox = null,
        this.boundingSphere = null,
        this.elementsNeedUpdate = !1,
        this.verticesNeedUpdate = !1,
        this.uvsNeedUpdate = !1,
        this.normalsNeedUpdate = !1,
        this.colorsNeedUpdate = !1,
        this.lineDistancesNeedUpdate = !1,
        this.groupsNeedUpdate = !1
    }
    function Zn(t, e, n) {
        if (Array.isArray(t))
            throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.name = "",
        this.array = t,
        this.itemSize = e,
        this.count = void 0 !== t ? t.length / e : 0,
        this.normalized = !0 === n,
        this.dynamic = !1,
        this.updateRange = {
            offset: 0,
            count: -1
        },
        this.version = 0
    }
    function Kn(t, e, n) {
        Zn.call(this, new Int8Array(t), e, n)
    }
    function Jn(t, e, n) {
        Zn.call(this, new Uint8Array(t), e, n)
    }
    function $n(t, e, n) {
        Zn.call(this, new Uint8ClampedArray(t), e, n)
    }
    function Qn(t, e, n) {
        Zn.call(this, new Int16Array(t), e, n)
    }
    function ti(t, e, n) {
        Zn.call(this, new Uint16Array(t), e, n)
    }
    function ei(t, e, n) {
        Zn.call(this, new Int32Array(t), e, n)
    }
    function ni(t, e, n) {
        Zn.call(this, new Uint32Array(t), e, n)
    }
    function ii(t, e, n) {
        Zn.call(this, new Float32Array(t), e, n)
    }
    function ri(t, e, n) {
        Zn.call(this, new Float64Array(t), e, n)
    }
    function si() {
        this.vertices = [],
        this.normals = [],
        this.colors = [],
        this.uvs = [],
        this.uvs2 = [],
        this.groups = [],
        this.morphTargets = {},
        this.skinWeights = [],
        this.skinIndices = [],
        this.boundingBox = null,
        this.boundingSphere = null,
        this.verticesNeedUpdate = !1,
        this.normalsNeedUpdate = !1,
        this.colorsNeedUpdate = !1,
        this.uvsNeedUpdate = !1,
        this.groupsNeedUpdate = !1
    }
    function ai(t) {
        if (0 === t.length)
            return -1 / 0;
        for (var e = t[0], n = 1, i = t.length; n < i; ++n)
            t[n] > e && (e = t[n]);
        return e
    }
    Xn.prototype = Object.assign(Object.create(i.prototype), {
        constructor: Xn,
        isGeometry: !0,
        applyMatrix: function(t) {
            for (var e = (new Ye).getNormalMatrix(t), n = 0, i = this.vertices.length; n < i; n++) {
                this.vertices[n].applyMatrix4(t)
            }
            for (n = 0,
            i = this.faces.length; n < i; n++) {
                var r = this.faces[n];
                r.normal.applyMatrix3(e).normalize();
                for (var s = 0, a = r.vertexNormals.length; s < a; s++)
                    r.vertexNormals[s].applyMatrix3(e).normalize()
            }
            return null !== this.boundingBox && this.computeBoundingBox(),
            null !== this.boundingSphere && this.computeBoundingSphere(),
            this.verticesNeedUpdate = !0,
            this.normalsNeedUpdate = !0,
            this
        },
        rotateX: function() {
            var t = new wn;
            return function(e) {
                return t.makeRotationX(e),
                this.applyMatrix(t),
                this
            }
        }(),
        rotateY: function() {
            var t = new wn;
            return function(e) {
                return t.makeRotationY(e),
                this.applyMatrix(t),
                this
            }
        }(),
        rotateZ: function() {
            var t = new wn;
            return function(e) {
                return t.makeRotationZ(e),
                this.applyMatrix(t),
                this
            }
        }(),
        translate: function() {
            var t = new wn;
            return function(e, n, i) {
                return t.makeTranslation(e, n, i),
                this.applyMatrix(t),
                this
            }
        }(),
        scale: function() {
            var t = new wn;
            return function(e, n, i) {
                return t.makeScale(e, n, i),
                this.applyMatrix(t),
                this
            }
        }(),
        lookAt: (Yn = new Vn,
        function(t) {
            Yn.lookAt(t),
            Yn.updateMatrix(),
            this.applyMatrix(Yn.matrix)
        }
        ),
        fromBufferGeometry: function(t) {
            var e = this
              , n = null !== t.index ? t.index.array : void 0
              , i = t.attributes
              , r = i.position.array
              , s = void 0 !== i.normal ? i.normal.array : void 0
              , a = void 0 !== i.color ? i.color.array : void 0
              , o = void 0 !== i.uv ? i.uv.array : void 0
              , c = void 0 !== i.uv2 ? i.uv2.array : void 0;
            void 0 !== c && (this.faceVertexUvs[1] = []);
            for (var l = 0; l < r.length; l += 3)
                e.vertices.push((new We).fromArray(r, l)),
                void 0 !== a && e.colors.push((new Ln).fromArray(a, l));
            function p(t, n, i, r) {
                var l = void 0 === a ? [] : [e.colors[t].clone(), e.colors[n].clone(), e.colors[i].clone()]
                  , p = new Dn(t,n,i,void 0 === s ? [] : [(new We).fromArray(s, 3 * t), (new We).fromArray(s, 3 * n), (new We).fromArray(s, 3 * i)],l,r);
                e.faces.push(p),
                void 0 !== o && e.faceVertexUvs[0].push([(new Ge).fromArray(o, 2 * t), (new Ge).fromArray(o, 2 * n), (new Ge).fromArray(o, 2 * i)]),
                void 0 !== c && e.faceVertexUvs[1].push([(new Ge).fromArray(c, 2 * t), (new Ge).fromArray(c, 2 * n), (new Ge).fromArray(c, 2 * i)])
            }
            var h = t.groups;
            if (h.length > 0)
                for (l = 0; l < h.length; l++)
                    for (var u = h[l], f = u.start, d = f, m = f + u.count; d < m; d += 3)
                        void 0 !== n ? p(n[d], n[d + 1], n[d + 2], u.materialIndex) : p(d, d + 1, d + 2, u.materialIndex);
            else if (void 0 !== n)
                for (l = 0; l < n.length; l += 3)
                    p(n[l], n[l + 1], n[l + 2]);
            else
                for (l = 0; l < r.length / 3; l += 3)
                    p(l, l + 1, l + 2);
            return this.computeFaceNormals(),
            null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
            null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
            this
        },
        center: (Wn = new We,
        function() {
            return this.computeBoundingBox(),
            this.boundingBox.getCenter(Wn).negate(),
            this.translate(Wn.x, Wn.y, Wn.z),
            this
        }
        ),
        normalize: function() {
            this.computeBoundingSphere();
            var t = this.boundingSphere.center
              , e = this.boundingSphere.radius
              , n = 0 === e ? 1 : 1 / e
              , i = new wn;
            return i.set(n, 0, 0, -n * t.x, 0, n, 0, -n * t.y, 0, 0, n, -n * t.z, 0, 0, 0, 1),
            this.applyMatrix(i),
            this
        },
        computeFaceNormals: function() {
            for (var t = new We, e = new We, n = 0, i = this.faces.length; n < i; n++) {
                var r = this.faces[n]
                  , s = this.vertices[r.a]
                  , a = this.vertices[r.b]
                  , o = this.vertices[r.c];
                t.subVectors(o, a),
                e.subVectors(s, a),
                t.cross(e),
                t.normalize(),
                r.normal.copy(t)
            }
        },
        computeVertexNormals: function(t) {
            var e, n, i, r, s, a;
            for (void 0 === t && (t = !0),
            a = new Array(this.vertices.length),
            e = 0,
            n = this.vertices.length; e < n; e++)
                a[e] = new We;
            if (t) {
                var o, c, l, p = new We, h = new We;
                for (i = 0,
                r = this.faces.length; i < r; i++)
                    s = this.faces[i],
                    o = this.vertices[s.a],
                    c = this.vertices[s.b],
                    l = this.vertices[s.c],
                    p.subVectors(l, c),
                    h.subVectors(o, c),
                    p.cross(h),
                    a[s.a].add(p),
                    a[s.b].add(p),
                    a[s.c].add(p)
            } else
                for (this.computeFaceNormals(),
                i = 0,
                r = this.faces.length; i < r; i++)
                    a[(s = this.faces[i]).a].add(s.normal),
                    a[s.b].add(s.normal),
                    a[s.c].add(s.normal);
            for (e = 0,
            n = this.vertices.length; e < n; e++)
                a[e].normalize();
            for (i = 0,
            r = this.faces.length; i < r; i++) {
                var u = (s = this.faces[i]).vertexNormals;
                3 === u.length ? (u[0].copy(a[s.a]),
                u[1].copy(a[s.b]),
                u[2].copy(a[s.c])) : (u[0] = a[s.a].clone(),
                u[1] = a[s.b].clone(),
                u[2] = a[s.c].clone())
            }
            this.faces.length > 0 && (this.normalsNeedUpdate = !0)
        },
        computeFlatVertexNormals: function() {
            var t, e, n;
            for (this.computeFaceNormals(),
            t = 0,
            e = this.faces.length; t < e; t++) {
                var i = (n = this.faces[t]).vertexNormals;
                3 === i.length ? (i[0].copy(n.normal),
                i[1].copy(n.normal),
                i[2].copy(n.normal)) : (i[0] = n.normal.clone(),
                i[1] = n.normal.clone(),
                i[2] = n.normal.clone())
            }
            this.faces.length > 0 && (this.normalsNeedUpdate = !0)
        },
        computeMorphNormals: function() {
            var t, e, n, i, r;
            for (n = 0,
            i = this.faces.length; n < i; n++)
                for ((r = this.faces[n]).__originalFaceNormal ? r.__originalFaceNormal.copy(r.normal) : r.__originalFaceNormal = r.normal.clone(),
                r.__originalVertexNormals || (r.__originalVertexNormals = []),
                t = 0,
                e = r.vertexNormals.length; t < e; t++)
                    r.__originalVertexNormals[t] ? r.__originalVertexNormals[t].copy(r.vertexNormals[t]) : r.__originalVertexNormals[t] = r.vertexNormals[t].clone();
            var s = new Xn;
            for (s.faces = this.faces,
            t = 0,
            e = this.morphTargets.length; t < e; t++) {
                if (!this.morphNormals[t]) {
                    this.morphNormals[t] = {},
                    this.morphNormals[t].faceNormals = [],
                    this.morphNormals[t].vertexNormals = [];
                    var a = this.morphNormals[t].faceNormals
                      , o = this.morphNormals[t].vertexNormals;
                    for (n = 0,
                    i = this.faces.length; n < i; n++)
                        c = new We,
                        l = {
                            a: new We,
                            b: new We,
                            c: new We
                        },
                        a.push(c),
                        o.push(l)
                }
                var c, l, p = this.morphNormals[t];
                for (s.vertices = this.morphTargets[t].vertices,
                s.computeFaceNormals(),
                s.computeVertexNormals(),
                n = 0,
                i = this.faces.length; n < i; n++)
                    r = this.faces[n],
                    c = p.faceNormals[n],
                    l = p.vertexNormals[n],
                    c.copy(r.normal),
                    l.a.copy(r.vertexNormals[0]),
                    l.b.copy(r.vertexNormals[1]),
                    l.c.copy(r.vertexNormals[2])
            }
            for (n = 0,
            i = this.faces.length; n < i; n++)
                (r = this.faces[n]).normal = r.__originalFaceNormal,
                r.vertexNormals = r.__originalVertexNormals
        },
        computeBoundingBox: function() {
            null === this.boundingBox && (this.boundingBox = new gn),
            this.boundingBox.setFromPoints(this.vertices)
        },
        computeBoundingSphere: function() {
            null === this.boundingSphere && (this.boundingSphere = new vn),
            this.boundingSphere.setFromPoints(this.vertices)
        },
        merge: function(t, e, n) {
            if (t && t.isGeometry) {
                var i, r = this.vertices.length, s = this.vertices, a = t.vertices, o = this.faces, c = t.faces, l = this.faceVertexUvs[0], p = t.faceVertexUvs[0], h = this.colors, u = t.colors;
                void 0 === n && (n = 0),
                void 0 !== e && (i = (new Ye).getNormalMatrix(e));
                for (var f = 0, d = a.length; f < d; f++) {
                    var m = a[f].clone();
                    void 0 !== e && m.applyMatrix4(e),
                    s.push(m)
                }
                for (f = 0,
                d = u.length; f < d; f++)
                    h.push(u[f].clone());
                for (f = 0,
                d = c.length; f < d; f++) {
                    var g, v, y, b = c[f], w = b.vertexNormals, x = b.vertexColors;
                    (g = new Dn(b.a + r,b.b + r,b.c + r)).normal.copy(b.normal),
                    void 0 !== i && g.normal.applyMatrix3(i).normalize();
                    for (var M = 0, _ = w.length; M < _; M++)
                        v = w[M].clone(),
                        void 0 !== i && v.applyMatrix3(i).normalize(),
                        g.vertexNormals.push(v);
                    g.color.copy(b.color);
                    for (M = 0,
                    _ = x.length; M < _; M++)
                        y = x[M],
                        g.vertexColors.push(y.clone());
                    g.materialIndex = b.materialIndex + n,
                    o.push(g)
                }
                for (f = 0,
                d = p.length; f < d; f++) {
                    var S = p[f]
                      , T = [];
                    if (void 0 !== S) {
                        for (M = 0,
                        _ = S.length; M < _; M++)
                            T.push(S[M].clone());
                        l.push(T)
                    }
                }
            } else
                console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", t)
        },
        mergeMesh: function(t) {
            t && t.isMesh ? (t.matrixAutoUpdate && t.updateMatrix(),
            this.merge(t.geometry, t.matrix)) : console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", t)
        },
        mergeVertices: function() {
            var t, e, n, i, r, s, a, o, c = {}, l = [], p = [], h = Math.pow(10, 4);
            for (n = 0,
            i = this.vertices.length; n < i; n++)
                t = this.vertices[n],
                void 0 === c[e = Math.round(t.x * h) + "_" + Math.round(t.y * h) + "_" + Math.round(t.z * h)] ? (c[e] = n,
                l.push(this.vertices[n]),
                p[n] = l.length - 1) : p[n] = p[c[e]];
            var u = [];
            for (n = 0,
            i = this.faces.length; n < i; n++) {
                (r = this.faces[n]).a = p[r.a],
                r.b = p[r.b],
                r.c = p[r.c],
                s = [r.a, r.b, r.c];
                for (var f = 0; f < 3; f++)
                    if (s[f] === s[(f + 1) % 3]) {
                        u.push(n);
                        break
                    }
            }
            for (n = u.length - 1; n >= 0; n--) {
                var d = u[n];
                for (this.faces.splice(d, 1),
                a = 0,
                o = this.faceVertexUvs.length; a < o; a++)
                    this.faceVertexUvs[a].splice(d, 1)
            }
            var m = this.vertices.length - l.length;
            return this.vertices = l,
            m
        },
        setFromPoints: function(t) {
            this.vertices = [];
            for (var e = 0, n = t.length; e < n; e++) {
                var i = t[e];
                this.vertices.push(new We(i.x,i.y,i.z || 0))
            }
            return this
        },
        sortFacesByMaterialIndex: function() {
            for (var t = this.faces, e = t.length, n = 0; n < e; n++)
                t[n]._id = n;
            t.sort(function(t, e) {
                return t.materialIndex - e.materialIndex
            });
            var i, r, s = this.faceVertexUvs[0], a = this.faceVertexUvs[1];
            s && s.length === e && (i = []),
            a && a.length === e && (r = []);
            for (n = 0; n < e; n++) {
                var o = t[n]._id;
                i && i.push(s[o]),
                r && r.push(a[o])
            }
            i && (this.faceVertexUvs[0] = i),
            r && (this.faceVertexUvs[1] = r)
        },
        toJSON: function() {
            var t = {
                metadata: {
                    version: 4.5,
                    type: "Geometry",
                    generator: "Geometry.toJSON"
                }
            };
            if (t.uuid = this.uuid,
            t.type = this.type,
            "" !== this.name && (t.name = this.name),
            void 0 !== this.parameters) {
                var e = this.parameters;
                for (var n in e)
                    void 0 !== e[n] && (t[n] = e[n]);
                return t
            }
            for (var i = [], r = 0; r < this.vertices.length; r++) {
                var s = this.vertices[r];
                i.push(s.x, s.y, s.z)
            }
            var a = []
              , o = []
              , c = {}
              , l = []
              , p = {}
              , h = []
              , u = {};
            for (r = 0; r < this.faces.length; r++) {
                var f = this.faces[r]
                  , d = void 0 !== this.faceVertexUvs[0][r]
                  , m = f.normal.length() > 0
                  , g = f.vertexNormals.length > 0
                  , v = 1 !== f.color.r || 1 !== f.color.g || 1 !== f.color.b
                  , y = f.vertexColors.length > 0
                  , b = 0;
                if (b = _(b, 0, 0),
                b = _(b, 1, !0),
                b = _(b, 2, !1),
                b = _(b, 3, d),
                b = _(b, 4, m),
                b = _(b, 5, g),
                b = _(b, 6, v),
                b = _(b, 7, y),
                a.push(b),
                a.push(f.a, f.b, f.c),
                a.push(f.materialIndex),
                d) {
                    var w = this.faceVertexUvs[0][r];
                    a.push(E(w[0]), E(w[1]), E(w[2]))
                }
                if (m && a.push(S(f.normal)),
                g) {
                    var x = f.vertexNormals;
                    a.push(S(x[0]), S(x[1]), S(x[2]))
                }
                if (v && a.push(T(f.color)),
                y) {
                    var M = f.vertexColors;
                    a.push(T(M[0]), T(M[1]), T(M[2]))
                }
            }
            function _(t, e, n) {
                return n ? t | 1 << e : t & ~(1 << e)
            }
            function S(t) {
                var e = t.x.toString() + t.y.toString() + t.z.toString();
                return void 0 !== c[e] ? c[e] : (c[e] = o.length / 3,
                o.push(t.x, t.y, t.z),
                c[e])
            }
            function T(t) {
                var e = t.r.toString() + t.g.toString() + t.b.toString();
                return void 0 !== p[e] ? p[e] : (p[e] = l.length,
                l.push(t.getHex()),
                p[e])
            }
            function E(t) {
                var e = t.x.toString() + t.y.toString();
                return void 0 !== u[e] ? u[e] : (u[e] = h.length / 2,
                h.push(t.x, t.y),
                u[e])
            }
            return t.data = {},
            t.data.vertices = i,
            t.data.normals = o,
            l.length > 0 && (t.data.colors = l),
            h.length > 0 && (t.data.uvs = [h]),
            t.data.faces = a,
            t
        },
        clone: function() {
            return (new Xn).copy(this)
        },
        copy: function(t) {
            var e, n, i, r, s, a;
            this.vertices = [],
            this.colors = [],
            this.faces = [],
            this.faceVertexUvs = [[]],
            this.morphTargets = [],
            this.morphNormals = [],
            this.skinWeights = [],
            this.skinIndices = [],
            this.lineDistances = [],
            this.boundingBox = null,
            this.boundingSphere = null,
            this.name = t.name;
            var o = t.vertices;
            for (e = 0,
            n = o.length; e < n; e++)
                this.vertices.push(o[e].clone());
            var c = t.colors;
            for (e = 0,
            n = c.length; e < n; e++)
                this.colors.push(c[e].clone());
            var l = t.faces;
            for (e = 0,
            n = l.length; e < n; e++)
                this.faces.push(l[e].clone());
            for (e = 0,
            n = t.faceVertexUvs.length; e < n; e++) {
                var p = t.faceVertexUvs[e];
                for (void 0 === this.faceVertexUvs[e] && (this.faceVertexUvs[e] = []),
                i = 0,
                r = p.length; i < r; i++) {
                    var h = p[i]
                      , u = [];
                    for (s = 0,
                    a = h.length; s < a; s++) {
                        var f = h[s];
                        u.push(f.clone())
                    }
                    this.faceVertexUvs[e].push(u)
                }
            }
            var d = t.morphTargets;
            for (e = 0,
            n = d.length; e < n; e++) {
                var m = {};
                if (m.name = d[e].name,
                void 0 !== d[e].vertices)
                    for (m.vertices = [],
                    i = 0,
                    r = d[e].vertices.length; i < r; i++)
                        m.vertices.push(d[e].vertices[i].clone());
                if (void 0 !== d[e].normals)
                    for (m.normals = [],
                    i = 0,
                    r = d[e].normals.length; i < r; i++)
                        m.normals.push(d[e].normals[i].clone());
                this.morphTargets.push(m)
            }
            var g = t.morphNormals;
            for (e = 0,
            n = g.length; e < n; e++) {
                var v = {};
                if (void 0 !== g[e].vertexNormals)
                    for (v.vertexNormals = [],
                    i = 0,
                    r = g[e].vertexNormals.length; i < r; i++) {
                        var y = g[e].vertexNormals[i]
                          , b = {};
                        b.a = y.a.clone(),
                        b.b = y.b.clone(),
                        b.c = y.c.clone(),
                        v.vertexNormals.push(b)
                    }
                if (void 0 !== g[e].faceNormals)
                    for (v.faceNormals = [],
                    i = 0,
                    r = g[e].faceNormals.length; i < r; i++)
                        v.faceNormals.push(g[e].faceNormals[i].clone());
                this.morphNormals.push(v)
            }
            var w = t.skinWeights;
            for (e = 0,
            n = w.length; e < n; e++)
                this.skinWeights.push(w[e].clone());
            var x = t.skinIndices;
            for (e = 0,
            n = x.length; e < n; e++)
                this.skinIndices.push(x[e].clone());
            var M = t.lineDistances;
            for (e = 0,
            n = M.length; e < n; e++)
                this.lineDistances.push(M[e]);
            var _ = t.boundingBox;
            null !== _ && (this.boundingBox = _.clone());
            var S = t.boundingSphere;
            return null !== S && (this.boundingSphere = S.clone()),
            this.elementsNeedUpdate = t.elementsNeedUpdate,
            this.verticesNeedUpdate = t.verticesNeedUpdate,
            this.uvsNeedUpdate = t.uvsNeedUpdate,
            this.normalsNeedUpdate = t.normalsNeedUpdate,
            this.colorsNeedUpdate = t.colorsNeedUpdate,
            this.lineDistancesNeedUpdate = t.lineDistancesNeedUpdate,
            this.groupsNeedUpdate = t.groupsNeedUpdate,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
    Object.defineProperty(Zn.prototype, "needsUpdate", {
        set: function(t) {
            !0 === t && this.version++
        }
    }),
    Object.assign(Zn.prototype, {
        isBufferAttribute: !0,
        onUploadCallback: function() {},
        setArray: function(t) {
            if (Array.isArray(t))
                throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
            return this.count = void 0 !== t ? t.length / this.itemSize : 0,
            this.array = t,
            this
        },
        setDynamic: function(t) {
            return this.dynamic = t,
            this
        },
        copy: function(t) {
            return this.name = t.name,
            this.array = new t.array.constructor(t.array),
            this.itemSize = t.itemSize,
            this.count = t.count,
            this.normalized = t.normalized,
            this.dynamic = t.dynamic,
            this
        },
        copyAt: function(t, e, n) {
            t *= this.itemSize,
            n *= e.itemSize;
            for (var i = 0, r = this.itemSize; i < r; i++)
                this.array[t + i] = e.array[n + i];
            return this
        },
        copyArray: function(t) {
            return this.array.set(t),
            this
        },
        copyColorsArray: function(t) {
            for (var e = this.array, n = 0, i = 0, r = t.length; i < r; i++) {
                var s = t[i];
                void 0 === s && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", i),
                s = new Ln),
                e[n++] = s.r,
                e[n++] = s.g,
                e[n++] = s.b
            }
            return this
        },
        copyVector2sArray: function(t) {
            for (var e = this.array, n = 0, i = 0, r = t.length; i < r; i++) {
                var s = t[i];
                void 0 === s && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", i),
                s = new Ge),
                e[n++] = s.x,
                e[n++] = s.y
            }
            return this
        },
        copyVector3sArray: function(t) {
            for (var e = this.array, n = 0, i = 0, r = t.length; i < r; i++) {
                var s = t[i];
                void 0 === s && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", i),
                s = new We),
                e[n++] = s.x,
                e[n++] = s.y,
                e[n++] = s.z
            }
            return this
        },
        copyVector4sArray: function(t) {
            for (var e = this.array, n = 0, i = 0, r = t.length; i < r; i++) {
                var s = t[i];
                void 0 === s && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", i),
                s = new hn),
                e[n++] = s.x,
                e[n++] = s.y,
                e[n++] = s.z,
                e[n++] = s.w
            }
            return this
        },
        set: function(t, e) {
            return void 0 === e && (e = 0),
            this.array.set(t, e),
            this
        },
        getX: function(t) {
            return this.array[t * this.itemSize]
        },
        setX: function(t, e) {
            return this.array[t * this.itemSize] = e,
            this
        },
        getY: function(t) {
            return this.array[t * this.itemSize + 1]
        },
        setY: function(t, e) {
            return this.array[t * this.itemSize + 1] = e,
            this
        },
        getZ: function(t) {
            return this.array[t * this.itemSize + 2]
        },
        setZ: function(t, e) {
            return this.array[t * this.itemSize + 2] = e,
            this
        },
        getW: function(t) {
            return this.array[t * this.itemSize + 3]
        },
        setW: function(t, e) {
            return this.array[t * this.itemSize + 3] = e,
            this
        },
        setXY: function(t, e, n) {
            return t *= this.itemSize,
            this.array[t + 0] = e,
            this.array[t + 1] = n,
            this
        },
        setXYZ: function(t, e, n, i) {
            return t *= this.itemSize,
            this.array[t + 0] = e,
            this.array[t + 1] = n,
            this.array[t + 2] = i,
            this
        },
        setXYZW: function(t, e, n, i, r) {
            return t *= this.itemSize,
            this.array[t + 0] = e,
            this.array[t + 1] = n,
            this.array[t + 2] = i,
            this.array[t + 3] = r,
            this
        },
        onUpload: function(t) {
            return this.onUploadCallback = t,
            this
        },
        clone: function() {
            return new this.constructor(this.array,this.itemSize).copy(this)
        },
        toJSON: function() {
            return {
                itemSize: this.itemSize,
                type: this.array.constructor.name,
                array: Array.prototype.slice.call(this.array),
                normalized: this.normalized
            }
        }
    }),
    Kn.prototype = Object.create(Zn.prototype),
    Kn.prototype.constructor = Kn,
    Jn.prototype = Object.create(Zn.prototype),
    Jn.prototype.constructor = Jn,
    $n.prototype = Object.create(Zn.prototype),
    $n.prototype.constructor = $n,
    Qn.prototype = Object.create(Zn.prototype),
    Qn.prototype.constructor = Qn,
    ti.prototype = Object.create(Zn.prototype),
    ti.prototype.constructor = ti,
    ei.prototype = Object.create(Zn.prototype),
    ei.prototype.constructor = ei,
    ni.prototype = Object.create(Zn.prototype),
    ni.prototype.constructor = ni,
    ii.prototype = Object.create(Zn.prototype),
    ii.prototype.constructor = ii,
    ri.prototype = Object.create(Zn.prototype),
    ri.prototype.constructor = ri,
    Object.assign(si.prototype, {
        computeGroups: function(t) {
            for (var e, n = [], i = void 0, r = t.faces, s = 0; s < r.length; s++) {
                var a = r[s];
                a.materialIndex !== i && (i = a.materialIndex,
                void 0 !== e && (e.count = 3 * s - e.start,
                n.push(e)),
                e = {
                    start: 3 * s,
                    materialIndex: i
                })
            }
            void 0 !== e && (e.count = 3 * s - e.start,
            n.push(e)),
            this.groups = n
        },
        fromGeometry: function(t) {
            var e, n = t.faces, i = t.vertices, r = t.faceVertexUvs, s = r[0] && r[0].length > 0, a = r[1] && r[1].length > 0, o = t.morphTargets, c = o.length;
            if (c > 0) {
                e = [];
                for (var l = 0; l < c; l++)
                    e[l] = {
                        name: o[l].name,
                        data: []
                    };
                this.morphTargets.position = e
            }
            var p, h = t.morphNormals, u = h.length;
            if (u > 0) {
                p = [];
                for (l = 0; l < u; l++)
                    p[l] = {
                        name: h[l].name,
                        data: []
                    };
                this.morphTargets.normal = p
            }
            var f = t.skinIndices
              , d = t.skinWeights
              , m = f.length === i.length
              , g = d.length === i.length;
            i.length > 0 && 0 === n.length && console.error("THREE.DirectGeometry: Faceless geometries are not supported.");
            for (l = 0; l < n.length; l++) {
                var v = n[l];
                this.vertices.push(i[v.a], i[v.b], i[v.c]);
                var y = v.vertexNormals;
                if (3 === y.length)
                    this.normals.push(y[0], y[1], y[2]);
                else {
                    var b = v.normal;
                    this.normals.push(b, b, b)
                }
                var w, x = v.vertexColors;
                if (3 === x.length)
                    this.colors.push(x[0], x[1], x[2]);
                else {
                    var M = v.color;
                    this.colors.push(M, M, M)
                }
                if (!0 === s)
                    void 0 !== (w = r[0][l]) ? this.uvs.push(w[0], w[1], w[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", l),
                    this.uvs.push(new Ge, new Ge, new Ge));
                if (!0 === a)
                    void 0 !== (w = r[1][l]) ? this.uvs2.push(w[0], w[1], w[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", l),
                    this.uvs2.push(new Ge, new Ge, new Ge));
                for (var _ = 0; _ < c; _++) {
                    var S = o[_].vertices;
                    e[_].data.push(S[v.a], S[v.b], S[v.c])
                }
                for (_ = 0; _ < u; _++) {
                    var T = h[_].vertexNormals[l];
                    p[_].data.push(T.a, T.b, T.c)
                }
                m && this.skinIndices.push(f[v.a], f[v.b], f[v.c]),
                g && this.skinWeights.push(d[v.a], d[v.b], d[v.c])
            }
            return this.computeGroups(t),
            this.verticesNeedUpdate = t.verticesNeedUpdate,
            this.normalsNeedUpdate = t.normalsNeedUpdate,
            this.colorsNeedUpdate = t.colorsNeedUpdate,
            this.uvsNeedUpdate = t.uvsNeedUpdate,
            this.groupsNeedUpdate = t.groupsNeedUpdate,
            this
        }
    });
    var oi = 1;
    function ci() {
        Object.defineProperty(this, "id", {
            value: oi += 2
        }),
        this.uuid = He.generateUUID(),
        this.name = "",
        this.type = "BufferGeometry",
        this.index = null,
        this.attributes = {},
        this.morphAttributes = {},
        this.groups = [],
        this.boundingBox = null,
        this.boundingSphere = null,
        this.drawRange = {
            start: 0,
            count: 1 / 0
        },
        this.userData = {}
    }
    function li(t, e, n, i, r, s) {
        Xn.call(this),
        this.type = "BoxGeometry",
        this.parameters = {
            width: t,
            height: e,
            depth: n,
            widthSegments: i,
            heightSegments: r,
            depthSegments: s
        },
        this.fromBufferGeometry(new pi(t,e,n,i,r,s)),
        this.mergeVertices()
    }
    function pi(t, e, n, i, r, s) {
        ci.call(this),
        this.type = "BoxBufferGeometry",
        this.parameters = {
            width: t,
            height: e,
            depth: n,
            widthSegments: i,
            heightSegments: r,
            depthSegments: s
        };
        var a = this;
        t = t || 1,
        e = e || 1,
        n = n || 1,
        i = Math.floor(i) || 1,
        r = Math.floor(r) || 1,
        s = Math.floor(s) || 1;
        var o = []
          , c = []
          , l = []
          , p = []
          , h = 0
          , u = 0;
        function f(t, e, n, i, r, s, f, d, m, g, v) {
            var y, b, w = s / m, x = f / g, M = s / 2, _ = f / 2, S = d / 2, T = m + 1, E = g + 1, k = 0, A = 0, L = new We;
            for (b = 0; b < E; b++) {
                var P = b * x - _;
                for (y = 0; y < T; y++) {
                    var C = y * w - M;
                    L[t] = C * i,
                    L[e] = P * r,
                    L[n] = S,
                    c.push(L.x, L.y, L.z),
                    L[t] = 0,
                    L[e] = 0,
                    L[n] = d > 0 ? 1 : -1,
                    l.push(L.x, L.y, L.z),
                    p.push(y / m),
                    p.push(1 - b / g),
                    k += 1
                }
            }
            for (b = 0; b < g; b++)
                for (y = 0; y < m; y++) {
                    var R = h + y + T * b
                      , I = h + y + T * (b + 1)
                      , O = h + (y + 1) + T * (b + 1)
                      , D = h + (y + 1) + T * b;
                    o.push(R, I, D),
                    o.push(I, O, D),
                    A += 6
                }
            a.addGroup(u, A, v),
            u += A,
            h += k
        }
        f("z", "y", "x", -1, -1, n, e, t, s, r, 0),
        f("z", "y", "x", 1, -1, n, e, -t, s, r, 1),
        f("x", "z", "y", 1, 1, t, n, e, i, s, 2),
        f("x", "z", "y", 1, -1, t, n, -e, i, s, 3),
        f("x", "y", "z", 1, -1, t, e, n, i, r, 4),
        f("x", "y", "z", -1, -1, t, e, -n, i, r, 5),
        this.setIndex(o),
        this.addAttribute("position", new ii(c,3)),
        this.addAttribute("normal", new ii(l,3)),
        this.addAttribute("uv", new ii(p,2))
    }
    function hi(t, e, n, i) {
        Xn.call(this),
        this.type = "PlaneGeometry",
        this.parameters = {
            width: t,
            height: e,
            widthSegments: n,
            heightSegments: i
        },
        this.fromBufferGeometry(new ui(t,e,n,i)),
        this.mergeVertices()
    }
    function ui(t, e, n, i) {
        ci.call(this),
        this.type = "PlaneBufferGeometry",
        this.parameters = {
            width: t,
            height: e,
            widthSegments: n,
            heightSegments: i
        };
        var r, s, a = (t = t || 1) / 2, o = (e = e || 1) / 2, c = Math.floor(n) || 1, l = Math.floor(i) || 1, p = c + 1, h = l + 1, u = t / c, f = e / l, d = [], m = [], g = [], v = [];
        for (s = 0; s < h; s++) {
            var y = s * f - o;
            for (r = 0; r < p; r++) {
                var b = r * u - a;
                m.push(b, -y, 0),
                g.push(0, 0, 1),
                v.push(r / c),
                v.push(1 - s / l)
            }
        }
        for (s = 0; s < l; s++)
            for (r = 0; r < c; r++) {
                var w = r + p * s
                  , x = r + p * (s + 1)
                  , M = r + 1 + p * (s + 1)
                  , _ = r + 1 + p * s;
                d.push(w, x, _),
                d.push(x, M, _)
            }
        this.setIndex(d),
        this.addAttribute("position", new ii(m,3)),
        this.addAttribute("normal", new ii(g,3)),
        this.addAttribute("uv", new ii(v,2))
    }
    ci.prototype = Object.assign(Object.create(i.prototype), {
        constructor: ci,
        isBufferGeometry: !0,
        getIndex: function() {
            return this.index
        },
        setIndex: function(t) {
            Array.isArray(t) ? this.index = new (ai(t) > 65535 ? ni : ti)(t,1) : this.index = t
        },
        addAttribute: function(t, e) {
            return e && e.isBufferAttribute || e && e.isInterleavedBufferAttribute ? "index" === t ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),
            this.setIndex(e),
            this) : (this.attributes[t] = e,
            this) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),
            this.addAttribute(t, new Zn(arguments[1],arguments[2])))
        },
        getAttribute: function(t) {
            return this.attributes[t]
        },
        removeAttribute: function(t) {
            return delete this.attributes[t],
            this
        },
        addGroup: function(t, e, n) {
            this.groups.push({
                start: t,
                count: e,
                materialIndex: void 0 !== n ? n : 0
            })
        },
        clearGroups: function() {
            this.groups = []
        },
        setDrawRange: function(t, e) {
            this.drawRange.start = t,
            this.drawRange.count = e
        },
        applyMatrix: function(t) {
            var e = this.attributes.position;
            void 0 !== e && (t.applyToBufferAttribute(e),
            e.needsUpdate = !0);
            var n = this.attributes.normal;
            void 0 !== n && ((new Ye).getNormalMatrix(t).applyToBufferAttribute(n),
            n.needsUpdate = !0);
            var i = this.attributes.tangent;
            void 0 !== i && ((new Ye).getNormalMatrix(t).applyToBufferAttribute(i),
            i.needsUpdate = !0);
            return null !== this.boundingBox && this.computeBoundingBox(),
            null !== this.boundingSphere && this.computeBoundingSphere(),
            this
        },
        rotateX: function() {
            var t = new wn;
            return function(e) {
                return t.makeRotationX(e),
                this.applyMatrix(t),
                this
            }
        }(),
        rotateY: function() {
            var t = new wn;
            return function(e) {
                return t.makeRotationY(e),
                this.applyMatrix(t),
                this
            }
        }(),
        rotateZ: function() {
            var t = new wn;
            return function(e) {
                return t.makeRotationZ(e),
                this.applyMatrix(t),
                this
            }
        }(),
        translate: function() {
            var t = new wn;
            return function(e, n, i) {
                return t.makeTranslation(e, n, i),
                this.applyMatrix(t),
                this
            }
        }(),
        scale: function() {
            var t = new wn;
            return function(e, n, i) {
                return t.makeScale(e, n, i),
                this.applyMatrix(t),
                this
            }
        }(),
        lookAt: function() {
            var t = new Vn;
            return function(e) {
                t.lookAt(e),
                t.updateMatrix(),
                this.applyMatrix(t.matrix)
            }
        }(),
        center: function() {
            var t = new We;
            return function() {
                return this.computeBoundingBox(),
                this.boundingBox.getCenter(t).negate(),
                this.translate(t.x, t.y, t.z),
                this
            }
        }(),
        setFromObject: function(t) {
            var e = t.geometry;
            if (t.isPoints || t.isLine) {
                var n = new ii(3 * e.vertices.length,3)
                  , i = new ii(3 * e.colors.length,3);
                if (this.addAttribute("position", n.copyVector3sArray(e.vertices)),
                this.addAttribute("color", i.copyColorsArray(e.colors)),
                e.lineDistances && e.lineDistances.length === e.vertices.length) {
                    var r = new ii(e.lineDistances.length,1);
                    this.addAttribute("lineDistance", r.copyArray(e.lineDistances))
                }
                null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
                null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone())
            } else
                t.isMesh && e && e.isGeometry && this.fromGeometry(e);
            return this
        },
        setFromPoints: function(t) {
            for (var e = [], n = 0, i = t.length; n < i; n++) {
                var r = t[n];
                e.push(r.x, r.y, r.z || 0)
            }
            return this.addAttribute("position", new ii(e,3)),
            this
        },
        updateFromObject: function(t) {
            var e, n = t.geometry;
            if (t.isMesh) {
                var i = n.__directGeometry;
                if (!0 === n.elementsNeedUpdate && (i = void 0,
                n.elementsNeedUpdate = !1),
                void 0 === i)
                    return this.fromGeometry(n);
                i.verticesNeedUpdate = n.verticesNeedUpdate,
                i.normalsNeedUpdate = n.normalsNeedUpdate,
                i.colorsNeedUpdate = n.colorsNeedUpdate,
                i.uvsNeedUpdate = n.uvsNeedUpdate,
                i.groupsNeedUpdate = n.groupsNeedUpdate,
                n.verticesNeedUpdate = !1,
                n.normalsNeedUpdate = !1,
                n.colorsNeedUpdate = !1,
                n.uvsNeedUpdate = !1,
                n.groupsNeedUpdate = !1,
                n = i
            }
            return !0 === n.verticesNeedUpdate && (void 0 !== (e = this.attributes.position) && (e.copyVector3sArray(n.vertices),
            e.needsUpdate = !0),
            n.verticesNeedUpdate = !1),
            !0 === n.normalsNeedUpdate && (void 0 !== (e = this.attributes.normal) && (e.copyVector3sArray(n.normals),
            e.needsUpdate = !0),
            n.normalsNeedUpdate = !1),
            !0 === n.colorsNeedUpdate && (void 0 !== (e = this.attributes.color) && (e.copyColorsArray(n.colors),
            e.needsUpdate = !0),
            n.colorsNeedUpdate = !1),
            n.uvsNeedUpdate && (void 0 !== (e = this.attributes.uv) && (e.copyVector2sArray(n.uvs),
            e.needsUpdate = !0),
            n.uvsNeedUpdate = !1),
            n.lineDistancesNeedUpdate && (void 0 !== (e = this.attributes.lineDistance) && (e.copyArray(n.lineDistances),
            e.needsUpdate = !0),
            n.lineDistancesNeedUpdate = !1),
            n.groupsNeedUpdate && (n.computeGroups(t.geometry),
            this.groups = n.groups,
            n.groupsNeedUpdate = !1),
            this
        },
        fromGeometry: function(t) {
            return t.__directGeometry = (new si).fromGeometry(t),
            this.fromDirectGeometry(t.__directGeometry)
        },
        fromDirectGeometry: function(t) {
            var e = new Float32Array(3 * t.vertices.length);
            if (this.addAttribute("position", new Zn(e,3).copyVector3sArray(t.vertices)),
            t.normals.length > 0) {
                var n = new Float32Array(3 * t.normals.length);
                this.addAttribute("normal", new Zn(n,3).copyVector3sArray(t.normals))
            }
            if (t.colors.length > 0) {
                var i = new Float32Array(3 * t.colors.length);
                this.addAttribute("color", new Zn(i,3).copyColorsArray(t.colors))
            }
            if (t.uvs.length > 0) {
                var r = new Float32Array(2 * t.uvs.length);
                this.addAttribute("uv", new Zn(r,2).copyVector2sArray(t.uvs))
            }
            if (t.uvs2.length > 0) {
                var s = new Float32Array(2 * t.uvs2.length);
                this.addAttribute("uv2", new Zn(s,2).copyVector2sArray(t.uvs2))
            }
            for (var a in this.groups = t.groups,
            t.morphTargets) {
                for (var o = [], c = t.morphTargets[a], l = 0, p = c.length; l < p; l++) {
                    var h = c[l]
                      , u = new ii(3 * h.data.length,3);
                    u.name = h.name,
                    o.push(u.copyVector3sArray(h.data))
                }
                this.morphAttributes[a] = o
            }
            if (t.skinIndices.length > 0) {
                var f = new ii(4 * t.skinIndices.length,4);
                this.addAttribute("skinIndex", f.copyVector4sArray(t.skinIndices))
            }
            if (t.skinWeights.length > 0) {
                var d = new ii(4 * t.skinWeights.length,4);
                this.addAttribute("skinWeight", d.copyVector4sArray(t.skinWeights))
            }
            return null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
            null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
            this
        },
        computeBoundingBox: function() {
            var t = new gn;
            return function() {
                null === this.boundingBox && (this.boundingBox = new gn);
                var e = this.attributes.position
                  , n = this.morphAttributes.position;
                if (void 0 !== e) {
                    if (this.boundingBox.setFromBufferAttribute(e),
                    n)
                        for (var i = 0, r = n.length; i < r; i++) {
                            var s = n[i];
                            t.setFromBufferAttribute(s),
                            this.boundingBox.expandByPoint(t.min),
                            this.boundingBox.expandByPoint(t.max)
                        }
                } else
                    this.boundingBox.makeEmpty();
                (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
            }
        }(),
        computeBoundingSphere: function() {
            var t = new gn
              , e = new gn
              , n = new We;
            return function() {
                null === this.boundingSphere && (this.boundingSphere = new vn);
                var i = this.attributes.position
                  , r = this.morphAttributes.position;
                if (i) {
                    var s = this.boundingSphere.center;
                    if (t.setFromBufferAttribute(i),
                    r)
                        for (var a = 0, o = r.length; a < o; a++) {
                            var c = r[a];
                            e.setFromBufferAttribute(c),
                            t.expandByPoint(e.min),
                            t.expandByPoint(e.max)
                        }
                    t.getCenter(s);
                    var l = 0;
                    for (a = 0,
                    o = i.count; a < o; a++)
                        n.fromBufferAttribute(i, a),
                        l = Math.max(l, s.distanceToSquared(n));
                    if (r)
                        for (a = 0,
                        o = r.length; a < o; a++)
                            for (var p = 0, h = (c = r[a]).count; p < h; p++)
                                n.fromBufferAttribute(c, p),
                                l = Math.max(l, s.distanceToSquared(n));
                    this.boundingSphere.radius = Math.sqrt(l),
                    isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
                }
            }
        }(),
        computeFaceNormals: function() {},
        computeVertexNormals: function() {
            var t = this.index
              , e = this.attributes;
            if (e.position) {
                var n = e.position.array;
                if (void 0 === e.normal)
                    this.addAttribute("normal", new Zn(new Float32Array(n.length),3));
                else
                    for (var i = e.normal.array, r = 0, s = i.length; r < s; r++)
                        i[r] = 0;
                var a, o, c, l = e.normal.array, p = new We, h = new We, u = new We, f = new We, d = new We;
                if (t) {
                    var m = t.array;
                    for (r = 0,
                    s = t.count; r < s; r += 3)
                        a = 3 * m[r + 0],
                        o = 3 * m[r + 1],
                        c = 3 * m[r + 2],
                        p.fromArray(n, a),
                        h.fromArray(n, o),
                        u.fromArray(n, c),
                        f.subVectors(u, h),
                        d.subVectors(p, h),
                        f.cross(d),
                        l[a] += f.x,
                        l[a + 1] += f.y,
                        l[a + 2] += f.z,
                        l[o] += f.x,
                        l[o + 1] += f.y,
                        l[o + 2] += f.z,
                        l[c] += f.x,
                        l[c + 1] += f.y,
                        l[c + 2] += f.z
                } else
                    for (r = 0,
                    s = n.length; r < s; r += 9)
                        p.fromArray(n, r),
                        h.fromArray(n, r + 3),
                        u.fromArray(n, r + 6),
                        f.subVectors(u, h),
                        d.subVectors(p, h),
                        f.cross(d),
                        l[r] = f.x,
                        l[r + 1] = f.y,
                        l[r + 2] = f.z,
                        l[r + 3] = f.x,
                        l[r + 4] = f.y,
                        l[r + 5] = f.z,
                        l[r + 6] = f.x,
                        l[r + 7] = f.y,
                        l[r + 8] = f.z;
                this.normalizeNormals(),
                e.normal.needsUpdate = !0
            }
        },
        merge: function(t, e) {
            if (t && t.isBufferGeometry) {
                void 0 === e && (e = 0,
                console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
                var n = this.attributes;
                for (var i in n)
                    if (void 0 !== t.attributes[i])
                        for (var r = n[i].array, s = t.attributes[i], a = s.array, o = s.itemSize * e, c = Math.min(a.length, r.length - o), l = 0, p = o; l < c; l++,
                        p++)
                            r[p] = a[l];
                return this
            }
            console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", t)
        },
        normalizeNormals: function() {
            var t = new We;
            return function() {
                for (var e = this.attributes.normal, n = 0, i = e.count; n < i; n++)
                    t.x = e.getX(n),
                    t.y = e.getY(n),
                    t.z = e.getZ(n),
                    t.normalize(),
                    e.setXYZ(n, t.x, t.y, t.z)
            }
        }(),
        toNonIndexed: function() {
            function t(t, e) {
                for (var n = t.array, i = t.itemSize, r = new n.constructor(e.length * i), s = 0, a = 0, o = 0, c = e.length; o < c; o++) {
                    s = e[o] * i;
                    for (var l = 0; l < i; l++)
                        r[a++] = n[s++]
                }
                return new Zn(r,i)
            }
            if (null === this.index)
                return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),
                this;
            var e = new ci
              , n = this.index.array
              , i = this.attributes;
            for (var r in i) {
                var s = t(i[r], n);
                e.addAttribute(r, s)
            }
            var a = this.morphAttributes;
            for (r in a) {
                for (var o = [], c = a[r], l = 0, p = c.length; l < p; l++) {
                    s = t(c[l], n);
                    o.push(s)
                }
                e.morphAttributes[r] = o
            }
            for (var h = this.groups, u = (l = 0,
            h.length); l < u; l++) {
                var f = h[l];
                e.addGroup(f.start, f.count, f.materialIndex)
            }
            return e
        },
        toJSON: function() {
            var t = {
                metadata: {
                    version: 4.5,
                    type: "BufferGeometry",
                    generator: "BufferGeometry.toJSON"
                }
            };
            if (t.uuid = this.uuid,
            t.type = this.type,
            "" !== this.name && (t.name = this.name),
            Object.keys(this.userData).length > 0 && (t.userData = this.userData),
            void 0 !== this.parameters) {
                var e = this.parameters;
                for (var n in e)
                    void 0 !== e[n] && (t[n] = e[n]);
                return t
            }
            t.data = {
                attributes: {}
            };
            var i = this.index;
            null !== i && (t.data.index = {
                type: i.array.constructor.name,
                array: Array.prototype.slice.call(i.array)
            });
            var r = this.attributes;
            for (var n in r) {
                var s = (u = r[n]).toJSON();
                "" !== u.name && (s.name = u.name),
                t.data.attributes[n] = s
            }
            var a = {}
              , o = !1;
            for (var n in this.morphAttributes) {
                for (var c = this.morphAttributes[n], l = [], p = 0, h = c.length; p < h; p++) {
                    var u;
                    s = (u = c[p]).toJSON();
                    "" !== u.name && (s.name = u.name),
                    l.push(s)
                }
                l.length > 0 && (a[n] = l,
                o = !0)
            }
            o && (t.data.morphAttributes = a);
            var f = this.groups;
            f.length > 0 && (t.data.groups = JSON.parse(JSON.stringify(f)));
            var d = this.boundingSphere;
            return null !== d && (t.data.boundingSphere = {
                center: d.center.toArray(),
                radius: d.radius
            }),
            t
        },
        clone: function() {
            return (new ci).copy(this)
        },
        copy: function(t) {
            var e, n, i;
            this.index = null,
            this.attributes = {},
            this.morphAttributes = {},
            this.groups = [],
            this.boundingBox = null,
            this.boundingSphere = null,
            this.name = t.name;
            var r = t.index;
            null !== r && this.setIndex(r.clone());
            var s = t.attributes;
            for (e in s) {
                var a = s[e];
                this.addAttribute(e, a.clone())
            }
            var o = t.morphAttributes;
            for (e in o) {
                var c = []
                  , l = o[e];
                for (n = 0,
                i = l.length; n < i; n++)
                    c.push(l[n].clone());
                this.morphAttributes[e] = c
            }
            var p = t.groups;
            for (n = 0,
            i = p.length; n < i; n++) {
                var h = p[n];
                this.addGroup(h.start, h.count, h.materialIndex)
            }
            var u = t.boundingBox;
            null !== u && (this.boundingBox = u.clone());
            var f = t.boundingSphere;
            return null !== f && (this.boundingSphere = f.clone()),
            this.drawRange.start = t.drawRange.start,
            this.drawRange.count = t.drawRange.count,
            this.userData = t.userData,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
    li.prototype = Object.create(Xn.prototype),
    li.prototype.constructor = li,
    pi.prototype = Object.create(ci.prototype),
    pi.prototype.constructor = pi,
    hi.prototype = Object.create(Xn.prototype),
    hi.prototype.constructor = hi,
    ui.prototype = Object.create(ci.prototype),
    ui.prototype.constructor = ui;
    var fi = 0;
    function di() {
        Object.defineProperty(this, "id", {
            value: fi++
        }),
        this.uuid = He.generateUUID(),
        this.name = "",
        this.type = "Material",
        this.fog = !0,
        this.lights = !0,
        this.blending = k,
        this.side = y,
        this.flatShading = !1,
        this.vertexTangents = !1,
        this.vertexColors = _,
        this.opacity = 1,
        this.transparent = !1,
        this.blendSrc = F,
        this.blendDst = H,
        this.blendEquation = R,
        this.blendSrcAlpha = null,
        this.blendDstAlpha = null,
        this.blendEquationAlpha = null,
        this.depthFunc = J,
        this.depthTest = !0,
        this.depthWrite = !0,
        this.clippingPlanes = null,
        this.clipIntersection = !1,
        this.clipShadows = !1,
        this.shadowSide = null,
        this.colorWrite = !0,
        this.precision = null,
        this.polygonOffset = !1,
        this.polygonOffsetFactor = 0,
        this.polygonOffsetUnits = 0,
        this.dithering = !1,
        this.alphaTest = 0,
        this.premultipliedAlpha = !1,
        this.visible = !0,
        this.userData = {},
        this.needsUpdate = !0
    }
    di.prototype = Object.assign(Object.create(i.prototype), {
        constructor: di,
        isMaterial: !0,
        onBeforeCompile: function() {},
        setValues: function(t) {
            if (void 0 !== t)
                for (var e in t) {
                    var n = t[e];
                    if (void 0 !== n)
                        if ("shading" !== e) {
                            var i = this[e];
                            void 0 !== i ? i && i.isColor ? i.set(n) : i && i.isVector3 && n && n.isVector3 ? i.copy(n) : this[e] = n : console.warn("THREE." + this.type + ": '" + e + "' is not a property of this material.")
                        } else
                            console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."),
                            this.flatShading = n === x;
                    else
                        console.warn("THREE.Material: '" + e + "' parameter is undefined.")
                }
        },
        toJSON: function(t) {
            var e = void 0 === t || "string" == typeof t;
            e && (t = {
                textures: {},
                images: {}
            });
            var n = {
                metadata: {
                    version: 4.5,
                    type: "Material",
                    generator: "Material.toJSON"
                }
            };
            function i(t) {
                var e = [];
                for (var n in t) {
                    var i = t[n];
                    delete i.metadata,
                    e.push(i)
                }
                return e
            }
            if (n.uuid = this.uuid,
            n.type = this.type,
            "" !== this.name && (n.name = this.name),
            this.color && this.color.isColor && (n.color = this.color.getHex()),
            void 0 !== this.roughness && (n.roughness = this.roughness),
            void 0 !== this.metalness && (n.metalness = this.metalness),
            this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()),
            1 !== this.emissiveIntensity && (n.emissiveIntensity = this.emissiveIntensity),
            this.specular && this.specular.isColor && (n.specular = this.specular.getHex()),
            void 0 !== this.shininess && (n.shininess = this.shininess),
            void 0 !== this.clearCoat && (n.clearCoat = this.clearCoat),
            void 0 !== this.clearCoatRoughness && (n.clearCoatRoughness = this.clearCoatRoughness),
            this.map && this.map.isTexture && (n.map = this.map.toJSON(t).uuid),
            this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(t).uuid),
            this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(t).uuid),
            this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(t).uuid),
            this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(t).uuid,
            n.aoMapIntensity = this.aoMapIntensity),
            this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(t).uuid,
            n.bumpScale = this.bumpScale),
            this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(t).uuid,
            n.normalMapType = this.normalMapType,
            n.normalScale = this.normalScale.toArray()),
            this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(t).uuid,
            n.displacementScale = this.displacementScale,
            n.displacementBias = this.displacementBias),
            this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(t).uuid),
            this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(t).uuid),
            this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(t).uuid),
            this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(t).uuid),
            this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(t).uuid,
            n.reflectivity = this.reflectivity,
            void 0 !== this.combine && (n.combine = this.combine),
            void 0 !== this.envMapIntensity && (n.envMapIntensity = this.envMapIntensity)),
            this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(t).uuid),
            void 0 !== this.size && (n.size = this.size),
            void 0 !== this.sizeAttenuation && (n.sizeAttenuation = this.sizeAttenuation),
            this.blending !== k && (n.blending = this.blending),
            !0 === this.flatShading && (n.flatShading = this.flatShading),
            this.side !== y && (n.side = this.side),
            this.vertexColors !== _ && (n.vertexColors = this.vertexColors),
            this.opacity < 1 && (n.opacity = this.opacity),
            !0 === this.transparent && (n.transparent = this.transparent),
            n.depthFunc = this.depthFunc,
            n.depthTest = this.depthTest,
            n.depthWrite = this.depthWrite,
            0 !== this.rotation && (n.rotation = this.rotation),
            !0 === this.polygonOffset && (n.polygonOffset = !0),
            0 !== this.polygonOffsetFactor && (n.polygonOffsetFactor = this.polygonOffsetFactor),
            0 !== this.polygonOffsetUnits && (n.polygonOffsetUnits = this.polygonOffsetUnits),
            1 !== this.linewidth && (n.linewidth = this.linewidth),
            void 0 !== this.dashSize && (n.dashSize = this.dashSize),
            void 0 !== this.gapSize && (n.gapSize = this.gapSize),
            void 0 !== this.scale && (n.scale = this.scale),
            !0 === this.dithering && (n.dithering = !0),
            this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
            !0 === this.premultipliedAlpha && (n.premultipliedAlpha = this.premultipliedAlpha),
            !0 === this.wireframe && (n.wireframe = this.wireframe),
            this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth),
            "round" !== this.wireframeLinecap && (n.wireframeLinecap = this.wireframeLinecap),
            "round" !== this.wireframeLinejoin && (n.wireframeLinejoin = this.wireframeLinejoin),
            !0 === this.morphTargets && (n.morphTargets = !0),
            !0 === this.skinning && (n.skinning = !0),
            !1 === this.visible && (n.visible = !1),
            "{}" !== JSON.stringify(this.userData) && (n.userData = this.userData),
            e) {
                var r = i(t.textures)
                  , s = i(t.images);
                r.length > 0 && (n.textures = r),
                s.length > 0 && (n.images = s)
            }
            return n
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            this.name = t.name,
            this.fog = t.fog,
            this.lights = t.lights,
            this.blending = t.blending,
            this.side = t.side,
            this.flatShading = t.flatShading,
            this.vertexColors = t.vertexColors,
            this.opacity = t.opacity,
            this.transparent = t.transparent,
            this.blendSrc = t.blendSrc,
            this.blendDst = t.blendDst,
            this.blendEquation = t.blendEquation,
            this.blendSrcAlpha = t.blendSrcAlpha,
            this.blendDstAlpha = t.blendDstAlpha,
            this.blendEquationAlpha = t.blendEquationAlpha,
            this.depthFunc = t.depthFunc,
            this.depthTest = t.depthTest,
            this.depthWrite = t.depthWrite,
            this.colorWrite = t.colorWrite,
            this.precision = t.precision,
            this.polygonOffset = t.polygonOffset,
            this.polygonOffsetFactor = t.polygonOffsetFactor,
            this.polygonOffsetUnits = t.polygonOffsetUnits,
            this.dithering = t.dithering,
            this.alphaTest = t.alphaTest,
            this.premultipliedAlpha = t.premultipliedAlpha,
            this.visible = t.visible,
            this.userData = JSON.parse(JSON.stringify(t.userData)),
            this.clipShadows = t.clipShadows,
            this.clipIntersection = t.clipIntersection;
            var e = t.clippingPlanes
              , n = null;
            if (null !== e) {
                var i = e.length;
                n = new Array(i);
                for (var r = 0; r !== i; ++r)
                    n[r] = e[r].clone()
            }
            return this.clippingPlanes = n,
            this.shadowSide = t.shadowSide,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    });
    var mi, gi, vi, yi, bi, wi, xi, Mi, _i, Si, Ti, Ei, ki = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}", Ai = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";
    function Li(t) {
        di.call(this),
        this.type = "ShaderMaterial",
        this.defines = {},
        this.uniforms = {},
        this.vertexShader = ki,
        this.fragmentShader = Ai,
        this.linewidth = 1,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.fog = !1,
        this.lights = !1,
        this.clipping = !1,
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.extensions = {
            derivatives: !1,
            fragDepth: !1,
            drawBuffers: !1,
            shaderTextureLOD: !1
        },
        this.defaultAttributeValues = {
            color: [1, 1, 1],
            uv: [0, 0],
            uv2: [0, 0]
        },
        this.index0AttributeName = void 0,
        this.uniformsNeedUpdate = !1,
        void 0 !== t && (void 0 !== t.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),
        this.setValues(t))
    }
    function Pi(t, e) {
        this.origin = void 0 !== t ? t : new We,
        this.direction = void 0 !== e ? e : new We
    }
    function Ci(t, e, n) {
        this.a = void 0 !== t ? t : new We,
        this.b = void 0 !== e ? e : new We,
        this.c = void 0 !== n ? n : new We
    }
    function Ri(t) {
        di.call(this),
        this.type = "MeshBasicMaterial",
        this.color = new Ln(16777215),
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.specularMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.combine = nt,
        this.reflectivity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.lights = !1,
        this.setValues(t)
    }
    function Ii(t, e) {
        Vn.call(this),
        this.type = "Mesh",
        this.geometry = void 0 !== t ? t : new ci,
        this.material = void 0 !== e ? e : new Ri({
            color: 16777215 * Math.random()
        }),
        this.drawMode = ke,
        this.updateMorphTargets()
    }
    function Oi(t, e, n, i) {
        var r, s, a = new Ln(0), o = 0, c = null, l = 0;
        function p(t, n) {
            e.buffers.color.setClear(t.r, t.g, t.b, n, i)
        }
        return {
            getClearColor: function() {
                return a
            },
            setClearColor: function(t, e) {
                a.set(t),
                p(a, o = void 0 !== e ? e : 1)
            },
            getClearAlpha: function() {
                return o
            },
            setClearAlpha: function(t) {
                p(a, o = t)
            },
            render: function(e, i, h, u) {
                var f = i.background
                  , d = t.vr
                  , m = d.getSession && d.getSession();
                if (m && "additive" === m.environmentBlendMode && (f = null),
                null === f ? (p(a, o),
                c = null,
                l = 0) : f && f.isColor && (p(f, 1),
                u = !0,
                c = null,
                l = 0),
                (t.autoClear || u) && t.clear(t.autoClearColor, t.autoClearDepth, t.autoClearStencil),
                f && (f.isCubeTexture || f.isWebGLRenderTargetCube)) {
                    void 0 === s && ((s = new Ii(new pi(1,1,1),new Li({
                        type: "BackgroundCubeMaterial",
                        uniforms: Mn(Rn.cube.uniforms),
                        vertexShader: Rn.cube.vertexShader,
                        fragmentShader: Rn.cube.fragmentShader,
                        side: b,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1
                    }))).geometry.removeAttribute("normal"),
                    s.geometry.removeAttribute("uv"),
                    s.onBeforeRender = function(t, e, n) {
                        this.matrixWorld.copyPosition(n.matrixWorld)
                    }
                    ,
                    Object.defineProperty(s.material, "map", {
                        get: function() {
                            return this.uniforms.tCube.value
                        }
                    }),
                    n.update(s));
                    var g = f.isWebGLRenderTargetCube ? f.texture : f;
                    s.material.uniforms.tCube.value = g,
                    s.material.uniforms.tFlip.value = f.isWebGLRenderTargetCube ? 1 : -1,
                    c === f && l === g.version || (s.material.needsUpdate = !0,
                    c = f,
                    l = g.version),
                    e.unshift(s, s.geometry, s.material, 0, 0, null)
                } else
                    f && f.isTexture && (void 0 === r && ((r = new Ii(new ui(2,2),new Li({
                        type: "BackgroundMaterial",
                        uniforms: Mn(Rn.background.uniforms),
                        vertexShader: Rn.background.vertexShader,
                        fragmentShader: Rn.background.fragmentShader,
                        side: y,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1
                    }))).geometry.removeAttribute("normal"),
                    Object.defineProperty(r.material, "map", {
                        get: function() {
                            return this.uniforms.t2D.value
                        }
                    }),
                    n.update(r)),
                    r.material.uniforms.t2D.value = f,
                    !0 === f.matrixAutoUpdate && f.updateMatrix(),
                    r.material.uniforms.uvTransform.value.copy(f.matrix),
                    c === f && l === f.version || (r.material.needsUpdate = !0,
                    c = f,
                    l = f.version),
                    e.unshift(r, r.geometry, r.material, 0, 0, null))
            }
        }
    }
    function Di(t, e, n, i) {
        var r;
        this.setMode = function(t) {
            r = t
        }
        ,
        this.render = function(e, i) {
            t.drawArrays(r, e, i),
            n.update(i, r)
        }
        ,
        this.renderInstances = function(s, a, o) {
            var c;
            if (i.isWebGL2)
                c = t;
            else if (null === (c = e.get("ANGLE_instanced_arrays")))
                return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            c[i.isWebGL2 ? "drawArraysInstanced" : "drawArraysInstancedANGLE"](r, a, o, s.maxInstancedCount),
            n.update(o, r, s.maxInstancedCount)
        }
    }
    function zi(t, e, n) {
        var i;
        function r(e) {
            if ("highp" === e) {
                if (t.getShaderPrecisionFormat(35633, 36338).precision > 0 && t.getShaderPrecisionFormat(35632, 36338).precision > 0)
                    return "highp";
                e = "mediump"
            }
            return "mediump" === e && t.getShaderPrecisionFormat(35633, 36337).precision > 0 && t.getShaderPrecisionFormat(35632, 36337).precision > 0 ? "mediump" : "lowp"
        }
        var s = "undefined" != typeof WebGL2RenderingContext && t instanceof WebGL2RenderingContext
          , a = void 0 !== n.precision ? n.precision : "highp"
          , o = r(a);
        o !== a && (console.warn("THREE.WebGLRenderer:", a, "not supported, using", o, "instead."),
        a = o);
        var c = !0 === n.logarithmicDepthBuffer
          , l = t.getParameter(34930)
          , p = t.getParameter(35660)
          , h = t.getParameter(3379)
          , u = t.getParameter(34076)
          , f = t.getParameter(34921)
          , d = t.getParameter(36347)
          , m = t.getParameter(36348)
          , g = t.getParameter(36349)
          , v = p > 0
          , y = s || !!e.get("OES_texture_float");
        return {
            isWebGL2: s,
            getMaxAnisotropy: function() {
                if (void 0 !== i)
                    return i;
                var n = e.get("EXT_texture_filter_anisotropic");
                return i = null !== n ? t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
            },
            getMaxPrecision: r,
            precision: a,
            logarithmicDepthBuffer: c,
            maxTextures: l,
            maxVertexTextures: p,
            maxTextureSize: h,
            maxCubemapSize: u,
            maxAttributes: f,
            maxVertexUniforms: d,
            maxVaryings: m,
            maxFragmentUniforms: g,
            vertexTextures: v,
            floatFragmentTextures: y,
            floatVertexTextures: v && y,
            maxSamples: s ? t.getParameter(36183) : 0
        }
    }
    function Bi() {
        var t = this
          , e = null
          , n = 0
          , i = !1
          , r = !1
          , s = new yn
          , a = new Ye
          , o = {
            value: null,
            needsUpdate: !1
        };
        function c() {
            o.value !== e && (o.value = e,
            o.needsUpdate = n > 0),
            t.numPlanes = n,
            t.numIntersection = 0
        }
        function l(e, n, i, r) {
            var c = null !== e ? e.length : 0
              , l = null;
            if (0 !== c) {
                if (l = o.value,
                !0 !== r || null === l) {
                    var p = i + 4 * c
                      , h = n.matrixWorldInverse;
                    a.getNormalMatrix(h),
                    (null === l || l.length < p) && (l = new Float32Array(p));
                    for (var u = 0, f = i; u !== c; ++u,
                    f += 4)
                        s.copy(e[u]).applyMatrix4(h, a),
                        s.normal.toArray(l, f),
                        l[f + 3] = s.constant
                }
                o.value = l,
                o.needsUpdate = !0
            }
            return t.numPlanes = c,
            l
        }
        this.uniform = o,
        this.numPlanes = 0,
        this.numIntersection = 0,
        this.init = function(t, r, s) {
            var a = 0 !== t.length || r || 0 !== n || i;
            return i = r,
            e = l(t, s, 0),
            n = t.length,
            a
        }
        ,
        this.beginShadows = function() {
            r = !0,
            l(null)
        }
        ,
        this.endShadows = function() {
            r = !1,
            c()
        }
        ,
        this.setState = function(t, s, a, p, h, u) {
            if (!i || null === t || 0 === t.length || r && !a)
                r ? l(null) : c();
            else {
                var f = r ? 0 : n
                  , d = 4 * f
                  , m = h.clippingState || null;
                o.value = m,
                m = l(t, p, d, u);
                for (var g = 0; g !== d; ++g)
                    m[g] = e[g];
                h.clippingState = m,
                this.numIntersection = s ? this.numPlanes : 0,
                this.numPlanes += f
            }
        }
    }
    function Ni(t) {
        var e = {};
        return {
            get: function(n) {
                if (void 0 !== e[n])
                    return e[n];
                var i;
                switch (n) {
                case "WEBGL_depth_texture":
                    i = t.getExtension("WEBGL_depth_texture") || t.getExtension("MOZ_WEBGL_depth_texture") || t.getExtension("WEBKIT_WEBGL_depth_texture");
                    break;
                case "EXT_texture_filter_anisotropic":
                    i = t.getExtension("EXT_texture_filter_anisotropic") || t.getExtension("MOZ_EXT_texture_filter_anisotropic") || t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                    break;
                case "WEBGL_compressed_texture_s3tc":
                    i = t.getExtension("WEBGL_compressed_texture_s3tc") || t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                    break;
                case "WEBGL_compressed_texture_pvrtc":
                    i = t.getExtension("WEBGL_compressed_texture_pvrtc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                    break;
                default:
                    i = t.getExtension(n)
                }
                return null === i && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."),
                e[n] = i,
                i
            }
        }
    }
    function ji(t, e, n) {
        var i = {}
          , r = {};
        function s(t) {
            var a = t.target
              , o = i[a.id];
            for (var c in null !== o.index && e.remove(o.index),
            o.attributes)
                e.remove(o.attributes[c]);
            a.removeEventListener("dispose", s),
            delete i[a.id];
            var l = r[o.id];
            l && (e.remove(l),
            delete r[o.id]),
            n.memory.geometries--
        }
        return {
            get: function(t, e) {
                var r = i[e.id];
                return r || (e.addEventListener("dispose", s),
                e.isBufferGeometry ? r = e : e.isGeometry && (void 0 === e._bufferGeometry && (e._bufferGeometry = (new ci).setFromObject(t)),
                r = e._bufferGeometry),
                i[e.id] = r,
                n.memory.geometries++,
                r)
            },
            update: function(t) {
                var n = t.index
                  , i = t.attributes;
                for (var r in null !== n && e.update(n, 34963),
                i)
                    e.update(i[r], 34962);
                var s = t.morphAttributes;
                for (var r in s)
                    for (var a = s[r], o = 0, c = a.length; o < c; o++)
                        e.update(a[o], 34962)
            },
            getWireframeAttribute: function(t) {
                var n = r[t.id];
                if (n)
                    return n;
                var i, s = [], a = t.index, o = t.attributes;
                if (null !== a)
                    for (var c = 0, l = (i = a.array).length; c < l; c += 3) {
                        var p = i[c + 0]
                          , h = i[c + 1]
                          , u = i[c + 2];
                        s.push(p, h, h, u, u, p)
                    }
                else
                    for (c = 0,
                    l = (i = o.position.array).length / 3 - 1; c < l; c += 3)
                        p = c + 0,
                        h = c + 1,
                        u = c + 2,
                        s.push(p, h, h, u, u, p);
                return n = new (ai(s) > 65535 ? ni : ti)(s,1),
                e.update(n, 34963),
                r[t.id] = n,
                n
            }
        }
    }
    function Ui(t, e, n, i) {
        var r, s, a;
        this.setMode = function(t) {
            r = t
        }
        ,
        this.setIndex = function(t) {
            s = t.type,
            a = t.bytesPerElement
        }
        ,
        this.render = function(e, i) {
            t.drawElements(r, i, s, e * a),
            n.update(i, r)
        }
        ,
        this.renderInstances = function(o, c, l) {
            var p;
            if (i.isWebGL2)
                p = t;
            else if (null === (p = e.get("ANGLE_instanced_arrays")))
                return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            p[i.isWebGL2 ? "drawElementsInstanced" : "drawElementsInstancedANGLE"](r, l, s, c * a, o.maxInstancedCount),
            n.update(l, r, o.maxInstancedCount)
        }
    }
    function Fi(t) {
        var e = {
            frame: 0,
            calls: 0,
            triangles: 0,
            points: 0,
            lines: 0
        };
        return {
            memory: {
                geometries: 0,
                textures: 0
            },
            render: e,
            programs: null,
            autoReset: !0,
            reset: function() {
                e.frame++,
                e.calls = 0,
                e.triangles = 0,
                e.points = 0,
                e.lines = 0
            },
            update: function(t, n, i) {
                switch (i = i || 1,
                e.calls++,
                n) {
                case 4:
                    e.triangles += i * (t / 3);
                    break;
                case 5:
                case 6:
                    e.triangles += i * (t - 2);
                    break;
                case 1:
                    e.lines += i * (t / 2);
                    break;
                case 3:
                    e.lines += i * (t - 1);
                    break;
                case 2:
                    e.lines += i * t;
                    break;
                case 0:
                    e.points += i * t;
                    break;
                default:
                    console.error("THREE.WebGLInfo: Unknown draw mode:", n)
                }
            }
        }
    }
    function Hi(t, e) {
        return Math.abs(e[1]) - Math.abs(t[1])
    }
    function Gi(t) {
        var e = {}
          , n = new Float32Array(8);
        return {
            update: function(i, r, s, a) {
                var o = i.morphTargetInfluences
                  , c = o.length
                  , l = e[r.id];
                if (void 0 === l) {
                    l = [];
                    for (var p = 0; p < c; p++)
                        l[p] = [p, 0];
                    e[r.id] = l
                }
                var h = s.morphTargets && r.morphAttributes.position
                  , u = s.morphNormals && r.morphAttributes.normal;
                for (p = 0; p < c; p++)
                    0 !== (f = l[p])[1] && (h && r.removeAttribute("morphTarget" + p),
                    u && r.removeAttribute("morphNormal" + p));
                for (p = 0; p < c; p++)
                    (f = l[p])[0] = p,
                    f[1] = o[p];
                for (l.sort(Hi),
                p = 0; p < 8; p++) {
                    var f;
                    if (f = l[p]) {
                        var d = f[0]
                          , m = f[1];
                        if (m) {
                            h && r.addAttribute("morphTarget" + p, h[d]),
                            u && r.addAttribute("morphNormal" + p, u[d]),
                            n[p] = m;
                            continue
                        }
                    }
                    n[p] = 0
                }
                a.getUniforms().setValue(t, "morphTargetInfluences", n)
            }
        }
    }
    function Vi(t, e) {
        var n = {};
        return {
            update: function(i) {
                var r = e.render.frame
                  , s = i.geometry
                  , a = t.get(i, s);
                return n[a.id] !== r && (s.isGeometry && a.updateFromObject(i),
                t.update(a),
                n[a.id] = r),
                a
            },
            dispose: function() {
                n = {}
            }
        }
    }
    function Wi(t, e, n, i, r, s, a, o, c, l) {
        t = void 0 !== t ? t : [],
        e = void 0 !== e ? e : ut,
        a = void 0 !== a ? a : Ft,
        pn.call(this, t, e, n, i, r, s, a, o, c, l),
        this.flipY = !1
    }
    function Yi(t, e, n, i) {
        pn.call(this, null),
        this.image = {
            data: t,
            width: e,
            height: n,
            depth: i
        },
        this.magFilter = Mt,
        this.minFilter = Mt,
        this.wrapR = wt,
        this.generateMipmaps = !1,
        this.flipY = !1
    }
    function qi(t, e, n, i) {
        pn.call(this, null),
        this.image = {
            data: t,
            width: e,
            height: n,
            depth: i
        },
        this.magFilter = Mt,
        this.minFilter = Mt,
        this.wrapR = wt,
        this.generateMipmaps = !1,
        this.flipY = !1
    }
    Li.prototype = Object.create(di.prototype),
    Li.prototype.constructor = Li,
    Li.prototype.isShaderMaterial = !0,
    Li.prototype.copy = function(t) {
        return di.prototype.copy.call(this, t),
        this.fragmentShader = t.fragmentShader,
        this.vertexShader = t.vertexShader,
        this.uniforms = Mn(t.uniforms),
        this.defines = Object.assign({}, t.defines),
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.lights = t.lights,
        this.clipping = t.clipping,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.morphNormals = t.morphNormals,
        this.extensions = t.extensions,
        this
    }
    ,
    Li.prototype.toJSON = function(t) {
        var e = di.prototype.toJSON.call(this, t);
        for (var n in e.uniforms = {},
        this.uniforms) {
            var i = this.uniforms[n].value;
            i && i.isTexture ? e.uniforms[n] = {
                type: "t",
                value: i.toJSON(t).uuid
            } : i && i.isColor ? e.uniforms[n] = {
                type: "c",
                value: i.getHex()
            } : i && i.isVector2 ? e.uniforms[n] = {
                type: "v2",
                value: i.toArray()
            } : i && i.isVector3 ? e.uniforms[n] = {
                type: "v3",
                value: i.toArray()
            } : i && i.isVector4 ? e.uniforms[n] = {
                type: "v4",
                value: i.toArray()
            } : i && i.isMatrix3 ? e.uniforms[n] = {
                type: "m3",
                value: i.toArray()
            } : i && i.isMatrix4 ? e.uniforms[n] = {
                type: "m4",
                value: i.toArray()
            } : e.uniforms[n] = {
                value: i
            }
        }
        Object.keys(this.defines).length > 0 && (e.defines = this.defines),
        e.vertexShader = this.vertexShader,
        e.fragmentShader = this.fragmentShader;
        var r = {};
        for (var s in this.extensions)
            !0 === this.extensions[s] && (r[s] = !0);
        return Object.keys(r).length > 0 && (e.extensions = r),
        e
    }
    ,
    Object.assign(Pi.prototype, {
        set: function(t, e) {
            return this.origin.copy(t),
            this.direction.copy(e),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.origin.copy(t.origin),
            this.direction.copy(t.direction),
            this
        },
        at: function(t, e) {
            return void 0 === e && (console.warn("THREE.Ray: .at() target is now required"),
            e = new We),
            e.copy(this.direction).multiplyScalar(t).add(this.origin)
        },
        lookAt: function(t) {
            return this.direction.copy(t).sub(this.origin).normalize(),
            this
        },
        recast: function() {
            var t = new We;
            return function(e) {
                return this.origin.copy(this.at(e, t)),
                this
            }
        }(),
        closestPointToPoint: function(t, e) {
            void 0 === e && (console.warn("THREE.Ray: .closestPointToPoint() target is now required"),
            e = new We),
            e.subVectors(t, this.origin);
            var n = e.dot(this.direction);
            return n < 0 ? e.copy(this.origin) : e.copy(this.direction).multiplyScalar(n).add(this.origin)
        },
        distanceToPoint: function(t) {
            return Math.sqrt(this.distanceSqToPoint(t))
        },
        distanceSqToPoint: function() {
            var t = new We;
            return function(e) {
                var n = t.subVectors(e, this.origin).dot(this.direction);
                return n < 0 ? this.origin.distanceToSquared(e) : (t.copy(this.direction).multiplyScalar(n).add(this.origin),
                t.distanceToSquared(e))
            }
        }(),
        distanceSqToSegment: (gi = new We,
        vi = new We,
        yi = new We,
        function(t, e, n, i) {
            gi.copy(t).add(e).multiplyScalar(.5),
            vi.copy(e).sub(t).normalize(),
            yi.copy(this.origin).sub(gi);
            var r, s, a, o, c = .5 * t.distanceTo(e), l = -this.direction.dot(vi), p = yi.dot(this.direction), h = -yi.dot(vi), u = yi.lengthSq(), f = Math.abs(1 - l * l);
            if (f > 0)
                if (s = l * p - h,
                o = c * f,
                (r = l * h - p) >= 0)
                    if (s >= -o)
                        if (s <= o) {
                            var d = 1 / f;
                            a = (r *= d) * (r + l * (s *= d) + 2 * p) + s * (l * r + s + 2 * h) + u
                        } else
                            s = c,
                            a = -(r = Math.max(0, -(l * s + p))) * r + s * (s + 2 * h) + u;
                    else
                        s = -c,
                        a = -(r = Math.max(0, -(l * s + p))) * r + s * (s + 2 * h) + u;
                else
                    s <= -o ? a = -(r = Math.max(0, -(-l * c + p))) * r + (s = r > 0 ? -c : Math.min(Math.max(-c, -h), c)) * (s + 2 * h) + u : s <= o ? (r = 0,
                    a = (s = Math.min(Math.max(-c, -h), c)) * (s + 2 * h) + u) : a = -(r = Math.max(0, -(l * c + p))) * r + (s = r > 0 ? c : Math.min(Math.max(-c, -h), c)) * (s + 2 * h) + u;
            else
                s = l > 0 ? -c : c,
                a = -(r = Math.max(0, -(l * s + p))) * r + s * (s + 2 * h) + u;
            return n && n.copy(this.direction).multiplyScalar(r).add(this.origin),
            i && i.copy(vi).multiplyScalar(s).add(gi),
            a
        }
        ),
        intersectSphere: function() {
            var t = new We;
            return function(e, n) {
                t.subVectors(e.center, this.origin);
                var i = t.dot(this.direction)
                  , r = t.dot(t) - i * i
                  , s = e.radius * e.radius;
                if (r > s)
                    return null;
                var a = Math.sqrt(s - r)
                  , o = i - a
                  , c = i + a;
                return o < 0 && c < 0 ? null : o < 0 ? this.at(c, n) : this.at(o, n)
            }
        }(),
        intersectsSphere: function(t) {
            return this.distanceSqToPoint(t.center) <= t.radius * t.radius
        },
        distanceToPlane: function(t) {
            var e = t.normal.dot(this.direction);
            if (0 === e)
                return 0 === t.distanceToPoint(this.origin) ? 0 : null;
            var n = -(this.origin.dot(t.normal) + t.constant) / e;
            return n >= 0 ? n : null
        },
        intersectPlane: function(t, e) {
            var n = this.distanceToPlane(t);
            return null === n ? null : this.at(n, e)
        },
        intersectsPlane: function(t) {
            var e = t.distanceToPoint(this.origin);
            return 0 === e || t.normal.dot(this.direction) * e < 0
        },
        intersectBox: function(t, e) {
            var n, i, r, s, a, o, c = 1 / this.direction.x, l = 1 / this.direction.y, p = 1 / this.direction.z, h = this.origin;
            return c >= 0 ? (n = (t.min.x - h.x) * c,
            i = (t.max.x - h.x) * c) : (n = (t.max.x - h.x) * c,
            i = (t.min.x - h.x) * c),
            l >= 0 ? (r = (t.min.y - h.y) * l,
            s = (t.max.y - h.y) * l) : (r = (t.max.y - h.y) * l,
            s = (t.min.y - h.y) * l),
            n > s || r > i ? null : ((r > n || n != n) && (n = r),
            (s < i || i != i) && (i = s),
            p >= 0 ? (a = (t.min.z - h.z) * p,
            o = (t.max.z - h.z) * p) : (a = (t.max.z - h.z) * p,
            o = (t.min.z - h.z) * p),
            n > o || a > i ? null : ((a > n || n != n) && (n = a),
            (o < i || i != i) && (i = o),
            i < 0 ? null : this.at(n >= 0 ? n : i, e)))
        },
        intersectsBox: (mi = new We,
        function(t) {
            return null !== this.intersectBox(t, mi)
        }
        ),
        intersectTriangle: function() {
            var t = new We
              , e = new We
              , n = new We
              , i = new We;
            return function(r, s, a, o, c) {
                e.subVectors(s, r),
                n.subVectors(a, r),
                i.crossVectors(e, n);
                var l, p = this.direction.dot(i);
                if (p > 0) {
                    if (o)
                        return null;
                    l = 1
                } else {
                    if (!(p < 0))
                        return null;
                    l = -1,
                    p = -p
                }
                t.subVectors(this.origin, r);
                var h = l * this.direction.dot(n.crossVectors(t, n));
                if (h < 0)
                    return null;
                var u = l * this.direction.dot(e.cross(t));
                if (u < 0)
                    return null;
                if (h + u > p)
                    return null;
                var f = -l * t.dot(i);
                return f < 0 ? null : this.at(f / p, c)
            }
        }(),
        applyMatrix4: function(t) {
            return this.origin.applyMatrix4(t),
            this.direction.transformDirection(t),
            this
        },
        equals: function(t) {
            return t.origin.equals(this.origin) && t.direction.equals(this.direction)
        }
    }),
    Object.assign(Ci, {
        getNormal: (wi = new We,
        function(t, e, n, i) {
            void 0 === i && (console.warn("THREE.Triangle: .getNormal() target is now required"),
            i = new We),
            i.subVectors(n, e),
            wi.subVectors(t, e),
            i.cross(wi);
            var r = i.lengthSq();
            return r > 0 ? i.multiplyScalar(1 / Math.sqrt(r)) : i.set(0, 0, 0)
        }
        ),
        getBarycoord: function() {
            var t = new We
              , e = new We
              , n = new We;
            return function(i, r, s, a, o) {
                t.subVectors(a, r),
                e.subVectors(s, r),
                n.subVectors(i, r);
                var c = t.dot(t)
                  , l = t.dot(e)
                  , p = t.dot(n)
                  , h = e.dot(e)
                  , u = e.dot(n)
                  , f = c * h - l * l;
                if (void 0 === o && (console.warn("THREE.Triangle: .getBarycoord() target is now required"),
                o = new We),
                0 === f)
                    return o.set(-2, -1, -1);
                var d = 1 / f
                  , m = (h * p - l * u) * d
                  , g = (c * u - l * p) * d;
                return o.set(1 - m - g, g, m)
            }
        }(),
        containsPoint: function() {
            var t = new We;
            return function(e, n, i, r) {
                return Ci.getBarycoord(e, n, i, r, t),
                t.x >= 0 && t.y >= 0 && t.x + t.y <= 1
            }
        }(),
        getUV: (bi = new We,
        function(t, e, n, i, r, s, a, o) {
            return this.getBarycoord(t, e, n, i, bi),
            o.set(0, 0),
            o.addScaledVector(r, bi.x),
            o.addScaledVector(s, bi.y),
            o.addScaledVector(a, bi.z),
            o
        }
        ),
        isFrontFacing: function() {
            var t = new We
              , e = new We;
            return function(n, i, r, s) {
                return t.subVectors(r, i),
                e.subVectors(n, i),
                t.cross(e).dot(s) < 0
            }
        }()
    }),
    Object.assign(Ci.prototype, {
        set: function(t, e, n) {
            return this.a.copy(t),
            this.b.copy(e),
            this.c.copy(n),
            this
        },
        setFromPointsAndIndices: function(t, e, n, i) {
            return this.a.copy(t[e]),
            this.b.copy(t[n]),
            this.c.copy(t[i]),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.a.copy(t.a),
            this.b.copy(t.b),
            this.c.copy(t.c),
            this
        },
        getArea: function() {
            var t = new We
              , e = new We;
            return function() {
                return t.subVectors(this.c, this.b),
                e.subVectors(this.a, this.b),
                .5 * t.cross(e).length()
            }
        }(),
        getMidpoint: function(t) {
            return void 0 === t && (console.warn("THREE.Triangle: .getMidpoint() target is now required"),
            t = new We),
            t.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
        },
        getNormal: function(t) {
            return Ci.getNormal(this.a, this.b, this.c, t)
        },
        getPlane: function(t) {
            return void 0 === t && (console.warn("THREE.Triangle: .getPlane() target is now required"),
            t = new We),
            t.setFromCoplanarPoints(this.a, this.b, this.c)
        },
        getBarycoord: function(t, e) {
            return Ci.getBarycoord(t, this.a, this.b, this.c, e)
        },
        getUV: function(t, e, n, i, r) {
            return Ci.getUV(t, this.a, this.b, this.c, e, n, i, r)
        },
        containsPoint: function(t) {
            return Ci.containsPoint(t, this.a, this.b, this.c)
        },
        isFrontFacing: function(t) {
            return Ci.isFrontFacing(this.a, this.b, this.c, t)
        },
        intersectsBox: function(t) {
            return t.intersectsTriangle(this)
        },
        closestPointToPoint: (xi = new We,
        Mi = new We,
        _i = new We,
        Si = new We,
        Ti = new We,
        Ei = new We,
        function(t, e) {
            void 0 === e && (console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),
            e = new We);
            var n, i, r = this.a, s = this.b, a = this.c;
            xi.subVectors(s, r),
            Mi.subVectors(a, r),
            Si.subVectors(t, r);
            var o = xi.dot(Si)
              , c = Mi.dot(Si);
            if (o <= 0 && c <= 0)
                return e.copy(r);
            Ti.subVectors(t, s);
            var l = xi.dot(Ti)
              , p = Mi.dot(Ti);
            if (l >= 0 && p <= l)
                return e.copy(s);
            var h = o * p - l * c;
            if (h <= 0 && o >= 0 && l <= 0)
                return n = o / (o - l),
                e.copy(r).addScaledVector(xi, n);
            Ei.subVectors(t, a);
            var u = xi.dot(Ei)
              , f = Mi.dot(Ei);
            if (f >= 0 && u <= f)
                return e.copy(a);
            var d = u * c - o * f;
            if (d <= 0 && c >= 0 && f <= 0)
                return i = c / (c - f),
                e.copy(r).addScaledVector(Mi, i);
            var m = l * f - u * p;
            if (m <= 0 && p - l >= 0 && u - f >= 0)
                return _i.subVectors(a, s),
                i = (p - l) / (p - l + (u - f)),
                e.copy(s).addScaledVector(_i, i);
            var g = 1 / (m + d + h);
            return n = d * g,
            i = h * g,
            e.copy(r).addScaledVector(xi, n).addScaledVector(Mi, i)
        }
        ),
        equals: function(t) {
            return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c)
        }
    }),
    Ri.prototype = Object.create(di.prototype),
    Ri.prototype.constructor = Ri,
    Ri.prototype.isMeshBasicMaterial = !0,
    Ri.prototype.copy = function(t) {
        return di.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.map = t.map,
        this.lightMap = t.lightMap,
        this.lightMapIntensity = t.lightMapIntensity,
        this.aoMap = t.aoMap,
        this.aoMapIntensity = t.aoMapIntensity,
        this.specularMap = t.specularMap,
        this.alphaMap = t.alphaMap,
        this.envMap = t.envMap,
        this.combine = t.combine,
        this.reflectivity = t.reflectivity,
        this.refractionRatio = t.refractionRatio,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.wireframeLinecap = t.wireframeLinecap,
        this.wireframeLinejoin = t.wireframeLinejoin,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this
    }
    ,
    Ii.prototype = Object.assign(Object.create(Vn.prototype), {
        constructor: Ii,
        isMesh: !0,
        setDrawMode: function(t) {
            this.drawMode = t
        },
        copy: function(t) {
            return Vn.prototype.copy.call(this, t),
            this.drawMode = t.drawMode,
            void 0 !== t.morphTargetInfluences && (this.morphTargetInfluences = t.morphTargetInfluences.slice()),
            void 0 !== t.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, t.morphTargetDictionary)),
            this
        },
        updateMorphTargets: function() {
            var t, e, n, i = this.geometry;
            if (i.isBufferGeometry) {
                var r = i.morphAttributes
                  , s = Object.keys(r);
                if (s.length > 0) {
                    var a = r[s[0]];
                    if (void 0 !== a)
                        for (this.morphTargetInfluences = [],
                        this.morphTargetDictionary = {},
                        t = 0,
                        e = a.length; t < e; t++)
                            n = a[t].name || String(t),
                            this.morphTargetInfluences.push(0),
                            this.morphTargetDictionary[n] = t
                }
            } else {
                var o = i.morphTargets;
                void 0 !== o && o.length > 0 && console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")
            }
        },
        raycast: function() {
            var t = new wn
              , e = new Pi
              , n = new vn
              , i = new We
              , r = new We
              , s = new We
              , a = new We
              , o = new We
              , c = new We
              , l = new We
              , p = new We
              , h = new We
              , u = new Ge
              , f = new Ge
              , d = new Ge
              , m = new We
              , g = new We;
            function v(t, e, n, i, r, s, a, o) {
                if (null === (e.side === b ? i.intersectTriangle(a, s, r, !0, o) : i.intersectTriangle(r, s, a, e.side !== w, o)))
                    return null;
                g.copy(o),
                g.applyMatrix4(t.matrixWorld);
                var c = n.ray.origin.distanceTo(g);
                return c < n.near || c > n.far ? null : {
                    distance: c,
                    point: g.clone(),
                    object: t
                }
            }
            function y(t, e, n, g, y, b, w, x, M, _) {
                i.fromBufferAttribute(y, x),
                r.fromBufferAttribute(y, M),
                s.fromBufferAttribute(y, _);
                var S = t.morphTargetInfluences;
                if (e.morphTargets && b && S) {
                    l.set(0, 0, 0),
                    p.set(0, 0, 0),
                    h.set(0, 0, 0);
                    for (var T = 0, E = b.length; T < E; T++) {
                        var k = S[T]
                          , A = b[T];
                        0 !== k && (a.fromBufferAttribute(A, x),
                        o.fromBufferAttribute(A, M),
                        c.fromBufferAttribute(A, _),
                        l.addScaledVector(a.sub(i), k),
                        p.addScaledVector(o.sub(r), k),
                        h.addScaledVector(c.sub(s), k))
                    }
                    i.add(l),
                    r.add(p),
                    s.add(h)
                }
                var L = v(t, e, n, g, i, r, s, m);
                if (L) {
                    w && (u.fromBufferAttribute(w, x),
                    f.fromBufferAttribute(w, M),
                    d.fromBufferAttribute(w, _),
                    L.uv = Ci.getUV(m, i, r, s, u, f, d, new Ge));
                    var P = new Dn(x,M,_);
                    Ci.getNormal(i, r, s, P.normal),
                    L.face = P
                }
                return L
            }
            return function(i, r) {
                var s, a = this.geometry, o = this.material, c = this.matrixWorld;
                if (void 0 !== o && (null === a.boundingSphere && a.computeBoundingSphere(),
                n.copy(a.boundingSphere),
                n.applyMatrix4(c),
                !1 !== i.ray.intersectsSphere(n) && (t.getInverse(c),
                e.copy(i.ray).applyMatrix4(t),
                null === a.boundingBox || !1 !== e.intersectsBox(a.boundingBox))))
                    if (a.isBufferGeometry) {
                        var l, p, h, g, b, w, x, M, _, S = a.index, T = a.attributes.position, E = a.morphAttributes.position, k = a.attributes.uv, A = a.groups, L = a.drawRange;
                        if (null !== S)
                            if (Array.isArray(o))
                                for (g = 0,
                                w = A.length; g < w; g++)
                                    for (_ = o[(M = A[g]).materialIndex],
                                    b = Math.max(M.start, L.start),
                                    x = Math.min(M.start + M.count, L.start + L.count); b < x; b += 3)
                                        l = S.getX(b),
                                        p = S.getX(b + 1),
                                        h = S.getX(b + 2),
                                        (s = y(this, _, i, e, T, E, k, l, p, h)) && (s.faceIndex = Math.floor(b / 3),
                                        s.face.materialIndex = M.materialIndex,
                                        r.push(s));
                            else
                                for (g = Math.max(0, L.start),
                                w = Math.min(S.count, L.start + L.count); g < w; g += 3)
                                    l = S.getX(g),
                                    p = S.getX(g + 1),
                                    h = S.getX(g + 2),
                                    (s = y(this, o, i, e, T, E, k, l, p, h)) && (s.faceIndex = Math.floor(g / 3),
                                    r.push(s));
                        else if (void 0 !== T)
                            if (Array.isArray(o))
                                for (g = 0,
                                w = A.length; g < w; g++)
                                    for (_ = o[(M = A[g]).materialIndex],
                                    b = Math.max(M.start, L.start),
                                    x = Math.min(M.start + M.count, L.start + L.count); b < x; b += 3)
                                        (s = y(this, _, i, e, T, E, k, l = b, p = b + 1, h = b + 2)) && (s.faceIndex = Math.floor(b / 3),
                                        s.face.materialIndex = M.materialIndex,
                                        r.push(s));
                            else
                                for (g = Math.max(0, L.start),
                                w = Math.min(T.count, L.start + L.count); g < w; g += 3)
                                    (s = y(this, o, i, e, T, E, k, l = g, p = g + 1, h = g + 2)) && (s.faceIndex = Math.floor(g / 3),
                                    r.push(s))
                    } else if (a.isGeometry) {
                        var P, C, R, I, O = Array.isArray(o), D = a.vertices, z = a.faces, B = a.faceVertexUvs[0];
                        B.length > 0 && (I = B);
                        for (var N = 0, j = z.length; N < j; N++) {
                            var U = z[N]
                              , F = O ? o[U.materialIndex] : o;
                            if (void 0 !== F && (P = D[U.a],
                            C = D[U.b],
                            R = D[U.c],
                            s = v(this, F, i, e, P, C, R, m))) {
                                if (I && I[N]) {
                                    var H = I[N];
                                    u.copy(H[0]),
                                    f.copy(H[1]),
                                    d.copy(H[2]),
                                    s.uv = Ci.getUV(m, P, C, R, u, f, d, new Ge)
                                }
                                s.face = U,
                                s.faceIndex = N,
                                r.push(s)
                            }
                        }
                    }
            }
        }(),
        clone: function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
    }),
    Wi.prototype = Object.create(pn.prototype),
    Wi.prototype.constructor = Wi,
    Wi.prototype.isCubeTexture = !0,
    Object.defineProperty(Wi.prototype, "images", {
        get: function() {
            return this.image
        },
        set: function(t) {
            this.image = t
        }
    }),
    Yi.prototype = Object.create(pn.prototype),
    Yi.prototype.constructor = Yi,
    Yi.prototype.isDataTexture2DArray = !0,
    qi.prototype = Object.create(pn.prototype),
    qi.prototype.constructor = qi,
    qi.prototype.isDataTexture3D = !0;
    var Xi = new pn
      , Zi = new Yi
      , Ki = new qi
      , Ji = new Wi
      , $i = []
      , Qi = []
      , tr = new Float32Array(16)
      , er = new Float32Array(9)
      , nr = new Float32Array(4);
    function ir(t, e, n) {
        var i = t[0];
        if (i <= 0 || i > 0)
            return t;
        var r = e * n
          , s = $i[r];
        if (void 0 === s && (s = new Float32Array(r),
        $i[r] = s),
        0 !== e) {
            i.toArray(s, 0);
            for (var a = 1, o = 0; a !== e; ++a)
                o += n,
                t[a].toArray(s, o)
        }
        return s
    }
    function rr(t, e) {
        if (t.length !== e.length)
            return !1;
        for (var n = 0, i = t.length; n < i; n++)
            if (t[n] !== e[n])
                return !1;
        return !0
    }
    function sr(t, e) {
        for (var n = 0, i = e.length; n < i; n++)
            t[n] = e[n]
    }
    function ar(t, e) {
        var n = Qi[e];
        void 0 === n && (n = new Int32Array(e),
        Qi[e] = n);
        for (var i = 0; i !== e; ++i)
            n[i] = t.allocateTextureUnit();
        return n
    }
    function or(t, e) {
        var n = this.cache;
        n[0] !== e && (t.uniform1f(this.addr, e),
        n[0] = e)
    }
    function cr(t, e) {
        var n = this.cache;
        if (void 0 !== e.x)
            n[0] === e.x && n[1] === e.y || (t.uniform2f(this.addr, e.x, e.y),
            n[0] = e.x,
            n[1] = e.y);
        else {
            if (rr(n, e))
                return;
            t.uniform2fv(this.addr, e),
            sr(n, e)
        }
    }
    function lr(t, e) {
        var n = this.cache;
        if (void 0 !== e.x)
            n[0] === e.x && n[1] === e.y && n[2] === e.z || (t.uniform3f(this.addr, e.x, e.y, e.z),
            n[0] = e.x,
            n[1] = e.y,
            n[2] = e.z);
        else if (void 0 !== e.r)
            n[0] === e.r && n[1] === e.g && n[2] === e.b || (t.uniform3f(this.addr, e.r, e.g, e.b),
            n[0] = e.r,
            n[1] = e.g,
            n[2] = e.b);
        else {
            if (rr(n, e))
                return;
            t.uniform3fv(this.addr, e),
            sr(n, e)
        }
    }
    function pr(t, e) {
        var n = this.cache;
        if (void 0 !== e.x)
            n[0] === e.x && n[1] === e.y && n[2] === e.z && n[3] === e.w || (t.uniform4f(this.addr, e.x, e.y, e.z, e.w),
            n[0] = e.x,
            n[1] = e.y,
            n[2] = e.z,
            n[3] = e.w);
        else {
            if (rr(n, e))
                return;
            t.uniform4fv(this.addr, e),
            sr(n, e)
        }
    }
    function hr(t, e) {
        var n = this.cache
          , i = e.elements;
        if (void 0 === i) {
            if (rr(n, e))
                return;
            t.uniformMatrix2fv(this.addr, !1, e),
            sr(n, e)
        } else {
            if (rr(n, i))
                return;
            nr.set(i),
            t.uniformMatrix2fv(this.addr, !1, nr),
            sr(n, i)
        }
    }
    function ur(t, e) {
        var n = this.cache
          , i = e.elements;
        if (void 0 === i) {
            if (rr(n, e))
                return;
            t.uniformMatrix3fv(this.addr, !1, e),
            sr(n, e)
        } else {
            if (rr(n, i))
                return;
            er.set(i),
            t.uniformMatrix3fv(this.addr, !1, er),
            sr(n, i)
        }
    }
    function fr(t, e) {
        var n = this.cache
          , i = e.elements;
        if (void 0 === i) {
            if (rr(n, e))
                return;
            t.uniformMatrix4fv(this.addr, !1, e),
            sr(n, e)
        } else {
            if (rr(n, i))
                return;
            tr.set(i),
            t.uniformMatrix4fv(this.addr, !1, tr),
            sr(n, i)
        }
    }
    function dr(t, e, n) {
        var i = this.cache
          , r = n.allocateTextureUnit();
        i[0] !== r && (t.uniform1i(this.addr, r),
        i[0] = r),
        n.safeSetTexture2D(e || Xi, r)
    }
    function mr(t, e, n) {
        var i = this.cache
          , r = n.allocateTextureUnit();
        i[0] !== r && (t.uniform1i(this.addr, r),
        i[0] = r),
        n.setTexture2DArray(e || Zi, r)
    }
    function gr(t, e, n) {
        var i = this.cache
          , r = n.allocateTextureUnit();
        i[0] !== r && (t.uniform1i(this.addr, r),
        i[0] = r),
        n.setTexture3D(e || Ki, r)
    }
    function vr(t, e, n) {
        var i = this.cache
          , r = n.allocateTextureUnit();
        i[0] !== r && (t.uniform1i(this.addr, r),
        i[0] = r),
        n.safeSetTextureCube(e || Ji, r)
    }
    function yr(t, e) {
        var n = this.cache;
        n[0] !== e && (t.uniform1i(this.addr, e),
        n[0] = e)
    }
    function br(t, e) {
        var n = this.cache;
        rr(n, e) || (t.uniform2iv(this.addr, e),
        sr(n, e))
    }
    function wr(t, e) {
        var n = this.cache;
        rr(n, e) || (t.uniform3iv(this.addr, e),
        sr(n, e))
    }
    function xr(t, e) {
        var n = this.cache;
        rr(n, e) || (t.uniform4iv(this.addr, e),
        sr(n, e))
    }
    function Mr(t, e) {
        t.uniform1fv(this.addr, e)
    }
    function _r(t, e) {
        t.uniform1iv(this.addr, e)
    }
    function Sr(t, e) {
        t.uniform2iv(this.addr, e)
    }
    function Tr(t, e) {
        t.uniform3iv(this.addr, e)
    }
    function Er(t, e) {
        t.uniform4iv(this.addr, e)
    }
    function kr(t, e) {
        var n = ir(e, this.size, 2);
        t.uniform2fv(this.addr, n)
    }
    function Ar(t, e) {
        var n = ir(e, this.size, 3);
        t.uniform3fv(this.addr, n)
    }
    function Lr(t, e) {
        var n = ir(e, this.size, 4);
        t.uniform4fv(this.addr, n)
    }
    function Pr(t, e) {
        var n = ir(e, this.size, 4);
        t.uniformMatrix2fv(this.addr, !1, n)
    }
    function Cr(t, e) {
        var n = ir(e, this.size, 9);
        t.uniformMatrix3fv(this.addr, !1, n)
    }
    function Rr(t, e) {
        var n = ir(e, this.size, 16);
        t.uniformMatrix4fv(this.addr, !1, n)
    }
    function Ir(t, e, n) {
        var i = e.length
          , r = ar(n, i);
        t.uniform1iv(this.addr, r);
        for (var s = 0; s !== i; ++s)
            n.safeSetTexture2D(e[s] || Xi, r[s])
    }
    function Or(t, e, n) {
        var i = e.length
          , r = ar(n, i);
        t.uniform1iv(this.addr, r);
        for (var s = 0; s !== i; ++s)
            n.safeSetTextureCube(e[s] || Ji, r[s])
    }
    function Dr(t, e, n) {
        this.id = t,
        this.addr = n,
        this.cache = [],
        this.setValue = function(t) {
            switch (t) {
            case 5126:
                return or;
            case 35664:
                return cr;
            case 35665:
                return lr;
            case 35666:
                return pr;
            case 35674:
                return hr;
            case 35675:
                return ur;
            case 35676:
                return fr;
            case 35678:
            case 36198:
                return dr;
            case 35679:
                return gr;
            case 35680:
                return vr;
            case 36289:
                return mr;
            case 5124:
            case 35670:
                return yr;
            case 35667:
            case 35671:
                return br;
            case 35668:
            case 35672:
                return wr;
            case 35669:
            case 35673:
                return xr
            }
        }(e.type)
    }
    function zr(t, e, n) {
        this.id = t,
        this.addr = n,
        this.cache = [],
        this.size = e.size,
        this.setValue = function(t) {
            switch (t) {
            case 5126:
                return Mr;
            case 35664:
                return kr;
            case 35665:
                return Ar;
            case 35666:
                return Lr;
            case 35674:
                return Pr;
            case 35675:
                return Cr;
            case 35676:
                return Rr;
            case 35678:
                return Ir;
            case 35680:
                return Or;
            case 5124:
            case 35670:
                return _r;
            case 35667:
            case 35671:
                return Sr;
            case 35668:
            case 35672:
                return Tr;
            case 35669:
            case 35673:
                return Er
            }
        }(e.type)
    }
    function Br(t) {
        this.id = t,
        this.seq = [],
        this.map = {}
    }
    zr.prototype.updateCache = function(t) {
        var e = this.cache;
        t instanceof Float32Array && e.length !== t.length && (this.cache = new Float32Array(t.length)),
        sr(e, t)
    }
    ,
    Br.prototype.setValue = function(t, e, n) {
        for (var i = this.seq, r = 0, s = i.length; r !== s; ++r) {
            var a = i[r];
            a.setValue(t, e[a.id], n)
        }
    }
    ;
    var Nr = /([\w\d_]+)(\])?(\[|\.)?/g;
    function jr(t, e) {
        t.seq.push(e),
        t.map[e.id] = e
    }
    function Ur(t, e, n) {
        var i = t.name
          , r = i.length;
        for (Nr.lastIndex = 0; ; ) {
            var s = Nr.exec(i)
              , a = Nr.lastIndex
              , o = s[1]
              , c = "]" === s[2]
              , l = s[3];
            if (c && (o |= 0),
            void 0 === l || "[" === l && a + 2 === r) {
                jr(n, void 0 === l ? new Dr(o,t,e) : new zr(o,t,e));
                break
            }
            var p = n.map[o];
            void 0 === p && jr(n, p = new Br(o)),
            n = p
        }
    }
    function Fr(t, e) {
        this.seq = [],
        this.map = {};
        for (var n = t.getProgramParameter(e, 35718), i = 0; i < n; ++i) {
            var r = t.getActiveUniform(e, i);
            Ur(r, t.getUniformLocation(e, r.name), this)
        }
    }
    function Hr(t, e, n, i) {
        var r = t.createShader(e);
        return t.shaderSource(r, n),
        t.compileShader(r),
        !0 === i && (!1 === t.getShaderParameter(r, 35713) && console.error("THREE.WebGLShader: Shader couldn't compile."),
        "" !== t.getShaderInfoLog(r) && console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", 35633 === e ? "vertex" : "fragment", t.getShaderInfoLog(r), function(t) {
            for (var e = t.split("\n"), n = 0; n < e.length; n++)
                e[n] = n + 1 + ": " + e[n];
            return e.join("\n")
        }(n))),
        r
    }
    Fr.prototype.setValue = function(t, e, n, i) {
        var r = this.map[e];
        void 0 !== r && r.setValue(t, n, i)
    }
    ,
    Fr.prototype.setOptional = function(t, e, n) {
        var i = e[n];
        void 0 !== i && this.setValue(t, n, i)
    }
    ,
    Fr.upload = function(t, e, n, i) {
        for (var r = 0, s = e.length; r !== s; ++r) {
            var a = e[r]
              , o = n[a.id];
            !1 !== o.needsUpdate && a.setValue(t, o.value, i)
        }
    }
    ,
    Fr.seqWithValue = function(t, e) {
        for (var n = [], i = 0, r = t.length; i !== r; ++i) {
            var s = t[i];
            s.id in e && n.push(s)
        }
        return n
    }
    ;
    var Gr = 0;
    function Vr(t) {
        switch (t) {
        case Pe:
            return ["Linear", "( value )"];
        case Ce:
            return ["sRGB", "( value )"];
        case Ie:
            return ["RGBE", "( value )"];
        case De:
            return ["RGBM", "( value, 7.0 )"];
        case ze:
            return ["RGBM", "( value, 16.0 )"];
        case Be:
            return ["RGBD", "( value, 256.0 )"];
        case Re:
            return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
        default:
            throw new Error("unsupported encoding: " + t)
        }
    }
    function Wr(t, e) {
        var n = Vr(e);
        return "vec4 " + t + "( vec4 value ) { return " + n[0] + "ToLinear" + n[1] + "; }"
    }
    function Yr(t, e) {
        var n;
        switch (e) {
        case at:
            n = "Linear";
            break;
        case ot:
            n = "Reinhard";
            break;
        case ct:
            n = "Uncharted2";
            break;
        case lt:
            n = "OptimizedCineon";
            break;
        case pt:
            n = "ACESFilmic";
            break;
        default:
            throw new Error("unsupported toneMapping: " + e)
        }
        return "vec3 " + t + "( vec3 color ) { return " + n + "ToneMapping( color ); }"
    }
    function qr(t) {
        return "" !== t
    }
    function Xr(t, e) {
        return t.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights)
    }
    function Zr(t, e) {
        return t.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e.numClippingPlanes - e.numClipIntersection)
    }
    function Kr(t) {
        return t.replace(/^[ \t]*#include +<([\w\d.\/]+)>/gm, function(t, e) {
            var n = xn[e];
            if (void 0 === n)
                throw new Error("Can not resolve #include <" + e + ">");
            return Kr(n)
        })
    }
    function Jr(t) {
        return t.replace(/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, function(t, e, n, i) {
            for (var r = "", s = parseInt(e); s < parseInt(n); s++)
                r += i.replace(/\[ i \]/g, "[ " + s + " ]");
            return r
        })
    }
    function $r(t, e, n, i, r, s, a, o) {
        var c = t.context
          , l = i.defines
          , p = r.vertexShader
          , h = r.fragmentShader
          , u = "SHADOWMAP_TYPE_BASIC";
        s.shadowMapType === g ? u = "SHADOWMAP_TYPE_PCF" : s.shadowMapType === v && (u = "SHADOWMAP_TYPE_PCF_SOFT");
        var f = "ENVMAP_TYPE_CUBE"
          , d = "ENVMAP_MODE_REFLECTION"
          , m = "ENVMAP_BLENDING_MULTIPLY";
        if (s.envMap) {
            switch (i.envMap.mapping) {
            case ut:
            case ft:
                f = "ENVMAP_TYPE_CUBE";
                break;
            case vt:
            case yt:
                f = "ENVMAP_TYPE_CUBE_UV";
                break;
            case dt:
            case mt:
                f = "ENVMAP_TYPE_EQUIREC";
                break;
            case gt:
                f = "ENVMAP_TYPE_SPHERE"
            }
            switch (i.envMap.mapping) {
            case ft:
            case mt:
                d = "ENVMAP_MODE_REFRACTION"
            }
            switch (i.combine) {
            case nt:
                m = "ENVMAP_BLENDING_MULTIPLY";
                break;
            case it:
                m = "ENVMAP_BLENDING_MIX";
                break;
            case rt:
                m = "ENVMAP_BLENDING_ADD"
            }
        }
        var y, b, w, x, M, _ = t.gammaFactor > 0 ? t.gammaFactor : 1, S = a.isWebGL2 ? "" : function(t, e, n) {
            return [(t = t || {}).derivatives || e.envMapCubeUV || e.bumpMap || e.normalMap && !e.objectSpaceNormalMap || e.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (t.fragDepth || e.logarithmicDepthBuffer) && n.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", t.drawBuffers && n.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (t.shaderTextureLOD || e.envMap) && n.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(qr).join("\n")
        }(i.extensions, s, e), T = function(t) {
            var e = [];
            for (var n in t) {
                var i = t[n];
                !1 !== i && e.push("#define " + n + " " + i)
            }
            return e.join("\n")
        }(l), E = c.createProgram();
        if (i.isRawShaderMaterial ? ((y = [T].filter(qr).join("\n")).length > 0 && (y += "\n"),
        (b = [S, T].filter(qr).join("\n")).length > 0 && (b += "\n")) : (y = ["precision " + s.precision + " float;", "precision " + s.precision + " int;", "#define SHADER_NAME " + r.name, T, s.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + _, "#define MAX_BONES " + s.maxBones, s.useFog && s.fog ? "#define USE_FOG" : "", s.useFog && s.fogExp ? "#define FOG_EXP2" : "", s.map ? "#define USE_MAP" : "", s.envMap ? "#define USE_ENVMAP" : "", s.envMap ? "#define " + d : "", s.lightMap ? "#define USE_LIGHTMAP" : "", s.aoMap ? "#define USE_AOMAP" : "", s.emissiveMap ? "#define USE_EMISSIVEMAP" : "", s.bumpMap ? "#define USE_BUMPMAP" : "", s.normalMap ? "#define USE_NORMALMAP" : "", s.normalMap && s.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", s.displacementMap && s.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", s.specularMap ? "#define USE_SPECULARMAP" : "", s.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", s.metalnessMap ? "#define USE_METALNESSMAP" : "", s.alphaMap ? "#define USE_ALPHAMAP" : "", s.vertexTangents ? "#define USE_TANGENT" : "", s.vertexColors ? "#define USE_COLOR" : "", s.flatShading ? "#define FLAT_SHADED" : "", s.skinning ? "#define USE_SKINNING" : "", s.useVertexTexture ? "#define BONE_TEXTURE" : "", s.morphTargets ? "#define USE_MORPHTARGETS" : "", s.morphNormals && !1 === s.flatShading ? "#define USE_MORPHNORMALS" : "", s.doubleSided ? "#define DOUBLE_SIDED" : "", s.flipSided ? "#define FLIP_SIDED" : "", s.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", s.shadowMapEnabled ? "#define " + u : "", s.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", s.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", s.logarithmicDepthBuffer && (a.isWebGL2 || e.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_TANGENT", "\tattribute vec4 tangent;", "#endif", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(qr).join("\n"),
        b = [S, "precision " + s.precision + " float;", "precision " + s.precision + " int;", "#define SHADER_NAME " + r.name, T, s.alphaTest ? "#define ALPHATEST " + s.alphaTest + (s.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + _, s.useFog && s.fog ? "#define USE_FOG" : "", s.useFog && s.fogExp ? "#define FOG_EXP2" : "", s.map ? "#define USE_MAP" : "", s.matcap ? "#define USE_MATCAP" : "", s.envMap ? "#define USE_ENVMAP" : "", s.envMap ? "#define " + f : "", s.envMap ? "#define " + d : "", s.envMap ? "#define " + m : "", s.lightMap ? "#define USE_LIGHTMAP" : "", s.aoMap ? "#define USE_AOMAP" : "", s.emissiveMap ? "#define USE_EMISSIVEMAP" : "", s.bumpMap ? "#define USE_BUMPMAP" : "", s.normalMap ? "#define USE_NORMALMAP" : "", s.normalMap && s.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", s.specularMap ? "#define USE_SPECULARMAP" : "", s.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", s.metalnessMap ? "#define USE_METALNESSMAP" : "", s.alphaMap ? "#define USE_ALPHAMAP" : "", s.vertexTangents ? "#define USE_TANGENT" : "", s.vertexColors ? "#define USE_COLOR" : "", s.gradientMap ? "#define USE_GRADIENTMAP" : "", s.flatShading ? "#define FLAT_SHADED" : "", s.doubleSided ? "#define DOUBLE_SIDED" : "", s.flipSided ? "#define FLIP_SIDED" : "", s.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", s.shadowMapEnabled ? "#define " + u : "", s.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", s.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", s.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", s.logarithmicDepthBuffer && (a.isWebGL2 || e.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", s.envMap && (a.isWebGL2 || e.get("EXT_shader_texture_lod")) ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", s.toneMapping !== st ? "#define TONE_MAPPING" : "", s.toneMapping !== st ? xn.tonemapping_pars_fragment : "", s.toneMapping !== st ? Yr("toneMapping", s.toneMapping) : "", s.dithering ? "#define DITHERING" : "", s.outputEncoding || s.mapEncoding || s.matcapEncoding || s.envMapEncoding || s.emissiveMapEncoding ? xn.encodings_pars_fragment : "", s.mapEncoding ? Wr("mapTexelToLinear", s.mapEncoding) : "", s.matcapEncoding ? Wr("matcapTexelToLinear", s.matcapEncoding) : "", s.envMapEncoding ? Wr("envMapTexelToLinear", s.envMapEncoding) : "", s.emissiveMapEncoding ? Wr("emissiveMapTexelToLinear", s.emissiveMapEncoding) : "", s.outputEncoding ? (w = "linearToOutputTexel",
        x = s.outputEncoding,
        M = Vr(x),
        "vec4 " + w + "( vec4 value ) { return LinearTo" + M[0] + M[1] + "; }") : "", s.depthPacking ? "#define DEPTH_PACKING " + i.depthPacking : "", "\n"].filter(qr).join("\n")),
        p = Zr(p = Xr(p = Kr(p), s), s),
        h = Zr(h = Xr(h = Kr(h), s), s),
        p = Jr(p),
        h = Jr(h),
        a.isWebGL2 && !i.isRawShaderMaterial) {
            var k = !1
              , A = /^\s*#version\s+300\s+es\s*\n/;
            i.isShaderMaterial && null !== p.match(A) && null !== h.match(A) && (k = !0,
            p = p.replace(A, ""),
            h = h.replace(A, "")),
            y = ["#version 300 es\n", "#define attribute in", "#define varying out", "#define texture2D texture"].join("\n") + "\n" + y,
            b = ["#version 300 es\n", "#define varying in", k ? "" : "out highp vec4 pc_fragColor;", k ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join("\n") + "\n" + b
        }
        var L, P, C = b + h, R = Hr(c, 35633, y + p, t.debug.checkShaderErrors), I = Hr(c, 35632, C, t.debug.checkShaderErrors);
        if (c.attachShader(E, R),
        c.attachShader(E, I),
        void 0 !== i.index0AttributeName ? c.bindAttribLocation(E, 0, i.index0AttributeName) : !0 === s.morphTargets && c.bindAttribLocation(E, 0, "position"),
        c.linkProgram(E),
        t.debug.checkShaderErrors) {
            var O = c.getProgramInfoLog(E).trim()
              , D = c.getShaderInfoLog(R).trim()
              , z = c.getShaderInfoLog(I).trim()
              , B = !0
              , N = !0;
            !1 === c.getProgramParameter(E, 35714) ? (B = !1,
            console.error("THREE.WebGLProgram: shader error: ", c.getError(), "35715", c.getProgramParameter(E, 35715), "gl.getProgramInfoLog", O, D, z)) : "" !== O ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", O) : "" !== D && "" !== z || (N = !1),
            N && (this.diagnostics = {
                runnable: B,
                material: i,
                programLog: O,
                vertexShader: {
                    log: D,
                    prefix: y
                },
                fragmentShader: {
                    log: z,
                    prefix: b
                }
            })
        }
        return c.deleteShader(R),
        c.deleteShader(I),
        this.getUniforms = function() {
            return void 0 === L && (L = new Fr(c,E,o)),
            L
        }
        ,
        this.getAttributes = function() {
            return void 0 === P && (P = function(t, e) {
                for (var n = {}, i = t.getProgramParameter(e, 35721), r = 0; r < i; r++) {
                    var s = t.getActiveAttrib(e, r).name;
                    n[s] = t.getAttribLocation(e, s)
                }
                return n
            }(c, E)),
            P
        }
        ,
        this.destroy = function() {
            c.deleteProgram(E),
            this.program = void 0
        }
        ,
        Object.defineProperties(this, {
            uniforms: {
                get: function() {
                    return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),
                    this.getUniforms()
                }
            },
            attributes: {
                get: function() {
                    return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),
                    this.getAttributes()
                }
            }
        }),
        this.name = r.name,
        this.id = Gr++,
        this.code = n,
        this.usedTimes = 1,
        this.program = E,
        this.vertexShader = R,
        this.fragmentShader = I,
        this
    }
    function Qr(t, e, n, i) {
        var r = []
          , s = {
            MeshDepthMaterial: "depth",
            MeshDistanceMaterial: "distanceRGBA",
            MeshNormalMaterial: "normal",
            MeshBasicMaterial: "basic",
            MeshLambertMaterial: "lambert",
            MeshPhongMaterial: "phong",
            MeshToonMaterial: "phong",
            MeshStandardMaterial: "physical",
            MeshPhysicalMaterial: "physical",
            MeshMatcapMaterial: "matcap",
            LineBasicMaterial: "basic",
            LineDashedMaterial: "dashed",
            PointsMaterial: "points",
            ShadowMaterial: "shadow",
            SpriteMaterial: "sprite"
        }
          , a = ["precision", "supportsVertexTextures", "map", "mapEncoding", "matcap", "matcapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "vertexTangents", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering"];
        function o(t, e) {
            var n;
            return t ? t.isTexture ? n = t.encoding : t.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),
            n = t.texture.encoding) : n = Pe,
            n === Pe && e && (n = Re),
            n
        }
        this.getParameters = function(e, i, r, a, c, l, p) {
            var h = s[e.type]
              , u = p.isSkinnedMesh ? function(t) {
                var e = t.skeleton.bones;
                if (n.floatVertexTextures)
                    return 1024;
                var i = n.maxVertexUniforms
                  , r = Math.floor((i - 20) / 4)
                  , s = Math.min(r, e.length);
                return s < e.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + e.length + " bones. This GPU supports " + s + "."),
                0) : s
            }(p) : 0
              , f = n.precision;
            null !== e.precision && (f = n.getMaxPrecision(e.precision)) !== e.precision && console.warn("THREE.WebGLProgram.getParameters:", e.precision, "not supported, using", f, "instead.");
            var d = t.getRenderTarget();
            return {
                shaderID: h,
                precision: f,
                supportsVertexTextures: n.vertexTextures,
                outputEncoding: o(d ? d.texture : null, t.gammaOutput),
                map: !!e.map,
                mapEncoding: o(e.map, t.gammaInput),
                matcap: !!e.matcap,
                matcapEncoding: o(e.matcap, t.gammaInput),
                envMap: !!e.envMap,
                envMapMode: e.envMap && e.envMap.mapping,
                envMapEncoding: o(e.envMap, t.gammaInput),
                envMapCubeUV: !!e.envMap && (e.envMap.mapping === vt || e.envMap.mapping === yt),
                lightMap: !!e.lightMap,
                aoMap: !!e.aoMap,
                emissiveMap: !!e.emissiveMap,
                emissiveMapEncoding: o(e.emissiveMap, t.gammaInput),
                bumpMap: !!e.bumpMap,
                normalMap: !!e.normalMap,
                objectSpaceNormalMap: e.normalMapType === Fe,
                displacementMap: !!e.displacementMap,
                roughnessMap: !!e.roughnessMap,
                metalnessMap: !!e.metalnessMap,
                specularMap: !!e.specularMap,
                alphaMap: !!e.alphaMap,
                gradientMap: !!e.gradientMap,
                combine: e.combine,
                vertexTangents: e.normalMap && e.vertexTangents,
                vertexColors: e.vertexColors,
                fog: !!a,
                useFog: e.fog,
                fogExp: a && a.isFogExp2,
                flatShading: e.flatShading,
                sizeAttenuation: e.sizeAttenuation,
                logarithmicDepthBuffer: n.logarithmicDepthBuffer,
                skinning: e.skinning && u > 0,
                maxBones: u,
                useVertexTexture: n.floatVertexTextures,
                morphTargets: e.morphTargets,
                morphNormals: e.morphNormals,
                maxMorphTargets: t.maxMorphTargets,
                maxMorphNormals: t.maxMorphNormals,
                numDirLights: i.directional.length,
                numPointLights: i.point.length,
                numSpotLights: i.spot.length,
                numRectAreaLights: i.rectArea.length,
                numHemiLights: i.hemi.length,
                numClippingPlanes: c,
                numClipIntersection: l,
                dithering: e.dithering,
                shadowMapEnabled: t.shadowMap.enabled && p.receiveShadow && r.length > 0,
                shadowMapType: t.shadowMap.type,
                toneMapping: t.toneMapping,
                physicallyCorrectLights: t.physicallyCorrectLights,
                premultipliedAlpha: e.premultipliedAlpha,
                alphaTest: e.alphaTest,
                doubleSided: e.side === w,
                flipSided: e.side === b,
                depthPacking: void 0 !== e.depthPacking && e.depthPacking
            }
        }
        ,
        this.getProgramCode = function(e, n) {
            var i = [];
            if (n.shaderID ? i.push(n.shaderID) : (i.push(e.fragmentShader),
            i.push(e.vertexShader)),
            void 0 !== e.defines)
                for (var r in e.defines)
                    i.push(r),
                    i.push(e.defines[r]);
            for (var s = 0; s < a.length; s++)
                i.push(n[a[s]]);
            return i.push(e.onBeforeCompile.toString()),
            i.push(t.gammaOutput),
            i.push(t.gammaFactor),
            i.join()
        }
        ,
        this.acquireProgram = function(s, a, o, c) {
            for (var l, p = 0, h = r.length; p < h; p++) {
                var u = r[p];
                if (u.code === c) {
                    ++(l = u).usedTimes;
                    break
                }
            }
            return void 0 === l && (l = new $r(t,e,c,s,a,o,n,i),
            r.push(l)),
            l
        }
        ,
        this.releaseProgram = function(t) {
            if (0 == --t.usedTimes) {
                var e = r.indexOf(t);
                r[e] = r[r.length - 1],
                r.pop(),
                t.destroy()
            }
        }
        ,
        this.programs = r
    }
    function ts() {
        var t = new WeakMap;
        return {
            get: function(e) {
                var n = t.get(e);
                return void 0 === n && (n = {},
                t.set(e, n)),
                n
            },
            remove: function(e) {
                t.delete(e)
            },
            update: function(e, n, i) {
                t.get(e)[n] = i
            },
            dispose: function() {
                t = new WeakMap
            }
        }
    }
    function es(t, e) {
        return t.groupOrder !== e.groupOrder ? t.groupOrder - e.groupOrder : t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.program !== e.program ? t.program.id - e.program.id : t.material.id !== e.material.id ? t.material.id - e.material.id : t.z !== e.z ? t.z - e.z : t.id - e.id
    }
    function ns(t, e) {
        return t.groupOrder !== e.groupOrder ? t.groupOrder - e.groupOrder : t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : t.id - e.id
    }
    function is() {
        var t = []
          , e = 0
          , n = []
          , i = []
          , r = {
            id: -1
        };
        function s(n, i, s, a, o, c) {
            var l = t[e];
            return void 0 === l ? (l = {
                id: n.id,
                object: n,
                geometry: i,
                material: s,
                program: s.program || r,
                groupOrder: a,
                renderOrder: n.renderOrder,
                z: o,
                group: c
            },
            t[e] = l) : (l.id = n.id,
            l.object = n,
            l.geometry = i,
            l.material = s,
            l.program = s.program || r,
            l.groupOrder = a,
            l.renderOrder = n.renderOrder,
            l.z = o,
            l.group = c),
            e++,
            l
        }
        return {
            opaque: n,
            transparent: i,
            init: function() {
                e = 0,
                n.length = 0,
                i.length = 0
            },
            push: function(t, e, r, a, o, c) {
                var l = s(t, e, r, a, o, c);
                (!0 === r.transparent ? i : n).push(l)
            },
            unshift: function(t, e, r, a, o, c) {
                var l = s(t, e, r, a, o, c);
                (!0 === r.transparent ? i : n).unshift(l)
            },
            sort: function() {
                n.length > 1 && n.sort(es),
                i.length > 1 && i.sort(ns)
            }
        }
    }
    function rs() {
        var t = {};
        function e(n) {
            var i = n.target;
            i.removeEventListener("dispose", e),
            delete t[i.id]
        }
        return {
            get: function(n, i) {
                var r, s = t[n.id];
                return void 0 === s ? (r = new is,
                t[n.id] = {},
                t[n.id][i.id] = r,
                n.addEventListener("dispose", e)) : void 0 === (r = s[i.id]) && (r = new is,
                s[i.id] = r),
                r
            },
            dispose: function() {
                t = {}
            }
        }
    }
    function ss() {
        var t = {};
        return {
            get: function(e) {
                if (void 0 !== t[e.id])
                    return t[e.id];
                var n;
                switch (e.type) {
                case "DirectionalLight":
                    n = {
                        direction: new We,
                        color: new Ln,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new Ge
                    };
                    break;
                case "SpotLight":
                    n = {
                        position: new We,
                        direction: new We,
                        color: new Ln,
                        distance: 0,
                        coneCos: 0,
                        penumbraCos: 0,
                        decay: 0,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new Ge
                    };
                    break;
                case "PointLight":
                    n = {
                        position: new We,
                        color: new Ln,
                        distance: 0,
                        decay: 0,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new Ge,
                        shadowCameraNear: 1,
                        shadowCameraFar: 1e3
                    };
                    break;
                case "HemisphereLight":
                    n = {
                        direction: new We,
                        skyColor: new Ln,
                        groundColor: new Ln
                    };
                    break;
                case "RectAreaLight":
                    n = {
                        color: new Ln,
                        position: new We,
                        halfWidth: new We,
                        halfHeight: new We
                    }
                }
                return t[e.id] = n,
                n
            }
        }
    }
    var as = 0;
    function os() {
        for (var t = new ss, e = {
            id: as++,
            hash: {
                stateID: -1,
                directionalLength: -1,
                pointLength: -1,
                spotLength: -1,
                rectAreaLength: -1,
                hemiLength: -1,
                shadowsLength: -1
            },
            ambient: [0, 0, 0],
            probe: [],
            directional: [],
            directionalShadowMap: [],
            directionalShadowMatrix: [],
            spot: [],
            spotShadowMap: [],
            spotShadowMatrix: [],
            rectArea: [],
            point: [],
            pointShadowMap: [],
            pointShadowMatrix: [],
            hemi: []
        }, n = 0; n < 9; n++)
            e.probe.push(new We);
        var i = new We
          , r = new wn
          , s = new wn;
        return {
            setup: function(n, a, o) {
                for (var c = 0, l = 0, p = 0, h = 0; h < 9; h++)
                    e.probe[h].set(0, 0, 0);
                for (var u = 0, f = 0, d = 0, m = 0, g = 0, v = o.matrixWorldInverse, y = (h = 0,
                n.length); h < y; h++) {
                    var b = n[h]
                      , w = b.color
                      , x = b.intensity
                      , M = b.distance
                      , _ = b.shadow && b.shadow.map ? b.shadow.map.texture : null;
                    if (b.isAmbientLight)
                        c += w.r * x,
                        l += w.g * x,
                        p += w.b * x;
                    else if (b.isLightProbe)
                        for (var S = 0; S < 9; S++)
                            e.probe[S].addScaledVector(b.sh.coefficients[S], x);
                    else if (b.isDirectionalLight) {
                        if ((E = t.get(b)).color.copy(b.color).multiplyScalar(b.intensity),
                        E.direction.setFromMatrixPosition(b.matrixWorld),
                        i.setFromMatrixPosition(b.target.matrixWorld),
                        E.direction.sub(i),
                        E.direction.transformDirection(v),
                        E.shadow = b.castShadow,
                        b.castShadow) {
                            var T = b.shadow;
                            E.shadowBias = T.bias,
                            E.shadowRadius = T.radius,
                            E.shadowMapSize = T.mapSize
                        }
                        e.directionalShadowMap[u] = _,
                        e.directionalShadowMatrix[u] = b.shadow.matrix,
                        e.directional[u] = E,
                        u++
                    } else if (b.isSpotLight)
                        (E = t.get(b)).position.setFromMatrixPosition(b.matrixWorld),
                        E.position.applyMatrix4(v),
                        E.color.copy(w).multiplyScalar(x),
                        E.distance = M,
                        E.direction.setFromMatrixPosition(b.matrixWorld),
                        i.setFromMatrixPosition(b.target.matrixWorld),
                        E.direction.sub(i),
                        E.direction.transformDirection(v),
                        E.coneCos = Math.cos(b.angle),
                        E.penumbraCos = Math.cos(b.angle * (1 - b.penumbra)),
                        E.decay = b.decay,
                        E.shadow = b.castShadow,
                        b.castShadow && (T = b.shadow,
                        E.shadowBias = T.bias,
                        E.shadowRadius = T.radius,
                        E.shadowMapSize = T.mapSize),
                        e.spotShadowMap[d] = _,
                        e.spotShadowMatrix[d] = b.shadow.matrix,
                        e.spot[d] = E,
                        d++;
                    else if (b.isRectAreaLight)
                        (E = t.get(b)).color.copy(w).multiplyScalar(x),
                        E.position.setFromMatrixPosition(b.matrixWorld),
                        E.position.applyMatrix4(v),
                        s.identity(),
                        r.copy(b.matrixWorld),
                        r.premultiply(v),
                        s.extractRotation(r),
                        E.halfWidth.set(.5 * b.width, 0, 0),
                        E.halfHeight.set(0, .5 * b.height, 0),
                        E.halfWidth.applyMatrix4(s),
                        E.halfHeight.applyMatrix4(s),
                        e.rectArea[m] = E,
                        m++;
                    else if (b.isPointLight)
                        (E = t.get(b)).position.setFromMatrixPosition(b.matrixWorld),
                        E.position.applyMatrix4(v),
                        E.color.copy(b.color).multiplyScalar(b.intensity),
                        E.distance = b.distance,
                        E.decay = b.decay,
                        E.shadow = b.castShadow,
                        b.castShadow && (T = b.shadow,
                        E.shadowBias = T.bias,
                        E.shadowRadius = T.radius,
                        E.shadowMapSize = T.mapSize,
                        E.shadowCameraNear = T.camera.near,
                        E.shadowCameraFar = T.camera.far),
                        e.pointShadowMap[f] = _,
                        e.pointShadowMatrix[f] = b.shadow.matrix,
                        e.point[f] = E,
                        f++;
                    else if (b.isHemisphereLight) {
                        var E;
                        (E = t.get(b)).direction.setFromMatrixPosition(b.matrixWorld),
                        E.direction.transformDirection(v),
                        E.direction.normalize(),
                        E.skyColor.copy(b.color).multiplyScalar(x),
                        E.groundColor.copy(b.groundColor).multiplyScalar(x),
                        e.hemi[g] = E,
                        g++
                    }
                }
                e.ambient[0] = c,
                e.ambient[1] = l,
                e.ambient[2] = p,
                e.directional.length = u,
                e.spot.length = d,
                e.rectArea.length = m,
                e.point.length = f,
                e.hemi.length = g,
                e.hash.stateID = e.id,
                e.hash.directionalLength = u,
                e.hash.pointLength = f,
                e.hash.spotLength = d,
                e.hash.rectAreaLength = m,
                e.hash.hemiLength = g,
                e.hash.shadowsLength = a.length
            },
            state: e
        }
    }
    function cs() {
        var t = new os
          , e = []
          , n = [];
        return {
            init: function() {
                e.length = 0,
                n.length = 0
            },
            state: {
                lightsArray: e,
                shadowsArray: n,
                lights: t
            },
            setupLights: function(i) {
                t.setup(e, n, i)
            },
            pushLight: function(t) {
                e.push(t)
            },
            pushShadow: function(t) {
                n.push(t)
            }
        }
    }
    function ls() {
        var t = {};
        function e(n) {
            var i = n.target;
            i.removeEventListener("dispose", e),
            delete t[i.id]
        }
        return {
            get: function(n, i) {
                var r;
                return void 0 === t[n.id] ? (r = new cs,
                t[n.id] = {},
                t[n.id][i.id] = r,
                n.addEventListener("dispose", e)) : void 0 === t[n.id][i.id] ? (r = new cs,
                t[n.id][i.id] = r) : r = t[n.id][i.id],
                r
            },
            dispose: function() {
                t = {}
            }
        }
    }
    function ps(t) {
        di.call(this),
        this.type = "MeshDepthMaterial",
        this.depthPacking = Ne,
        this.skinning = !1,
        this.morphTargets = !1,
        this.map = null,
        this.alphaMap = null,
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.fog = !1,
        this.lights = !1,
        this.setValues(t)
    }
    function hs(t) {
        di.call(this),
        this.type = "MeshDistanceMaterial",
        this.referencePosition = new We,
        this.nearDistance = 1,
        this.farDistance = 1e3,
        this.skinning = !1,
        this.morphTargets = !1,
        this.map = null,
        this.alphaMap = null,
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.fog = !1,
        this.lights = !1,
        this.setValues(t)
    }
    function us(t, e, n) {
        for (var i = new bn, r = new wn, s = new Ge, a = new Ge(n,n), o = new We, c = new We, l = 1, p = 2, h = 1 + (l | p), u = new Array(h), f = new Array(h), d = {}, m = {
            0: b,
            1: y,
            2: w
        }, v = [new We(1,0,0), new We(-1,0,0), new We(0,0,1), new We(0,0,-1), new We(0,1,0), new We(0,-1,0)], x = [new We(0,1,0), new We(0,1,0), new We(0,1,0), new We(0,1,0), new We(0,0,1), new We(0,0,-1)], M = [new hn, new hn, new hn, new hn, new hn, new hn], _ = 0; _ !== h; ++_) {
            var S = 0 != (_ & l)
              , T = 0 != (_ & p)
              , k = new ps({
                depthPacking: je,
                morphTargets: S,
                skinning: T
            });
            u[_] = k;
            var A = new hs({
                morphTargets: S,
                skinning: T
            });
            f[_] = A
        }
        var L = this;
        function P(e, n, i, r, s, a) {
            var o = e.geometry
              , c = null
              , h = u
              , g = e.customDepthMaterial;
            if (i && (h = f,
            g = e.customDistanceMaterial),
            g)
                c = g;
            else {
                var v = !1;
                n.morphTargets && (o && o.isBufferGeometry ? v = o.morphAttributes && o.morphAttributes.position && o.morphAttributes.position.length > 0 : o && o.isGeometry && (v = o.morphTargets && o.morphTargets.length > 0)),
                e.isSkinnedMesh && !1 === n.skinning && console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", e);
                var y = e.isSkinnedMesh && n.skinning
                  , b = 0;
                v && (b |= l),
                y && (b |= p),
                c = h[b]
            }
            if (t.localClippingEnabled && !0 === n.clipShadows && 0 !== n.clippingPlanes.length) {
                var w = c.uuid
                  , x = n.uuid
                  , M = d[w];
                void 0 === M && (M = {},
                d[w] = M);
                var _ = M[x];
                void 0 === _ && (_ = c.clone(),
                M[x] = _),
                c = _
            }
            return c.visible = n.visible,
            c.wireframe = n.wireframe,
            c.side = null != n.shadowSide ? n.shadowSide : m[n.side],
            c.clipShadows = n.clipShadows,
            c.clippingPlanes = n.clippingPlanes,
            c.clipIntersection = n.clipIntersection,
            c.wireframeLinewidth = n.wireframeLinewidth,
            c.linewidth = n.linewidth,
            i && c.isMeshDistanceMaterial && (c.referencePosition.copy(r),
            c.nearDistance = s,
            c.farDistance = a),
            c
        }
        function C(n, r, s, a) {
            if (!1 !== n.visible) {
                if (n.layers.test(r.layers) && (n.isMesh || n.isLine || n.isPoints) && n.castShadow && (!n.frustumCulled || i.intersectsObject(n))) {
                    n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse, n.matrixWorld);
                    var o = e.update(n)
                      , l = n.material;
                    if (Array.isArray(l))
                        for (var p = o.groups, h = 0, u = p.length; h < u; h++) {
                            var f = p[h]
                              , d = l[f.materialIndex];
                            if (d && d.visible) {
                                var m = P(n, d, a, c, s.near, s.far);
                                t.renderBufferDirect(s, null, o, m, n, f)
                            }
                        }
                    else if (l.visible) {
                        m = P(n, l, a, c, s.near, s.far);
                        t.renderBufferDirect(s, null, o, m, n, null)
                    }
                }
                for (var g = n.children, v = 0, y = g.length; v < y; v++)
                    C(g[v], r, s, a)
            }
        }
        this.enabled = !1,
        this.autoUpdate = !0,
        this.needsUpdate = !1,
        this.type = g,
        this.render = function(e, n, l) {
            if (!1 !== L.enabled && (!1 !== L.autoUpdate || !1 !== L.needsUpdate) && 0 !== e.length) {
                var p, h = t.getRenderTarget(), u = t.getActiveCubeFace(), f = t.getActiveMipMapLevel(), d = t.state;
                d.setBlending(E),
                d.buffers.color.setClear(1, 1, 1, 1),
                d.buffers.depth.setTest(!0),
                d.setScissorTest(!1);
                for (var m = 0, g = e.length; m < g; m++) {
                    var y = e[m]
                      , b = y.shadow
                      , w = y && y.isPointLight;
                    if (void 0 !== b) {
                        var _ = b.camera;
                        if (s.copy(b.mapSize),
                        s.min(a),
                        w) {
                            var S = s.x
                              , T = s.y;
                            M[0].set(2 * S, T, S, T),
                            M[1].set(0, T, S, T),
                            M[2].set(3 * S, T, S, T),
                            M[3].set(S, T, S, T),
                            M[4].set(3 * S, 0, S, T),
                            M[5].set(S, 0, S, T),
                            s.x *= 4,
                            s.y *= 2
                        }
                        if (null === b.map) {
                            var k = {
                                minFilter: Mt,
                                magFilter: Mt,
                                format: Ht
                            };
                            b.map = new un(s.x,s.y,k),
                            b.map.texture.name = y.name + ".shadowMap",
                            _.updateProjectionMatrix()
                        }
                        b.isSpotLightShadow && b.update(y);
                        var A = b.map
                          , P = b.matrix;
                        c.setFromMatrixPosition(y.matrixWorld),
                        _.position.copy(c),
                        w ? (p = 6,
                        P.makeTranslation(-c.x, -c.y, -c.z)) : (p = 1,
                        o.setFromMatrixPosition(y.target.matrixWorld),
                        _.lookAt(o),
                        _.updateMatrixWorld(),
                        P.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
                        P.multiply(_.projectionMatrix),
                        P.multiply(_.matrixWorldInverse)),
                        t.setRenderTarget(A),
                        t.clear();
                        for (var R = 0; R < p; R++) {
                            if (w) {
                                o.copy(_.position),
                                o.add(v[R]),
                                _.up.copy(x[R]),
                                _.lookAt(o),
                                _.updateMatrixWorld();
                                var I = M[R];
                                d.viewport(I)
                            }
                            r.multiplyMatrices(_.projectionMatrix, _.matrixWorldInverse),
                            i.setFromMatrix(r),
                            C(n, l, _, w)
                        }
                    } else
                        console.warn("THREE.WebGLShadowMap:", y, "has no shadow.")
                }
                L.needsUpdate = !1,
                t.setRenderTarget(h, u, f)
            }
        }
    }
    function fs(t, e, n, i) {
        var r = new function() {
            var e = !1
              , n = new hn
              , i = null
              , r = new hn(0,0,0,0);
            return {
                setMask: function(n) {
                    i === n || e || (t.colorMask(n, n, n, n),
                    i = n)
                },
                setLocked: function(t) {
                    e = t
                },
                setClear: function(e, i, s, a, o) {
                    !0 === o && (e *= a,
                    i *= a,
                    s *= a),
                    n.set(e, i, s, a),
                    !1 === r.equals(n) && (t.clearColor(e, i, s, a),
                    r.copy(n))
                },
                reset: function() {
                    e = !1,
                    i = null,
                    r.set(-1, 0, 0, 0)
                }
            }
        }
          , s = new function() {
            var e = !1
              , n = null
              , i = null
              , r = null;
            return {
                setTest: function(t) {
                    t ? st(2929) : at(2929)
                },
                setMask: function(i) {
                    n === i || e || (t.depthMask(i),
                    n = i)
                },
                setFunc: function(e) {
                    if (i !== e) {
                        if (e)
                            switch (e) {
                            case X:
                                t.depthFunc(512);
                                break;
                            case Z:
                                t.depthFunc(519);
                                break;
                            case K:
                                t.depthFunc(513);
                                break;
                            case J:
                                t.depthFunc(515);
                                break;
                            case $:
                                t.depthFunc(514);
                                break;
                            case Q:
                                t.depthFunc(518);
                                break;
                            case tt:
                                t.depthFunc(516);
                                break;
                            case et:
                                t.depthFunc(517);
                                break;
                            default:
                                t.depthFunc(515)
                            }
                        else
                            t.depthFunc(515);
                        i = e
                    }
                },
                setLocked: function(t) {
                    e = t
                },
                setClear: function(e) {
                    r !== e && (t.clearDepth(e),
                    r = e)
                },
                reset: function() {
                    e = !1,
                    n = null,
                    i = null,
                    r = null
                }
            }
        }
          , a = new function() {
            var e = !1
              , n = null
              , i = null
              , r = null
              , s = null
              , a = null
              , o = null
              , c = null
              , l = null;
            return {
                setTest: function(t) {
                    t ? st(2960) : at(2960)
                },
                setMask: function(i) {
                    n === i || e || (t.stencilMask(i),
                    n = i)
                },
                setFunc: function(e, n, a) {
                    i === e && r === n && s === a || (t.stencilFunc(e, n, a),
                    i = e,
                    r = n,
                    s = a)
                },
                setOp: function(e, n, i) {
                    a === e && o === n && c === i || (t.stencilOp(e, n, i),
                    a = e,
                    o = n,
                    c = i)
                },
                setLocked: function(t) {
                    e = t
                },
                setClear: function(e) {
                    l !== e && (t.clearStencil(e),
                    l = e)
                },
                reset: function() {
                    e = !1,
                    n = null,
                    i = null,
                    r = null,
                    s = null,
                    a = null,
                    o = null,
                    c = null,
                    l = null
                }
            }
        }
          , o = t.getParameter(34921)
          , c = new Uint8Array(o)
          , u = new Uint8Array(o)
          , f = new Uint8Array(o)
          , d = {}
          , m = null
          , g = null
          , v = null
          , y = null
          , x = null
          , M = null
          , _ = null
          , S = null
          , T = null
          , I = null
          , O = !1
          , D = null
          , z = null
          , B = null
          , N = null
          , j = null
          , U = t.getParameter(35661)
          , F = !1
          , H = 0
          , G = t.getParameter(7938);
        -1 !== G.indexOf("WebGL") ? (H = parseFloat(/^WebGL\ ([0-9])/.exec(G)[1]),
        F = H >= 1) : -1 !== G.indexOf("OpenGL ES") && (H = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(G)[1]),
        F = H >= 2);
        var V = null
          , W = {}
          , Y = new hn
          , q = new hn;
        function nt(e, n, i) {
            var r = new Uint8Array(4)
              , s = t.createTexture();
            t.bindTexture(e, s),
            t.texParameteri(e, 10241, 9728),
            t.texParameteri(e, 10240, 9728);
            for (var a = 0; a < i; a++)
                t.texImage2D(n + a, 0, 6408, 1, 1, 0, 6408, 5121, r);
            return s
        }
        var it = {};
        function rt(n, r) {
            (c[n] = 1,
            0 === u[n] && (t.enableVertexAttribArray(n),
            u[n] = 1),
            f[n] !== r) && ((i.isWebGL2 ? t : e.get("ANGLE_instanced_arrays"))[i.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](n, r),
            f[n] = r)
        }
        function st(e) {
            !0 !== d[e] && (t.enable(e),
            d[e] = !0)
        }
        function at(e) {
            !1 !== d[e] && (t.disable(e),
            d[e] = !1)
        }
        function ot(e, i, r, s, a, o, c, l) {
            if (e !== E) {
                if (v || (st(3042),
                v = !0),
                e === C)
                    a = a || i,
                    o = o || r,
                    c = c || s,
                    i === x && a === S || (t.blendEquationSeparate(n.convert(i), n.convert(a)),
                    x = i,
                    S = a),
                    r === M && s === _ && o === T && c === I || (t.blendFuncSeparate(n.convert(r), n.convert(s), n.convert(o), n.convert(c)),
                    M = r,
                    _ = s,
                    T = o,
                    I = c),
                    y = e,
                    O = null;
                else if (e !== y || l !== O) {
                    if (x === R && S === R || (t.blendEquation(32774),
                    x = R,
                    S = R),
                    l)
                        switch (e) {
                        case k:
                            t.blendFuncSeparate(1, 771, 1, 771);
                            break;
                        case A:
                            t.blendFunc(1, 1);
                            break;
                        case L:
                            t.blendFuncSeparate(0, 0, 769, 771);
                            break;
                        case P:
                            t.blendFuncSeparate(0, 768, 0, 770);
                            break;
                        default:
                            console.error("THREE.WebGLState: Invalid blending: ", e)
                        }
                    else
                        switch (e) {
                        case k:
                            t.blendFuncSeparate(770, 771, 1, 771);
                            break;
                        case A:
                            t.blendFunc(770, 1);
                            break;
                        case L:
                            t.blendFunc(0, 769);
                            break;
                        case P:
                            t.blendFunc(0, 768);
                            break;
                        default:
                            console.error("THREE.WebGLState: Invalid blending: ", e)
                        }
                    M = null,
                    _ = null,
                    T = null,
                    I = null,
                    y = e,
                    O = l
                }
            } else
                v && (at(3042),
                v = !1)
        }
        function ct(e) {
            D !== e && (e ? t.frontFace(2304) : t.frontFace(2305),
            D = e)
        }
        function lt(e) {
            e !== l ? (st(2884),
            e !== z && (e === p ? t.cullFace(1029) : e === h ? t.cullFace(1028) : t.cullFace(1032))) : at(2884),
            z = e
        }
        function pt(e, n, i) {
            e ? (st(32823),
            N === n && j === i || (t.polygonOffset(n, i),
            N = n,
            j = i)) : at(32823)
        }
        function ht(e) {
            void 0 === e && (e = 33984 + U - 1),
            V !== e && (t.activeTexture(e),
            V = e)
        }
        return it[3553] = nt(3553, 3553, 1),
        it[34067] = nt(34067, 34069, 6),
        r.setClear(0, 0, 0, 1),
        s.setClear(1),
        a.setClear(0),
        st(2929),
        s.setFunc(J),
        ct(!1),
        lt(p),
        st(2884),
        ot(E),
        {
            buffers: {
                color: r,
                depth: s,
                stencil: a
            },
            initAttributes: function() {
                for (var t = 0, e = c.length; t < e; t++)
                    c[t] = 0
            },
            enableAttribute: function(t) {
                rt(t, 0)
            },
            enableAttributeAndDivisor: rt,
            disableUnusedAttributes: function() {
                for (var e = 0, n = u.length; e !== n; ++e)
                    u[e] !== c[e] && (t.disableVertexAttribArray(e),
                    u[e] = 0)
            },
            enable: st,
            disable: at,
            getCompressedTextureFormats: function() {
                if (null === m && (m = [],
                e.get("WEBGL_compressed_texture_pvrtc") || e.get("WEBGL_compressed_texture_s3tc") || e.get("WEBGL_compressed_texture_etc1") || e.get("WEBGL_compressed_texture_astc")))
                    for (var n = t.getParameter(34467), i = 0; i < n.length; i++)
                        m.push(n[i]);
                return m
            },
            useProgram: function(e) {
                return g !== e && (t.useProgram(e),
                g = e,
                !0)
            },
            setBlending: ot,
            setMaterial: function(t, e) {
                t.side === w ? at(2884) : st(2884);
                var n = t.side === b;
                e && (n = !n),
                ct(n),
                t.blending === k && !1 === t.transparent ? ot(E) : ot(t.blending, t.blendEquation, t.blendSrc, t.blendDst, t.blendEquationAlpha, t.blendSrcAlpha, t.blendDstAlpha, t.premultipliedAlpha),
                s.setFunc(t.depthFunc),
                s.setTest(t.depthTest),
                s.setMask(t.depthWrite),
                r.setMask(t.colorWrite),
                pt(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits)
            },
            setFlipSided: ct,
            setCullFace: lt,
            setLineWidth: function(e) {
                e !== B && (F && t.lineWidth(e),
                B = e)
            },
            setPolygonOffset: pt,
            setScissorTest: function(t) {
                t ? st(3089) : at(3089)
            },
            activeTexture: ht,
            bindTexture: function(e, n) {
                null === V && ht();
                var i = W[V];
                void 0 === i && (i = {
                    type: void 0,
                    texture: void 0
                },
                W[V] = i),
                i.type === e && i.texture === n || (t.bindTexture(e, n || it[e]),
                i.type = e,
                i.texture = n)
            },
            compressedTexImage2D: function() {
                try {
                    t.compressedTexImage2D.apply(t, arguments)
                } catch (t) {
                    console.error("THREE.WebGLState:", t)
                }
            },
            texImage2D: function() {
                try {
                    t.texImage2D.apply(t, arguments)
                } catch (t) {
                    console.error("THREE.WebGLState:", t)
                }
            },
            texImage3D: function() {
                try {
                    t.texImage3D.apply(t, arguments)
                } catch (t) {
                    console.error("THREE.WebGLState:", t)
                }
            },
            scissor: function(e) {
                !1 === Y.equals(e) && (t.scissor(e.x, e.y, e.z, e.w),
                Y.copy(e))
            },
            viewport: function(e) {
                !1 === q.equals(e) && (t.viewport(e.x, e.y, e.z, e.w),
                q.copy(e))
            },
            reset: function() {
                for (var e = 0; e < u.length; e++)
                    1 === u[e] && (t.disableVertexAttribArray(e),
                    u[e] = 0);
                d = {},
                m = null,
                V = null,
                W = {},
                g = null,
                y = null,
                D = null,
                z = null,
                r.reset(),
                s.reset(),
                a.reset()
            }
        }
    }
    function ds(t, e, n, i, r, s, a) {
        var o, c = {}, l = "undefined" != typeof OffscreenCanvas;
        function p(t, e) {
            return l ? new OffscreenCanvas(t,e) : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
        }
        function h(t, e, n, i) {
            var r = 1;
            if ((t.width > i || t.height > i) && (r = i / Math.max(t.width, t.height)),
            r < 1 || !0 === e) {
                if ("undefined" != typeof HTMLImageElement && t instanceof HTMLImageElement || "undefined" != typeof HTMLCanvasElement && t instanceof HTMLCanvasElement || "undefined" != typeof ImageBitmap && t instanceof ImageBitmap) {
                    var s = e ? He.floorPowerOfTwo : Math.floor
                      , a = s(r * t.width)
                      , c = s(r * t.height);
                    void 0 === o && (o = p(a, c));
                    var l = n ? p(a, c) : o;
                    return l.width = a,
                    l.height = c,
                    l.getContext("2d").drawImage(t, 0, 0, a, c),
                    console.warn("THREE.WebGLRenderer: Texture has been resized from (" + t.width + "x" + t.height + ") to (" + a + "x" + c + ")."),
                    l
                }
                return "data"in t && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + t.width + "x" + t.height + ")."),
                t
            }
            return t
        }
        function u(t) {
            return He.isPowerOfTwo(t.width) && He.isPowerOfTwo(t.height)
        }
        function f(t, e) {
            return t.generateMipmaps && e && t.minFilter !== Mt && t.minFilter !== Tt
        }
        function d(e, n, r, s) {
            t.generateMipmap(e),
            i.get(n).__maxMipLevel = Math.log(Math.max(r, s)) * Math.LOG2E
        }
        function m(t, n) {
            if (!r.isWebGL2)
                return t;
            var i = t;
            return 6403 === t && (5126 === n && (i = 33326),
            5131 === n && (i = 33325),
            5121 === n && (i = 33321)),
            6407 === t && (5126 === n && (i = 34837),
            5131 === n && (i = 34843),
            5121 === n && (i = 32849)),
            6408 === t && (5126 === n && (i = 34836),
            5131 === n && (i = 34842),
            5121 === n && (i = 32856)),
            33325 === i || 33326 === i || 34842 === i || 34836 === i ? e.get("EXT_color_buffer_float") : 34843 !== i && 34837 !== i || console.warn("THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead."),
            i
        }
        function g(t) {
            return t === Mt || t === _t || t === St ? 9728 : 9729
        }
        function v(e) {
            var n = e.target;
            n.removeEventListener("dispose", v),
            function(e) {
                var n = i.get(e);
                if (void 0 === n.__webglInit)
                    return;
                t.deleteTexture(n.__webglTexture),
                i.remove(e)
            }(n),
            n.isVideoTexture && delete c[n.id],
            a.memory.textures--
        }
        function y(e) {
            var n = e.target;
            n.removeEventListener("dispose", y),
            function(e) {
                var n = i.get(e)
                  , r = i.get(e.texture);
                if (!e)
                    return;
                void 0 !== r.__webglTexture && t.deleteTexture(r.__webglTexture);
                e.depthTexture && e.depthTexture.dispose();
                if (e.isWebGLRenderTargetCube)
                    for (var s = 0; s < 6; s++)
                        t.deleteFramebuffer(n.__webglFramebuffer[s]),
                        n.__webglDepthbuffer && t.deleteRenderbuffer(n.__webglDepthbuffer[s]);
                else
                    t.deleteFramebuffer(n.__webglFramebuffer),
                    n.__webglDepthbuffer && t.deleteRenderbuffer(n.__webglDepthbuffer);
                i.remove(e.texture),
                i.remove(e)
            }(n),
            a.memory.textures--
        }
        var b = 0;
        function w(t, e) {
            var r = i.get(t);
            if (t.isVideoTexture && function(t) {
                var e = t.id
                  , n = a.render.frame;
                c[e] !== n && (c[e] = n,
                t.update())
            }(t),
            t.version > 0 && r.__version !== t.version) {
                var s = t.image;
                if (void 0 === s)
                    console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
                else {
                    if (!1 !== s.complete)
                        return void T(r, t, e);
                    console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")
                }
            }
            n.activeTexture(33984 + e),
            n.bindTexture(3553, r.__webglTexture)
        }
        function x(e, a) {
            var o = i.get(e);
            if (6 === e.image.length)
                if (e.version > 0 && o.__version !== e.version) {
                    S(o, e),
                    n.activeTexture(33984 + a),
                    n.bindTexture(34067, o.__webglTexture),
                    t.pixelStorei(37440, e.flipY);
                    for (var c = e && e.isCompressedTexture, l = e.image[0] && e.image[0].isDataTexture, p = [], g = 0; g < 6; g++)
                        p[g] = c || l ? l ? e.image[g].image : e.image[g] : h(e.image[g], !1, !0, r.maxCubemapSize);
                    var v = p[0]
                      , y = u(v) || r.isWebGL2
                      , b = s.convert(e.format)
                      , w = s.convert(e.type)
                      , x = m(b, w);
                    _(34067, e, y);
                    for (g = 0; g < 6; g++)
                        if (c)
                            for (var M, T = p[g].mipmaps, E = 0, k = T.length; E < k; E++)
                                M = T[E],
                                e.format !== Ht && e.format !== Ft ? n.getCompressedTextureFormats().indexOf(b) > -1 ? n.compressedTexImage2D(34069 + g, E, x, M.width, M.height, 0, M.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : n.texImage2D(34069 + g, E, x, M.width, M.height, 0, b, w, M.data);
                        else
                            l ? n.texImage2D(34069 + g, 0, x, p[g].width, p[g].height, 0, b, w, p[g].data) : n.texImage2D(34069 + g, 0, x, b, w, p[g]);
                    o.__maxMipLevel = c ? T.length - 1 : 0,
                    f(e, y) && d(34067, e, v.width, v.height),
                    o.__version = e.version,
                    e.onUpdate && e.onUpdate(e)
                } else
                    n.activeTexture(33984 + a),
                    n.bindTexture(34067, o.__webglTexture)
        }
        function M(t, e) {
            n.activeTexture(33984 + e),
            n.bindTexture(34067, i.get(t).__webglTexture)
        }
        function _(n, a, o) {
            var c;
            if (o ? (t.texParameteri(n, 10242, s.convert(a.wrapS)),
            t.texParameteri(n, 10243, s.convert(a.wrapT)),
            32879 !== n && 35866 !== n || t.texParameteri(n, 32882, s.convert(a.wrapR)),
            t.texParameteri(n, 10240, s.convert(a.magFilter)),
            t.texParameteri(n, 10241, s.convert(a.minFilter))) : (t.texParameteri(n, 10242, 33071),
            t.texParameteri(n, 10243, 33071),
            32879 !== n && 35866 !== n || t.texParameteri(n, 32882, 33071),
            a.wrapS === wt && a.wrapT === wt || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),
            t.texParameteri(n, 10240, g(a.magFilter)),
            t.texParameteri(n, 10241, g(a.minFilter)),
            a.minFilter !== Mt && a.minFilter !== Tt && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),
            c = e.get("EXT_texture_filter_anisotropic")) {
                if (a.type === Ot && null === e.get("OES_texture_float_linear"))
                    return;
                if (a.type === Dt && null === (r.isWebGL2 || e.get("OES_texture_half_float_linear")))
                    return;
                (a.anisotropy > 1 || i.get(a).__currentAnisotropy) && (t.texParameterf(n, c.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(a.anisotropy, r.getMaxAnisotropy())),
                i.get(a).__currentAnisotropy = a.anisotropy)
            }
        }
        function S(e, n) {
            void 0 === e.__webglInit && (e.__webglInit = !0,
            n.addEventListener("dispose", v),
            e.__webglTexture = t.createTexture(),
            a.memory.textures++)
        }
        function T(e, i, a) {
            var o = 3553;
            i.isDataTexture2DArray && (o = 35866),
            i.isDataTexture3D && (o = 32879),
            S(e, i),
            n.activeTexture(33984 + a),
            n.bindTexture(o, e.__webglTexture),
            t.pixelStorei(37440, i.flipY),
            t.pixelStorei(37441, i.premultiplyAlpha),
            t.pixelStorei(3317, i.unpackAlignment);
            var c = function(t) {
                return !r.isWebGL2 && (t.wrapS !== wt || t.wrapT !== wt || t.minFilter !== Mt && t.minFilter !== Tt)
            }(i) && !1 === u(i.image)
              , l = h(i.image, c, !1, r.maxTextureSize)
              , p = u(l) || r.isWebGL2
              , g = s.convert(i.format)
              , v = s.convert(i.type)
              , y = m(g, v);
            _(o, i, p);
            var b, w = i.mipmaps;
            if (i.isDepthTexture) {
                if (y = 6402,
                i.type === Ot) {
                    if (!r.isWebGL2)
                        throw new Error("Float Depth Texture only supported in WebGL2.0");
                    y = 36012
                } else
                    r.isWebGL2 && (y = 33189);
                i.format === Yt && 6402 === y && i.type !== Ct && i.type !== It && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),
                i.type = Ct,
                v = s.convert(i.type)),
                i.format === qt && (y = 34041,
                i.type !== jt && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),
                i.type = jt,
                v = s.convert(i.type))),
                n.texImage2D(3553, 0, y, l.width, l.height, 0, g, v, null)
            } else if (i.isDataTexture)
                if (w.length > 0 && p) {
                    for (var x = 0, M = w.length; x < M; x++)
                        b = w[x],
                        n.texImage2D(3553, x, y, b.width, b.height, 0, g, v, b.data);
                    i.generateMipmaps = !1,
                    e.__maxMipLevel = w.length - 1
                } else
                    n.texImage2D(3553, 0, y, l.width, l.height, 0, g, v, l.data),
                    e.__maxMipLevel = 0;
            else if (i.isCompressedTexture) {
                for (x = 0,
                M = w.length; x < M; x++)
                    b = w[x],
                    i.format !== Ht && i.format !== Ft ? n.getCompressedTextureFormats().indexOf(g) > -1 ? n.compressedTexImage2D(3553, x, y, b.width, b.height, 0, b.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : n.texImage2D(3553, x, y, b.width, b.height, 0, g, v, b.data);
                e.__maxMipLevel = w.length - 1
            } else if (i.isDataTexture2DArray)
                n.texImage3D(35866, 0, y, l.width, l.height, l.depth, 0, g, v, l.data),
                e.__maxMipLevel = 0;
            else if (i.isDataTexture3D)
                n.texImage3D(32879, 0, y, l.width, l.height, l.depth, 0, g, v, l.data),
                e.__maxMipLevel = 0;
            else if (w.length > 0 && p) {
                for (x = 0,
                M = w.length; x < M; x++)
                    b = w[x],
                    n.texImage2D(3553, x, y, g, v, b);
                i.generateMipmaps = !1,
                e.__maxMipLevel = w.length - 1
            } else
                n.texImage2D(3553, 0, y, g, v, l),
                e.__maxMipLevel = 0;
            f(i, p) && d(3553, i, l.width, l.height),
            e.__version = i.version,
            i.onUpdate && i.onUpdate(i)
        }
        function E(e, r, a, o) {
            var c = s.convert(r.texture.format)
              , l = s.convert(r.texture.type)
              , p = m(c, l);
            n.texImage2D(o, 0, p, r.width, r.height, 0, c, l, null),
            t.bindFramebuffer(36160, e),
            t.framebufferTexture2D(36160, a, o, i.get(r.texture).__webglTexture, 0),
            t.bindFramebuffer(36160, null)
        }
        function k(e, n, i) {
            if (t.bindRenderbuffer(36161, e),
            n.depthBuffer && !n.stencilBuffer) {
                if (i) {
                    var r = L(n);
                    t.renderbufferStorageMultisample(36161, r, 33189, n.width, n.height)
                } else
                    t.renderbufferStorage(36161, 33189, n.width, n.height);
                t.framebufferRenderbuffer(36160, 36096, 36161, e)
            } else if (n.depthBuffer && n.stencilBuffer) {
                if (i) {
                    r = L(n);
                    t.renderbufferStorageMultisample(36161, r, 34041, n.width, n.height)
                } else
                    t.renderbufferStorage(36161, 34041, n.width, n.height);
                t.framebufferRenderbuffer(36160, 33306, 36161, e)
            } else {
                var a = m(s.convert(n.texture.format), s.convert(n.texture.type));
                if (i) {
                    r = L(n);
                    t.renderbufferStorageMultisample(36161, r, a, n.width, n.height)
                } else
                    t.renderbufferStorage(36161, a, n.width, n.height)
            }
            t.bindRenderbuffer(36161, null)
        }
        function A(e) {
            var n = i.get(e)
              , r = !0 === e.isWebGLRenderTargetCube;
            if (e.depthTexture) {
                if (r)
                    throw new Error("target.depthTexture not supported in Cube render targets");
                !function(e, n) {
                    if (n && n.isWebGLRenderTargetCube)
                        throw new Error("Depth Texture with cube render targets is not supported");
                    if (t.bindFramebuffer(36160, e),
                    !n.depthTexture || !n.depthTexture.isDepthTexture)
                        throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                    i.get(n.depthTexture).__webglTexture && n.depthTexture.image.width === n.width && n.depthTexture.image.height === n.height || (n.depthTexture.image.width = n.width,
                    n.depthTexture.image.height = n.height,
                    n.depthTexture.needsUpdate = !0),
                    w(n.depthTexture, 0);
                    var r = i.get(n.depthTexture).__webglTexture;
                    if (n.depthTexture.format === Yt)
                        t.framebufferTexture2D(36160, 36096, 3553, r, 0);
                    else {
                        if (n.depthTexture.format !== qt)
                            throw new Error("Unknown depthTexture format");
                        t.framebufferTexture2D(36160, 33306, 3553, r, 0)
                    }
                }(n.__webglFramebuffer, e)
            } else if (r) {
                n.__webglDepthbuffer = [];
                for (var s = 0; s < 6; s++)
                    t.bindFramebuffer(36160, n.__webglFramebuffer[s]),
                    n.__webglDepthbuffer[s] = t.createRenderbuffer(),
                    k(n.__webglDepthbuffer[s], e)
            } else
                t.bindFramebuffer(36160, n.__webglFramebuffer),
                n.__webglDepthbuffer = t.createRenderbuffer(),
                k(n.__webglDepthbuffer, e);
            t.bindFramebuffer(36160, null)
        }
        function L(t) {
            return r.isWebGL2 && t.isWebGLMultisampleRenderTarget ? Math.min(r.maxSamples, t.samples) : 0
        }
        var P = !1
          , C = !1;
        this.allocateTextureUnit = function() {
            var t = b;
            return t >= r.maxTextures && console.warn("THREE.WebGLTextures: Trying to use " + t + " texture units while this GPU supports only " + r.maxTextures),
            b += 1,
            t
        }
        ,
        this.resetTextureUnits = function() {
            b = 0
        }
        ,
        this.setTexture2D = w,
        this.setTexture2DArray = function(t, e) {
            var r = i.get(t);
            t.version > 0 && r.__version !== t.version ? T(r, t, e) : (n.activeTexture(33984 + e),
            n.bindTexture(35866, r.__webglTexture))
        }
        ,
        this.setTexture3D = function(t, e) {
            var r = i.get(t);
            t.version > 0 && r.__version !== t.version ? T(r, t, e) : (n.activeTexture(33984 + e),
            n.bindTexture(32879, r.__webglTexture))
        }
        ,
        this.setTextureCube = x,
        this.setTextureCubeDynamic = M,
        this.setupRenderTarget = function(e) {
            var o = i.get(e)
              , c = i.get(e.texture);
            e.addEventListener("dispose", y),
            c.__webglTexture = t.createTexture(),
            a.memory.textures++;
            var l = !0 === e.isWebGLRenderTargetCube
              , p = !0 === e.isWebGLMultisampleRenderTarget
              , h = u(e) || r.isWebGL2;
            if (l) {
                o.__webglFramebuffer = [];
                for (var g = 0; g < 6; g++)
                    o.__webglFramebuffer[g] = t.createFramebuffer()
            } else if (o.__webglFramebuffer = t.createFramebuffer(),
            p)
                if (r.isWebGL2) {
                    o.__webglMultisampledFramebuffer = t.createFramebuffer(),
                    o.__webglColorRenderbuffer = t.createRenderbuffer(),
                    t.bindRenderbuffer(36161, o.__webglColorRenderbuffer);
                    var v = m(s.convert(e.texture.format), s.convert(e.texture.type))
                      , b = L(e);
                    t.renderbufferStorageMultisample(36161, b, v, e.width, e.height),
                    t.bindFramebuffer(36160, o.__webglMultisampledFramebuffer),
                    t.framebufferRenderbuffer(36160, 36064, 36161, o.__webglColorRenderbuffer),
                    t.bindRenderbuffer(36161, null),
                    e.depthBuffer && (o.__webglDepthRenderbuffer = t.createRenderbuffer(),
                    k(o.__webglDepthRenderbuffer, e, !0)),
                    t.bindFramebuffer(36160, null)
                } else
                    console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
            if (l) {
                for (n.bindTexture(34067, c.__webglTexture),
                _(34067, e.texture, h),
                g = 0; g < 6; g++)
                    E(o.__webglFramebuffer[g], e, 36064, 34069 + g);
                f(e.texture, h) && d(34067, e.texture, e.width, e.height),
                n.bindTexture(34067, null)
            } else
                n.bindTexture(3553, c.__webglTexture),
                _(3553, e.texture, h),
                E(o.__webglFramebuffer, e, 36064, 3553),
                f(e.texture, h) && d(3553, e.texture, e.width, e.height),
                n.bindTexture(3553, null);
            e.depthBuffer && A(e)
        }
        ,
        this.updateRenderTargetMipmap = function(t) {
            var e = t.texture;
            if (f(e, u(t) || r.isWebGL2)) {
                var s = t.isWebGLRenderTargetCube ? 34067 : 3553
                  , a = i.get(e).__webglTexture;
                n.bindTexture(s, a),
                d(s, e, t.width, t.height),
                n.bindTexture(s, null)
            }
        }
        ,
        this.updateMultisampleRenderTarget = function(e) {
            if (e.isWebGLMultisampleRenderTarget)
                if (r.isWebGL2) {
                    var n = i.get(e);
                    t.bindFramebuffer(36008, n.__webglMultisampledFramebuffer),
                    t.bindFramebuffer(36009, n.__webglFramebuffer);
                    var s = e.width
                      , a = e.height
                      , o = 16384;
                    e.depthBuffer && (o |= 256),
                    e.stencilBuffer && (o |= 1024),
                    t.blitFramebuffer(0, 0, s, a, 0, 0, s, a, o, 9728)
                } else
                    console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")
        }
        ,
        this.safeSetTexture2D = function(t, e) {
            t && t.isWebGLRenderTarget && (!1 === P && (console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),
            P = !0),
            t = t.texture),
            w(t, e)
        }
        ,
        this.safeSetTextureCube = function(t, e) {
            t && t.isWebGLRenderTargetCube && (!1 === C && (console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),
            C = !0),
            t = t.texture),
            t && t.isCubeTexture || Array.isArray(t.image) && 6 === t.image.length ? x(t, e) : M(t, e)
        }
    }
    function ms(t, e, n) {
        return {
            convert: function(t) {
                var i;
                if (t === bt)
                    return 10497;
                if (t === wt)
                    return 33071;
                if (t === xt)
                    return 33648;
                if (t === Mt)
                    return 9728;
                if (t === _t)
                    return 9984;
                if (t === St)
                    return 9986;
                if (t === Tt)
                    return 9729;
                if (t === Et)
                    return 9985;
                if (t === kt)
                    return 9987;
                if (t === At)
                    return 5121;
                if (t === zt)
                    return 32819;
                if (t === Bt)
                    return 32820;
                if (t === Nt)
                    return 33635;
                if (t === Lt)
                    return 5120;
                if (t === Pt)
                    return 5122;
                if (t === Ct)
                    return 5123;
                if (t === Rt)
                    return 5124;
                if (t === It)
                    return 5125;
                if (t === Ot)
                    return 5126;
                if (t === Dt) {
                    if (n.isWebGL2)
                        return 5131;
                    if (null !== (i = e.get("OES_texture_half_float")))
                        return i.HALF_FLOAT_OES
                }
                if (t === Ut)
                    return 6406;
                if (t === Ft)
                    return 6407;
                if (t === Ht)
                    return 6408;
                if (t === Gt)
                    return 6409;
                if (t === Vt)
                    return 6410;
                if (t === Yt)
                    return 6402;
                if (t === qt)
                    return 34041;
                if (t === Xt)
                    return 6403;
                if (t === R)
                    return 32774;
                if (t === I)
                    return 32778;
                if (t === O)
                    return 32779;
                if (t === B)
                    return 0;
                if (t === N)
                    return 1;
                if (t === j)
                    return 768;
                if (t === U)
                    return 769;
                if (t === F)
                    return 770;
                if (t === H)
                    return 771;
                if (t === G)
                    return 772;
                if (t === V)
                    return 773;
                if (t === W)
                    return 774;
                if (t === Y)
                    return 775;
                if (t === q)
                    return 776;
                if ((t === Zt || t === Kt || t === Jt || t === $t) && null !== (i = e.get("WEBGL_compressed_texture_s3tc"))) {
                    if (t === Zt)
                        return i.COMPRESSED_RGB_S3TC_DXT1_EXT;
                    if (t === Kt)
                        return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                    if (t === Jt)
                        return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                    if (t === $t)
                        return i.COMPRESSED_RGBA_S3TC_DXT5_EXT
                }
                if ((t === Qt || t === te || t === ee || t === ne) && null !== (i = e.get("WEBGL_compressed_texture_pvrtc"))) {
                    if (t === Qt)
                        return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                    if (t === te)
                        return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                    if (t === ee)
                        return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                    if (t === ne)
                        return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                }
                if (t === ie && null !== (i = e.get("WEBGL_compressed_texture_etc1")))
                    return i.COMPRESSED_RGB_ETC1_WEBGL;
                if ((t === re || t === se || t === ae || t === oe || t === ce || t === le || t === pe || t === he || t === ue || t === fe || t === de || t === me || t === ge || t === ve) && null !== (i = e.get("WEBGL_compressed_texture_astc")))
                    return t;
                if (t === D || t === z) {
                    if (n.isWebGL2) {
                        if (t === D)
                            return 32775;
                        if (t === z)
                            return 32776
                    }
                    if (null !== (i = e.get("EXT_blend_minmax"))) {
                        if (t === D)
                            return i.MIN_EXT;
                        if (t === z)
                            return i.MAX_EXT
                    }
                }
                if (t === jt) {
                    if (n.isWebGL2)
                        return 34042;
                    if (null !== (i = e.get("WEBGL_depth_texture")))
                        return i.UNSIGNED_INT_24_8_WEBGL
                }
                return 0
            }
        }
    }
    function gs() {
        Vn.call(this),
        this.type = "Group"
    }
    function vs() {
        Vn.call(this),
        this.type = "Camera",
        this.matrixWorldInverse = new wn,
        this.projectionMatrix = new wn,
        this.projectionMatrixInverse = new wn
    }
    function ys(t, e, n, i) {
        vs.call(this),
        this.type = "PerspectiveCamera",
        this.fov = void 0 !== t ? t : 50,
        this.zoom = 1,
        this.near = void 0 !== n ? n : .1,
        this.far = void 0 !== i ? i : 2e3,
        this.focus = 10,
        this.aspect = void 0 !== e ? e : 1,
        this.view = null,
        this.filmGauge = 35,
        this.filmOffset = 0,
        this.updateProjectionMatrix()
    }
    function bs(t) {
        ys.call(this),
        this.cameras = t || []
    }
    ps.prototype = Object.create(di.prototype),
    ps.prototype.constructor = ps,
    ps.prototype.isMeshDepthMaterial = !0,
    ps.prototype.copy = function(t) {
        return di.prototype.copy.call(this, t),
        this.depthPacking = t.depthPacking,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.map = t.map,
        this.alphaMap = t.alphaMap,
        this.displacementMap = t.displacementMap,
        this.displacementScale = t.displacementScale,
        this.displacementBias = t.displacementBias,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this
    }
    ,
    hs.prototype = Object.create(di.prototype),
    hs.prototype.constructor = hs,
    hs.prototype.isMeshDistanceMaterial = !0,
    hs.prototype.copy = function(t) {
        return di.prototype.copy.call(this, t),
        this.referencePosition.copy(t.referencePosition),
        this.nearDistance = t.nearDistance,
        this.farDistance = t.farDistance,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.map = t.map,
        this.alphaMap = t.alphaMap,
        this.displacementMap = t.displacementMap,
        this.displacementScale = t.displacementScale,
        this.displacementBias = t.displacementBias,
        this
    }
    ,
    gs.prototype = Object.assign(Object.create(Vn.prototype), {
        constructor: gs,
        isGroup: !0
    }),
    vs.prototype = Object.assign(Object.create(Vn.prototype), {
        constructor: vs,
        isCamera: !0,
        copy: function(t, e) {
            return Vn.prototype.copy.call(this, t, e),
            this.matrixWorldInverse.copy(t.matrixWorldInverse),
            this.projectionMatrix.copy(t.projectionMatrix),
            this.projectionMatrixInverse.copy(t.projectionMatrixInverse),
            this
        },
        getWorldDirection: function(t) {
            void 0 === t && (console.warn("THREE.Camera: .getWorldDirection() target is now required"),
            t = new We),
            this.updateMatrixWorld(!0);
            var e = this.matrixWorld.elements;
            return t.set(-e[8], -e[9], -e[10]).normalize()
        },
        updateMatrixWorld: function(t) {
            Vn.prototype.updateMatrixWorld.call(this, t),
            this.matrixWorldInverse.getInverse(this.matrixWorld)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        }
    }),
    ys.prototype = Object.assign(Object.create(vs.prototype), {
        constructor: ys,
        isPerspectiveCamera: !0,
        copy: function(t, e) {
            return vs.prototype.copy.call(this, t, e),
            this.fov = t.fov,
            this.zoom = t.zoom,
            this.near = t.near,
            this.far = t.far,
            this.focus = t.focus,
            this.aspect = t.aspect,
            this.view = null === t.view ? null : Object.assign({}, t.view),
            this.filmGauge = t.filmGauge,
            this.filmOffset = t.filmOffset,
            this
        },
        setFocalLength: function(t) {
            var e = .5 * this.getFilmHeight() / t;
            this.fov = 2 * He.RAD2DEG * Math.atan(e),
            this.updateProjectionMatrix()
        },
        getFocalLength: function() {
            var t = Math.tan(.5 * He.DEG2RAD * this.fov);
            return .5 * this.getFilmHeight() / t
        },
        getEffectiveFOV: function() {
            return 2 * He.RAD2DEG * Math.atan(Math.tan(.5 * He.DEG2RAD * this.fov) / this.zoom)
        },
        getFilmWidth: function() {
            return this.filmGauge * Math.min(this.aspect, 1)
        },
        getFilmHeight: function() {
            return this.filmGauge / Math.max(this.aspect, 1)
        },
        setViewOffset: function(t, e, n, i, r, s) {
            this.aspect = t / e,
            null === this.view && (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
            }),
            this.view.enabled = !0,
            this.view.fullWidth = t,
            this.view.fullHeight = e,
            this.view.offsetX = n,
            this.view.offsetY = i,
            this.view.width = r,
            this.view.height = s,
            this.updateProjectionMatrix()
        },
        clearViewOffset: function() {
            null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix()
        },
        updateProjectionMatrix: function() {
            var t = this.near
              , e = t * Math.tan(.5 * He.DEG2RAD * this.fov) / this.zoom
              , n = 2 * e
              , i = this.aspect * n
              , r = -.5 * i
              , s = this.view;
            if (null !== this.view && this.view.enabled) {
                var a = s.fullWidth
                  , o = s.fullHeight;
                r += s.offsetX * i / a,
                e -= s.offsetY * n / o,
                i *= s.width / a,
                n *= s.height / o
            }
            var c = this.filmOffset;
            0 !== c && (r += t * c / this.getFilmWidth()),
            this.projectionMatrix.makePerspective(r, r + i, e, e - n, t, this.far),
            this.projectionMatrixInverse.getInverse(this.projectionMatrix)
        },
        toJSON: function(t) {
            var e = Vn.prototype.toJSON.call(this, t);
            return e.object.fov = this.fov,
            e.object.zoom = this.zoom,
            e.object.near = this.near,
            e.object.far = this.far,
            e.object.focus = this.focus,
            e.object.aspect = this.aspect,
            null !== this.view && (e.object.view = Object.assign({}, this.view)),
            e.object.filmGauge = this.filmGauge,
            e.object.filmOffset = this.filmOffset,
            e
        }
    }),
    bs.prototype = Object.assign(Object.create(ys.prototype), {
        constructor: bs,
        isArrayCamera: !0
    });
    var ws, xs, Ms, _s, Ss, Ts, Es = new We, ks = new We;
    function As(t, e, n) {
        Es.setFromMatrixPosition(e.matrixWorld),
        ks.setFromMatrixPosition(n.matrixWorld);
        var i = Es.distanceTo(ks)
          , r = e.projectionMatrix.elements
          , s = n.projectionMatrix.elements
          , a = r[14] / (r[10] - 1)
          , o = r[14] / (r[10] + 1)
          , c = (r[9] + 1) / r[5]
          , l = (r[9] - 1) / r[5]
          , p = (r[8] - 1) / r[0]
          , h = (s[8] + 1) / s[0]
          , u = a * p
          , f = a * h
          , d = i / (-p + h)
          , m = d * -p;
        e.matrixWorld.decompose(t.position, t.quaternion, t.scale),
        t.translateX(m),
        t.translateZ(d),
        t.matrixWorld.compose(t.position, t.quaternion, t.scale),
        t.matrixWorldInverse.getInverse(t.matrixWorld);
        var g = a + d
          , v = o + d
          , y = u - m
          , b = f + (i - m)
          , w = c * o / v * g
          , x = l * o / v * g;
        t.projectionMatrix.makePerspective(y, b, w, x, g, v)
    }
    function Ls(t) {
        var e, n, i = this, r = null, s = null, a = null, o = [], c = new wn, l = new wn, p = 1, h = "local-floor";
        "undefined" != typeof window && "VRFrameData"in window && (s = new window.VRFrameData,
        window.addEventListener("vrdisplaypresentchange", x, !1));
        var u = new wn
          , f = new Ve
          , d = new We
          , m = new ys;
        m.viewport = new hn,
        m.layers.enable(1);
        var g = new ys;
        g.viewport = new hn,
        g.layers.enable(2);
        var v = new bs([m, g]);
        function y() {
            return null !== r && !0 === r.isPresenting
        }
        v.layers.enable(1),
        v.layers.enable(2);
        var b, w = new Ge;
        function x() {
            if (y()) {
                var s = r.getEyeParameters("left");
                e = 2 * s.renderWidth * p,
                n = s.renderHeight * p,
                b = t.getPixelRatio(),
                t.getSize(w),
                t.setDrawingBufferSize(e, n, 1),
                m.viewport.set(0, 0, e / 2, n),
                g.viewport.set(e / 2, 0, e / 2, n),
                T.start()
            } else
                i.enabled && t.setDrawingBufferSize(w.width, w.height, b),
                T.stop()
        }
        var M = [];
        function _(t) {
            for (var e = navigator.getGamepads && navigator.getGamepads(), n = 0, i = 0, r = e.length; n < r; n++) {
                var s = e[n];
                if (s && ("Daydream Controller" === s.id || "Gear VR Controller" === s.id || "Oculus Go Controller" === s.id || "OpenVR Gamepad" === s.id || s.id.startsWith("Oculus Touch") || s.id.startsWith("Spatial Controller"))) {
                    if (i === t)
                        return s;
                    i++
                }
            }
        }
        function S(t, i) {
            null !== i && 4 === i.length && t.set(i[0] * e, i[1] * n, i[2] * e, i[3] * n)
        }
        this.enabled = !1,
        this.getController = function(t) {
            var e = o[t];
            return void 0 === e && ((e = new gs).matrixAutoUpdate = !1,
            e.visible = !1,
            o[t] = e),
            e
        }
        ,
        this.getDevice = function() {
            return r
        }
        ,
        this.setDevice = function(t) {
            void 0 !== t && (r = t),
            T.setContext(t)
        }
        ,
        this.setFramebufferScaleFactor = function(t) {
            p = t
        }
        ,
        this.setReferenceSpaceType = function(t) {
            h = t
        }
        ,
        this.setPoseTarget = function(t) {
            void 0 !== t && (a = t)
        }
        ,
        this.getCamera = function(t) {
            var e = "local-floor" === h ? 1.6 : 0;
            if (!1 === y())
                return t.position.set(0, e, 0),
                t.rotation.set(0, 0, 0),
                t;
            if (r.depthNear = t.near,
            r.depthFar = t.far,
            r.getFrameData(s),
            "local-floor" === h) {
                var n = r.stageParameters;
                n ? c.fromArray(n.sittingToStandingTransform) : c.makeTranslation(0, e, 0)
            }
            var i = s.pose
              , p = null !== a ? a : t;
            p.matrix.copy(c),
            p.matrix.decompose(p.position, p.quaternion, p.scale),
            null !== i.orientation && (f.fromArray(i.orientation),
            p.quaternion.multiply(f)),
            null !== i.position && (f.setFromRotationMatrix(c),
            d.fromArray(i.position),
            d.applyQuaternion(f),
            p.position.add(d)),
            p.updateMatrixWorld(),
            m.near = t.near,
            g.near = t.near,
            m.far = t.far,
            g.far = t.far,
            m.matrixWorldInverse.fromArray(s.leftViewMatrix),
            g.matrixWorldInverse.fromArray(s.rightViewMatrix),
            l.getInverse(c),
            "local-floor" === h && (m.matrixWorldInverse.multiply(l),
            g.matrixWorldInverse.multiply(l));
            var b = p.parent;
            null !== b && (u.getInverse(b.matrixWorld),
            m.matrixWorldInverse.multiply(u),
            g.matrixWorldInverse.multiply(u)),
            m.matrixWorld.getInverse(m.matrixWorldInverse),
            g.matrixWorld.getInverse(g.matrixWorldInverse),
            m.projectionMatrix.fromArray(s.leftProjectionMatrix),
            g.projectionMatrix.fromArray(s.rightProjectionMatrix),
            As(v, m, g);
            var w = r.getLayers();
            if (w.length) {
                var x = w[0];
                S(m.viewport, x.leftBounds),
                S(g.viewport, x.rightBounds)
            }
            return function() {
                for (var t = 0; t < o.length; t++) {
                    var e = o[t]
                      , n = _(t);
                    if (void 0 !== n && void 0 !== n.pose) {
                        if (null === n.pose)
                            return;
                        var i = n.pose;
                        !1 === i.hasPosition && e.position.set(.2, -.6, -.05),
                        null !== i.position && e.position.fromArray(i.position),
                        null !== i.orientation && e.quaternion.fromArray(i.orientation),
                        e.matrix.compose(e.position, e.quaternion, e.scale),
                        e.matrix.premultiply(c),
                        e.matrix.decompose(e.position, e.quaternion, e.scale),
                        e.matrixWorldNeedsUpdate = !0,
                        e.visible = !0;
                        var r = "Daydream Controller" === n.id ? 0 : 1;
                        void 0 === M[t] && (M[t] = !1),
                        M[t] !== n.buttons[r].pressed && (M[t] = n.buttons[r].pressed,
                        !0 === M[t] ? e.dispatchEvent({
                            type: "selectstart"
                        }) : (e.dispatchEvent({
                            type: "selectend"
                        }),
                        e.dispatchEvent({
                            type: "select"
                        })))
                    } else
                        e.visible = !1
                }
            }(),
            v
        }
        ,
        this.getStandingMatrix = function() {
            return c
        }
        ,
        this.isPresenting = y;
        var T = new In;
        this.setAnimationLoop = function(t) {
            T.setAnimationLoop(t),
            y() && T.start()
        }
        ,
        this.submitFrame = function() {
            y() && r.submitFrame()
        }
        ,
        this.dispose = function() {
            "undefined" != typeof window && window.removeEventListener("vrdisplaypresentchange", x)
        }
        ,
        this.setFrameOfReferenceType = function() {
            console.warn("THREE.WebVRManager: setFrameOfReferenceType() has been deprecated.")
        }
    }
    function Ps(t) {
        var e = t.context
          , n = null
          , i = null
          , r = "local-floor"
          , s = null
          , a = []
          , o = [];
        function c() {
            return null !== n && null !== i
        }
        var l = new ys;
        l.layers.enable(1),
        l.viewport = new hn;
        var p = new ys;
        p.layers.enable(2),
        p.viewport = new hn;
        var h = new bs([l, p]);
        function u(t) {
            for (var e = 0; e < a.length; e++)
                o[e] === t.inputSource && a[e].dispatchEvent({
                    type: t.type
                })
        }
        function f() {
            t.setFramebuffer(null),
            t.setRenderTarget(t.getRenderTarget()),
            v.stop()
        }
        function d(t) {
            i = t,
            v.setContext(n),
            v.start()
        }
        function m(t, e) {
            null === e ? t.matrixWorld.copy(t.matrix) : t.matrixWorld.multiplyMatrices(e.matrixWorld, t.matrix),
            t.matrixWorldInverse.getInverse(t.matrixWorld)
        }
        h.layers.enable(1),
        h.layers.enable(2),
        this.enabled = !1,
        this.getController = function(t) {
            var e = a[t];
            return void 0 === e && ((e = new gs).matrixAutoUpdate = !1,
            e.visible = !1,
            a[t] = e),
            e
        }
        ,
        this.setFramebufferScaleFactor = function(t) {}
        ,
        this.setReferenceSpaceType = function(t) {
            r = t
        }
        ,
        this.getSession = function() {
            return n
        }
        ,
        this.setSession = function(t) {
            null !== (n = t) && (n.addEventListener("select", u),
            n.addEventListener("selectstart", u),
            n.addEventListener("selectend", u),
            n.addEventListener("end", f),
            n.updateRenderState({
                baseLayer: new XRWebGLLayer(n,e)
            }),
            n.requestReferenceSpace(r).then(d),
            o = n.inputSources,
            n.addEventListener("inputsourceschange", function() {
                o = n.inputSources,
                console.log(o);
                for (var t = 0; t < a.length; t++) {
                    a[t].userData.inputSource = o[t]
                }
            }))
        }
        ,
        this.getCamera = function(t) {
            if (c()) {
                var e = t.parent
                  , n = h.cameras;
                m(h, e);
                for (var i = 0; i < n.length; i++)
                    m(n[i], e);
                t.matrixWorld.copy(h.matrixWorld);
                for (var r = t.children, s = (i = 0,
                r.length); i < s; i++)
                    r[i].updateMatrixWorld(!0);
                return As(h, l, p),
                h
            }
            return t
        }
        ,
        this.isPresenting = c;
        var g = null;
        var v = new In;
        v.setAnimationLoop(function(e, r) {
            if (null !== (s = r.getViewerPose(i))) {
                var c = s.views
                  , l = n.renderState.baseLayer;
                t.setFramebuffer(l.framebuffer);
                for (var p = 0; p < c.length; p++) {
                    var u = c[p]
                      , f = l.getViewport(u)
                      , d = u.transform.inverse.matrix
                      , m = h.cameras[p];
                    m.matrix.fromArray(d).getInverse(m.matrix),
                    m.projectionMatrix.fromArray(u.projectionMatrix),
                    m.viewport.set(f.x, f.y, f.width, f.height),
                    0 === p && h.matrix.copy(m.matrix)
                }
            }
            for (p = 0; p < a.length; p++) {
                var v = a[p]
                  , y = o[p];
                if (y) {
                    var b = r.getPose(y.targetRaySpace, i);
                    if (null !== b) {
                        v.matrix.fromArray(b.transform.matrix),
                        v.matrix.decompose(v.position, v.rotation, v.scale),
                        v.visible = !0;
                        continue
                    }
                }
                v.visible = !1
            }
            g && g(e)
        }),
        this.setAnimationLoop = function(t) {
            g = t
        }
        ,
        this.dispose = function() {}
        ,
        this.getStandingMatrix = function() {
            return console.warn("THREE.WebXRManager: getStandingMatrix() is no longer needed."),
            new wn
        }
        ,
        this.getDevice = function() {
            console.warn("THREE.WebXRManager: getDevice() has been deprecated.")
        }
        ,
        this.setDevice = function() {
            console.warn("THREE.WebXRManager: setDevice() has been deprecated.")
        }
        ,
        this.setFrameOfReferenceType = function() {
            console.warn("THREE.WebXRManager: setFrameOfReferenceType() has been deprecated.")
        }
        ,
        this.submitFrame = function() {}
    }
    function Cs(t) {
        console.log("THREE.WebGLRenderer", o);
        var e = void 0 !== (t = t || {}).canvas ? t.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
          , n = void 0 !== t.context ? t.context : null
          , i = void 0 !== t.alpha && t.alpha
          , r = void 0 === t.depth || t.depth
          , s = void 0 === t.stencil || t.stencil
          , a = void 0 !== t.antialias && t.antialias
          , c = void 0 === t.premultipliedAlpha || t.premultipliedAlpha
          , l = void 0 !== t.preserveDrawingBuffer && t.preserveDrawingBuffer
          , p = void 0 !== t.powerPreference ? t.powerPreference : "default"
          , h = void 0 !== t.failIfMajorPerformanceCaveat && t.failIfMajorPerformanceCaveat
          , u = null
          , f = null;
        this.domElement = e,
        this.context = null,
        this.debug = {
            checkShaderErrors: !0
        },
        this.autoClear = !0,
        this.autoClearColor = !0,
        this.autoClearDepth = !0,
        this.autoClearStencil = !0,
        this.sortObjects = !0,
        this.clippingPlanes = [],
        this.localClippingEnabled = !1,
        this.gammaFactor = 2,
        this.gammaInput = !1,
        this.gammaOutput = !1,
        this.physicallyCorrectLights = !1,
        this.toneMapping = at,
        this.toneMappingExposure = 1,
        this.toneMappingWhitePoint = 1,
        this.maxMorphTargets = 8,
        this.maxMorphNormals = 4;
        var d, m, g, v, y, w, x, M, _, S, T, E, k, A, L, P, C, R, I = this, O = !1, D = null, z = 0, B = 0, N = null, j = null, U = -1, F = {
            geometry: null,
            program: null,
            wireframe: !1
        }, H = null, G = null, V = new hn, W = new hn, Y = null, q = e.width, X = e.height, Z = 1, K = new hn(0,0,q,X), J = new hn(0,0,q,X), $ = !1, Q = new bn, tt = new Bi, et = !1, nt = !1, it = new wn, rt = new We;
        function st() {
            return null === N ? Z : 1
        }
        try {
            var ot = {
                alpha: i,
                depth: r,
                stencil: s,
                antialias: a,
                premultipliedAlpha: c,
                preserveDrawingBuffer: l,
                powerPreference: p,
                failIfMajorPerformanceCaveat: h,
                xrCompatible: !0
            };
            if (e.addEventListener("webglcontextlost", ht, !1),
            e.addEventListener("webglcontextrestored", ut, !1),
            null === (d = n || e.getContext("webgl", ot) || e.getContext("experimental-webgl", ot)))
                throw null !== e.getContext("webgl") ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
            void 0 === d.getShaderPrecisionFormat && (d.getShaderPrecisionFormat = function() {
                return {
                    rangeMin: 1,
                    rangeMax: 1,
                    precision: 1
                }
            }
            )
        } catch (t) {
            throw console.error("THREE.WebGLRenderer: " + t.message),
            t
        }
        function ct() {
            m = new Ni(d),
            (g = new zi(d,m,t)).isWebGL2 || (m.get("WEBGL_depth_texture"),
            m.get("OES_texture_float"),
            m.get("OES_texture_half_float"),
            m.get("OES_texture_half_float_linear"),
            m.get("OES_standard_derivatives"),
            m.get("OES_element_index_uint"),
            m.get("ANGLE_instanced_arrays")),
            m.get("OES_texture_float_linear"),
            R = new ms(d,m,g),
            (v = new fs(d,m,R,g)).scissor(W.copy(J).multiplyScalar(Z)),
            v.viewport(V.copy(K).multiplyScalar(Z)),
            y = new Fi(d),
            w = new ts,
            x = new ds(d,m,v,w,g,R,y),
            M = new On(d),
            _ = new ji(d,M,y),
            S = new Vi(_,y),
            L = new Gi(d),
            T = new Qr(I,m,g,x),
            E = new rs,
            k = new ls,
            A = new Oi(I,v,S,c),
            P = new Di(d,m,y,g),
            C = new Ui(d,m,y,g),
            y.programs = T.programs,
            I.context = d,
            I.capabilities = g,
            I.extensions = m,
            I.properties = w,
            I.renderLists = E,
            I.state = v,
            I.info = y
        }
        ct();
        var lt = "undefined" != typeof navigator && "xr"in navigator && "supportsSession"in navigator.xr ? new Ps(I) : new Ls(I);
        this.vr = lt;
        var pt = new us(I,S,g.maxTextureSize);
        function ht(t) {
            t.preventDefault(),
            console.log("THREE.WebGLRenderer: Context Lost."),
            O = !0
        }
        function ut() {
            console.log("THREE.WebGLRenderer: Context Restored."),
            O = !1,
            ct()
        }
        function ft(t) {
            var e = t.target;
            e.removeEventListener("dispose", ft),
            function(t) {
                dt(t),
                w.remove(t)
            }(e)
        }
        function dt(t) {
            var e = w.get(t).program;
            t.program = void 0,
            void 0 !== e && T.releaseProgram(e)
        }
        this.shadowMap = pt,
        this.getContext = function() {
            return d
        }
        ,
        this.getContextAttributes = function() {
            return d.getContextAttributes()
        }
        ,
        this.forceContextLoss = function() {
            var t = m.get("WEBGL_lose_context");
            t && t.loseContext()
        }
        ,
        this.forceContextRestore = function() {
            var t = m.get("WEBGL_lose_context");
            t && t.restoreContext()
        }
        ,
        this.getPixelRatio = function() {
            return Z
        }
        ,
        this.setPixelRatio = function(t) {
            void 0 !== t && (Z = t,
            this.setSize(q, X, !1))
        }
        ,
        this.getSize = function(t) {
            return void 0 === t && (console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),
            t = new Ge),
            t.set(q, X)
        }
        ,
        this.setSize = function(t, n, i) {
            lt.isPresenting() ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : (q = t,
            X = n,
            e.width = t * Z,
            e.height = n * Z,
            !1 !== i && (e.style.width = t + "px",
            e.style.height = n + "px"),
            this.setViewport(0, 0, t, n))
        }
        ,
        this.getDrawingBufferSize = function(t) {
            return void 0 === t && (console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),
            t = new Ge),
            t.set(q * Z, X * Z)
        }
        ,
        this.setDrawingBufferSize = function(t, n, i) {
            q = t,
            X = n,
            Z = i,
            e.width = t * i,
            e.height = n * i,
            this.setViewport(0, 0, t, n)
        }
        ,
        this.getCurrentViewport = function(t) {
            return void 0 === t && (console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),
            t = new hn),
            t.copy(V)
        }
        ,
        this.getViewport = function(t) {
            return t.copy(K)
        }
        ,
        this.setViewport = function(t, e, n, i) {
            t.isVector4 ? K.set(t.x, t.y, t.z, t.w) : K.set(t, e, n, i),
            v.viewport(V.copy(K).multiplyScalar(Z))
        }
        ,
        this.getScissor = function(t) {
            return t.copy(J)
        }
        ,
        this.setScissor = function(t, e, n, i) {
            t.isVector4 ? J.set(t.x, t.y, t.z, t.w) : J.set(t, e, n, i),
            v.scissor(W.copy(J).multiplyScalar(Z))
        }
        ,
        this.getScissorTest = function() {
            return $
        }
        ,
        this.setScissorTest = function(t) {
            v.setScissorTest($ = t)
        }
        ,
        this.getClearColor = function() {
            return A.getClearColor()
        }
        ,
        this.setClearColor = function() {
            A.setClearColor.apply(A, arguments)
        }
        ,
        this.getClearAlpha = function() {
            return A.getClearAlpha()
        }
        ,
        this.setClearAlpha = function() {
            A.setClearAlpha.apply(A, arguments)
        }
        ,
        this.clear = function(t, e, n) {
            var i = 0;
            (void 0 === t || t) && (i |= 16384),
            (void 0 === e || e) && (i |= 256),
            (void 0 === n || n) && (i |= 1024),
            d.clear(i)
        }
        ,
        this.clearColor = function() {
            this.clear(!0, !1, !1)
        }
        ,
        this.clearDepth = function() {
            this.clear(!1, !0, !1)
        }
        ,
        this.clearStencil = function() {
            this.clear(!1, !1, !0)
        }
        ,
        this.dispose = function() {
            e.removeEventListener("webglcontextlost", ht, !1),
            e.removeEventListener("webglcontextrestored", ut, !1),
            E.dispose(),
            k.dispose(),
            w.dispose(),
            S.dispose(),
            lt.dispose(),
            gt.stop()
        }
        ,
        this.renderBufferImmediate = function(t, e) {
            v.initAttributes();
            var n = w.get(t);
            t.hasPositions && !n.position && (n.position = d.createBuffer()),
            t.hasNormals && !n.normal && (n.normal = d.createBuffer()),
            t.hasUvs && !n.uv && (n.uv = d.createBuffer()),
            t.hasColors && !n.color && (n.color = d.createBuffer());
            var i = e.getAttributes();
            t.hasPositions && (d.bindBuffer(34962, n.position),
            d.bufferData(34962, t.positionArray, 35048),
            v.enableAttribute(i.position),
            d.vertexAttribPointer(i.position, 3, 5126, !1, 0, 0)),
            t.hasNormals && (d.bindBuffer(34962, n.normal),
            d.bufferData(34962, t.normalArray, 35048),
            v.enableAttribute(i.normal),
            d.vertexAttribPointer(i.normal, 3, 5126, !1, 0, 0)),
            t.hasUvs && (d.bindBuffer(34962, n.uv),
            d.bufferData(34962, t.uvArray, 35048),
            v.enableAttribute(i.uv),
            d.vertexAttribPointer(i.uv, 2, 5126, !1, 0, 0)),
            t.hasColors && (d.bindBuffer(34962, n.color),
            d.bufferData(34962, t.colorArray, 35048),
            v.enableAttribute(i.color),
            d.vertexAttribPointer(i.color, 3, 5126, !1, 0, 0)),
            v.disableUnusedAttributes(),
            d.drawArrays(4, 0, t.count),
            t.count = 0
        }
        ,
        this.renderBufferDirect = function(t, e, n, i, r, s) {
            var a = r.isMesh && r.matrixWorld.determinant() < 0;
            v.setMaterial(i, a);
            var o = wt(t, e, i, r)
              , c = !1;
            F.geometry === n.id && F.program === o.id && F.wireframe === (!0 === i.wireframe) || (F.geometry = n.id,
            F.program = o.id,
            F.wireframe = !0 === i.wireframe,
            c = !0),
            r.morphTargetInfluences && (L.update(r, n, i, o),
            c = !0);
            var l, p = n.index, h = n.attributes.position, u = 1;
            !0 === i.wireframe && (p = _.getWireframeAttribute(n),
            u = 2);
            var f = P;
            null !== p && (l = M.get(p),
            (f = C).setIndex(l)),
            c && (!function(t, e, n) {
                if (n && n.isInstancedBufferGeometry && !g.isWebGL2 && null === m.get("ANGLE_instanced_arrays"))
                    return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                v.initAttributes();
                var i = n.attributes
                  , r = e.getAttributes()
                  , s = t.defaultAttributeValues;
                for (var a in r) {
                    var o = r[a];
                    if (o >= 0) {
                        var c = i[a];
                        if (void 0 !== c) {
                            var l = c.normalized
                              , p = c.itemSize
                              , h = M.get(c);
                            if (void 0 === h)
                                continue;
                            var u = h.buffer
                              , f = h.type
                              , y = h.bytesPerElement;
                            if (c.isInterleavedBufferAttribute) {
                                var b = c.data
                                  , w = b.stride
                                  , x = c.offset;
                                b && b.isInstancedInterleavedBuffer ? (v.enableAttributeAndDivisor(o, b.meshPerAttribute),
                                void 0 === n.maxInstancedCount && (n.maxInstancedCount = b.meshPerAttribute * b.count)) : v.enableAttribute(o),
                                d.bindBuffer(34962, u),
                                d.vertexAttribPointer(o, p, f, l, w * y, x * y)
                            } else
                                c.isInstancedBufferAttribute ? (v.enableAttributeAndDivisor(o, c.meshPerAttribute),
                                void 0 === n.maxInstancedCount && (n.maxInstancedCount = c.meshPerAttribute * c.count)) : v.enableAttribute(o),
                                d.bindBuffer(34962, u),
                                d.vertexAttribPointer(o, p, f, l, 0, 0)
                        } else if (void 0 !== s) {
                            var _ = s[a];
                            if (void 0 !== _)
                                switch (_.length) {
                                case 2:
                                    d.vertexAttrib2fv(o, _);
                                    break;
                                case 3:
                                    d.vertexAttrib3fv(o, _);
                                    break;
                                case 4:
                                    d.vertexAttrib4fv(o, _);
                                    break;
                                default:
                                    d.vertexAttrib1fv(o, _)
                                }
                        }
                    }
                }
                v.disableUnusedAttributes()
            }(i, o, n),
            null !== p && d.bindBuffer(34963, l.buffer));
            var y = 1 / 0;
            null !== p ? y = p.count : void 0 !== h && (y = h.count);
            var b = n.drawRange.start * u
              , w = n.drawRange.count * u
              , x = null !== s ? s.start * u : 0
              , S = null !== s ? s.count * u : 1 / 0
              , T = Math.max(b, x)
              , E = Math.min(y, b + w, x + S) - 1
              , k = Math.max(0, E - T + 1);
            if (0 !== k) {
                if (r.isMesh)
                    if (!0 === i.wireframe)
                        v.setLineWidth(i.wireframeLinewidth * st()),
                        f.setMode(1);
                    else
                        switch (r.drawMode) {
                        case ke:
                            f.setMode(4);
                            break;
                        case Ae:
                            f.setMode(5);
                            break;
                        case Le:
                            f.setMode(6)
                        }
                else if (r.isLine) {
                    var A = i.linewidth;
                    void 0 === A && (A = 1),
                    v.setLineWidth(A * st()),
                    r.isLineSegments ? f.setMode(1) : r.isLineLoop ? f.setMode(2) : f.setMode(3)
                } else
                    r.isPoints ? f.setMode(0) : r.isSprite && f.setMode(4);
                n && n.isInstancedBufferGeometry ? n.maxInstancedCount > 0 && f.renderInstances(n, T, k) : f.render(T, k)
            }
        }
        ,
        this.compile = function(t, e) {
            (f = k.get(t, e)).init(),
            t.traverse(function(t) {
                t.isLight && (f.pushLight(t),
                t.castShadow && f.pushShadow(t))
            }),
            f.setupLights(e),
            t.traverse(function(e) {
                if (e.material)
                    if (Array.isArray(e.material))
                        for (var n = 0; n < e.material.length; n++)
                            bt(e.material[n], t.fog, e);
                    else
                        bt(e.material, t.fog, e)
            })
        }
        ;
        var mt = null;
        var gt = new In;
        function vt(t, e, n, i) {
            for (var r = 0, s = t.length; r < s; r++) {
                var a = t[r]
                  , o = a.object
                  , c = a.geometry
                  , l = void 0 === i ? a.material : i
                  , p = a.group;
                if (n.isArrayCamera) {
                    G = n;
                    for (var h = n.cameras, u = 0, d = h.length; u < d; u++) {
                        var m = h[u];
                        o.layers.test(m.layers) && (v.viewport(V.copy(m.viewport)),
                        f.setupLights(m),
                        yt(o, e, m, c, l, p))
                    }
                } else
                    G = null,
                    yt(o, e, n, c, l, p)
            }
        }
        function yt(t, e, n, i, r, s) {
            if (t.onBeforeRender(I, e, n, i, r, s),
            f = k.get(e, G || n),
            t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, t.matrixWorld),
            t.normalMatrix.getNormalMatrix(t.modelViewMatrix),
            t.isImmediateRenderObject) {
                v.setMaterial(r);
                var a = wt(n, e.fog, r, t);
                F.geometry = null,
                F.program = null,
                F.wireframe = !1,
                function(t, e) {
                    t.render(function(t) {
                        I.renderBufferImmediate(t, e)
                    })
                }(t, a)
            } else
                I.renderBufferDirect(n, e.fog, i, r, t, s);
            t.onAfterRender(I, e, n, i, r, s),
            f = k.get(e, G || n)
        }
        function bt(t, e, n) {
            var i = w.get(t)
              , r = f.state.lights
              , s = f.state.shadowsArray
              , a = i.lightsHash
              , o = r.state.hash
              , c = T.getParameters(t, r.state, s, e, tt.numPlanes, tt.numIntersection, n)
              , l = T.getProgramCode(t, c)
              , p = i.program
              , h = !0;
            if (void 0 === p)
                t.addEventListener("dispose", ft);
            else if (p.code !== l)
                dt(t);
            else if (a.stateID !== o.stateID || a.directionalLength !== o.directionalLength || a.pointLength !== o.pointLength || a.spotLength !== o.spotLength || a.rectAreaLength !== o.rectAreaLength || a.hemiLength !== o.hemiLength || a.shadowsLength !== o.shadowsLength)
                a.stateID = o.stateID,
                a.directionalLength = o.directionalLength,
                a.pointLength = o.pointLength,
                a.spotLength = o.spotLength,
                a.rectAreaLength = o.rectAreaLength,
                a.hemiLength = o.hemiLength,
                a.shadowsLength = o.shadowsLength,
                h = !1;
            else {
                if (void 0 !== c.shaderID)
                    return;
                h = !1
            }
            if (h) {
                if (c.shaderID) {
                    var u = Rn[c.shaderID];
                    i.shader = {
                        name: t.type,
                        uniforms: Mn(u.uniforms),
                        vertexShader: u.vertexShader,
                        fragmentShader: u.fragmentShader
                    }
                } else
                    i.shader = {
                        name: t.type,
                        uniforms: t.uniforms,
                        vertexShader: t.vertexShader,
                        fragmentShader: t.fragmentShader
                    };
                t.onBeforeCompile(i.shader, I),
                l = T.getProgramCode(t, c),
                p = T.acquireProgram(t, i.shader, c, l),
                i.program = p,
                t.program = p
            }
            var d = p.getAttributes();
            if (t.morphTargets) {
                t.numSupportedMorphTargets = 0;
                for (var m = 0; m < I.maxMorphTargets; m++)
                    d["morphTarget" + m] >= 0 && t.numSupportedMorphTargets++
            }
            if (t.morphNormals) {
                t.numSupportedMorphNormals = 0;
                for (m = 0; m < I.maxMorphNormals; m++)
                    d["morphNormal" + m] >= 0 && t.numSupportedMorphNormals++
            }
            var g = i.shader.uniforms;
            (t.isShaderMaterial || t.isRawShaderMaterial) && !0 !== t.clipping || (i.numClippingPlanes = tt.numPlanes,
            i.numIntersection = tt.numIntersection,
            g.clippingPlanes = tt.uniform),
            i.fog = e,
            void 0 === a && (i.lightsHash = a = {}),
            a.stateID = o.stateID,
            a.directionalLength = o.directionalLength,
            a.pointLength = o.pointLength,
            a.spotLength = o.spotLength,
            a.rectAreaLength = o.rectAreaLength,
            a.hemiLength = o.hemiLength,
            a.shadowsLength = o.shadowsLength,
            t.lights && (g.ambientLightColor.value = r.state.ambient,
            g.lightProbe.value = r.state.probe,
            g.directionalLights.value = r.state.directional,
            g.spotLights.value = r.state.spot,
            g.rectAreaLights.value = r.state.rectArea,
            g.pointLights.value = r.state.point,
            g.hemisphereLights.value = r.state.hemi,
            g.directionalShadowMap.value = r.state.directionalShadowMap,
            g.directionalShadowMatrix.value = r.state.directionalShadowMatrix,
            g.spotShadowMap.value = r.state.spotShadowMap,
            g.spotShadowMatrix.value = r.state.spotShadowMatrix,
            g.pointShadowMap.value = r.state.pointShadowMap,
            g.pointShadowMatrix.value = r.state.pointShadowMatrix);
            var v = i.program.getUniforms()
              , y = Fr.seqWithValue(v.seq, g);
            i.uniformsList = y
        }
        function wt(t, e, n, i) {
            x.resetTextureUnits();
            var r = w.get(n)
              , s = f.state.lights
              , a = r.lightsHash
              , o = s.state.hash;
            if (et && (nt || t !== H)) {
                var c = t === H && n.id === U;
                tt.setState(n.clippingPlanes, n.clipIntersection, n.clipShadows, t, r, c)
            }
            !1 === n.needsUpdate && (void 0 === r.program ? n.needsUpdate = !0 : n.fog && r.fog !== e ? n.needsUpdate = !0 : (!n.lights || a.stateID === o.stateID && a.directionalLength === o.directionalLength && a.pointLength === o.pointLength && a.spotLength === o.spotLength && a.rectAreaLength === o.rectAreaLength && a.hemiLength === o.hemiLength && a.shadowsLength === o.shadowsLength) && (void 0 === r.numClippingPlanes || r.numClippingPlanes === tt.numPlanes && r.numIntersection === tt.numIntersection) || (n.needsUpdate = !0)),
            n.needsUpdate && (bt(n, e, i),
            n.needsUpdate = !1);
            var l, p, h = !1, u = !1, m = !1, y = r.program, M = y.getUniforms(), _ = r.shader.uniforms;
            if (v.useProgram(y.program) && (h = !0,
            u = !0,
            m = !0),
            n.id !== U && (U = n.id,
            u = !0),
            h || H !== t) {
                if (M.setValue(d, "projectionMatrix", t.projectionMatrix),
                g.logarithmicDepthBuffer && M.setValue(d, "logDepthBufFC", 2 / (Math.log(t.far + 1) / Math.LN2)),
                H !== t && (H = t,
                u = !0,
                m = !0),
                n.isShaderMaterial || n.isMeshPhongMaterial || n.isMeshStandardMaterial || n.envMap) {
                    var S = M.map.cameraPosition;
                    void 0 !== S && S.setValue(d, rt.setFromMatrixPosition(t.matrixWorld))
                }
                (n.isMeshPhongMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial || n.skinning) && M.setValue(d, "viewMatrix", t.matrixWorldInverse)
            }
            if (n.skinning) {
                M.setOptional(d, i, "bindMatrix"),
                M.setOptional(d, i, "bindMatrixInverse");
                var T = i.skeleton;
                if (T) {
                    var E = T.bones;
                    if (g.floatVertexTextures) {
                        if (void 0 === T.boneTexture) {
                            var k = Math.sqrt(4 * E.length);
                            k = He.ceilPowerOfTwo(k),
                            k = Math.max(k, 4);
                            var A = new Float32Array(k * k * 4);
                            A.set(T.boneMatrices);
                            var L = new mn(A,k,k,Ht,Ot);
                            L.needsUpdate = !0,
                            T.boneMatrices = A,
                            T.boneTexture = L,
                            T.boneTextureSize = k
                        }
                        M.setValue(d, "boneTexture", T.boneTexture, x),
                        M.setValue(d, "boneTextureSize", T.boneTextureSize)
                    } else
                        M.setOptional(d, T, "boneMatrices")
                }
            }
            return u && (M.setValue(d, "toneMappingExposure", I.toneMappingExposure),
            M.setValue(d, "toneMappingWhitePoint", I.toneMappingWhitePoint),
            n.lights && (p = m,
            (l = _).ambientLightColor.needsUpdate = p,
            l.lightProbe.needsUpdate = p,
            l.directionalLights.needsUpdate = p,
            l.pointLights.needsUpdate = p,
            l.spotLights.needsUpdate = p,
            l.rectAreaLights.needsUpdate = p,
            l.hemisphereLights.needsUpdate = p),
            e && n.fog && function(t, e) {
                t.fogColor.value.copy(e.color),
                e.isFog ? (t.fogNear.value = e.near,
                t.fogFar.value = e.far) : e.isFogExp2 && (t.fogDensity.value = e.density)
            }(_, e),
            n.isMeshBasicMaterial ? xt(_, n) : n.isMeshLambertMaterial ? (xt(_, n),
            function(t, e) {
                e.emissiveMap && (t.emissiveMap.value = e.emissiveMap)
            }(_, n)) : n.isMeshPhongMaterial ? (xt(_, n),
            n.isMeshToonMaterial ? function(t, e) {
                Mt(t, e),
                e.gradientMap && (t.gradientMap.value = e.gradientMap)
            }(_, n) : Mt(_, n)) : n.isMeshStandardMaterial ? (xt(_, n),
            n.isMeshPhysicalMaterial ? function(t, e) {
                _t(t, e),
                t.reflectivity.value = e.reflectivity,
                t.clearCoat.value = e.clearCoat,
                t.clearCoatRoughness.value = e.clearCoatRoughness
            }(_, n) : _t(_, n)) : n.isMeshMatcapMaterial ? (xt(_, n),
            function(t, e) {
                e.matcap && (t.matcap.value = e.matcap);
                e.bumpMap && (t.bumpMap.value = e.bumpMap,
                t.bumpScale.value = e.bumpScale,
                e.side === b && (t.bumpScale.value *= -1));
                e.normalMap && (t.normalMap.value = e.normalMap,
                t.normalScale.value.copy(e.normalScale),
                e.side === b && t.normalScale.value.negate());
                e.displacementMap && (t.displacementMap.value = e.displacementMap,
                t.displacementScale.value = e.displacementScale,
                t.displacementBias.value = e.displacementBias)
            }(_, n)) : n.isMeshDepthMaterial ? (xt(_, n),
            function(t, e) {
                e.displacementMap && (t.displacementMap.value = e.displacementMap,
                t.displacementScale.value = e.displacementScale,
                t.displacementBias.value = e.displacementBias)
            }(_, n)) : n.isMeshDistanceMaterial ? (xt(_, n),
            function(t, e) {
                e.displacementMap && (t.displacementMap.value = e.displacementMap,
                t.displacementScale.value = e.displacementScale,
                t.displacementBias.value = e.displacementBias);
                t.referencePosition.value.copy(e.referencePosition),
                t.nearDistance.value = e.nearDistance,
                t.farDistance.value = e.farDistance
            }(_, n)) : n.isMeshNormalMaterial ? (xt(_, n),
            function(t, e) {
                e.bumpMap && (t.bumpMap.value = e.bumpMap,
                t.bumpScale.value = e.bumpScale,
                e.side === b && (t.bumpScale.value *= -1));
                e.normalMap && (t.normalMap.value = e.normalMap,
                t.normalScale.value.copy(e.normalScale),
                e.side === b && t.normalScale.value.negate());
                e.displacementMap && (t.displacementMap.value = e.displacementMap,
                t.displacementScale.value = e.displacementScale,
                t.displacementBias.value = e.displacementBias)
            }(_, n)) : n.isLineBasicMaterial ? (function(t, e) {
                t.diffuse.value.copy(e.color),
                t.opacity.value = e.opacity
            }(_, n),
            n.isLineDashedMaterial && function(t, e) {
                t.dashSize.value = e.dashSize,
                t.totalSize.value = e.dashSize + e.gapSize,
                t.scale.value = e.scale
            }(_, n)) : n.isPointsMaterial ? function(t, e) {
                t.diffuse.value.copy(e.color),
                t.opacity.value = e.opacity,
                t.size.value = e.size * Z,
                t.scale.value = .5 * X,
                t.map.value = e.map,
                null !== e.map && (!0 === e.map.matrixAutoUpdate && e.map.updateMatrix(),
                t.uvTransform.value.copy(e.map.matrix))
            }(_, n) : n.isSpriteMaterial ? function(t, e) {
                t.diffuse.value.copy(e.color),
                t.opacity.value = e.opacity,
                t.rotation.value = e.rotation,
                t.map.value = e.map,
                null !== e.map && (!0 === e.map.matrixAutoUpdate && e.map.updateMatrix(),
                t.uvTransform.value.copy(e.map.matrix))
            }(_, n) : n.isShadowMaterial && (_.color.value.copy(n.color),
            _.opacity.value = n.opacity),
            void 0 !== _.ltc_1 && (_.ltc_1.value = Cn.LTC_1),
            void 0 !== _.ltc_2 && (_.ltc_2.value = Cn.LTC_2),
            Fr.upload(d, r.uniformsList, _, x)),
            n.isShaderMaterial && !0 === n.uniformsNeedUpdate && (Fr.upload(d, r.uniformsList, _, x),
            n.uniformsNeedUpdate = !1),
            n.isSpriteMaterial && M.setValue(d, "center", i.center),
            M.setValue(d, "modelViewMatrix", i.modelViewMatrix),
            M.setValue(d, "normalMatrix", i.normalMatrix),
            M.setValue(d, "modelMatrix", i.matrixWorld),
            y
        }
        function xt(t, e) {
            var n;
            t.opacity.value = e.opacity,
            e.color && t.diffuse.value.copy(e.color),
            e.emissive && t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),
            e.map && (t.map.value = e.map),
            e.alphaMap && (t.alphaMap.value = e.alphaMap),
            e.specularMap && (t.specularMap.value = e.specularMap),
            e.envMap && (t.envMap.value = e.envMap,
            t.flipEnvMap.value = e.envMap.isCubeTexture ? -1 : 1,
            t.reflectivity.value = e.reflectivity,
            t.refractionRatio.value = e.refractionRatio,
            t.maxMipLevel.value = w.get(e.envMap).__maxMipLevel),
            e.lightMap && (t.lightMap.value = e.lightMap,
            t.lightMapIntensity.value = e.lightMapIntensity),
            e.aoMap && (t.aoMap.value = e.aoMap,
            t.aoMapIntensity.value = e.aoMapIntensity),
            e.map ? n = e.map : e.specularMap ? n = e.specularMap : e.displacementMap ? n = e.displacementMap : e.normalMap ? n = e.normalMap : e.bumpMap ? n = e.bumpMap : e.roughnessMap ? n = e.roughnessMap : e.metalnessMap ? n = e.metalnessMap : e.alphaMap ? n = e.alphaMap : e.emissiveMap && (n = e.emissiveMap),
            void 0 !== n && (n.isWebGLRenderTarget && (n = n.texture),
            !0 === n.matrixAutoUpdate && n.updateMatrix(),
            t.uvTransform.value.copy(n.matrix))
        }
        function Mt(t, e) {
            t.specular.value.copy(e.specular),
            t.shininess.value = Math.max(e.shininess, 1e-4),
            e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
            e.bumpMap && (t.bumpMap.value = e.bumpMap,
            t.bumpScale.value = e.bumpScale,
            e.side === b && (t.bumpScale.value *= -1)),
            e.normalMap && (t.normalMap.value = e.normalMap,
            t.normalScale.value.copy(e.normalScale),
            e.side === b && t.normalScale.value.negate()),
            e.displacementMap && (t.displacementMap.value = e.displacementMap,
            t.displacementScale.value = e.displacementScale,
            t.displacementBias.value = e.displacementBias)
        }
        function _t(t, e) {
            t.roughness.value = e.roughness,
            t.metalness.value = e.metalness,
            e.roughnessMap && (t.roughnessMap.value = e.roughnessMap),
            e.metalnessMap && (t.metalnessMap.value = e.metalnessMap),
            e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
            e.bumpMap && (t.bumpMap.value = e.bumpMap,
            t.bumpScale.value = e.bumpScale,
            e.side === b && (t.bumpScale.value *= -1)),
            e.normalMap && (t.normalMap.value = e.normalMap,
            t.normalScale.value.copy(e.normalScale),
            e.side === b && t.normalScale.value.negate()),
            e.displacementMap && (t.displacementMap.value = e.displacementMap,
            t.displacementScale.value = e.displacementScale,
            t.displacementBias.value = e.displacementBias),
            e.envMap && (t.envMapIntensity.value = e.envMapIntensity)
        }
        gt.setAnimationLoop(function(t) {
            lt.isPresenting() || mt && mt(t)
        }),
        "undefined" != typeof window && gt.setContext(window),
        this.setAnimationLoop = function(t) {
            mt = t,
            lt.setAnimationLoop(t),
            gt.start()
        }
        ,
        this.render = function(t, e) {
            var n, i;
            if (void 0 !== arguments[2] && (console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),
            n = arguments[2]),
            void 0 !== arguments[3] && (console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),
            i = arguments[3]),
            e && e.isCamera) {
                if (!O) {
                    F.geometry = null,
                    F.program = null,
                    F.wireframe = !1,
                    U = -1,
                    H = null,
                    !0 === t.autoUpdate && t.updateMatrixWorld(),
                    null === e.parent && e.updateMatrixWorld(),
                    lt.enabled && (e = lt.getCamera(e)),
                    (f = k.get(t, e)).init(),
                    t.onBeforeRender(I, t, e, n || N),
                    it.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse),
                    Q.setFromMatrix(it),
                    nt = this.localClippingEnabled,
                    et = tt.init(this.clippingPlanes, nt, e),
                    (u = E.get(t, e)).init(),
                    function t(e, n, i, r) {
                        if (!1 === e.visible)
                            return;
                        var s = e.layers.test(n.layers);
                        if (s)
                            if (e.isGroup)
                                i = e.renderOrder;
                            else if (e.isLight)
                                f.pushLight(e),
                                e.castShadow && f.pushShadow(e);
                            else if (e.isSprite) {
                                if (!e.frustumCulled || Q.intersectsSprite(e)) {
                                    r && rt.setFromMatrixPosition(e.matrixWorld).applyMatrix4(it);
                                    var a = S.update(e)
                                      , o = e.material;
                                    o.visible && u.push(e, a, o, i, rt.z, null)
                                }
                            } else if (e.isImmediateRenderObject)
                                r && rt.setFromMatrixPosition(e.matrixWorld).applyMatrix4(it),
                                u.push(e, null, e.material, i, rt.z, null);
                            else if ((e.isMesh || e.isLine || e.isPoints) && (e.isSkinnedMesh && e.skeleton.update(),
                            !e.frustumCulled || Q.intersectsObject(e))) {
                                r && rt.setFromMatrixPosition(e.matrixWorld).applyMatrix4(it);
                                var a = S.update(e)
                                  , o = e.material;
                                if (Array.isArray(o))
                                    for (var c = a.groups, l = 0, p = c.length; l < p; l++) {
                                        var h = c[l]
                                          , d = o[h.materialIndex];
                                        d && d.visible && u.push(e, a, d, i, rt.z, h)
                                    }
                                else
                                    o.visible && u.push(e, a, o, i, rt.z, null)
                            }
                        var m = e.children;
                        for (var l = 0, p = m.length; l < p; l++)
                            t(m[l], n, i, r)
                    }(t, e, 0, I.sortObjects),
                    !0 === I.sortObjects && u.sort(),
                    et && tt.beginShadows();
                    var r = f.state.shadowsArray;
                    pt.render(r, t, e),
                    f.setupLights(e),
                    et && tt.endShadows(),
                    this.info.autoReset && this.info.reset(),
                    void 0 !== n && this.setRenderTarget(n),
                    A.render(u, t, e, i);
                    var s = u.opaque
                      , a = u.transparent;
                    if (t.overrideMaterial) {
                        var o = t.overrideMaterial;
                        s.length && vt(s, t, e, o),
                        a.length && vt(a, t, e, o)
                    } else
                        s.length && vt(s, t, e),
                        a.length && vt(a, t, e);
                    t.onAfterRender(I, t, e),
                    null !== N && (x.updateRenderTargetMipmap(N),
                    x.updateMultisampleRenderTarget(N)),
                    v.buffers.depth.setTest(!0),
                    v.buffers.depth.setMask(!0),
                    v.buffers.color.setMask(!0),
                    v.setPolygonOffset(!1),
                    lt.enabled && lt.submitFrame(),
                    u = null,
                    f = null
                }
            } else
                console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")
        }
        ,
        this.setFramebuffer = function(t) {
            D !== t && d.bindFramebuffer(36160, t),
            D = t
        }
        ,
        this.getActiveCubeFace = function() {
            return z
        }
        ,
        this.getActiveMipMapLevel = function() {
            return B
        }
        ,
        this.getRenderTarget = function() {
            return N
        }
        ,
        this.setRenderTarget = function(t, e, n) {
            N = t,
            z = e,
            B = n,
            t && void 0 === w.get(t).__webglFramebuffer && x.setupRenderTarget(t);
            var i = D
              , r = !1;
            if (t) {
                var s = w.get(t).__webglFramebuffer;
                t.isWebGLRenderTargetCube ? (i = s[e || 0],
                r = !0) : i = t.isWebGLMultisampleRenderTarget ? w.get(t).__webglMultisampledFramebuffer : s,
                V.copy(t.viewport),
                W.copy(t.scissor),
                Y = t.scissorTest
            } else
                V.copy(K).multiplyScalar(Z),
                W.copy(J).multiplyScalar(Z),
                Y = $;
            if (j !== i && (d.bindFramebuffer(36160, i),
            j = i),
            v.viewport(V),
            v.scissor(W),
            v.setScissorTest(Y),
            r) {
                var a = w.get(t.texture);
                d.framebufferTexture2D(36160, 36064, 34069 + (e || 0), a.__webglTexture, n || 0)
            }
        }
        ,
        this.readRenderTargetPixels = function(t, e, n, i, r, s, a) {
            if (t && t.isWebGLRenderTarget) {
                var o = w.get(t).__webglFramebuffer;
                if (t.isWebGLRenderTargetCube && void 0 !== a && (o = o[a]),
                o) {
                    var c = !1;
                    o !== j && (d.bindFramebuffer(36160, o),
                    c = !0);
                    try {
                        var l = t.texture
                          , p = l.format
                          , h = l.type;
                        if (p !== Ht && R.convert(p) !== d.getParameter(35739))
                            return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                        if (!(h === At || R.convert(h) === d.getParameter(35738) || h === Ot && (g.isWebGL2 || m.get("OES_texture_float") || m.get("WEBGL_color_buffer_float")) || h === Dt && (g.isWebGL2 ? m.get("EXT_color_buffer_float") : m.get("EXT_color_buffer_half_float"))))
                            return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                        36053 === d.checkFramebufferStatus(36160) ? e >= 0 && e <= t.width - i && n >= 0 && n <= t.height - r && d.readPixels(e, n, i, r, R.convert(p), R.convert(h), s) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")
                    } finally {
                        c && d.bindFramebuffer(36160, j)
                    }
                }
            } else
                console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")
        }
        ,
        this.copyFramebufferToTexture = function(t, e, n) {
            var i = e.image.width
              , r = e.image.height
              , s = R.convert(e.format);
            x.setTexture2D(e, 0),
            d.copyTexImage2D(3553, n || 0, s, t.x, t.y, i, r, 0)
        }
        ,
        this.copyTextureToTexture = function(t, e, n, i) {
            var r = e.image.width
              , s = e.image.height
              , a = R.convert(n.format)
              , o = R.convert(n.type);
            x.setTexture2D(n, 0),
            e.isDataTexture ? d.texSubImage2D(3553, i || 0, t.x, t.y, r, s, a, o, e.image.data) : d.texSubImage2D(3553, i || 0, t.x, t.y, a, o, e.image)
        }
    }
    function Rs(t, e) {
        this.name = "",
        this.color = new Ln(t),
        this.density = void 0 !== e ? e : 25e-5
    }
    function Is(t, e, n) {
        this.name = "",
        this.color = new Ln(t),
        this.near = void 0 !== e ? e : 1,
        this.far = void 0 !== n ? n : 1e3
    }
    function Os() {
        Vn.call(this),
        this.type = "Scene",
        this.background = null,
        this.fog = null,
        this.overrideMaterial = null,
        this.autoUpdate = !0
    }
    function Ds(t, e) {
        this.array = t,
        this.stride = e,
        this.count = void 0 !== t ? t.length / e : 0,
        this.dynamic = !1,
        this.updateRange = {
            offset: 0,
            count: -1
        },
        this.version = 0
    }
    function zs(t, e, n, i) {
        this.data = t,
        this.itemSize = e,
        this.offset = n,
        this.normalized = !0 === i
    }
    function Bs(t) {
        di.call(this),
        this.type = "SpriteMaterial",
        this.color = new Ln(16777215),
        this.map = null,
        this.rotation = 0,
        this.sizeAttenuation = !0,
        this.lights = !1,
        this.transparent = !0,
        this.setValues(t)
    }
    function Ns(t) {
        if (Vn.call(this),
        this.type = "Sprite",
        void 0 === ws) {
            ws = new ci;
            var e = new Ds(new Float32Array([-.5, -.5, 0, 0, 0, .5, -.5, 0, 1, 0, .5, .5, 0, 1, 1, -.5, .5, 0, 0, 1]),5);
            ws.setIndex([0, 1, 2, 0, 2, 3]),
            ws.addAttribute("position", new zs(e,3,0,!1)),
            ws.addAttribute("uv", new zs(e,2,3,!1))
        }
        this.geometry = ws,
        this.material = void 0 !== t ? t : new Bs,
        this.center = new Ge(.5,.5)
    }
    function js() {
        Vn.call(this),
        this.type = "LOD",
        Object.defineProperties(this, {
            levels: {
                enumerable: !0,
                value: []
            }
        })
    }
    function Us(t, e) {
        t && t.isGeometry && console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),
        Ii.call(this, t, e),
        this.type = "SkinnedMesh",
        this.bindMode = "attached",
        this.bindMatrix = new wn,
        this.bindMatrixInverse = new wn
    }
    function Fs(t, e) {
        if (t = t || [],
        this.bones = t.slice(0),
        this.boneMatrices = new Float32Array(16 * this.bones.length),
        void 0 === e)
            this.calculateInverses();
        else if (this.bones.length === e.length)
            this.boneInverses = e.slice(0);
        else {
            console.warn("THREE.Skeleton boneInverses is the wrong length."),
            this.boneInverses = [];
            for (var n = 0, i = this.bones.length; n < i; n++)
                this.boneInverses.push(new wn)
        }
    }
    function Hs() {
        Vn.call(this),
        this.type = "Bone"
    }
    function Gs(t) {
        di.call(this),
        this.type = "LineBasicMaterial",
        this.color = new Ln(16777215),
        this.linewidth = 1,
        this.linecap = "round",
        this.linejoin = "round",
        this.lights = !1,
        this.setValues(t)
    }
    function Vs(t, e, n) {
        1 === n && console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),
        Vn.call(this),
        this.type = "Line",
        this.geometry = void 0 !== t ? t : new ci,
        this.material = void 0 !== e ? e : new Gs({
            color: 16777215 * Math.random()
        })
    }
    function Ws(t, e) {
        Vs.call(this, t, e),
        this.type = "LineSegments"
    }
    function Ys(t, e) {
        Vs.call(this, t, e),
        this.type = "LineLoop"
    }
    function qs(t) {
        di.call(this),
        this.type = "PointsMaterial",
        this.color = new Ln(16777215),
        this.map = null,
        this.size = 1,
        this.sizeAttenuation = !0,
        this.morphTargets = !1,
        this.lights = !1,
        this.setValues(t)
    }
    function Xs(t, e) {
        Vn.call(this),
        this.type = "Points",
        this.geometry = void 0 !== t ? t : new ci,
        this.material = void 0 !== e ? e : new qs({
            color: 16777215 * Math.random()
        })
    }
    function Zs(t, e, n, i, r, s, a, o, c) {
        pn.call(this, t, e, n, i, r, s, a, o, c),
        this.format = void 0 !== a ? a : Ft,
        this.minFilter = void 0 !== s ? s : Tt,
        this.magFilter = void 0 !== r ? r : Tt,
        this.generateMipmaps = !1
    }
    function Ks(t, e, n, i, r, s, a, o, c, l, p, h) {
        pn.call(this, null, s, a, o, c, l, i, r, p, h),
        this.image = {
            width: e,
            height: n
        },
        this.mipmaps = t,
        this.flipY = !1,
        this.generateMipmaps = !1
    }
    function Js(t, e, n, i, r, s, a, o, c) {
        pn.call(this, t, e, n, i, r, s, a, o, c),
        this.needsUpdate = !0
    }
    function $s(t, e, n, i, r, s, a, o, c, l) {
        if ((l = void 0 !== l ? l : Yt) !== Yt && l !== qt)
            throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        void 0 === n && l === Yt && (n = Ct),
        void 0 === n && l === qt && (n = jt),
        pn.call(this, null, i, r, s, a, o, l, n, c),
        this.image = {
            width: t,
            height: e
        },
        this.magFilter = void 0 !== a ? a : Mt,
        this.minFilter = void 0 !== o ? o : Mt,
        this.flipY = !1,
        this.generateMipmaps = !1
    }
    function Qs(t) {
        ci.call(this),
        this.type = "WireframeGeometry";
        var e, n, i, r, s, a, o, c, l, p, h = [], u = [0, 0], f = {}, d = ["a", "b", "c"];
        if (t && t.isGeometry) {
            var m = t.faces;
            for (e = 0,
            i = m.length; e < i; e++) {
                var g = m[e];
                for (n = 0; n < 3; n++)
                    o = g[d[n]],
                    c = g[d[(n + 1) % 3]],
                    u[0] = Math.min(o, c),
                    u[1] = Math.max(o, c),
                    void 0 === f[l = u[0] + "," + u[1]] && (f[l] = {
                        index1: u[0],
                        index2: u[1]
                    })
            }
            for (l in f)
                a = f[l],
                p = t.vertices[a.index1],
                h.push(p.x, p.y, p.z),
                p = t.vertices[a.index2],
                h.push(p.x, p.y, p.z)
        } else if (t && t.isBufferGeometry) {
            var v, y, b, w, x, M, _;
            if (p = new We,
            null !== t.index) {
                for (v = t.attributes.position,
                y = t.index,
                0 === (b = t.groups).length && (b = [{
                    start: 0,
                    count: y.count,
                    materialIndex: 0
                }]),
                r = 0,
                s = b.length; r < s; ++r)
                    for (e = x = (w = b[r]).start,
                    i = x + w.count; e < i; e += 3)
                        for (n = 0; n < 3; n++)
                            o = y.getX(e + n),
                            c = y.getX(e + (n + 1) % 3),
                            u[0] = Math.min(o, c),
                            u[1] = Math.max(o, c),
                            void 0 === f[l = u[0] + "," + u[1]] && (f[l] = {
                                index1: u[0],
                                index2: u[1]
                            });
                for (l in f)
                    a = f[l],
                    p.fromBufferAttribute(v, a.index1),
                    h.push(p.x, p.y, p.z),
                    p.fromBufferAttribute(v, a.index2),
                    h.push(p.x, p.y, p.z)
            } else
                for (e = 0,
                i = (v = t.attributes.position).count / 3; e < i; e++)
                    for (n = 0; n < 3; n++)
                        M = 3 * e + n,
                        p.fromBufferAttribute(v, M),
                        h.push(p.x, p.y, p.z),
                        _ = 3 * e + (n + 1) % 3,
                        p.fromBufferAttribute(v, _),
                        h.push(p.x, p.y, p.z)
        }
        this.addAttribute("position", new ii(h,3))
    }
    function ta(t, e, n) {
        Xn.call(this),
        this.type = "ParametricGeometry",
        this.parameters = {
            func: t,
            slices: e,
            stacks: n
        },
        this.fromBufferGeometry(new ea(t,e,n)),
        this.mergeVertices()
    }
    function ea(t, e, n) {
        ci.call(this),
        this.type = "ParametricBufferGeometry",
        this.parameters = {
            func: t,
            slices: e,
            stacks: n
        };
        var i, r, s = [], a = [], o = [], c = [], l = new We, p = new We, h = new We, u = new We, f = new We;
        t.length < 3 && console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");
        var d = e + 1;
        for (i = 0; i <= n; i++) {
            var m = i / n;
            for (r = 0; r <= e; r++) {
                var g = r / e;
                t(g, m, p),
                a.push(p.x, p.y, p.z),
                g - 1e-5 >= 0 ? (t(g - 1e-5, m, h),
                u.subVectors(p, h)) : (t(g + 1e-5, m, h),
                u.subVectors(h, p)),
                m - 1e-5 >= 0 ? (t(g, m - 1e-5, h),
                f.subVectors(p, h)) : (t(g, m + 1e-5, h),
                f.subVectors(h, p)),
                l.crossVectors(u, f).normalize(),
                o.push(l.x, l.y, l.z),
                c.push(g, m)
            }
        }
        for (i = 0; i < n; i++)
            for (r = 0; r < e; r++) {
                var v = i * d + r
                  , y = i * d + r + 1
                  , b = (i + 1) * d + r + 1
                  , w = (i + 1) * d + r;
                s.push(v, y, w),
                s.push(y, b, w)
            }
        this.setIndex(s),
        this.addAttribute("position", new ii(a,3)),
        this.addAttribute("normal", new ii(o,3)),
        this.addAttribute("uv", new ii(c,2))
    }
    function na(t, e, n, i) {
        Xn.call(this),
        this.type = "PolyhedronGeometry",
        this.parameters = {
            vertices: t,
            indices: e,
            radius: n,
            detail: i
        },
        this.fromBufferGeometry(new ia(t,e,n,i)),
        this.mergeVertices()
    }
    function ia(t, e, n, i) {
        ci.call(this),
        this.type = "PolyhedronBufferGeometry",
        this.parameters = {
            vertices: t,
            indices: e,
            radius: n,
            detail: i
        },
        n = n || 1;
        var r = []
          , s = [];
        function a(t, e, n, i) {
            var r, s, a = Math.pow(2, i), c = [];
            for (r = 0; r <= a; r++) {
                c[r] = [];
                var l = t.clone().lerp(n, r / a)
                  , p = e.clone().lerp(n, r / a)
                  , h = a - r;
                for (s = 0; s <= h; s++)
                    c[r][s] = 0 === s && r === a ? l : l.clone().lerp(p, s / h)
            }
            for (r = 0; r < a; r++)
                for (s = 0; s < 2 * (a - r) - 1; s++) {
                    var u = Math.floor(s / 2);
                    s % 2 == 0 ? (o(c[r][u + 1]),
                    o(c[r + 1][u]),
                    o(c[r][u])) : (o(c[r][u + 1]),
                    o(c[r + 1][u + 1]),
                    o(c[r + 1][u]))
                }
        }
        function o(t) {
            r.push(t.x, t.y, t.z)
        }
        function c(e, n) {
            var i = 3 * e;
            n.x = t[i + 0],
            n.y = t[i + 1],
            n.z = t[i + 2]
        }
        function l(t, e, n, i) {
            i < 0 && 1 === t.x && (s[e] = t.x - 1),
            0 === n.x && 0 === n.z && (s[e] = i / 2 / Math.PI + .5)
        }
        function p(t) {
            return Math.atan2(t.z, -t.x)
        }
        !function(t) {
            for (var n = new We, i = new We, r = new We, s = 0; s < e.length; s += 3)
                c(e[s + 0], n),
                c(e[s + 1], i),
                c(e[s + 2], r),
                a(n, i, r, t)
        }(i = i || 0),
        function(t) {
            for (var e = new We, n = 0; n < r.length; n += 3)
                e.x = r[n + 0],
                e.y = r[n + 1],
                e.z = r[n + 2],
                e.normalize().multiplyScalar(t),
                r[n + 0] = e.x,
                r[n + 1] = e.y,
                r[n + 2] = e.z
        }(n),
        function() {
            for (var t = new We, e = 0; e < r.length; e += 3) {
                t.x = r[e + 0],
                t.y = r[e + 1],
                t.z = r[e + 2];
                var n = p(t) / 2 / Math.PI + .5
                  , i = (a = t,
                Math.atan2(-a.y, Math.sqrt(a.x * a.x + a.z * a.z)) / Math.PI + .5);
                s.push(n, 1 - i)
            }
            var a;
            (function() {
                for (var t = new We, e = new We, n = new We, i = new We, a = new Ge, o = new Ge, c = new Ge, h = 0, u = 0; h < r.length; h += 9,
                u += 6) {
                    t.set(r[h + 0], r[h + 1], r[h + 2]),
                    e.set(r[h + 3], r[h + 4], r[h + 5]),
                    n.set(r[h + 6], r[h + 7], r[h + 8]),
                    a.set(s[u + 0], s[u + 1]),
                    o.set(s[u + 2], s[u + 3]),
                    c.set(s[u + 4], s[u + 5]),
                    i.copy(t).add(e).add(n).divideScalar(3);
                    var f = p(i);
                    l(a, u + 0, t, f),
                    l(o, u + 2, e, f),
                    l(c, u + 4, n, f)
                }
            }
            )(),
            function() {
                for (var t = 0; t < s.length; t += 6) {
                    var e = s[t + 0]
                      , n = s[t + 2]
                      , i = s[t + 4]
                      , r = Math.max(e, n, i)
                      , a = Math.min(e, n, i);
                    r > .9 && a < .1 && (e < .2 && (s[t + 0] += 1),
                    n < .2 && (s[t + 2] += 1),
                    i < .2 && (s[t + 4] += 1))
                }
            }()
        }(),
        this.addAttribute("position", new ii(r,3)),
        this.addAttribute("normal", new ii(r.slice(),3)),
        this.addAttribute("uv", new ii(s,2)),
        0 === i ? this.computeVertexNormals() : this.normalizeNormals()
    }
    function ra(t, e) {
        Xn.call(this),
        this.type = "TetrahedronGeometry",
        this.parameters = {
            radius: t,
            detail: e
        },
        this.fromBufferGeometry(new sa(t,e)),
        this.mergeVertices()
    }
    function sa(t, e) {
        ia.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], t, e),
        this.type = "TetrahedronBufferGeometry",
        this.parameters = {
            radius: t,
            detail: e
        }
    }
    function aa(t, e) {
        Xn.call(this),
        this.type = "OctahedronGeometry",
        this.parameters = {
            radius: t,
            detail: e
        },
        this.fromBufferGeometry(new oa(t,e)),
        this.mergeVertices()
    }
    function oa(t, e) {
        ia.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], t, e),
        this.type = "OctahedronBufferGeometry",
        this.parameters = {
            radius: t,
            detail: e
        }
    }
    function ca(t, e) {
        Xn.call(this),
        this.type = "IcosahedronGeometry",
        this.parameters = {
            radius: t,
            detail: e
        },
        this.fromBufferGeometry(new la(t,e)),
        this.mergeVertices()
    }
    function la(t, e) {
        var n = (1 + Math.sqrt(5)) / 2
          , i = [-1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1];
        ia.call(this, i, [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], t, e),
        this.type = "IcosahedronBufferGeometry",
        this.parameters = {
            radius: t,
            detail: e
        }
    }
    function pa(t, e) {
        Xn.call(this),
        this.type = "DodecahedronGeometry",
        this.parameters = {
            radius: t,
            detail: e
        },
        this.fromBufferGeometry(new ha(t,e)),
        this.mergeVertices()
    }
    function ha(t, e) {
        var n = (1 + Math.sqrt(5)) / 2
          , i = 1 / n
          , r = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, 0, -n, 0, -i, n, 0, -i, -n, 0, i, n, 0, i];
        ia.call(this, r, [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], t, e),
        this.type = "DodecahedronBufferGeometry",
        this.parameters = {
            radius: t,
            detail: e
        }
    }
    function ua(t, e, n, i, r, s) {
        Xn.call(this),
        this.type = "TubeGeometry",
        this.parameters = {
            path: t,
            tubularSegments: e,
            radius: n,
            radialSegments: i,
            closed: r
        },
        void 0 !== s && console.warn("THREE.TubeGeometry: taper has been removed.");
        var a = new fa(t,e,n,i,r);
        this.tangents = a.tangents,
        this.normals = a.normals,
        this.binormals = a.binormals,
        this.fromBufferGeometry(a),
        this.mergeVertices()
    }
    function fa(t, e, n, i, r) {
        ci.call(this),
        this.type = "TubeBufferGeometry",
        this.parameters = {
            path: t,
            tubularSegments: e,
            radius: n,
            radialSegments: i,
            closed: r
        },
        e = e || 64,
        n = n || 1,
        i = i || 8,
        r = r || !1;
        var s = t.computeFrenetFrames(e, r);
        this.tangents = s.tangents,
        this.normals = s.normals,
        this.binormals = s.binormals;
        var a, o, c = new We, l = new We, p = new Ge, h = new We, u = [], f = [], d = [], m = [];
        function g(r) {
            h = t.getPointAt(r / e, h);
            var a = s.normals[r]
              , p = s.binormals[r];
            for (o = 0; o <= i; o++) {
                var d = o / i * Math.PI * 2
                  , m = Math.sin(d)
                  , g = -Math.cos(d);
                l.x = g * a.x + m * p.x,
                l.y = g * a.y + m * p.y,
                l.z = g * a.z + m * p.z,
                l.normalize(),
                f.push(l.x, l.y, l.z),
                c.x = h.x + n * l.x,
                c.y = h.y + n * l.y,
                c.z = h.z + n * l.z,
                u.push(c.x, c.y, c.z)
            }
        }
        !function() {
            for (a = 0; a < e; a++)
                g(a);
            g(!1 === r ? e : 0),
            function() {
                for (a = 0; a <= e; a++)
                    for (o = 0; o <= i; o++)
                        p.x = a / e,
                        p.y = o / i,
                        d.push(p.x, p.y)
            }(),
            function() {
                for (o = 1; o <= e; o++)
                    for (a = 1; a <= i; a++) {
                        var t = (i + 1) * (o - 1) + (a - 1)
                          , n = (i + 1) * o + (a - 1)
                          , r = (i + 1) * o + a
                          , s = (i + 1) * (o - 1) + a;
                        m.push(t, n, s),
                        m.push(n, r, s)
                    }
            }()
        }(),
        this.setIndex(m),
        this.addAttribute("position", new ii(u,3)),
        this.addAttribute("normal", new ii(f,3)),
        this.addAttribute("uv", new ii(d,2))
    }
    function da(t, e, n, i, r, s, a) {
        Xn.call(this),
        this.type = "TorusKnotGeometry",
        this.parameters = {
            radius: t,
            tube: e,
            tubularSegments: n,
            radialSegments: i,
            p: r,
            q: s
        },
        void 0 !== a && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),
        this.fromBufferGeometry(new ma(t,e,n,i,r,s)),
        this.mergeVertices()
    }
    function ma(t, e, n, i, r, s) {
        ci.call(this),
        this.type = "TorusKnotBufferGeometry",
        this.parameters = {
            radius: t,
            tube: e,
            tubularSegments: n,
            radialSegments: i,
            p: r,
            q: s
        },
        t = t || 1,
        e = e || .4,
        n = Math.floor(n) || 64,
        i = Math.floor(i) || 8,
        r = r || 2,
        s = s || 3;
        var a, o, c = [], l = [], p = [], h = [], u = new We, f = new We, d = new We, m = new We, g = new We, v = new We, y = new We;
        for (a = 0; a <= n; ++a) {
            var b = a / n * r * Math.PI * 2;
            for (k(b, r, s, t, d),
            k(b + .01, r, s, t, m),
            v.subVectors(m, d),
            y.addVectors(m, d),
            g.crossVectors(v, y),
            y.crossVectors(g, v),
            g.normalize(),
            y.normalize(),
            o = 0; o <= i; ++o) {
                var w = o / i * Math.PI * 2
                  , x = -e * Math.cos(w)
                  , M = e * Math.sin(w);
                u.x = d.x + (x * y.x + M * g.x),
                u.y = d.y + (x * y.y + M * g.y),
                u.z = d.z + (x * y.z + M * g.z),
                l.push(u.x, u.y, u.z),
                f.subVectors(u, d).normalize(),
                p.push(f.x, f.y, f.z),
                h.push(a / n),
                h.push(o / i)
            }
        }
        for (o = 1; o <= n; o++)
            for (a = 1; a <= i; a++) {
                var _ = (i + 1) * (o - 1) + (a - 1)
                  , S = (i + 1) * o + (a - 1)
                  , T = (i + 1) * o + a
                  , E = (i + 1) * (o - 1) + a;
                c.push(_, S, E),
                c.push(S, T, E)
            }
        function k(t, e, n, i, r) {
            var s = Math.cos(t)
              , a = Math.sin(t)
              , o = n / e * t
              , c = Math.cos(o);
            r.x = i * (2 + c) * .5 * s,
            r.y = i * (2 + c) * a * .5,
            r.z = i * Math.sin(o) * .5
        }
        this.setIndex(c),
        this.addAttribute("position", new ii(l,3)),
        this.addAttribute("normal", new ii(p,3)),
        this.addAttribute("uv", new ii(h,2))
    }
    function ga(t, e, n, i, r) {
        Xn.call(this),
        this.type = "TorusGeometry",
        this.parameters = {
            radius: t,
            tube: e,
            radialSegments: n,
            tubularSegments: i,
            arc: r
        },
        this.fromBufferGeometry(new va(t,e,n,i,r)),
        this.mergeVertices()
    }
    function va(t, e, n, i, r) {
        ci.call(this),
        this.type = "TorusBufferGeometry",
        this.parameters = {
            radius: t,
            tube: e,
            radialSegments: n,
            tubularSegments: i,
            arc: r
        },
        t = t || 1,
        e = e || .4,
        n = Math.floor(n) || 8,
        i = Math.floor(i) || 6,
        r = r || 2 * Math.PI;
        var s, a, o = [], c = [], l = [], p = [], h = new We, u = new We, f = new We;
        for (s = 0; s <= n; s++)
            for (a = 0; a <= i; a++) {
                var d = a / i * r
                  , m = s / n * Math.PI * 2;
                u.x = (t + e * Math.cos(m)) * Math.cos(d),
                u.y = (t + e * Math.cos(m)) * Math.sin(d),
                u.z = e * Math.sin(m),
                c.push(u.x, u.y, u.z),
                h.x = t * Math.cos(d),
                h.y = t * Math.sin(d),
                f.subVectors(u, h).normalize(),
                l.push(f.x, f.y, f.z),
                p.push(a / i),
                p.push(s / n)
            }
        for (s = 1; s <= n; s++)
            for (a = 1; a <= i; a++) {
                var g = (i + 1) * s + a - 1
                  , v = (i + 1) * (s - 1) + a - 1
                  , y = (i + 1) * (s - 1) + a
                  , b = (i + 1) * s + a;
                o.push(g, v, b),
                o.push(v, y, b)
            }
        this.setIndex(o),
        this.addAttribute("position", new ii(c,3)),
        this.addAttribute("normal", new ii(l,3)),
        this.addAttribute("uv", new ii(p,2))
    }
    Object.assign(Rs.prototype, {
        isFogExp2: !0,
        clone: function() {
            return new Rs(this.color,this.density)
        },
        toJSON: function() {
            return {
                type: "FogExp2",
                color: this.color.getHex(),
                density: this.density
            }
        }
    }),
    Object.assign(Is.prototype, {
        isFog: !0,
        clone: function() {
            return new Is(this.color,this.near,this.far)
        },
        toJSON: function() {
            return {
                type: "Fog",
                color: this.color.getHex(),
                near: this.near,
                far: this.far
            }
        }
    }),
    Os.prototype = Object.assign(Object.create(Vn.prototype), {
        constructor: Os,
        isScene: !0,
        copy: function(t, e) {
            return Vn.prototype.copy.call(this, t, e),
            null !== t.background && (this.background = t.background.clone()),
            null !== t.fog && (this.fog = t.fog.clone()),
            null !== t.overrideMaterial && (this.overrideMaterial = t.overrideMaterial.clone()),
            this.autoUpdate = t.autoUpdate,
            this.matrixAutoUpdate = t.matrixAutoUpdate,
            this
        },
        toJSON: function(t) {
            var e = Vn.prototype.toJSON.call(this, t);
            return null !== this.background && (e.object.background = this.background.toJSON(t)),
            null !== this.fog && (e.object.fog = this.fog.toJSON()),
            e
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
    Object.defineProperty(Ds.prototype, "needsUpdate", {
        set: function(t) {
            !0 === t && this.version++
        }
    }),
    Object.assign(Ds.prototype, {
        isInterleavedBuffer: !0,
        onUploadCallback: function() {},
        setArray: function(t) {
            if (Array.isArray(t))
                throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
            return this.count = void 0 !== t ? t.length / this.stride : 0,
            this.array = t,
            this
        },
        setDynamic: function(t) {
            return this.dynamic = t,
            this
        },
        copy: function(t) {
            return this.array = new t.array.constructor(t.array),
            this.count = t.count,
            this.stride = t.stride,
            this.dynamic = t.dynamic,
            this
        },
        copyAt: function(t, e, n) {
            t *= this.stride,
            n *= e.stride;
            for (var i = 0, r = this.stride; i < r; i++)
                this.array[t + i] = e.array[n + i];
            return this
        },
        set: function(t, e) {
            return void 0 === e && (e = 0),
            this.array.set(t, e),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        onUpload: function(t) {
            return this.onUploadCallback = t,
            this
        }
    }),
    Object.defineProperties(zs.prototype, {
        count: {
            get: function() {
                return this.data.count
            }
        },
        array: {
            get: function() {
                return this.data.array
            }
        }
    }),
    Object.assign(zs.prototype, {
        isInterleavedBufferAttribute: !0,
        setX: function(t, e) {
            return this.data.array[t * this.data.stride + this.offset] = e,
            this
        },
        setY: function(t, e) {
            return this.data.array[t * this.data.stride + this.offset + 1] = e,
            this
        },
        setZ: function(t, e) {
            return this.data.array[t * this.data.stride + this.offset + 2] = e,
            this
        },
        setW: function(t, e) {
            return this.data.array[t * this.data.stride + this.offset + 3] = e,
            this
        },
        getX: function(t) {
            return this.data.array[t * this.data.stride + this.offset]
        },
        getY: function(t) {
            return this.data.array[t * this.data.stride + this.offset + 1]
        },
        getZ: function(t) {
            return this.data.array[t * this.data.stride + this.offset + 2]
        },
        getW: function(t) {
            return this.data.array[t * this.data.stride + this.offset + 3]
        },
        setXY: function(t, e, n) {
            return t = t * this.data.stride + this.offset,
            this.data.array[t + 0] = e,
            this.data.array[t + 1] = n,
            this
        },
        setXYZ: function(t, e, n, i) {
            return t = t * this.data.stride + this.offset,
            this.data.array[t + 0] = e,
            this.data.array[t + 1] = n,
            this.data.array[t + 2] = i,
            this
        },
        setXYZW: function(t, e, n, i, r) {
            return t = t * this.data.stride + this.offset,
            this.data.array[t + 0] = e,
            this.data.array[t + 1] = n,
            this.data.array[t + 2] = i,
            this.data.array[t + 3] = r,
            this
        }
    }),
    Bs.prototype = Object.create(di.prototype),
    Bs.prototype.constructor = Bs,
    Bs.prototype.isSpriteMaterial = !0,
    Bs.prototype.copy = function(t) {
        return di.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.map = t.map,
        this.rotation = t.rotation,
        this.sizeAttenuation = t.sizeAttenuation,
        this
    }
    ,
    Ns.prototype = Object.assign(Object.create(Vn.prototype), {
        constructor: Ns,
        isSprite: !0,
        raycast: function() {
            var t = new We
              , e = new We
              , n = new We
              , i = new Ge
              , r = new Ge
              , s = new wn
              , a = new We
              , o = new We
              , c = new We
              , l = new Ge
              , p = new Ge
              , h = new Ge;
            function u(t, e, n, a, o, c) {
                i.subVectors(t, n).addScalar(.5).multiply(a),
                void 0 !== o ? (r.x = c * i.x - o * i.y,
                r.y = o * i.x + c * i.y) : r.copy(i),
                t.copy(e),
                t.x += r.x,
                t.y += r.y,
                t.applyMatrix4(s)
            }
            return function(i, r) {
                e.setFromMatrixScale(this.matrixWorld),
                s.getInverse(this.modelViewMatrix).premultiply(this.matrixWorld),
                n.setFromMatrixPosition(this.modelViewMatrix);
                var f, d, m = this.material.rotation;
                0 !== m && (d = Math.cos(m),
                f = Math.sin(m));
                var g = this.center;
                u(a.set(-.5, -.5, 0), n, g, e, f, d),
                u(o.set(.5, -.5, 0), n, g, e, f, d),
                u(c.set(.5, .5, 0), n, g, e, f, d),
                l.set(0, 0),
                p.set(1, 0),
                h.set(1, 1);
                var v = i.ray.intersectTriangle(a, o, c, !1, t);
                if (null !== v || (u(o.set(-.5, .5, 0), n, g, e, f, d),
                p.set(0, 1),
                null !== (v = i.ray.intersectTriangle(a, c, o, !1, t)))) {
                    var y = i.ray.origin.distanceTo(t);
                    y < i.near || y > i.far || r.push({
                        distance: y,
                        point: t.clone(),
                        uv: Ci.getUV(t, a, o, c, l, p, h, new Ge),
                        face: null,
                        object: this
                    })
                }
            }
        }(),
        clone: function() {
            return new this.constructor(this.material).copy(this)
        },
        copy: function(t) {
            return Vn.prototype.copy.call(this, t),
            void 0 !== t.center && this.center.copy(t.center),
            this
        }
    }),
    js.prototype = Object.assign(Object.create(Vn.prototype), {
        constructor: js,
        isLOD: !0,
        copy: function(t) {
            Vn.prototype.copy.call(this, t, !1);
            for (var e = t.levels, n = 0, i = e.length; n < i; n++) {
                var r = e[n];
                this.addLevel(r.object.clone(), r.distance)
            }
            return this
        },
        addLevel: function(t, e) {
            void 0 === e && (e = 0),
            e = Math.abs(e);
            for (var n = this.levels, i = 0; i < n.length && !(e < n[i].distance); i++)
                ;
            return n.splice(i, 0, {
                distance: e,
                object: t
            }),
            this.add(t),
            this
        },
        getObjectForDistance: function(t) {
            for (var e = this.levels, n = 1, i = e.length; n < i && !(t < e[n].distance); n++)
                ;
            return e[n - 1].object
        },
        raycast: (xs = new We,
        function(t, e) {
            xs.setFromMatrixPosition(this.matrixWorld);
            var n = t.ray.origin.distanceTo(xs);
            this.getObjectForDistance(n).raycast(t, e)
        }
        ),
        update: function() {
            var t = new We
              , e = new We;
            return function(n) {
                var i = this.levels;
                if (i.length > 1) {
                    t.setFromMatrixPosition(n.matrixWorld),
                    e.setFromMatrixPosition(this.matrixWorld);
                    var r = t.distanceTo(e);
                    i[0].object.visible = !0;
                    for (var s = 1, a = i.length; s < a && r >= i[s].distance; s++)
                        i[s - 1].object.visible = !1,
                        i[s].object.visible = !0;
                    for (; s < a; s++)
                        i[s].object.visible = !1
                }
            }
        }(),
        toJSON: function(t) {
            var e = Vn.prototype.toJSON.call(this, t);
            e.object.levels = [];
            for (var n = this.levels, i = 0, r = n.length; i < r; i++) {
                var s = n[i];
                e.object.levels.push({
                    object: s.object.uuid,
                    distance: s.distance
                })
            }
            return e
        }
    }),
    Us.prototype = Object.assign(Object.create(Ii.prototype), {
        constructor: Us,
        isSkinnedMesh: !0,
        bind: function(t, e) {
            this.skeleton = t,
            void 0 === e && (this.updateMatrixWorld(!0),
            this.skeleton.calculateInverses(),
            e = this.matrixWorld),
            this.bindMatrix.copy(e),
            this.bindMatrixInverse.getInverse(e)
        },
        pose: function() {
            this.skeleton.pose()
        },
        normalizeSkinWeights: function() {
            for (var t = new hn, e = this.geometry.attributes.skinWeight, n = 0, i = e.count; n < i; n++) {
                t.x = e.getX(n),
                t.y = e.getY(n),
                t.z = e.getZ(n),
                t.w = e.getW(n);
                var r = 1 / t.manhattanLength();
                r !== 1 / 0 ? t.multiplyScalar(r) : t.set(1, 0, 0, 0),
                e.setXYZW(n, t.x, t.y, t.z, t.w)
            }
        },
        updateMatrixWorld: function(t) {
            Ii.prototype.updateMatrixWorld.call(this, t),
            "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode)
        },
        clone: function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
    }),
    Object.assign(Fs.prototype, {
        calculateInverses: function() {
            this.boneInverses = [];
            for (var t = 0, e = this.bones.length; t < e; t++) {
                var n = new wn;
                this.bones[t] && n.getInverse(this.bones[t].matrixWorld),
                this.boneInverses.push(n)
            }
        },
        pose: function() {
            var t, e, n;
            for (e = 0,
            n = this.bones.length; e < n; e++)
                (t = this.bones[e]) && t.matrixWorld.getInverse(this.boneInverses[e]);
            for (e = 0,
            n = this.bones.length; e < n; e++)
                (t = this.bones[e]) && (t.parent && t.parent.isBone ? (t.matrix.getInverse(t.parent.matrixWorld),
                t.matrix.multiply(t.matrixWorld)) : t.matrix.copy(t.matrixWorld),
                t.matrix.decompose(t.position, t.quaternion, t.scale))
        },
        update: (Ms = new wn,
        _s = new wn,
        function() {
            for (var t = this.bones, e = this.boneInverses, n = this.boneMatrices, i = this.boneTexture, r = 0, s = t.length; r < s; r++) {
                var a = t[r] ? t[r].matrixWorld : _s;
                Ms.multiplyMatrices(a, e[r]),
                Ms.toArray(n, 16 * r)
            }
            void 0 !== i && (i.needsUpdate = !0)
        }
        ),
        clone: function() {
            return new Fs(this.bones,this.boneInverses)
        },
        getBoneByName: function(t) {
            for (var e = 0, n = this.bones.length; e < n; e++) {
                var i = this.bones[e];
                if (i.name === t)
                    return i
            }
        }
    }),
    Hs.prototype = Object.assign(Object.create(Vn.prototype), {
        constructor: Hs,
        isBone: !0
    }),
    Gs.prototype = Object.create(di.prototype),
    Gs.prototype.constructor = Gs,
    Gs.prototype.isLineBasicMaterial = !0,
    Gs.prototype.copy = function(t) {
        return di.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.linewidth = t.linewidth,
        this.linecap = t.linecap,
        this.linejoin = t.linejoin,
        this
    }
    ,
    Vs.prototype = Object.assign(Object.create(Vn.prototype), {
        constructor: Vs,
        isLine: !0,
        computeLineDistances: (Ss = new We,
        Ts = new We,
        function() {
            var t = this.geometry;
            if (t.isBufferGeometry)
                if (null === t.index) {
                    for (var e = t.attributes.position, n = [0], i = 1, r = e.count; i < r; i++)
                        Ss.fromBufferAttribute(e, i - 1),
                        Ts.fromBufferAttribute(e, i),
                        n[i] = n[i - 1],
                        n[i] += Ss.distanceTo(Ts);
                    t.addAttribute("lineDistance", new ii(n,1))
                } else
                    console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
            else if (t.isGeometry) {
                var s = t.vertices;
                for ((n = t.lineDistances)[0] = 0,
                i = 1,
                r = s.length; i < r; i++)
                    n[i] = n[i - 1],
                    n[i] += s[i - 1].distanceTo(s[i])
            }
            return this
        }
        ),
        raycast: function() {
            var t = new wn
              , e = new Pi
              , n = new vn;
            return function(i, r) {
                var s = i.linePrecision
                  , a = this.geometry
                  , o = this.matrixWorld;
                if (null === a.boundingSphere && a.computeBoundingSphere(),
                n.copy(a.boundingSphere),
                n.applyMatrix4(o),
                n.radius += s,
                !1 !== i.ray.intersectsSphere(n)) {
                    t.getInverse(o),
                    e.copy(i.ray).applyMatrix4(t);
                    var c = s / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                      , l = c * c
                      , p = new We
                      , h = new We
                      , u = new We
                      , f = new We
                      , d = this && this.isLineSegments ? 2 : 1;
                    if (a.isBufferGeometry) {
                        var m = a.index
                          , g = a.attributes.position.array;
                        if (null !== m)
                            for (var v = m.array, y = 0, b = v.length - 1; y < b; y += d) {
                                var w = v[y]
                                  , x = v[y + 1];
                                if (p.fromArray(g, 3 * w),
                                h.fromArray(g, 3 * x),
                                !(e.distanceSqToSegment(p, h, f, u) > l))
                                    f.applyMatrix4(this.matrixWorld),
                                    (S = i.ray.origin.distanceTo(f)) < i.near || S > i.far || r.push({
                                        distance: S,
                                        point: u.clone().applyMatrix4(this.matrixWorld),
                                        index: y,
                                        face: null,
                                        faceIndex: null,
                                        object: this
                                    })
                            }
                        else
                            for (y = 0,
                            b = g.length / 3 - 1; y < b; y += d) {
                                if (p.fromArray(g, 3 * y),
                                h.fromArray(g, 3 * y + 3),
                                !(e.distanceSqToSegment(p, h, f, u) > l))
                                    f.applyMatrix4(this.matrixWorld),
                                    (S = i.ray.origin.distanceTo(f)) < i.near || S > i.far || r.push({
                                        distance: S,
                                        point: u.clone().applyMatrix4(this.matrixWorld),
                                        index: y,
                                        face: null,
                                        faceIndex: null,
                                        object: this
                                    })
                            }
                    } else if (a.isGeometry) {
                        var M = a.vertices
                          , _ = M.length;
                        for (y = 0; y < _ - 1; y += d) {
                            var S;
                            if (!(e.distanceSqToSegment(M[y], M[y + 1], f, u) > l))
                                f.applyMatrix4(this.matrixWorld),
                                (S = i.ray.origin.distanceTo(f)) < i.near || S > i.far || r.push({
                                    distance: S,
                                    point: u.clone().applyMatrix4(this.matrixWorld),
                                    index: y,
                                    face: null,
                                    faceIndex: null,
                                    object: this
                                })
                        }
                    }
                }
            }
        }(),
        clone: function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
    }),
    Ws.prototype = Object.assign(Object.create(Vs.prototype), {
        constructor: Ws,
        isLineSegments: !0,
        computeLineDistances: function() {
            var t = new We
              , e = new We;
            return function() {
                var n = this.geometry;
                if (n.isBufferGeometry)
                    if (null === n.index) {
                        for (var i = n.attributes.position, r = [], s = 0, a = i.count; s < a; s += 2)
                            t.fromBufferAttribute(i, s),
                            e.fromBufferAttribute(i, s + 1),
                            r[s] = 0 === s ? 0 : r[s - 1],
                            r[s + 1] = r[s] + t.distanceTo(e);
                        n.addAttribute("lineDistance", new ii(r,1))
                    } else
                        console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
                else if (n.isGeometry) {
                    var o = n.vertices;
                    for (r = n.lineDistances,
                    s = 0,
                    a = o.length; s < a; s += 2)
                        t.copy(o[s]),
                        e.copy(o[s + 1]),
                        r[s] = 0 === s ? 0 : r[s - 1],
                        r[s + 1] = r[s] + t.distanceTo(e)
                }
                return this
            }
        }()
    }),
    Ys.prototype = Object.assign(Object.create(Vs.prototype), {
        constructor: Ys,
        isLineLoop: !0
    }),
    qs.prototype = Object.create(di.prototype),
    qs.prototype.constructor = qs,
    qs.prototype.isPointsMaterial = !0,
    qs.prototype.copy = function(t) {
        return di.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.map = t.map,
        this.size = t.size,
        this.sizeAttenuation = t.sizeAttenuation,
        this.morphTargets = t.morphTargets,
        this
    }
    ,
    Xs.prototype = Object.assign(Object.create(Vn.prototype), {
        constructor: Xs,
        isPoints: !0,
        raycast: function() {
            var t = new wn
              , e = new Pi
              , n = new vn;
            return function(i, r) {
                var s = this
                  , a = this.geometry
                  , o = this.matrixWorld
                  , c = i.params.Points.threshold;
                if (null === a.boundingSphere && a.computeBoundingSphere(),
                n.copy(a.boundingSphere),
                n.applyMatrix4(o),
                n.radius += c,
                !1 !== i.ray.intersectsSphere(n)) {
                    t.getInverse(o),
                    e.copy(i.ray).applyMatrix4(t);
                    var l = c / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                      , p = l * l
                      , h = new We
                      , u = new We;
                    if (a.isBufferGeometry) {
                        var f = a.index
                          , d = a.attributes.position.array;
                        if (null !== f)
                            for (var m = f.array, g = 0, v = m.length; g < v; g++) {
                                var y = m[g];
                                h.fromArray(d, 3 * y),
                                x(h, y)
                            }
                        else {
                            g = 0;
                            for (var b = d.length / 3; g < b; g++)
                                h.fromArray(d, 3 * g),
                                x(h, g)
                        }
                    } else {
                        var w = a.vertices;
                        for (g = 0,
                        b = w.length; g < b; g++)
                            x(w[g], g)
                    }
                }
                function x(t, n) {
                    var a = e.distanceSqToPoint(t);
                    if (a < p) {
                        e.closestPointToPoint(t, u),
                        u.applyMatrix4(o);
                        var c = i.ray.origin.distanceTo(u);
                        if (c < i.near || c > i.far)
                            return;
                        r.push({
                            distance: c,
                            distanceToRay: Math.sqrt(a),
                            point: u.clone(),
                            index: n,
                            face: null,
                            object: s
                        })
                    }
                }
            }
        }(),
        clone: function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
    }),
    Zs.prototype = Object.assign(Object.create(pn.prototype), {
        constructor: Zs,
        isVideoTexture: !0,
        update: function() {
            var t = this.image;
            t.readyState >= t.HAVE_CURRENT_DATA && (this.needsUpdate = !0)
        }
    }),
    Ks.prototype = Object.create(pn.prototype),
    Ks.prototype.constructor = Ks,
    Ks.prototype.isCompressedTexture = !0,
    Js.prototype = Object.create(pn.prototype),
    Js.prototype.constructor = Js,
    Js.prototype.isCanvasTexture = !0,
    $s.prototype = Object.create(pn.prototype),
    $s.prototype.constructor = $s,
    $s.prototype.isDepthTexture = !0,
    Qs.prototype = Object.create(ci.prototype),
    Qs.prototype.constructor = Qs,
    ta.prototype = Object.create(Xn.prototype),
    ta.prototype.constructor = ta,
    ea.prototype = Object.create(ci.prototype),
    ea.prototype.constructor = ea,
    na.prototype = Object.create(Xn.prototype),
    na.prototype.constructor = na,
    ia.prototype = Object.create(ci.prototype),
    ia.prototype.constructor = ia,
    ra.prototype = Object.create(Xn.prototype),
    ra.prototype.constructor = ra,
    sa.prototype = Object.create(ia.prototype),
    sa.prototype.constructor = sa,
    aa.prototype = Object.create(Xn.prototype),
    aa.prototype.constructor = aa,
    oa.prototype = Object.create(ia.prototype),
    oa.prototype.constructor = oa,
    ca.prototype = Object.create(Xn.prototype),
    ca.prototype.constructor = ca,
    la.prototype = Object.create(ia.prototype),
    la.prototype.constructor = la,
    pa.prototype = Object.create(Xn.prototype),
    pa.prototype.constructor = pa,
    ha.prototype = Object.create(ia.prototype),
    ha.prototype.constructor = ha,
    ua.prototype = Object.create(Xn.prototype),
    ua.prototype.constructor = ua,
    fa.prototype = Object.create(ci.prototype),
    fa.prototype.constructor = fa,
    fa.prototype.toJSON = function() {
        var t = ci.prototype.toJSON.call(this);
        return t.path = this.parameters.path.toJSON(),
        t
    }
    ,
    da.prototype = Object.create(Xn.prototype),
    da.prototype.constructor = da,
    ma.prototype = Object.create(ci.prototype),
    ma.prototype.constructor = ma,
    ga.prototype = Object.create(Xn.prototype),
    ga.prototype.constructor = ga,
    va.prototype = Object.create(ci.prototype),
    va.prototype.constructor = va;
    var ya = function(t, e, n) {
        n = n || 2;
        var i, r, s, a, o, c, l, p = e && e.length, h = p ? e[0] * n : t.length, u = ba(t, 0, h, n, !0), f = [];
        if (!u)
            return f;
        if (p && (u = function(t, e, n, i) {
            var r, s, a, o, c, l = [];
            for (r = 0,
            s = e.length; r < s; r++)
                a = e[r] * i,
                o = r < s - 1 ? e[r + 1] * i : t.length,
                (c = ba(t, a, o, i, !1)) === c.next && (c.steiner = !0),
                l.push(La(c));
            for (l.sort(Ea),
            r = 0; r < l.length; r++)
                ka(l[r], n),
                n = wa(n, n.next);
            return n
        }(t, e, u, n)),
        t.length > 80 * n) {
            i = s = t[0],
            r = a = t[1];
            for (var d = n; d < h; d += n)
                (o = t[d]) < i && (i = o),
                (c = t[d + 1]) < r && (r = c),
                o > s && (s = o),
                c > a && (a = c);
            l = 0 !== (l = Math.max(s - i, a - r)) ? 1 / l : 0
        }
        return xa(u, f, n, i, r, l),
        f
    };
    function ba(t, e, n, i, r) {
        var s, a;
        if (r === function(t, e, n, i) {
            for (var r = 0, s = e, a = n - i; s < n; s += i)
                r += (t[a] - t[s]) * (t[s + 1] + t[a + 1]),
                a = s;
            return r
        }(t, e, n, i) > 0)
            for (s = e; s < n; s += i)
                a = Ba(s, t[s], t[s + 1], a);
        else
            for (s = n - i; s >= e; s -= i)
                a = Ba(s, t[s], t[s + 1], a);
        return a && Ia(a, a.next) && (Na(a),
        a = a.next),
        a
    }
    function wa(t, e) {
        if (!t)
            return t;
        e || (e = t);
        var n, i = t;
        do {
            if (n = !1,
            i.steiner || !Ia(i, i.next) && 0 !== Ra(i.prev, i, i.next))
                i = i.next;
            else {
                if (Na(i),
                (i = e = i.prev) === i.next)
                    break;
                n = !0
            }
        } while (n || i !== e);return e
    }
    function xa(t, e, n, i, r, s, a) {
        if (t) {
            !a && s && function(t, e, n, i) {
                var r = t;
                do {
                    null === r.z && (r.z = Aa(r.x, r.y, e, n, i)),
                    r.prevZ = r.prev,
                    r.nextZ = r.next,
                    r = r.next
                } while (r !== t);r.prevZ.nextZ = null,
                r.prevZ = null,
                function(t) {
                    var e, n, i, r, s, a, o, c, l = 1;
                    do {
                        for (n = t,
                        t = null,
                        s = null,
                        a = 0; n; ) {
                            for (a++,
                            i = n,
                            o = 0,
                            e = 0; e < l && (o++,
                            i = i.nextZ); e++)
                                ;
                            for (c = l; o > 0 || c > 0 && i; )
                                0 !== o && (0 === c || !i || n.z <= i.z) ? (r = n,
                                n = n.nextZ,
                                o--) : (r = i,
                                i = i.nextZ,
                                c--),
                                s ? s.nextZ = r : t = r,
                                r.prevZ = s,
                                s = r;
                            n = i
                        }
                        s.nextZ = null,
                        l *= 2
                    } while (a > 1)
                }(r)
            }(t, i, r, s);
            for (var o, c, l = t; t.prev !== t.next; )
                if (o = t.prev,
                c = t.next,
                s ? _a(t, i, r, s) : Ma(t))
                    e.push(o.i / n),
                    e.push(t.i / n),
                    e.push(c.i / n),
                    Na(t),
                    t = c.next,
                    l = c.next;
                else if ((t = c) === l) {
                    a ? 1 === a ? xa(t = Sa(t, e, n), e, n, i, r, s, 2) : 2 === a && Ta(t, e, n, i, r, s) : xa(wa(t), e, n, i, r, s, 1);
                    break
                }
        }
    }
    function Ma(t) {
        var e = t.prev
          , n = t
          , i = t.next;
        if (Ra(e, n, i) >= 0)
            return !1;
        for (var r = t.next.next; r !== t.prev; ) {
            if (Pa(e.x, e.y, n.x, n.y, i.x, i.y, r.x, r.y) && Ra(r.prev, r, r.next) >= 0)
                return !1;
            r = r.next
        }
        return !0
    }
    function _a(t, e, n, i) {
        var r = t.prev
          , s = t
          , a = t.next;
        if (Ra(r, s, a) >= 0)
            return !1;
        for (var o = r.x < s.x ? r.x < a.x ? r.x : a.x : s.x < a.x ? s.x : a.x, c = r.y < s.y ? r.y < a.y ? r.y : a.y : s.y < a.y ? s.y : a.y, l = r.x > s.x ? r.x > a.x ? r.x : a.x : s.x > a.x ? s.x : a.x, p = r.y > s.y ? r.y > a.y ? r.y : a.y : s.y > a.y ? s.y : a.y, h = Aa(o, c, e, n, i), u = Aa(l, p, e, n, i), f = t.nextZ; f && f.z <= u; ) {
            if (f !== t.prev && f !== t.next && Pa(r.x, r.y, s.x, s.y, a.x, a.y, f.x, f.y) && Ra(f.prev, f, f.next) >= 0)
                return !1;
            f = f.nextZ
        }
        for (f = t.prevZ; f && f.z >= h; ) {
            if (f !== t.prev && f !== t.next && Pa(r.x, r.y, s.x, s.y, a.x, a.y, f.x, f.y) && Ra(f.prev, f, f.next) >= 0)
                return !1;
            f = f.prevZ
        }
        return !0
    }
    function Sa(t, e, n) {
        var i = t;
        do {
            var r = i.prev
              , s = i.next.next;
            !Ia(r, s) && Oa(r, i, i.next, s) && Da(r, s) && Da(s, r) && (e.push(r.i / n),
            e.push(i.i / n),
            e.push(s.i / n),
            Na(i),
            Na(i.next),
            i = t = s),
            i = i.next
        } while (i !== t);return i
    }
    function Ta(t, e, n, i, r, s) {
        var a = t;
        do {
            for (var o = a.next.next; o !== a.prev; ) {
                if (a.i !== o.i && Ca(a, o)) {
                    var c = za(a, o);
                    return a = wa(a, a.next),
                    c = wa(c, c.next),
                    xa(a, e, n, i, r, s),
                    void xa(c, e, n, i, r, s)
                }
                o = o.next
            }
            a = a.next
        } while (a !== t)
    }
    function Ea(t, e) {
        return t.x - e.x
    }
    function ka(t, e) {
        if (e = function(t, e) {
            var n, i = e, r = t.x, s = t.y, a = -1 / 0;
            do {
                if (s <= i.y && s >= i.next.y && i.next.y !== i.y) {
                    var o = i.x + (s - i.y) * (i.next.x - i.x) / (i.next.y - i.y);
                    if (o <= r && o > a) {
                        if (a = o,
                        o === r) {
                            if (s === i.y)
                                return i;
                            if (s === i.next.y)
                                return i.next
                        }
                        n = i.x < i.next.x ? i : i.next
                    }
                }
                i = i.next
            } while (i !== e);if (!n)
                return null;
            if (r === a)
                return n.prev;
            var c, l = n, p = n.x, h = n.y, u = 1 / 0;
            i = n.next;
            for (; i !== l; )
                r >= i.x && i.x >= p && r !== i.x && Pa(s < h ? r : a, s, p, h, s < h ? a : r, s, i.x, i.y) && ((c = Math.abs(s - i.y) / (r - i.x)) < u || c === u && i.x > n.x) && Da(i, t) && (n = i,
                u = c),
                i = i.next;
            return n
        }(t, e)) {
            var n = za(e, t);
            wa(n, n.next)
        }
    }
    function Aa(t, e, n, i, r) {
        return (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - n) * r) | t << 8)) | t << 4)) | t << 2)) | t << 1)) | (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - i) * r) | e << 8)) | e << 4)) | e << 2)) | e << 1)) << 1
    }
    function La(t) {
        var e = t
          , n = t;
        do {
            e.x < n.x && (n = e),
            e = e.next
        } while (e !== t);return n
    }
    function Pa(t, e, n, i, r, s, a, o) {
        return (r - a) * (e - o) - (t - a) * (s - o) >= 0 && (t - a) * (i - o) - (n - a) * (e - o) >= 0 && (n - a) * (s - o) - (r - a) * (i - o) >= 0
    }
    function Ca(t, e) {
        return t.next.i !== e.i && t.prev.i !== e.i && !function(t, e) {
            var n = t;
            do {
                if (n.i !== t.i && n.next.i !== t.i && n.i !== e.i && n.next.i !== e.i && Oa(n, n.next, t, e))
                    return !0;
                n = n.next
            } while (n !== t);return !1
        }(t, e) && Da(t, e) && Da(e, t) && function(t, e) {
            var n = t
              , i = !1
              , r = (t.x + e.x) / 2
              , s = (t.y + e.y) / 2;
            do {
                n.y > s != n.next.y > s && n.next.y !== n.y && r < (n.next.x - n.x) * (s - n.y) / (n.next.y - n.y) + n.x && (i = !i),
                n = n.next
            } while (n !== t);return i
        }(t, e)
    }
    function Ra(t, e, n) {
        return (e.y - t.y) * (n.x - e.x) - (e.x - t.x) * (n.y - e.y)
    }
    function Ia(t, e) {
        return t.x === e.x && t.y === e.y
    }
    function Oa(t, e, n, i) {
        return !!(Ia(t, e) && Ia(n, i) || Ia(t, i) && Ia(n, e)) || Ra(t, e, n) > 0 != Ra(t, e, i) > 0 && Ra(n, i, t) > 0 != Ra(n, i, e) > 0
    }
    function Da(t, e) {
        return Ra(t.prev, t, t.next) < 0 ? Ra(t, e, t.next) >= 0 && Ra(t, t.prev, e) >= 0 : Ra(t, e, t.prev) < 0 || Ra(t, t.next, e) < 0
    }
    function za(t, e) {
        var n = new ja(t.i,t.x,t.y)
          , i = new ja(e.i,e.x,e.y)
          , r = t.next
          , s = e.prev;
        return t.next = e,
        e.prev = t,
        n.next = r,
        r.prev = n,
        i.next = n,
        n.prev = i,
        s.next = i,
        i.prev = s,
        i
    }
    function Ba(t, e, n, i) {
        var r = new ja(t,e,n);
        return i ? (r.next = i.next,
        r.prev = i,
        i.next.prev = r,
        i.next = r) : (r.prev = r,
        r.next = r),
        r
    }
    function Na(t) {
        t.next.prev = t.prev,
        t.prev.next = t.next,
        t.prevZ && (t.prevZ.nextZ = t.nextZ),
        t.nextZ && (t.nextZ.prevZ = t.prevZ)
    }
    function ja(t, e, n) {
        this.i = t,
        this.x = e,
        this.y = n,
        this.prev = null,
        this.next = null,
        this.z = null,
        this.prevZ = null,
        this.nextZ = null,
        this.steiner = !1
    }
    var Ua = {
        area: function(t) {
            for (var e = t.length, n = 0, i = e - 1, r = 0; r < e; i = r++)
                n += t[i].x * t[r].y - t[r].x * t[i].y;
            return .5 * n
        },
        isClockWise: function(t) {
            return Ua.area(t) < 0
        },
        triangulateShape: function(t, e) {
            var n = []
              , i = []
              , r = [];
            Fa(t),
            Ha(n, t);
            var s = t.length;
            e.forEach(Fa);
            for (var a = 0; a < e.length; a++)
                i.push(s),
                s += e[a].length,
                Ha(n, e[a]);
            var o = ya(n, i);
            for (a = 0; a < o.length; a += 3)
                r.push(o.slice(a, a + 3));
            return r
        }
    };
    function Fa(t) {
        var e = t.length;
        e > 2 && t[e - 1].equals(t[0]) && t.pop()
    }
    function Ha(t, e) {
        for (var n = 0; n < e.length; n++)
            t.push(e[n].x),
            t.push(e[n].y)
    }
    function Ga(t, e) {
        Xn.call(this),
        this.type = "ExtrudeGeometry",
        this.parameters = {
            shapes: t,
            options: e
        },
        this.fromBufferGeometry(new Va(t,e)),
        this.mergeVertices()
    }
    function Va(t, e) {
        ci.call(this),
        this.type = "ExtrudeBufferGeometry",
        this.parameters = {
            shapes: t,
            options: e
        },
        t = Array.isArray(t) ? t : [t];
        for (var n = this, i = [], r = [], s = 0, a = t.length; s < a; s++) {
            o(t[s])
        }
        function o(t) {
            var s = []
              , a = void 0 !== e.curveSegments ? e.curveSegments : 12
              , o = void 0 !== e.steps ? e.steps : 1
              , c = void 0 !== e.depth ? e.depth : 100
              , l = void 0 === e.bevelEnabled || e.bevelEnabled
              , p = void 0 !== e.bevelThickness ? e.bevelThickness : 6
              , h = void 0 !== e.bevelSize ? e.bevelSize : p - 2
              , u = void 0 !== e.bevelOffset ? e.bevelOffset : 0
              , f = void 0 !== e.bevelSegments ? e.bevelSegments : 3
              , d = e.extrudePath
              , m = void 0 !== e.UVGenerator ? e.UVGenerator : Wa;
            void 0 !== e.amount && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),
            c = e.amount);
            var g, v, y, b, w, x, M, _, S = !1;
            d && (g = d.getSpacedPoints(o),
            S = !0,
            l = !1,
            v = d.computeFrenetFrames(o, !1),
            y = new We,
            b = new We,
            w = new We),
            l || (f = 0,
            p = 0,
            h = 0,
            u = 0);
            var T = t.extractPoints(a)
              , E = T.shape
              , k = T.holes;
            if (!Ua.isClockWise(E))
                for (E = E.reverse(),
                M = 0,
                _ = k.length; M < _; M++)
                    x = k[M],
                    Ua.isClockWise(x) && (k[M] = x.reverse());
            var A = Ua.triangulateShape(E, k)
              , L = E;
            for (M = 0,
            _ = k.length; M < _; M++)
                x = k[M],
                E = E.concat(x);
            function P(t, e, n) {
                return e || console.error("THREE.ExtrudeGeometry: vec does not exist"),
                e.clone().multiplyScalar(n).add(t)
            }
            var C, R, I, O, D, z, B = E.length, N = A.length;
            function j(t, e, n) {
                var i, r, s, a = t.x - e.x, o = t.y - e.y, c = n.x - t.x, l = n.y - t.y, p = a * a + o * o, h = a * l - o * c;
                if (Math.abs(h) > Number.EPSILON) {
                    var u = Math.sqrt(p)
                      , f = Math.sqrt(c * c + l * l)
                      , d = e.x - o / u
                      , m = e.y + a / u
                      , g = ((n.x - l / f - d) * l - (n.y + c / f - m) * c) / (a * l - o * c)
                      , v = (i = d + a * g - t.x) * i + (r = m + o * g - t.y) * r;
                    if (v <= 2)
                        return new Ge(i,r);
                    s = Math.sqrt(v / 2)
                } else {
                    var y = !1;
                    a > Number.EPSILON ? c > Number.EPSILON && (y = !0) : a < -Number.EPSILON ? c < -Number.EPSILON && (y = !0) : Math.sign(o) === Math.sign(l) && (y = !0),
                    y ? (i = -o,
                    r = a,
                    s = Math.sqrt(p)) : (i = a,
                    r = o,
                    s = Math.sqrt(p / 2))
                }
                return new Ge(i / s,r / s)
            }
            for (var U = [], F = 0, H = L.length, G = H - 1, V = F + 1; F < H; F++,
            G++,
            V++)
                G === H && (G = 0),
                V === H && (V = 0),
                U[F] = j(L[F], L[G], L[V]);
            var W, Y, q = [], X = U.concat();
            for (M = 0,
            _ = k.length; M < _; M++) {
                for (x = k[M],
                W = [],
                F = 0,
                G = (H = x.length) - 1,
                V = F + 1; F < H; F++,
                G++,
                V++)
                    G === H && (G = 0),
                    V === H && (V = 0),
                    W[F] = j(x[F], x[G], x[V]);
                q.push(W),
                X = X.concat(W)
            }
            for (C = 0; C < f; C++) {
                for (I = C / f,
                O = p * Math.cos(I * Math.PI / 2),
                R = h * Math.sin(I * Math.PI / 2) + u,
                F = 0,
                H = L.length; F < H; F++)
                    K((D = P(L[F], U[F], R)).x, D.y, -O);
                for (M = 0,
                _ = k.length; M < _; M++)
                    for (x = k[M],
                    W = q[M],
                    F = 0,
                    H = x.length; F < H; F++)
                        K((D = P(x[F], W[F], R)).x, D.y, -O)
            }
            for (R = h + u,
            F = 0; F < B; F++)
                D = l ? P(E[F], X[F], R) : E[F],
                S ? (b.copy(v.normals[0]).multiplyScalar(D.x),
                y.copy(v.binormals[0]).multiplyScalar(D.y),
                w.copy(g[0]).add(b).add(y),
                K(w.x, w.y, w.z)) : K(D.x, D.y, 0);
            for (Y = 1; Y <= o; Y++)
                for (F = 0; F < B; F++)
                    D = l ? P(E[F], X[F], R) : E[F],
                    S ? (b.copy(v.normals[Y]).multiplyScalar(D.x),
                    y.copy(v.binormals[Y]).multiplyScalar(D.y),
                    w.copy(g[Y]).add(b).add(y),
                    K(w.x, w.y, w.z)) : K(D.x, D.y, c / o * Y);
            for (C = f - 1; C >= 0; C--) {
                for (I = C / f,
                O = p * Math.cos(I * Math.PI / 2),
                R = h * Math.sin(I * Math.PI / 2) + u,
                F = 0,
                H = L.length; F < H; F++)
                    K((D = P(L[F], U[F], R)).x, D.y, c + O);
                for (M = 0,
                _ = k.length; M < _; M++)
                    for (x = k[M],
                    W = q[M],
                    F = 0,
                    H = x.length; F < H; F++)
                        D = P(x[F], W[F], R),
                        S ? K(D.x, D.y + g[o - 1].y, g[o - 1].x + O) : K(D.x, D.y, c + O)
            }
            function Z(t, e) {
                var n, i;
                for (F = t.length; --F >= 0; ) {
                    n = F,
                    (i = F - 1) < 0 && (i = t.length - 1);
                    var r = 0
                      , s = o + 2 * f;
                    for (r = 0; r < s; r++) {
                        var a = B * r
                          , c = B * (r + 1);
                        $(e + n + a, e + i + a, e + i + c, e + n + c)
                    }
                }
            }
            function K(t, e, n) {
                s.push(t),
                s.push(e),
                s.push(n)
            }
            function J(t, e, r) {
                Q(t),
                Q(e),
                Q(r);
                var s = i.length / 3
                  , a = m.generateTopUV(n, i, s - 3, s - 2, s - 1);
                tt(a[0]),
                tt(a[1]),
                tt(a[2])
            }
            function $(t, e, r, s) {
                Q(t),
                Q(e),
                Q(s),
                Q(e),
                Q(r),
                Q(s);
                var a = i.length / 3
                  , o = m.generateSideWallUV(n, i, a - 6, a - 3, a - 2, a - 1);
                tt(o[0]),
                tt(o[1]),
                tt(o[3]),
                tt(o[1]),
                tt(o[2]),
                tt(o[3])
            }
            function Q(t) {
                i.push(s[3 * t + 0]),
                i.push(s[3 * t + 1]),
                i.push(s[3 * t + 2])
            }
            function tt(t) {
                r.push(t.x),
                r.push(t.y)
            }
            !function() {
                var t = i.length / 3;
                if (l) {
                    var e = 0
                      , r = B * e;
                    for (F = 0; F < N; F++)
                        J((z = A[F])[2] + r, z[1] + r, z[0] + r);
                    for (r = B * (e = o + 2 * f),
                    F = 0; F < N; F++)
                        J((z = A[F])[0] + r, z[1] + r, z[2] + r)
                } else {
                    for (F = 0; F < N; F++)
                        J((z = A[F])[2], z[1], z[0]);
                    for (F = 0; F < N; F++)
                        J((z = A[F])[0] + B * o, z[1] + B * o, z[2] + B * o)
                }
                n.addGroup(t, i.length / 3 - t, 0)
            }(),
            function() {
                var t = i.length / 3
                  , e = 0;
                for (Z(L, e),
                e += L.length,
                M = 0,
                _ = k.length; M < _; M++)
                    Z(x = k[M], e),
                    e += x.length;
                n.addGroup(t, i.length / 3 - t, 1)
            }()
        }
        this.addAttribute("position", new ii(i,3)),
        this.addAttribute("uv", new ii(r,2)),
        this.computeVertexNormals()
    }
    Ga.prototype = Object.create(Xn.prototype),
    Ga.prototype.constructor = Ga,
    Ga.prototype.toJSON = function() {
        var t = Xn.prototype.toJSON.call(this);
        return Ya(this.parameters.shapes, this.parameters.options, t)
    }
    ,
    Va.prototype = Object.create(ci.prototype),
    Va.prototype.constructor = Va,
    Va.prototype.toJSON = function() {
        var t = ci.prototype.toJSON.call(this);
        return Ya(this.parameters.shapes, this.parameters.options, t)
    }
    ;
    var Wa = {
        generateTopUV: function(t, e, n, i, r) {
            var s = e[3 * n]
              , a = e[3 * n + 1]
              , o = e[3 * i]
              , c = e[3 * i + 1]
              , l = e[3 * r]
              , p = e[3 * r + 1];
            return [new Ge(s,a), new Ge(o,c), new Ge(l,p)]
        },
        generateSideWallUV: function(t, e, n, i, r, s) {
            var a = e[3 * n]
              , o = e[3 * n + 1]
              , c = e[3 * n + 2]
              , l = e[3 * i]
              , p = e[3 * i + 1]
              , h = e[3 * i + 2]
              , u = e[3 * r]
              , f = e[3 * r + 1]
              , d = e[3 * r + 2]
              , m = e[3 * s]
              , g = e[3 * s + 1]
              , v = e[3 * s + 2];
            return Math.abs(o - p) < .01 ? [new Ge(a,1 - c), new Ge(l,1 - h), new Ge(u,1 - d), new Ge(m,1 - v)] : [new Ge(o,1 - c), new Ge(p,1 - h), new Ge(f,1 - d), new Ge(g,1 - v)]
        }
    };
    function Ya(t, e, n) {
        if (n.shapes = [],
        Array.isArray(t))
            for (var i = 0, r = t.length; i < r; i++) {
                var s = t[i];
                n.shapes.push(s.uuid)
            }
        else
            n.shapes.push(t.uuid);
        return void 0 !== e.extrudePath && (n.options.extrudePath = e.extrudePath.toJSON()),
        n
    }
    function qa(t, e) {
        Xn.call(this),
        this.type = "TextGeometry",
        this.parameters = {
            text: t,
            parameters: e
        },
        this.fromBufferGeometry(new Xa(t,e)),
        this.mergeVertices()
    }
    function Xa(t, e) {
        var n = (e = e || {}).font;
        if (!n || !n.isFont)
            return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),
            new Xn;
        var i = n.generateShapes(t, e.size);
        e.depth = void 0 !== e.height ? e.height : 50,
        void 0 === e.bevelThickness && (e.bevelThickness = 10),
        void 0 === e.bevelSize && (e.bevelSize = 8),
        void 0 === e.bevelEnabled && (e.bevelEnabled = !1),
        Va.call(this, i, e),
        this.type = "TextBufferGeometry"
    }
    function Za(t, e, n, i, r, s, a) {
        Xn.call(this),
        this.type = "SphereGeometry",
        this.parameters = {
            radius: t,
            widthSegments: e,
            heightSegments: n,
            phiStart: i,
            phiLength: r,
            thetaStart: s,
            thetaLength: a
        },
        this.fromBufferGeometry(new Ka(t,e,n,i,r,s,a)),
        this.mergeVertices()
    }
    function Ka(t, e, n, i, r, s, a) {
        ci.call(this),
        this.type = "SphereBufferGeometry",
        this.parameters = {
            radius: t,
            widthSegments: e,
            heightSegments: n,
            phiStart: i,
            phiLength: r,
            thetaStart: s,
            thetaLength: a
        },
        t = t || 1,
        e = Math.max(3, Math.floor(e) || 8),
        n = Math.max(2, Math.floor(n) || 6),
        i = void 0 !== i ? i : 0,
        r = void 0 !== r ? r : 2 * Math.PI,
        s = void 0 !== s ? s : 0,
        a = void 0 !== a ? a : Math.PI;
        var o, c, l = Math.min(s + a, Math.PI), p = 0, h = [], u = new We, f = new We, d = [], m = [], g = [], v = [];
        for (c = 0; c <= n; c++) {
            var y = []
              , b = c / n
              , w = 0;
            for (0 == c && 0 == s ? w = .5 / e : c == n && l == Math.PI && (w = -.5 / e),
            o = 0; o <= e; o++) {
                var x = o / e;
                u.x = -t * Math.cos(i + x * r) * Math.sin(s + b * a),
                u.y = t * Math.cos(s + b * a),
                u.z = t * Math.sin(i + x * r) * Math.sin(s + b * a),
                m.push(u.x, u.y, u.z),
                f.copy(u).normalize(),
                g.push(f.x, f.y, f.z),
                v.push(x + w, 1 - b),
                y.push(p++)
            }
            h.push(y)
        }
        for (c = 0; c < n; c++)
            for (o = 0; o < e; o++) {
                var M = h[c][o + 1]
                  , _ = h[c][o]
                  , S = h[c + 1][o]
                  , T = h[c + 1][o + 1];
                (0 !== c || s > 0) && d.push(M, _, T),
                (c !== n - 1 || l < Math.PI) && d.push(_, S, T)
            }
        this.setIndex(d),
        this.addAttribute("position", new ii(m,3)),
        this.addAttribute("normal", new ii(g,3)),
        this.addAttribute("uv", new ii(v,2))
    }
    function Ja(t, e, n, i, r, s) {
        Xn.call(this),
        this.type = "RingGeometry",
        this.parameters = {
            innerRadius: t,
            outerRadius: e,
            thetaSegments: n,
            phiSegments: i,
            thetaStart: r,
            thetaLength: s
        },
        this.fromBufferGeometry(new $a(t,e,n,i,r,s)),
        this.mergeVertices()
    }
    function $a(t, e, n, i, r, s) {
        ci.call(this),
        this.type = "RingBufferGeometry",
        this.parameters = {
            innerRadius: t,
            outerRadius: e,
            thetaSegments: n,
            phiSegments: i,
            thetaStart: r,
            thetaLength: s
        },
        t = t || .5,
        e = e || 1,
        r = void 0 !== r ? r : 0,
        s = void 0 !== s ? s : 2 * Math.PI,
        n = void 0 !== n ? Math.max(3, n) : 8;
        var a, o, c, l = [], p = [], h = [], u = [], f = t, d = (e - t) / (i = void 0 !== i ? Math.max(1, i) : 1), m = new We, g = new Ge;
        for (o = 0; o <= i; o++) {
            for (c = 0; c <= n; c++)
                a = r + c / n * s,
                m.x = f * Math.cos(a),
                m.y = f * Math.sin(a),
                p.push(m.x, m.y, m.z),
                h.push(0, 0, 1),
                g.x = (m.x / e + 1) / 2,
                g.y = (m.y / e + 1) / 2,
                u.push(g.x, g.y);
            f += d
        }
        for (o = 0; o < i; o++) {
            var v = o * (n + 1);
            for (c = 0; c < n; c++) {
                var y = a = c + v
                  , b = a + n + 1
                  , w = a + n + 2
                  , x = a + 1;
                l.push(y, b, x),
                l.push(b, w, x)
            }
        }
        this.setIndex(l),
        this.addAttribute("position", new ii(p,3)),
        this.addAttribute("normal", new ii(h,3)),
        this.addAttribute("uv", new ii(u,2))
    }
    function Qa(t, e, n, i) {
        Xn.call(this),
        this.type = "LatheGeometry",
        this.parameters = {
            points: t,
            segments: e,
            phiStart: n,
            phiLength: i
        },
        this.fromBufferGeometry(new to(t,e,n,i)),
        this.mergeVertices()
    }
    function to(t, e, n, i) {
        ci.call(this),
        this.type = "LatheBufferGeometry",
        this.parameters = {
            points: t,
            segments: e,
            phiStart: n,
            phiLength: i
        },
        e = Math.floor(e) || 12,
        n = n || 0,
        i = i || 2 * Math.PI,
        i = He.clamp(i, 0, 2 * Math.PI);
        var r, s, a, o = [], c = [], l = [], p = 1 / e, h = new We, u = new Ge;
        for (s = 0; s <= e; s++) {
            var f = n + s * p * i
              , d = Math.sin(f)
              , m = Math.cos(f);
            for (a = 0; a <= t.length - 1; a++)
                h.x = t[a].x * d,
                h.y = t[a].y,
                h.z = t[a].x * m,
                c.push(h.x, h.y, h.z),
                u.x = s / e,
                u.y = a / (t.length - 1),
                l.push(u.x, u.y)
        }
        for (s = 0; s < e; s++)
            for (a = 0; a < t.length - 1; a++) {
                var g = r = a + s * t.length
                  , v = r + t.length
                  , y = r + t.length + 1
                  , b = r + 1;
                o.push(g, v, b),
                o.push(v, y, b)
            }
        if (this.setIndex(o),
        this.addAttribute("position", new ii(c,3)),
        this.addAttribute("uv", new ii(l,2)),
        this.computeVertexNormals(),
        i === 2 * Math.PI) {
            var w = this.attributes.normal.array
              , x = new We
              , M = new We
              , _ = new We;
            for (r = e * t.length * 3,
            s = 0,
            a = 0; s < t.length; s++,
            a += 3)
                x.x = w[a + 0],
                x.y = w[a + 1],
                x.z = w[a + 2],
                M.x = w[r + a + 0],
                M.y = w[r + a + 1],
                M.z = w[r + a + 2],
                _.addVectors(x, M).normalize(),
                w[a + 0] = w[r + a + 0] = _.x,
                w[a + 1] = w[r + a + 1] = _.y,
                w[a + 2] = w[r + a + 2] = _.z
        }
    }
    function eo(t, e) {
        Xn.call(this),
        this.type = "ShapeGeometry",
        "object" == typeof e && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."),
        e = e.curveSegments),
        this.parameters = {
            shapes: t,
            curveSegments: e
        },
        this.fromBufferGeometry(new no(t,e)),
        this.mergeVertices()
    }
    function no(t, e) {
        ci.call(this),
        this.type = "ShapeBufferGeometry",
        this.parameters = {
            shapes: t,
            curveSegments: e
        },
        e = e || 12;
        var n = []
          , i = []
          , r = []
          , s = []
          , a = 0
          , o = 0;
        if (!1 === Array.isArray(t))
            l(t);
        else
            for (var c = 0; c < t.length; c++)
                l(t[c]),
                this.addGroup(a, o, c),
                a += o,
                o = 0;
        function l(t) {
            var a, c, l, p = i.length / 3, h = t.extractPoints(e), u = h.shape, f = h.holes;
            for (!1 === Ua.isClockWise(u) && (u = u.reverse()),
            a = 0,
            c = f.length; a < c; a++)
                l = f[a],
                !0 === Ua.isClockWise(l) && (f[a] = l.reverse());
            var d = Ua.triangulateShape(u, f);
            for (a = 0,
            c = f.length; a < c; a++)
                l = f[a],
                u = u.concat(l);
            for (a = 0,
            c = u.length; a < c; a++) {
                var m = u[a];
                i.push(m.x, m.y, 0),
                r.push(0, 0, 1),
                s.push(m.x, m.y)
            }
            for (a = 0,
            c = d.length; a < c; a++) {
                var g = d[a]
                  , v = g[0] + p
                  , y = g[1] + p
                  , b = g[2] + p;
                n.push(v, y, b),
                o += 3
            }
        }
        this.setIndex(n),
        this.addAttribute("position", new ii(i,3)),
        this.addAttribute("normal", new ii(r,3)),
        this.addAttribute("uv", new ii(s,2))
    }
    function io(t, e) {
        if (e.shapes = [],
        Array.isArray(t))
            for (var n = 0, i = t.length; n < i; n++) {
                var r = t[n];
                e.shapes.push(r.uuid)
            }
        else
            e.shapes.push(t.uuid);
        return e
    }
    function ro(t, e) {
        ci.call(this),
        this.type = "EdgesGeometry",
        this.parameters = {
            thresholdAngle: e
        },
        e = void 0 !== e ? e : 1;
        var n, i, r, s, a = [], o = Math.cos(He.DEG2RAD * e), c = [0, 0], l = {}, p = ["a", "b", "c"];
        t.isBufferGeometry ? (s = new Xn).fromBufferGeometry(t) : s = t.clone(),
        s.mergeVertices(),
        s.computeFaceNormals();
        for (var h = s.vertices, u = s.faces, f = 0, d = u.length; f < d; f++)
            for (var m = u[f], g = 0; g < 3; g++)
                n = m[p[g]],
                i = m[p[(g + 1) % 3]],
                c[0] = Math.min(n, i),
                c[1] = Math.max(n, i),
                void 0 === l[r = c[0] + "," + c[1]] ? l[r] = {
                    index1: c[0],
                    index2: c[1],
                    face1: f,
                    face2: void 0
                } : l[r].face2 = f;
        for (r in l) {
            var v = l[r];
            if (void 0 === v.face2 || u[v.face1].normal.dot(u[v.face2].normal) <= o) {
                var y = h[v.index1];
                a.push(y.x, y.y, y.z),
                y = h[v.index2],
                a.push(y.x, y.y, y.z)
            }
        }
        this.addAttribute("position", new ii(a,3))
    }
    function so(t, e, n, i, r, s, a, o) {
        Xn.call(this),
        this.type = "CylinderGeometry",
        this.parameters = {
            radiusTop: t,
            radiusBottom: e,
            height: n,
            radialSegments: i,
            heightSegments: r,
            openEnded: s,
            thetaStart: a,
            thetaLength: o
        },
        this.fromBufferGeometry(new ao(t,e,n,i,r,s,a,o)),
        this.mergeVertices()
    }
    function ao(t, e, n, i, r, s, a, o) {
        ci.call(this),
        this.type = "CylinderBufferGeometry",
        this.parameters = {
            radiusTop: t,
            radiusBottom: e,
            height: n,
            radialSegments: i,
            heightSegments: r,
            openEnded: s,
            thetaStart: a,
            thetaLength: o
        };
        var c = this;
        t = void 0 !== t ? t : 1,
        e = void 0 !== e ? e : 1,
        n = n || 1,
        i = Math.floor(i) || 8,
        r = Math.floor(r) || 1,
        s = void 0 !== s && s,
        a = void 0 !== a ? a : 0,
        o = void 0 !== o ? o : 2 * Math.PI;
        var l = []
          , p = []
          , h = []
          , u = []
          , f = 0
          , d = []
          , m = n / 2
          , g = 0;
        function v(n) {
            var r, s, d, v = new Ge, y = new We, b = 0, w = !0 === n ? t : e, x = !0 === n ? 1 : -1;
            for (s = f,
            r = 1; r <= i; r++)
                p.push(0, m * x, 0),
                h.push(0, x, 0),
                u.push(.5, .5),
                f++;
            for (d = f,
            r = 0; r <= i; r++) {
                var M = r / i * o + a
                  , _ = Math.cos(M)
                  , S = Math.sin(M);
                y.x = w * S,
                y.y = m * x,
                y.z = w * _,
                p.push(y.x, y.y, y.z),
                h.push(0, x, 0),
                v.x = .5 * _ + .5,
                v.y = .5 * S * x + .5,
                u.push(v.x, v.y),
                f++
            }
            for (r = 0; r < i; r++) {
                var T = s + r
                  , E = d + r;
                !0 === n ? l.push(E, E + 1, T) : l.push(E + 1, E, T),
                b += 3
            }
            c.addGroup(g, b, !0 === n ? 1 : 2),
            g += b
        }
        !function() {
            var s, v, y = new We, b = new We, w = 0, x = (e - t) / n;
            for (v = 0; v <= r; v++) {
                var M = []
                  , _ = v / r
                  , S = _ * (e - t) + t;
                for (s = 0; s <= i; s++) {
                    var T = s / i
                      , E = T * o + a
                      , k = Math.sin(E)
                      , A = Math.cos(E);
                    b.x = S * k,
                    b.y = -_ * n + m,
                    b.z = S * A,
                    p.push(b.x, b.y, b.z),
                    y.set(k, x, A).normalize(),
                    h.push(y.x, y.y, y.z),
                    u.push(T, 1 - _),
                    M.push(f++)
                }
                d.push(M)
            }
            for (s = 0; s < i; s++)
                for (v = 0; v < r; v++) {
                    var L = d[v][s]
                      , P = d[v + 1][s]
                      , C = d[v + 1][s + 1]
                      , R = d[v][s + 1];
                    l.push(L, P, R),
                    l.push(P, C, R),
                    w += 6
                }
            c.addGroup(g, w, 0),
            g += w
        }(),
        !1 === s && (t > 0 && v(!0),
        e > 0 && v(!1)),
        this.setIndex(l),
        this.addAttribute("position", new ii(p,3)),
        this.addAttribute("normal", new ii(h,3)),
        this.addAttribute("uv", new ii(u,2))
    }
    function oo(t, e, n, i, r, s, a) {
        so.call(this, 0, t, e, n, i, r, s, a),
        this.type = "ConeGeometry",
        this.parameters = {
            radius: t,
            height: e,
            radialSegments: n,
            heightSegments: i,
            openEnded: r,
            thetaStart: s,
            thetaLength: a
        }
    }
    function co(t, e, n, i, r, s, a) {
        ao.call(this, 0, t, e, n, i, r, s, a),
        this.type = "ConeBufferGeometry",
        this.parameters = {
            radius: t,
            height: e,
            radialSegments: n,
            heightSegments: i,
            openEnded: r,
            thetaStart: s,
            thetaLength: a
        }
    }
    function lo(t, e, n, i) {
        Xn.call(this),
        this.type = "CircleGeometry",
        this.parameters = {
            radius: t,
            segments: e,
            thetaStart: n,
            thetaLength: i
        },
        this.fromBufferGeometry(new po(t,e,n,i)),
        this.mergeVertices()
    }
    function po(t, e, n, i) {
        ci.call(this),
        this.type = "CircleBufferGeometry",
        this.parameters = {
            radius: t,
            segments: e,
            thetaStart: n,
            thetaLength: i
        },
        t = t || 1,
        e = void 0 !== e ? Math.max(3, e) : 8,
        n = void 0 !== n ? n : 0,
        i = void 0 !== i ? i : 2 * Math.PI;
        var r, s, a = [], o = [], c = [], l = [], p = new We, h = new Ge;
        for (o.push(0, 0, 0),
        c.push(0, 0, 1),
        l.push(.5, .5),
        s = 0,
        r = 3; s <= e; s++,
        r += 3) {
            var u = n + s / e * i;
            p.x = t * Math.cos(u),
            p.y = t * Math.sin(u),
            o.push(p.x, p.y, p.z),
            c.push(0, 0, 1),
            h.x = (o[r] / t + 1) / 2,
            h.y = (o[r + 1] / t + 1) / 2,
            l.push(h.x, h.y)
        }
        for (r = 1; r <= e; r++)
            a.push(r, r + 1, 0);
        this.setIndex(a),
        this.addAttribute("position", new ii(o,3)),
        this.addAttribute("normal", new ii(c,3)),
        this.addAttribute("uv", new ii(l,2))
    }
    qa.prototype = Object.create(Xn.prototype),
    qa.prototype.constructor = qa,
    Xa.prototype = Object.create(Va.prototype),
    Xa.prototype.constructor = Xa,
    Za.prototype = Object.create(Xn.prototype),
    Za.prototype.constructor = Za,
    Ka.prototype = Object.create(ci.prototype),
    Ka.prototype.constructor = Ka,
    Ja.prototype = Object.create(Xn.prototype),
    Ja.prototype.constructor = Ja,
    $a.prototype = Object.create(ci.prototype),
    $a.prototype.constructor = $a,
    Qa.prototype = Object.create(Xn.prototype),
    Qa.prototype.constructor = Qa,
    to.prototype = Object.create(ci.prototype),
    to.prototype.constructor = to,
    eo.prototype = Object.create(Xn.prototype),
    eo.prototype.constructor = eo,
    eo.prototype.toJSON = function() {
        var t = Xn.prototype.toJSON.call(this);
        return io(this.parameters.shapes, t)
    }
    ,
    no.prototype = Object.create(ci.prototype),
    no.prototype.constructor = no,
    no.prototype.toJSON = function() {
        var t = ci.prototype.toJSON.call(this);
        return io(this.parameters.shapes, t)
    }
    ,
    ro.prototype = Object.create(ci.prototype),
    ro.prototype.constructor = ro,
    so.prototype = Object.create(Xn.prototype),
    so.prototype.constructor = so,
    ao.prototype = Object.create(ci.prototype),
    ao.prototype.constructor = ao,
    oo.prototype = Object.create(so.prototype),
    oo.prototype.constructor = oo,
    co.prototype = Object.create(ao.prototype),
    co.prototype.constructor = co,
    lo.prototype = Object.create(Xn.prototype),
    lo.prototype.constructor = lo,
    po.prototype = Object.create(ci.prototype),
    po.prototype.constructor = po;
    var ho = Object.freeze({
        WireframeGeometry: Qs,
        ParametricGeometry: ta,
        ParametricBufferGeometry: ea,
        TetrahedronGeometry: ra,
        TetrahedronBufferGeometry: sa,
        OctahedronGeometry: aa,
        OctahedronBufferGeometry: oa,
        IcosahedronGeometry: ca,
        IcosahedronBufferGeometry: la,
        DodecahedronGeometry: pa,
        DodecahedronBufferGeometry: ha,
        PolyhedronGeometry: na,
        PolyhedronBufferGeometry: ia,
        TubeGeometry: ua,
        TubeBufferGeometry: fa,
        TorusKnotGeometry: da,
        TorusKnotBufferGeometry: ma,
        TorusGeometry: ga,
        TorusBufferGeometry: va,
        TextGeometry: qa,
        TextBufferGeometry: Xa,
        SphereGeometry: Za,
        SphereBufferGeometry: Ka,
        RingGeometry: Ja,
        RingBufferGeometry: $a,
        PlaneGeometry: hi,
        PlaneBufferGeometry: ui,
        LatheGeometry: Qa,
        LatheBufferGeometry: to,
        ShapeGeometry: eo,
        ShapeBufferGeometry: no,
        ExtrudeGeometry: Ga,
        ExtrudeBufferGeometry: Va,
        EdgesGeometry: ro,
        ConeGeometry: oo,
        ConeBufferGeometry: co,
        CylinderGeometry: so,
        CylinderBufferGeometry: ao,
        CircleGeometry: lo,
        CircleBufferGeometry: po,
        BoxGeometry: li,
        BoxBufferGeometry: pi
    });
    function uo(t) {
        di.call(this),
        this.type = "ShadowMaterial",
        this.color = new Ln(0),
        this.transparent = !0,
        this.setValues(t)
    }
    function fo(t) {
        Li.call(this, t),
        this.type = "RawShaderMaterial"
    }
    function mo(t) {
        di.call(this),
        this.defines = {
            STANDARD: ""
        },
        this.type = "MeshStandardMaterial",
        this.color = new Ln(16777215),
        this.roughness = .5,
        this.metalness = .5,
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new Ln(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalMapType = Ue,
        this.normalScale = new Ge(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.roughnessMap = null,
        this.metalnessMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.envMapIntensity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(t)
    }
    function go(t) {
        mo.call(this),
        this.defines = {
            PHYSICAL: ""
        },
        this.type = "MeshPhysicalMaterial",
        this.reflectivity = .5,
        this.clearCoat = 0,
        this.clearCoatRoughness = 0,
        this.setValues(t)
    }
    function vo(t) {
        di.call(this),
        this.type = "MeshPhongMaterial",
        this.color = new Ln(16777215),
        this.specular = new Ln(1118481),
        this.shininess = 30,
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new Ln(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalMapType = Ue,
        this.normalScale = new Ge(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.specularMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.combine = nt,
        this.reflectivity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(t)
    }
    function yo(t) {
        vo.call(this),
        this.defines = {
            TOON: ""
        },
        this.type = "MeshToonMaterial",
        this.gradientMap = null,
        this.setValues(t)
    }
    function bo(t) {
        di.call(this),
        this.type = "MeshNormalMaterial",
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalMapType = Ue,
        this.normalScale = new Ge(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.fog = !1,
        this.lights = !1,
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(t)
    }
    function wo(t) {
        di.call(this),
        this.type = "MeshLambertMaterial",
        this.color = new Ln(16777215),
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new Ln(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.specularMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.combine = nt,
        this.reflectivity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(t)
    }
    function xo(t) {
        di.call(this),
        this.defines = {
            MATCAP: ""
        },
        this.type = "MeshMatcapMaterial",
        this.color = new Ln(16777215),
        this.matcap = null,
        this.map = null,
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalMapType = Ue,
        this.normalScale = new Ge(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.alphaMap = null,
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.lights = !1,
        this.setValues(t)
    }
    function Mo(t) {
        Gs.call(this),
        this.type = "LineDashedMaterial",
        this.scale = 1,
        this.dashSize = 3,
        this.gapSize = 1,
        this.setValues(t)
    }
    uo.prototype = Object.create(di.prototype),
    uo.prototype.constructor = uo,
    uo.prototype.isShadowMaterial = !0,
    uo.prototype.copy = function(t) {
        return di.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this
    }
    ,
    fo.prototype = Object.create(Li.prototype),
    fo.prototype.constructor = fo,
    fo.prototype.isRawShaderMaterial = !0,
    mo.prototype = Object.create(di.prototype),
    mo.prototype.constructor = mo,
    mo.prototype.isMeshStandardMaterial = !0,
    mo.prototype.copy = function(t) {
        return di.prototype.copy.call(this, t),
        this.defines = {
            STANDARD: ""
        },
        this.color.copy(t.color),
        this.roughness = t.roughness,
        this.metalness = t.metalness,
        this.map = t.map,
        this.lightMap = t.lightMap,
        this.lightMapIntensity = t.lightMapIntensity,
        this.aoMap = t.aoMap,
        this.aoMapIntensity = t.aoMapIntensity,
        this.emissive.copy(t.emissive),
        this.emissiveMap = t.emissiveMap,
        this.emissiveIntensity = t.emissiveIntensity,
        this.bumpMap = t.bumpMap,
        this.bumpScale = t.bumpScale,
        this.normalMap = t.normalMap,
        this.normalMapType = t.normalMapType,
        this.normalScale.copy(t.normalScale),
        this.displacementMap = t.displacementMap,
        this.displacementScale = t.displacementScale,
        this.displacementBias = t.displacementBias,
        this.roughnessMap = t.roughnessMap,
        this.metalnessMap = t.metalnessMap,
        this.alphaMap = t.alphaMap,
        this.envMap = t.envMap,
        this.envMapIntensity = t.envMapIntensity,
        this.refractionRatio = t.refractionRatio,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.wireframeLinecap = t.wireframeLinecap,
        this.wireframeLinejoin = t.wireframeLinejoin,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.morphNormals = t.morphNormals,
        this
    }
    ,
    go.prototype = Object.create(mo.prototype),
    go.prototype.constructor = go,
    go.prototype.isMeshPhysicalMaterial = !0,
    go.prototype.copy = function(t) {
        return mo.prototype.copy.call(this, t),
        this.defines = {
            PHYSICAL: ""
        },
        this.reflectivity = t.reflectivity,
        this.clearCoat = t.clearCoat,
        this.clearCoatRoughness = t.clearCoatRoughness,
        this
    }
    ,
    vo.prototype = Object.create(di.prototype),
    vo.prototype.constructor = vo,
    vo.prototype.isMeshPhongMaterial = !0,
    vo.prototype.copy = function(t) {
        return di.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.specular.copy(t.specular),
        this.shininess = t.shininess,
        this.map = t.map,
        this.lightMap = t.lightMap,
        this.lightMapIntensity = t.lightMapIntensity,
        this.aoMap = t.aoMap,
        this.aoMapIntensity = t.aoMapIntensity,
        this.emissive.copy(t.emissive),
        this.emissiveMap = t.emissiveMap,
        this.emissiveIntensity = t.emissiveIntensity,
        this.bumpMap = t.bumpMap,
        this.bumpScale = t.bumpScale,
        this.normalMap = t.normalMap,
        this.normalMapType = t.normalMapType,
        this.normalScale.copy(t.normalScale),
        this.displacementMap = t.displacementMap,
        this.displacementScale = t.displacementScale,
        this.displacementBias = t.displacementBias,
        this.specularMap = t.specularMap,
        this.alphaMap = t.alphaMap,
        this.envMap = t.envMap,
        this.combine = t.combine,
        this.reflectivity = t.reflectivity,
        this.refractionRatio = t.refractionRatio,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.wireframeLinecap = t.wireframeLinecap,
        this.wireframeLinejoin = t.wireframeLinejoin,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.morphNormals = t.morphNormals,
        this
    }
    ,
    yo.prototype = Object.create(vo.prototype),
    yo.prototype.constructor = yo,
    yo.prototype.isMeshToonMaterial = !0,
    yo.prototype.copy = function(t) {
        return vo.prototype.copy.call(this, t),
        this.gradientMap = t.gradientMap,
        this
    }
    ,
    bo.prototype = Object.create(di.prototype),
    bo.prototype.constructor = bo,
    bo.prototype.isMeshNormalMaterial = !0,
    bo.prototype.copy = function(t) {
        return di.prototype.copy.call(this, t),
        this.bumpMap = t.bumpMap,
        this.bumpScale = t.bumpScale,
        this.normalMap = t.normalMap,
        this.normalMapType = t.normalMapType,
        this.normalScale.copy(t.normalScale),
        this.displacementMap = t.displacementMap,
        this.displacementScale = t.displacementScale,
        this.displacementBias = t.displacementBias,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.morphNormals = t.morphNormals,
        this
    }
    ,
    wo.prototype = Object.create(di.prototype),
    wo.prototype.constructor = wo,
    wo.prototype.isMeshLambertMaterial = !0,
    wo.prototype.copy = function(t) {
        return di.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.map = t.map,
        this.lightMap = t.lightMap,
        this.lightMapIntensity = t.lightMapIntensity,
        this.aoMap = t.aoMap,
        this.aoMapIntensity = t.aoMapIntensity,
        this.emissive.copy(t.emissive),
        this.emissiveMap = t.emissiveMap,
        this.emissiveIntensity = t.emissiveIntensity,
        this.specularMap = t.specularMap,
        this.alphaMap = t.alphaMap,
        this.envMap = t.envMap,
        this.combine = t.combine,
        this.reflectivity = t.reflectivity,
        this.refractionRatio = t.refractionRatio,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.wireframeLinecap = t.wireframeLinecap,
        this.wireframeLinejoin = t.wireframeLinejoin,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.morphNormals = t.morphNormals,
        this
    }
    ,
    xo.prototype = Object.create(di.prototype),
    xo.prototype.constructor = xo,
    xo.prototype.isMeshMatcapMaterial = !0,
    xo.prototype.copy = function(t) {
        return di.prototype.copy.call(this, t),
        this.defines = {
            MATCAP: ""
        },
        this.color.copy(t.color),
        this.matcap = t.matcap,
        this.map = t.map,
        this.bumpMap = t.bumpMap,
        this.bumpScale = t.bumpScale,
        this.normalMap = t.normalMap,
        this.normalMapType = t.normalMapType,
        this.normalScale.copy(t.normalScale),
        this.displacementMap = t.displacementMap,
        this.displacementScale = t.displacementScale,
        this.displacementBias = t.displacementBias,
        this.alphaMap = t.alphaMap,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.morphNormals = t.morphNormals,
        this
    }
    ,
    Mo.prototype = Object.create(Gs.prototype),
    Mo.prototype.constructor = Mo,
    Mo.prototype.isLineDashedMaterial = !0,
    Mo.prototype.copy = function(t) {
        return Gs.prototype.copy.call(this, t),
        this.scale = t.scale,
        this.dashSize = t.dashSize,
        this.gapSize = t.gapSize,
        this
    }
    ;
    var _o = Object.freeze({
        ShadowMaterial: uo,
        SpriteMaterial: Bs,
        RawShaderMaterial: fo,
        ShaderMaterial: Li,
        PointsMaterial: qs,
        MeshPhysicalMaterial: go,
        MeshStandardMaterial: mo,
        MeshPhongMaterial: vo,
        MeshToonMaterial: yo,
        MeshNormalMaterial: bo,
        MeshLambertMaterial: wo,
        MeshDepthMaterial: ps,
        MeshDistanceMaterial: hs,
        MeshBasicMaterial: Ri,
        MeshMatcapMaterial: xo,
        LineDashedMaterial: Mo,
        LineBasicMaterial: Gs,
        Material: di
    })
      , So = {
        arraySlice: function(t, e, n) {
            return So.isTypedArray(t) ? new t.constructor(t.subarray(e, void 0 !== n ? n : t.length)) : t.slice(e, n)
        },
        convertArray: function(t, e, n) {
            return !t || !n && t.constructor === e ? t : "number" == typeof e.BYTES_PER_ELEMENT ? new e(t) : Array.prototype.slice.call(t)
        },
        isTypedArray: function(t) {
            return ArrayBuffer.isView(t) && !(t instanceof DataView)
        },
        getKeyframeOrder: function(t) {
            for (var e = t.length, n = new Array(e), i = 0; i !== e; ++i)
                n[i] = i;
            return n.sort(function(e, n) {
                return t[e] - t[n]
            }),
            n
        },
        sortedArray: function(t, e, n) {
            for (var i = t.length, r = new t.constructor(i), s = 0, a = 0; a !== i; ++s)
                for (var o = n[s] * e, c = 0; c !== e; ++c)
                    r[a++] = t[o + c];
            return r
        },
        flattenJSON: function(t, e, n, i) {
            for (var r = 1, s = t[0]; void 0 !== s && void 0 === s[i]; )
                s = t[r++];
            if (void 0 !== s) {
                var a = s[i];
                if (void 0 !== a)
                    if (Array.isArray(a))
                        do {
                            void 0 !== (a = s[i]) && (e.push(s.time),
                            n.push.apply(n, a)),
                            s = t[r++]
                        } while (void 0 !== s);
                    else if (void 0 !== a.toArray)
                        do {
                            void 0 !== (a = s[i]) && (e.push(s.time),
                            a.toArray(n, n.length)),
                            s = t[r++]
                        } while (void 0 !== s);
                    else
                        do {
                            void 0 !== (a = s[i]) && (e.push(s.time),
                            n.push(a)),
                            s = t[r++]
                        } while (void 0 !== s)
            }
        }
    };
    function To(t, e, n, i) {
        this.parameterPositions = t,
        this._cachedIndex = 0,
        this.resultBuffer = void 0 !== i ? i : new e.constructor(n),
        this.sampleValues = e,
        this.valueSize = n
    }
    function Eo(t, e, n, i) {
        To.call(this, t, e, n, i),
        this._weightPrev = -0,
        this._offsetPrev = -0,
        this._weightNext = -0,
        this._offsetNext = -0
    }
    function ko(t, e, n, i) {
        To.call(this, t, e, n, i)
    }
    function Ao(t, e, n, i) {
        To.call(this, t, e, n, i)
    }
    function Lo(t, e, n, i) {
        if (void 0 === t)
            throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (void 0 === e || 0 === e.length)
            throw new Error("THREE.KeyframeTrack: no keyframes in track named " + t);
        this.name = t,
        this.times = So.convertArray(e, this.TimeBufferType),
        this.values = So.convertArray(n, this.ValueBufferType),
        this.setInterpolation(i || this.DefaultInterpolation)
    }
    function Po(t, e, n) {
        Lo.call(this, t, e, n)
    }
    function Co(t, e, n, i) {
        Lo.call(this, t, e, n, i)
    }
    function Ro(t, e, n, i) {
        Lo.call(this, t, e, n, i)
    }
    function Io(t, e, n, i) {
        To.call(this, t, e, n, i)
    }
    function Oo(t, e, n, i) {
        Lo.call(this, t, e, n, i)
    }
    function Do(t, e, n, i) {
        Lo.call(this, t, e, n, i)
    }
    function zo(t, e, n, i) {
        Lo.call(this, t, e, n, i)
    }
    function Bo(t, e, n) {
        this.name = t,
        this.tracks = n,
        this.duration = void 0 !== e ? e : -1,
        this.uuid = He.generateUUID(),
        this.duration < 0 && this.resetDuration()
    }
    function No(t) {
        if (void 0 === t.type)
            throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
        var e = function(t) {
            switch (t.toLowerCase()) {
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
                return Ro;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
                return zo;
            case "color":
                return Co;
            case "quaternion":
                return Oo;
            case "bool":
            case "boolean":
                return Po;
            case "string":
                return Do
            }
            throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + t)
        }(t.type);
        if (void 0 === t.times) {
            var n = []
              , i = [];
            So.flattenJSON(t.keys, n, i, "value"),
            t.times = n,
            t.values = i
        }
        return void 0 !== e.parse ? e.parse(t) : new e(t.name,t.times,t.values,t.interpolation)
    }
    Object.assign(To.prototype, {
        evaluate: function(t) {
            var e = this.parameterPositions
              , n = this._cachedIndex
              , i = e[n]
              , r = e[n - 1];
            t: {
                e: {
                    var s;
                    n: {
                        i: if (!(t < i)) {
                            for (var a = n + 2; ; ) {
                                if (void 0 === i) {
                                    if (t < r)
                                        break i;
                                    return n = e.length,
                                    this._cachedIndex = n,
                                    this.afterEnd_(n - 1, t, r)
                                }
                                if (n === a)
                                    break;
                                if (r = i,
                                t < (i = e[++n]))
                                    break e
                            }
                            s = e.length;
                            break n
                        }
                        if (t >= r)
                            break t;
                        var o = e[1];
                        t < o && (n = 2,
                        r = o);
                        for (a = n - 2; ; ) {
                            if (void 0 === r)
                                return this._cachedIndex = 0,
                                this.beforeStart_(0, t, i);
                            if (n === a)
                                break;
                            if (i = r,
                            t >= (r = e[--n - 1]))
                                break e
                        }
                        s = n,
                        n = 0
                    }
                    for (; n < s; ) {
                        var c = n + s >>> 1;
                        t < e[c] ? s = c : n = c + 1
                    }
                    if (i = e[n],
                    void 0 === (r = e[n - 1]))
                        return this._cachedIndex = 0,
                        this.beforeStart_(0, t, i);
                    if (void 0 === i)
                        return n = e.length,
                        this._cachedIndex = n,
                        this.afterEnd_(n - 1, r, t)
                }
                this._cachedIndex = n,
                this.intervalChanged_(n, r, i)
            }
            return this.interpolate_(n, r, t, i)
        },
        settings: null,
        DefaultSettings_: {},
        getSettings_: function() {
            return this.settings || this.DefaultSettings_
        },
        copySampleValue_: function(t) {
            for (var e = this.resultBuffer, n = this.sampleValues, i = this.valueSize, r = t * i, s = 0; s !== i; ++s)
                e[s] = n[r + s];
            return e
        },
        interpolate_: function() {
            throw new Error("call to abstract method")
        },
        intervalChanged_: function() {}
    }),
    //!\ DECLARE ALIAS AFTER assign prototype !
    Object.assign(To.prototype, {
        beforeStart_: To.prototype.copySampleValue_,
        afterEnd_: To.prototype.copySampleValue_
    }),
    Eo.prototype = Object.assign(Object.create(To.prototype), {
        constructor: Eo,
        DefaultSettings_: {
            endingStart: Se,
            endingEnd: Se
        },
        intervalChanged_: function(t, e, n) {
            var i = this.parameterPositions
              , r = t - 2
              , s = t + 1
              , a = i[r]
              , o = i[s];
            if (void 0 === a)
                switch (this.getSettings_().endingStart) {
                case Te:
                    r = t,
                    a = 2 * e - n;
                    break;
                case Ee:
                    a = e + i[r = i.length - 2] - i[r + 1];
                    break;
                default:
                    r = t,
                    a = n
                }
            if (void 0 === o)
                switch (this.getSettings_().endingEnd) {
                case Te:
                    s = t,
                    o = 2 * n - e;
                    break;
                case Ee:
                    s = 1,
                    o = n + i[1] - i[0];
                    break;
                default:
                    s = t - 1,
                    o = e
                }
            var c = .5 * (n - e)
              , l = this.valueSize;
            this._weightPrev = c / (e - a),
            this._weightNext = c / (o - n),
            this._offsetPrev = r * l,
            this._offsetNext = s * l
        },
        interpolate_: function(t, e, n, i) {
            for (var r = this.resultBuffer, s = this.sampleValues, a = this.valueSize, o = t * a, c = o - a, l = this._offsetPrev, p = this._offsetNext, h = this._weightPrev, u = this._weightNext, f = (n - e) / (i - e), d = f * f, m = d * f, g = -h * m + 2 * h * d - h * f, v = (1 + h) * m + (-1.5 - 2 * h) * d + (-.5 + h) * f + 1, y = (-1 - u) * m + (1.5 + u) * d + .5 * f, b = u * m - u * d, w = 0; w !== a; ++w)
                r[w] = g * s[l + w] + v * s[c + w] + y * s[o + w] + b * s[p + w];
            return r
        }
    }),
    ko.prototype = Object.assign(Object.create(To.prototype), {
        constructor: ko,
        interpolate_: function(t, e, n, i) {
            for (var r = this.resultBuffer, s = this.sampleValues, a = this.valueSize, o = t * a, c = o - a, l = (n - e) / (i - e), p = 1 - l, h = 0; h !== a; ++h)
                r[h] = s[c + h] * p + s[o + h] * l;
            return r
        }
    }),
    Ao.prototype = Object.assign(Object.create(To.prototype), {
        constructor: Ao,
        interpolate_: function(t) {
            return this.copySampleValue_(t - 1)
        }
    }),
    Object.assign(Lo, {
        toJSON: function(t) {
            var e, n = t.constructor;
            if (void 0 !== n.toJSON)
                e = n.toJSON(t);
            else {
                e = {
                    name: t.name,
                    times: So.convertArray(t.times, Array),
                    values: So.convertArray(t.values, Array)
                };
                var i = t.getInterpolation();
                i !== t.DefaultInterpolation && (e.interpolation = i)
            }
            return e.type = t.ValueTypeName,
            e
        }
    }),
    Object.assign(Lo.prototype, {
        constructor: Lo,
        TimeBufferType: Float32Array,
        ValueBufferType: Float32Array,
        DefaultInterpolation: Me,
        InterpolantFactoryMethodDiscrete: function(t) {
            return new Ao(this.times,this.values,this.getValueSize(),t)
        },
        InterpolantFactoryMethodLinear: function(t) {
            return new ko(this.times,this.values,this.getValueSize(),t)
        },
        InterpolantFactoryMethodSmooth: function(t) {
            return new Eo(this.times,this.values,this.getValueSize(),t)
        },
        setInterpolation: function(t) {
            var e;
            switch (t) {
            case xe:
                e = this.InterpolantFactoryMethodDiscrete;
                break;
            case Me:
                e = this.InterpolantFactoryMethodLinear;
                break;
            case _e:
                e = this.InterpolantFactoryMethodSmooth
            }
            if (void 0 === e) {
                var n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                if (void 0 === this.createInterpolant) {
                    if (t === this.DefaultInterpolation)
                        throw new Error(n);
                    this.setInterpolation(this.DefaultInterpolation)
                }
                return console.warn("THREE.KeyframeTrack:", n),
                this
            }
            return this.createInterpolant = e,
            this
        },
        getInterpolation: function() {
            switch (this.createInterpolant) {
            case this.InterpolantFactoryMethodDiscrete:
                return xe;
            case this.InterpolantFactoryMethodLinear:
                return Me;
            case this.InterpolantFactoryMethodSmooth:
                return _e
            }
        },
        getValueSize: function() {
            return this.values.length / this.times.length
        },
        shift: function(t) {
            if (0 !== t)
                for (var e = this.times, n = 0, i = e.length; n !== i; ++n)
                    e[n] += t;
            return this
        },
        scale: function(t) {
            if (1 !== t)
                for (var e = this.times, n = 0, i = e.length; n !== i; ++n)
                    e[n] *= t;
            return this
        },
        trim: function(t, e) {
            for (var n = this.times, i = n.length, r = 0, s = i - 1; r !== i && n[r] < t; )
                ++r;
            for (; -1 !== s && n[s] > e; )
                --s;
            if (++s,
            0 !== r || s !== i) {
                r >= s && (r = (s = Math.max(s, 1)) - 1);
                var a = this.getValueSize();
                this.times = So.arraySlice(n, r, s),
                this.values = So.arraySlice(this.values, r * a, s * a)
            }
            return this
        },
        validate: function() {
            var t = !0
              , e = this.getValueSize();
            e - Math.floor(e) != 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this),
            t = !1);
            var n = this.times
              , i = this.values
              , r = n.length;
            0 === r && (console.error("THREE.KeyframeTrack: Track is empty.", this),
            t = !1);
            for (var s = null, a = 0; a !== r; a++) {
                var o = n[a];
                if ("number" == typeof o && isNaN(o)) {
                    console.error("THREE.KeyframeTrack: Time is not a valid number.", this, a, o),
                    t = !1;
                    break
                }
                if (null !== s && s > o) {
                    console.error("THREE.KeyframeTrack: Out of order keys.", this, a, o, s),
                    t = !1;
                    break
                }
                s = o
            }
            if (void 0 !== i && So.isTypedArray(i)) {
                a = 0;
                for (var c = i.length; a !== c; ++a) {
                    var l = i[a];
                    if (isNaN(l)) {
                        console.error("THREE.KeyframeTrack: Value is not a valid number.", this, a, l),
                        t = !1;
                        break
                    }
                }
            }
            return t
        },
        optimize: function() {
            for (var t = this.times, e = this.values, n = this.getValueSize(), i = this.getInterpolation() === _e, r = 1, s = t.length - 1, a = 1; a < s; ++a) {
                var o = !1
                  , c = t[a];
                if (c !== t[a + 1] && (1 !== a || c !== c[0]))
                    if (i)
                        o = !0;
                    else
                        for (var l = a * n, p = l - n, h = l + n, u = 0; u !== n; ++u) {
                            var f = e[l + u];
                            if (f !== e[p + u] || f !== e[h + u]) {
                                o = !0;
                                break
                            }
                        }
                if (o) {
                    if (a !== r) {
                        t[r] = t[a];
                        var d = a * n
                          , m = r * n;
                        for (u = 0; u !== n; ++u)
                            e[m + u] = e[d + u]
                    }
                    ++r
                }
            }
            if (s > 0) {
                t[r] = t[s];
                for (d = s * n,
                m = r * n,
                u = 0; u !== n; ++u)
                    e[m + u] = e[d + u];
                ++r
            }
            return r !== t.length && (this.times = So.arraySlice(t, 0, r),
            this.values = So.arraySlice(e, 0, r * n)),
            this
        },
        clone: function() {
            var t = So.arraySlice(this.times, 0)
              , e = So.arraySlice(this.values, 0)
              , n = new (0,
            this.constructor)(this.name,t,e);
            return n.createInterpolant = this.createInterpolant,
            n
        }
    }),
    Po.prototype = Object.assign(Object.create(Lo.prototype), {
        constructor: Po,
        ValueTypeName: "bool",
        ValueBufferType: Array,
        DefaultInterpolation: xe,
        InterpolantFactoryMethodLinear: void 0,
        InterpolantFactoryMethodSmooth: void 0
    }),
    Co.prototype = Object.assign(Object.create(Lo.prototype), {
        constructor: Co,
        ValueTypeName: "color"
    }),
    Ro.prototype = Object.assign(Object.create(Lo.prototype), {
        constructor: Ro,
        ValueTypeName: "number"
    }),
    Io.prototype = Object.assign(Object.create(To.prototype), {
        constructor: Io,
        interpolate_: function(t, e, n, i) {
            for (var r = this.resultBuffer, s = this.sampleValues, a = this.valueSize, o = t * a, c = (n - e) / (i - e), l = o + a; o !== l; o += 4)
                Ve.slerpFlat(r, 0, s, o - a, s, o, c);
            return r
        }
    }),
    Oo.prototype = Object.assign(Object.create(Lo.prototype), {
        constructor: Oo,
        ValueTypeName: "quaternion",
        DefaultInterpolation: Me,
        InterpolantFactoryMethodLinear: function(t) {
            return new Io(this.times,this.values,this.getValueSize(),t)
        },
        InterpolantFactoryMethodSmooth: void 0
    }),
    Do.prototype = Object.assign(Object.create(Lo.prototype), {
        constructor: Do,
        ValueTypeName: "string",
        ValueBufferType: Array,
        DefaultInterpolation: xe,
        InterpolantFactoryMethodLinear: void 0,
        InterpolantFactoryMethodSmooth: void 0
    }),
    zo.prototype = Object.assign(Object.create(Lo.prototype), {
        constructor: zo,
        ValueTypeName: "vector"
    }),
    Object.assign(Bo, {
        parse: function(t) {
            for (var e = [], n = t.tracks, i = 1 / (t.fps || 1), r = 0, s = n.length; r !== s; ++r)
                e.push(No(n[r]).scale(i));
            return new Bo(t.name,t.duration,e)
        },
        toJSON: function(t) {
            for (var e = [], n = t.tracks, i = {
                name: t.name,
                duration: t.duration,
                tracks: e,
                uuid: t.uuid
            }, r = 0, s = n.length; r !== s; ++r)
                e.push(Lo.toJSON(n[r]));
            return i
        },
        CreateFromMorphTargetSequence: function(t, e, n, i) {
            for (var r = e.length, s = [], a = 0; a < r; a++) {
                var o = []
                  , c = [];
                o.push((a + r - 1) % r, a, (a + 1) % r),
                c.push(0, 1, 0);
                var l = So.getKeyframeOrder(o);
                o = So.sortedArray(o, 1, l),
                c = So.sortedArray(c, 1, l),
                i || 0 !== o[0] || (o.push(r),
                c.push(c[0])),
                s.push(new Ro(".morphTargetInfluences[" + e[a].name + "]",o,c).scale(1 / n))
            }
            return new Bo(t,-1,s)
        },
        findByName: function(t, e) {
            var n = t;
            if (!Array.isArray(t)) {
                var i = t;
                n = i.geometry && i.geometry.animations || i.animations
            }
            for (var r = 0; r < n.length; r++)
                if (n[r].name === e)
                    return n[r];
            return null
        },
        CreateClipsFromMorphTargetSequences: function(t, e, n) {
            for (var i = {}, r = /^([\w-]*?)([\d]+)$/, s = 0, a = t.length; s < a; s++) {
                var o = t[s]
                  , c = o.name.match(r);
                if (c && c.length > 1) {
                    var l = i[h = c[1]];
                    l || (i[h] = l = []),
                    l.push(o)
                }
            }
            var p = [];
            for (var h in i)
                p.push(Bo.CreateFromMorphTargetSequence(h, i[h], e, n));
            return p
        },
        parseAnimation: function(t, e) {
            if (!t)
                return console.error("THREE.AnimationClip: No animation in JSONLoader data."),
                null;
            for (var n = function(t, e, n, i, r) {
                if (0 !== n.length) {
                    var s = []
                      , a = [];
                    So.flattenJSON(n, s, a, i),
                    0 !== s.length && r.push(new t(e,s,a))
                }
            }, i = [], r = t.name || "default", s = t.length || -1, a = t.fps || 30, o = t.hierarchy || [], c = 0; c < o.length; c++) {
                var l = o[c].keys;
                if (l && 0 !== l.length)
                    if (l[0].morphTargets) {
                        for (var p = {}, h = 0; h < l.length; h++)
                            if (l[h].morphTargets)
                                for (var u = 0; u < l[h].morphTargets.length; u++)
                                    p[l[h].morphTargets[u]] = -1;
                        for (var f in p) {
                            var d = []
                              , m = [];
                            for (u = 0; u !== l[h].morphTargets.length; ++u) {
                                var g = l[h];
                                d.push(g.time),
                                m.push(g.morphTarget === f ? 1 : 0)
                            }
                            i.push(new Ro(".morphTargetInfluence[" + f + "]",d,m))
                        }
                        s = p.length * (a || 1)
                    } else {
                        var v = ".bones[" + e[c].name + "]";
                        n(zo, v + ".position", l, "pos", i),
                        n(Oo, v + ".quaternion", l, "rot", i),
                        n(zo, v + ".scale", l, "scl", i)
                    }
            }
            return 0 === i.length ? null : new Bo(r,s,i)
        }
    }),
    Object.assign(Bo.prototype, {
        resetDuration: function() {
            for (var t = 0, e = 0, n = this.tracks.length; e !== n; ++e) {
                var i = this.tracks[e];
                t = Math.max(t, i.times[i.times.length - 1])
            }
            return this.duration = t,
            this
        },
        trim: function() {
            for (var t = 0; t < this.tracks.length; t++)
                this.tracks[t].trim(0, this.duration);
            return this
        },
        validate: function() {
            for (var t = !0, e = 0; e < this.tracks.length; e++)
                t = t && this.tracks[e].validate();
            return t
        },
        optimize: function() {
            for (var t = 0; t < this.tracks.length; t++)
                this.tracks[t].optimize();
            return this
        },
        clone: function() {
            for (var t = [], e = 0; e < this.tracks.length; e++)
                t.push(this.tracks[e].clone());
            return new Bo(this.name,this.duration,t)
        }
    });
    var jo = {
        enabled: !1,
        files: {},
        add: function(t, e) {
            !1 !== this.enabled && (this.files[t] = e)
        },
        get: function(t) {
            if (!1 !== this.enabled)
                return this.files[t]
        },
        remove: function(t) {
            delete this.files[t]
        },
        clear: function() {
            this.files = {}
        }
    };
    function Uo(t, e, n) {
        var i = this
          , r = !1
          , s = 0
          , a = 0
          , o = void 0;
        this.onStart = void 0,
        this.onLoad = t,
        this.onProgress = e,
        this.onError = n,
        this.itemStart = function(t) {
            a++,
            !1 === r && void 0 !== i.onStart && i.onStart(t, s, a),
            r = !0
        }
        ,
        this.itemEnd = function(t) {
            s++,
            void 0 !== i.onProgress && i.onProgress(t, s, a),
            s === a && (r = !1,
            void 0 !== i.onLoad && i.onLoad())
        }
        ,
        this.itemError = function(t) {
            void 0 !== i.onError && i.onError(t)
        }
        ,
        this.resolveURL = function(t) {
            return o ? o(t) : t
        }
        ,
        this.setURLModifier = function(t) {
            return o = t,
            this
        }
    }
    var Fo = new Uo
      , Ho = {};
    function Go(t) {
        this.manager = void 0 !== t ? t : Fo
    }
    function Vo(t) {
        this.manager = void 0 !== t ? t : Fo
    }
    function Wo(t) {
        this.manager = void 0 !== t ? t : Fo,
        this._parser = null
    }
    function Yo(t) {
        this.manager = void 0 !== t ? t : Fo,
        this._parser = null
    }
    function qo(t) {
        this.manager = void 0 !== t ? t : Fo
    }
    function Xo(t) {
        this.manager = void 0 !== t ? t : Fo
    }
    function Zo(t) {
        this.manager = void 0 !== t ? t : Fo
    }
    function Ko() {
        this.type = "Curve",
        this.arcLengthDivisions = 200
    }
    function Jo(t, e, n, i, r, s, a, o) {
        Ko.call(this),
        this.type = "EllipseCurve",
        this.aX = t || 0,
        this.aY = e || 0,
        this.xRadius = n || 1,
        this.yRadius = i || 1,
        this.aStartAngle = r || 0,
        this.aEndAngle = s || 2 * Math.PI,
        this.aClockwise = a || !1,
        this.aRotation = o || 0
    }
    function $o(t, e, n, i, r, s) {
        Jo.call(this, t, e, n, n, i, r, s),
        this.type = "ArcCurve"
    }
    function Qo() {
        var t = 0
          , e = 0
          , n = 0
          , i = 0;
        function r(r, s, a, o) {
            t = r,
            e = a,
            n = -3 * r + 3 * s - 2 * a - o,
            i = 2 * r - 2 * s + a + o
        }
        return {
            initCatmullRom: function(t, e, n, i, s) {
                r(e, n, s * (n - t), s * (i - e))
            },
            initNonuniformCatmullRom: function(t, e, n, i, s, a, o) {
                var c = (e - t) / s - (n - t) / (s + a) + (n - e) / a
                  , l = (n - e) / a - (i - e) / (a + o) + (i - n) / o;
                r(e, n, c *= a, l *= a)
            },
            calc: function(r) {
                var s = r * r;
                return t + e * r + n * s + i * (s * r)
            }
        }
    }
    Object.assign(Go.prototype, {
        load: function(t, e, n, i) {
            void 0 === t && (t = ""),
            void 0 !== this.path && (t = this.path + t),
            t = this.manager.resolveURL(t);
            var r = this
              , s = jo.get(t);
            if (void 0 !== s)
                return r.manager.itemStart(t),
                setTimeout(function() {
                    e && e(s),
                    r.manager.itemEnd(t)
                }, 0),
                s;
            if (void 0 === Ho[t]) {
                var a = t.match(/^data:(.*?)(;base64)?,(.*)$/);
                if (a) {
                    var o = a[1]
                      , c = !!a[2]
                      , l = a[3];
                    l = decodeURIComponent(l),
                    c && (l = atob(l));
                    try {
                        var p, h = (this.responseType || "").toLowerCase();
                        switch (h) {
                        case "arraybuffer":
                        case "blob":
                            for (var u = new Uint8Array(l.length), f = 0; f < l.length; f++)
                                u[f] = l.charCodeAt(f);
                            p = "blob" === h ? new Blob([u.buffer],{
                                type: o
                            }) : u.buffer;
                            break;
                        case "document":
                            var d = new DOMParser;
                            p = d.parseFromString(l, o);
                            break;
                        case "json":
                            p = JSON.parse(l);
                            break;
                        default:
                            p = l
                        }
                        setTimeout(function() {
                            e && e(p),
                            r.manager.itemEnd(t)
                        }, 0)
                    } catch (e) {
                        setTimeout(function() {
                            i && i(e),
                            r.manager.itemError(t),
                            r.manager.itemEnd(t)
                        }, 0)
                    }
                } else {
                    Ho[t] = [],
                    Ho[t].push({
                        onLoad: e,
                        onProgress: n,
                        onError: i
                    });
                    var m = new XMLHttpRequest;
                    for (var g in m.open("GET", t, !0),
                    m.addEventListener("load", function(e) {
                        var n = this.response;
                        jo.add(t, n);
                        var i = Ho[t];
                        if (delete Ho[t],
                        200 === this.status || 0 === this.status) {
                            0 === this.status && console.warn("THREE.FileLoader: HTTP Status 0 received.");
                            for (var s = 0, a = i.length; s < a; s++) {
                                (o = i[s]).onLoad && o.onLoad(n)
                            }
                            r.manager.itemEnd(t)
                        } else {
                            for (s = 0,
                            a = i.length; s < a; s++) {
                                var o;
                                (o = i[s]).onError && o.onError(e)
                            }
                            r.manager.itemError(t),
                            r.manager.itemEnd(t)
                        }
                    }, !1),
                    m.addEventListener("progress", function(e) {
                        for (var n = Ho[t], i = 0, r = n.length; i < r; i++) {
                            var s = n[i];
                            s.onProgress && s.onProgress(e)
                        }
                    }, !1),
                    m.addEventListener("error", function(e) {
                        var n = Ho[t];
                        delete Ho[t];
                        for (var i = 0, s = n.length; i < s; i++) {
                            var a = n[i];
                            a.onError && a.onError(e)
                        }
                        r.manager.itemError(t),
                        r.manager.itemEnd(t)
                    }, !1),
                    m.addEventListener("abort", function(e) {
                        var n = Ho[t];
                        delete Ho[t];
                        for (var i = 0, s = n.length; i < s; i++) {
                            var a = n[i];
                            a.onError && a.onError(e)
                        }
                        r.manager.itemError(t),
                        r.manager.itemEnd(t)
                    }, !1),
                    void 0 !== this.responseType && (m.responseType = this.responseType),
                    void 0 !== this.withCredentials && (m.withCredentials = this.withCredentials),
                    m.overrideMimeType && m.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain"),
                    this.requestHeader)
                        m.setRequestHeader(g, this.requestHeader[g]);
                    m.send(null)
                }
                return r.manager.itemStart(t),
                m
            }
            Ho[t].push({
                onLoad: e,
                onProgress: n,
                onError: i
            })
        },
        setPath: function(t) {
            return this.path = t,
            this
        },
        setResponseType: function(t) {
            return this.responseType = t,
            this
        },
        setWithCredentials: function(t) {
            return this.withCredentials = t,
            this
        },
        setMimeType: function(t) {
            return this.mimeType = t,
            this
        },
        setRequestHeader: function(t) {
            return this.requestHeader = t,
            this
        }
    }),
    Object.assign(Vo.prototype, {
        load: function(t, e, n, i) {
            var r = this
              , s = new Go(r.manager);
            s.setPath(r.path),
            s.load(t, function(t) {
                e(r.parse(JSON.parse(t)))
            }, n, i)
        },
        parse: function(t) {
            for (var e = [], n = 0; n < t.length; n++) {
                var i = Bo.parse(t[n]);
                e.push(i)
            }
            return e
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    }),
    Object.assign(Wo.prototype, {
        load: function(t, e, n, i) {
            var r = this
              , s = []
              , a = new Ks;
            a.image = s;
            var o = new Go(this.manager);
            function c(c) {
                o.load(t[c], function(t) {
                    var n = r._parser(t, !0);
                    s[c] = {
                        width: n.width,
                        height: n.height,
                        format: n.format,
                        mipmaps: n.mipmaps
                    },
                    6 === (l += 1) && (1 === n.mipmapCount && (a.minFilter = Tt),
                    a.format = n.format,
                    a.needsUpdate = !0,
                    e && e(a))
                }, n, i)
            }
            if (o.setPath(this.path),
            o.setResponseType("arraybuffer"),
            Array.isArray(t))
                for (var l = 0, p = 0, h = t.length; p < h; ++p)
                    c(p);
            else
                o.load(t, function(t) {
                    var n = r._parser(t, !0);
                    if (n.isCubemap)
                        for (var i = n.mipmaps.length / n.mipmapCount, o = 0; o < i; o++) {
                            s[o] = {
                                mipmaps: []
                            };
                            for (var c = 0; c < n.mipmapCount; c++)
                                s[o].mipmaps.push(n.mipmaps[o * n.mipmapCount + c]),
                                s[o].format = n.format,
                                s[o].width = n.width,
                                s[o].height = n.height
                        }
                    else
                        a.image.width = n.width,
                        a.image.height = n.height,
                        a.mipmaps = n.mipmaps;
                    1 === n.mipmapCount && (a.minFilter = Tt),
                    a.format = n.format,
                    a.needsUpdate = !0,
                    e && e(a)
                }, n, i);
            return a
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    }),
    Object.assign(Yo.prototype, {
        load: function(t, e, n, i) {
            var r = this
              , s = new mn
              , a = new Go(this.manager);
            return a.setResponseType("arraybuffer"),
            a.setPath(this.path),
            a.load(t, function(t) {
                var n = r._parser(t);
                n && (void 0 !== n.image ? s.image = n.image : void 0 !== n.data && (s.image.width = n.width,
                s.image.height = n.height,
                s.image.data = n.data),
                s.wrapS = void 0 !== n.wrapS ? n.wrapS : wt,
                s.wrapT = void 0 !== n.wrapT ? n.wrapT : wt,
                s.magFilter = void 0 !== n.magFilter ? n.magFilter : Tt,
                s.minFilter = void 0 !== n.minFilter ? n.minFilter : kt,
                s.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1,
                void 0 !== n.format && (s.format = n.format),
                void 0 !== n.type && (s.type = n.type),
                void 0 !== n.mipmaps && (s.mipmaps = n.mipmaps),
                1 === n.mipmapCount && (s.minFilter = Tt),
                s.needsUpdate = !0,
                e && e(s, n))
            }, n, i),
            s
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    }),
    Object.assign(qo.prototype, {
        crossOrigin: "anonymous",
        load: function(t, e, n, i) {
            void 0 === t && (t = ""),
            void 0 !== this.path && (t = this.path + t),
            t = this.manager.resolveURL(t);
            var r = this
              , s = jo.get(t);
            if (void 0 !== s)
                return r.manager.itemStart(t),
                setTimeout(function() {
                    e && e(s),
                    r.manager.itemEnd(t)
                }, 0),
                s;
            var a = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
            function o() {
                a.removeEventListener("load", o, !1),
                a.removeEventListener("error", c, !1),
                jo.add(t, this),
                e && e(this),
                r.manager.itemEnd(t)
            }
            function c(e) {
                a.removeEventListener("load", o, !1),
                a.removeEventListener("error", c, !1),
                i && i(e),
                r.manager.itemError(t),
                r.manager.itemEnd(t)
            }
            return a.addEventListener("load", o, !1),
            a.addEventListener("error", c, !1),
            "data:" !== t.substr(0, 5) && void 0 !== this.crossOrigin && (a.crossOrigin = this.crossOrigin),
            r.manager.itemStart(t),
            a.src = t,
            a
        },
        setCrossOrigin: function(t) {
            return this.crossOrigin = t,
            this
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    }),
    Object.assign(Xo.prototype, {
        crossOrigin: "anonymous",
        load: function(t, e, n, i) {
            var r = new Wi
              , s = new qo(this.manager);
            s.setCrossOrigin(this.crossOrigin),
            s.setPath(this.path);
            var a = 0;
            function o(n) {
                s.load(t[n], function(t) {
                    r.images[n] = t,
                    6 === ++a && (r.needsUpdate = !0,
                    e && e(r))
                }, void 0, i)
            }
            for (var c = 0; c < t.length; ++c)
                o(c);
            return r
        },
        setCrossOrigin: function(t) {
            return this.crossOrigin = t,
            this
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    }),
    Object.assign(Zo.prototype, {
        crossOrigin: "anonymous",
        load: function(t, e, n, i) {
            var r = new pn
              , s = new qo(this.manager);
            return s.setCrossOrigin(this.crossOrigin),
            s.setPath(this.path),
            s.load(t, function(n) {
                r.image = n;
                var i = t.search(/\.jpe?g($|\?)/i) > 0 || 0 === t.search(/^data\:image\/jpeg/);
                r.format = i ? Ft : Ht,
                r.needsUpdate = !0,
                void 0 !== e && e(r)
            }, n, i),
            r
        },
        setCrossOrigin: function(t) {
            return this.crossOrigin = t,
            this
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    }),
    Object.assign(Ko.prototype, {
        getPoint: function() {
            return console.warn("THREE.Curve: .getPoint() not implemented."),
            null
        },
        getPointAt: function(t, e) {
            var n = this.getUtoTmapping(t);
            return this.getPoint(n, e)
        },
        getPoints: function(t) {
            void 0 === t && (t = 5);
            for (var e = [], n = 0; n <= t; n++)
                e.push(this.getPoint(n / t));
            return e
        },
        getSpacedPoints: function(t) {
            void 0 === t && (t = 5);
            for (var e = [], n = 0; n <= t; n++)
                e.push(this.getPointAt(n / t));
            return e
        },
        getLength: function() {
            var t = this.getLengths();
            return t[t.length - 1]
        },
        getLengths: function(t) {
            if (void 0 === t && (t = this.arcLengthDivisions),
            this.cacheArcLengths && this.cacheArcLengths.length === t + 1 && !this.needsUpdate)
                return this.cacheArcLengths;
            this.needsUpdate = !1;
            var e, n, i = [], r = this.getPoint(0), s = 0;
            for (i.push(0),
            n = 1; n <= t; n++)
                s += (e = this.getPoint(n / t)).distanceTo(r),
                i.push(s),
                r = e;
            return this.cacheArcLengths = i,
            i
        },
        updateArcLengths: function() {
            this.needsUpdate = !0,
            this.getLengths()
        },
        getUtoTmapping: function(t, e) {
            var n, i = this.getLengths(), r = 0, s = i.length;
            n = e || t * i[s - 1];
            for (var a, o = 0, c = s - 1; o <= c; )
                if ((a = i[r = Math.floor(o + (c - o) / 2)] - n) < 0)
                    o = r + 1;
                else {
                    if (!(a > 0)) {
                        c = r;
                        break
                    }
                    c = r - 1
                }
            if (i[r = c] === n)
                return r / (s - 1);
            var l = i[r];
            return (r + (n - l) / (i[r + 1] - l)) / (s - 1)
        },
        getTangent: function(t) {
            var e = t - 1e-4
              , n = t + 1e-4;
            e < 0 && (e = 0),
            n > 1 && (n = 1);
            var i = this.getPoint(e);
            return this.getPoint(n).clone().sub(i).normalize()
        },
        getTangentAt: function(t) {
            var e = this.getUtoTmapping(t);
            return this.getTangent(e)
        },
        computeFrenetFrames: function(t, e) {
            var n, i, r, s = new We, a = [], o = [], c = [], l = new We, p = new wn;
            for (n = 0; n <= t; n++)
                i = n / t,
                a[n] = this.getTangentAt(i),
                a[n].normalize();
            o[0] = new We,
            c[0] = new We;
            var h = Number.MAX_VALUE
              , u = Math.abs(a[0].x)
              , f = Math.abs(a[0].y)
              , d = Math.abs(a[0].z);
            for (u <= h && (h = u,
            s.set(1, 0, 0)),
            f <= h && (h = f,
            s.set(0, 1, 0)),
            d <= h && s.set(0, 0, 1),
            l.crossVectors(a[0], s).normalize(),
            o[0].crossVectors(a[0], l),
            c[0].crossVectors(a[0], o[0]),
            n = 1; n <= t; n++)
                o[n] = o[n - 1].clone(),
                c[n] = c[n - 1].clone(),
                l.crossVectors(a[n - 1], a[n]),
                l.length() > Number.EPSILON && (l.normalize(),
                r = Math.acos(He.clamp(a[n - 1].dot(a[n]), -1, 1)),
                o[n].applyMatrix4(p.makeRotationAxis(l, r))),
                c[n].crossVectors(a[n], o[n]);
            if (!0 === e)
                for (r = Math.acos(He.clamp(o[0].dot(o[t]), -1, 1)),
                r /= t,
                a[0].dot(l.crossVectors(o[0], o[t])) > 0 && (r = -r),
                n = 1; n <= t; n++)
                    o[n].applyMatrix4(p.makeRotationAxis(a[n], r * n)),
                    c[n].crossVectors(a[n], o[n]);
            return {
                tangents: a,
                normals: o,
                binormals: c
            }
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.arcLengthDivisions = t.arcLengthDivisions,
            this
        },
        toJSON: function() {
            var t = {
                metadata: {
                    version: 4.5,
                    type: "Curve",
                    generator: "Curve.toJSON"
                }
            };
            return t.arcLengthDivisions = this.arcLengthDivisions,
            t.type = this.type,
            t
        },
        fromJSON: function(t) {
            return this.arcLengthDivisions = t.arcLengthDivisions,
            this
        }
    }),
    Jo.prototype = Object.create(Ko.prototype),
    Jo.prototype.constructor = Jo,
    Jo.prototype.isEllipseCurve = !0,
    Jo.prototype.getPoint = function(t, e) {
        for (var n = e || new Ge, i = 2 * Math.PI, r = this.aEndAngle - this.aStartAngle, s = Math.abs(r) < Number.EPSILON; r < 0; )
            r += i;
        for (; r > i; )
            r -= i;
        r < Number.EPSILON && (r = s ? 0 : i),
        !0 !== this.aClockwise || s || (r === i ? r = -i : r -= i);
        var a = this.aStartAngle + t * r
          , o = this.aX + this.xRadius * Math.cos(a)
          , c = this.aY + this.yRadius * Math.sin(a);
        if (0 !== this.aRotation) {
            var l = Math.cos(this.aRotation)
              , p = Math.sin(this.aRotation)
              , h = o - this.aX
              , u = c - this.aY;
            o = h * l - u * p + this.aX,
            c = h * p + u * l + this.aY
        }
        return n.set(o, c)
    }
    ,
    Jo.prototype.copy = function(t) {
        return Ko.prototype.copy.call(this, t),
        this.aX = t.aX,
        this.aY = t.aY,
        this.xRadius = t.xRadius,
        this.yRadius = t.yRadius,
        this.aStartAngle = t.aStartAngle,
        this.aEndAngle = t.aEndAngle,
        this.aClockwise = t.aClockwise,
        this.aRotation = t.aRotation,
        this
    }
    ,
    Jo.prototype.toJSON = function() {
        var t = Ko.prototype.toJSON.call(this);
        return t.aX = this.aX,
        t.aY = this.aY,
        t.xRadius = this.xRadius,
        t.yRadius = this.yRadius,
        t.aStartAngle = this.aStartAngle,
        t.aEndAngle = this.aEndAngle,
        t.aClockwise = this.aClockwise,
        t.aRotation = this.aRotation,
        t
    }
    ,
    Jo.prototype.fromJSON = function(t) {
        return Ko.prototype.fromJSON.call(this, t),
        this.aX = t.aX,
        this.aY = t.aY,
        this.xRadius = t.xRadius,
        this.yRadius = t.yRadius,
        this.aStartAngle = t.aStartAngle,
        this.aEndAngle = t.aEndAngle,
        this.aClockwise = t.aClockwise,
        this.aRotation = t.aRotation,
        this
    }
    ,
    $o.prototype = Object.create(Jo.prototype),
    $o.prototype.constructor = $o,
    $o.prototype.isArcCurve = !0;
    var tc = new We
      , ec = new Qo
      , nc = new Qo
      , ic = new Qo;
    function rc(t, e, n, i) {
        Ko.call(this),
        this.type = "CatmullRomCurve3",
        this.points = t || [],
        this.closed = e || !1,
        this.curveType = n || "centripetal",
        this.tension = i || .5
    }
    function sc(t, e, n, i, r) {
        var s = .5 * (i - e)
          , a = .5 * (r - n)
          , o = t * t;
        return (2 * n - 2 * i + s + a) * (t * o) + (-3 * n + 3 * i - 2 * s - a) * o + s * t + n
    }
    function ac(t, e, n, i) {
        return function(t, e) {
            var n = 1 - t;
            return n * n * e
        }(t, e) + function(t, e) {
            return 2 * (1 - t) * t * e
        }(t, n) + function(t, e) {
            return t * t * e
        }(t, i)
    }
    function oc(t, e, n, i, r) {
        return function(t, e) {
            var n = 1 - t;
            return n * n * n * e
        }(t, e) + function(t, e) {
            var n = 1 - t;
            return 3 * n * n * t * e
        }(t, n) + function(t, e) {
            return 3 * (1 - t) * t * t * e
        }(t, i) + function(t, e) {
            return t * t * t * e
        }(t, r)
    }
    function cc(t, e, n, i) {
        Ko.call(this),
        this.type = "CubicBezierCurve",
        this.v0 = t || new Ge,
        this.v1 = e || new Ge,
        this.v2 = n || new Ge,
        this.v3 = i || new Ge
    }
    function lc(t, e, n, i) {
        Ko.call(this),
        this.type = "CubicBezierCurve3",
        this.v0 = t || new We,
        this.v1 = e || new We,
        this.v2 = n || new We,
        this.v3 = i || new We
    }
    function pc(t, e) {
        Ko.call(this),
        this.type = "LineCurve",
        this.v1 = t || new Ge,
        this.v2 = e || new Ge
    }
    function hc(t, e) {
        Ko.call(this),
        this.type = "LineCurve3",
        this.v1 = t || new We,
        this.v2 = e || new We
    }
    function uc(t, e, n) {
        Ko.call(this),
        this.type = "QuadraticBezierCurve",
        this.v0 = t || new Ge,
        this.v1 = e || new Ge,
        this.v2 = n || new Ge
    }
    function fc(t, e, n) {
        Ko.call(this),
        this.type = "QuadraticBezierCurve3",
        this.v0 = t || new We,
        this.v1 = e || new We,
        this.v2 = n || new We
    }
    function dc(t) {
        Ko.call(this),
        this.type = "SplineCurve",
        this.points = t || []
    }
    rc.prototype = Object.create(Ko.prototype),
    rc.prototype.constructor = rc,
    rc.prototype.isCatmullRomCurve3 = !0,
    rc.prototype.getPoint = function(t, e) {
        var n, i, r, s, a = e || new We, o = this.points, c = o.length, l = (c - (this.closed ? 0 : 1)) * t, p = Math.floor(l), h = l - p;
        if (this.closed ? p += p > 0 ? 0 : (Math.floor(Math.abs(p) / c) + 1) * c : 0 === h && p === c - 1 && (p = c - 2,
        h = 1),
        this.closed || p > 0 ? n = o[(p - 1) % c] : (tc.subVectors(o[0], o[1]).add(o[0]),
        n = tc),
        i = o[p % c],
        r = o[(p + 1) % c],
        this.closed || p + 2 < c ? s = o[(p + 2) % c] : (tc.subVectors(o[c - 1], o[c - 2]).add(o[c - 1]),
        s = tc),
        "centripetal" === this.curveType || "chordal" === this.curveType) {
            var u = "chordal" === this.curveType ? .5 : .25
              , f = Math.pow(n.distanceToSquared(i), u)
              , d = Math.pow(i.distanceToSquared(r), u)
              , m = Math.pow(r.distanceToSquared(s), u);
            d < 1e-4 && (d = 1),
            f < 1e-4 && (f = d),
            m < 1e-4 && (m = d),
            ec.initNonuniformCatmullRom(n.x, i.x, r.x, s.x, f, d, m),
            nc.initNonuniformCatmullRom(n.y, i.y, r.y, s.y, f, d, m),
            ic.initNonuniformCatmullRom(n.z, i.z, r.z, s.z, f, d, m)
        } else
            "catmullrom" === this.curveType && (ec.initCatmullRom(n.x, i.x, r.x, s.x, this.tension),
            nc.initCatmullRom(n.y, i.y, r.y, s.y, this.tension),
            ic.initCatmullRom(n.z, i.z, r.z, s.z, this.tension));
        return a.set(ec.calc(h), nc.calc(h), ic.calc(h)),
        a
    }
    ,
    rc.prototype.copy = function(t) {
        Ko.prototype.copy.call(this, t),
        this.points = [];
        for (var e = 0, n = t.points.length; e < n; e++) {
            var i = t.points[e];
            this.points.push(i.clone())
        }
        return this.closed = t.closed,
        this.curveType = t.curveType,
        this.tension = t.tension,
        this
    }
    ,
    rc.prototype.toJSON = function() {
        var t = Ko.prototype.toJSON.call(this);
        t.points = [];
        for (var e = 0, n = this.points.length; e < n; e++) {
            var i = this.points[e];
            t.points.push(i.toArray())
        }
        return t.closed = this.closed,
        t.curveType = this.curveType,
        t.tension = this.tension,
        t
    }
    ,
    rc.prototype.fromJSON = function(t) {
        Ko.prototype.fromJSON.call(this, t),
        this.points = [];
        for (var e = 0, n = t.points.length; e < n; e++) {
            var i = t.points[e];
            this.points.push((new We).fromArray(i))
        }
        return this.closed = t.closed,
        this.curveType = t.curveType,
        this.tension = t.tension,
        this
    }
    ,
    cc.prototype = Object.create(Ko.prototype),
    cc.prototype.constructor = cc,
    cc.prototype.isCubicBezierCurve = !0,
    cc.prototype.getPoint = function(t, e) {
        var n = e || new Ge
          , i = this.v0
          , r = this.v1
          , s = this.v2
          , a = this.v3;
        return n.set(oc(t, i.x, r.x, s.x, a.x), oc(t, i.y, r.y, s.y, a.y)),
        n
    }
    ,
    cc.prototype.copy = function(t) {
        return Ko.prototype.copy.call(this, t),
        this.v0.copy(t.v0),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this.v3.copy(t.v3),
        this
    }
    ,
    cc.prototype.toJSON = function() {
        var t = Ko.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(),
        t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t.v3 = this.v3.toArray(),
        t
    }
    ,
    cc.prototype.fromJSON = function(t) {
        return Ko.prototype.fromJSON.call(this, t),
        this.v0.fromArray(t.v0),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this.v3.fromArray(t.v3),
        this
    }
    ,
    lc.prototype = Object.create(Ko.prototype),
    lc.prototype.constructor = lc,
    lc.prototype.isCubicBezierCurve3 = !0,
    lc.prototype.getPoint = function(t, e) {
        var n = e || new We
          , i = this.v0
          , r = this.v1
          , s = this.v2
          , a = this.v3;
        return n.set(oc(t, i.x, r.x, s.x, a.x), oc(t, i.y, r.y, s.y, a.y), oc(t, i.z, r.z, s.z, a.z)),
        n
    }
    ,
    lc.prototype.copy = function(t) {
        return Ko.prototype.copy.call(this, t),
        this.v0.copy(t.v0),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this.v3.copy(t.v3),
        this
    }
    ,
    lc.prototype.toJSON = function() {
        var t = Ko.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(),
        t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t.v3 = this.v3.toArray(),
        t
    }
    ,
    lc.prototype.fromJSON = function(t) {
        return Ko.prototype.fromJSON.call(this, t),
        this.v0.fromArray(t.v0),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this.v3.fromArray(t.v3),
        this
    }
    ,
    pc.prototype = Object.create(Ko.prototype),
    pc.prototype.constructor = pc,
    pc.prototype.isLineCurve = !0,
    pc.prototype.getPoint = function(t, e) {
        var n = e || new Ge;
        return 1 === t ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1),
        n.multiplyScalar(t).add(this.v1)),
        n
    }
    ,
    pc.prototype.getPointAt = function(t, e) {
        return this.getPoint(t, e)
    }
    ,
    pc.prototype.getTangent = function() {
        return this.v2.clone().sub(this.v1).normalize()
    }
    ,
    pc.prototype.copy = function(t) {
        return Ko.prototype.copy.call(this, t),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this
    }
    ,
    pc.prototype.toJSON = function() {
        var t = Ko.prototype.toJSON.call(this);
        return t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t
    }
    ,
    pc.prototype.fromJSON = function(t) {
        return Ko.prototype.fromJSON.call(this, t),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this
    }
    ,
    hc.prototype = Object.create(Ko.prototype),
    hc.prototype.constructor = hc,
    hc.prototype.isLineCurve3 = !0,
    hc.prototype.getPoint = function(t, e) {
        var n = e || new We;
        return 1 === t ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1),
        n.multiplyScalar(t).add(this.v1)),
        n
    }
    ,
    hc.prototype.getPointAt = function(t, e) {
        return this.getPoint(t, e)
    }
    ,
    hc.prototype.copy = function(t) {
        return Ko.prototype.copy.call(this, t),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this
    }
    ,
    hc.prototype.toJSON = function() {
        var t = Ko.prototype.toJSON.call(this);
        return t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t
    }
    ,
    hc.prototype.fromJSON = function(t) {
        return Ko.prototype.fromJSON.call(this, t),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this
    }
    ,
    uc.prototype = Object.create(Ko.prototype),
    uc.prototype.constructor = uc,
    uc.prototype.isQuadraticBezierCurve = !0,
    uc.prototype.getPoint = function(t, e) {
        var n = e || new Ge
          , i = this.v0
          , r = this.v1
          , s = this.v2;
        return n.set(ac(t, i.x, r.x, s.x), ac(t, i.y, r.y, s.y)),
        n
    }
    ,
    uc.prototype.copy = function(t) {
        return Ko.prototype.copy.call(this, t),
        this.v0.copy(t.v0),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this
    }
    ,
    uc.prototype.toJSON = function() {
        var t = Ko.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(),
        t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t
    }
    ,
    uc.prototype.fromJSON = function(t) {
        return Ko.prototype.fromJSON.call(this, t),
        this.v0.fromArray(t.v0),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this
    }
    ,
    fc.prototype = Object.create(Ko.prototype),
    fc.prototype.constructor = fc,
    fc.prototype.isQuadraticBezierCurve3 = !0,
    fc.prototype.getPoint = function(t, e) {
        var n = e || new We
          , i = this.v0
          , r = this.v1
          , s = this.v2;
        return n.set(ac(t, i.x, r.x, s.x), ac(t, i.y, r.y, s.y), ac(t, i.z, r.z, s.z)),
        n
    }
    ,
    fc.prototype.copy = function(t) {
        return Ko.prototype.copy.call(this, t),
        this.v0.copy(t.v0),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this
    }
    ,
    fc.prototype.toJSON = function() {
        var t = Ko.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(),
        t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t
    }
    ,
    fc.prototype.fromJSON = function(t) {
        return Ko.prototype.fromJSON.call(this, t),
        this.v0.fromArray(t.v0),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this
    }
    ,
    dc.prototype = Object.create(Ko.prototype),
    dc.prototype.constructor = dc,
    dc.prototype.isSplineCurve = !0,
    dc.prototype.getPoint = function(t, e) {
        var n = e || new Ge
          , i = this.points
          , r = (i.length - 1) * t
          , s = Math.floor(r)
          , a = r - s
          , o = i[0 === s ? s : s - 1]
          , c = i[s]
          , l = i[s > i.length - 2 ? i.length - 1 : s + 1]
          , p = i[s > i.length - 3 ? i.length - 1 : s + 2];
        return n.set(sc(a, o.x, c.x, l.x, p.x), sc(a, o.y, c.y, l.y, p.y)),
        n
    }
    ,
    dc.prototype.copy = function(t) {
        Ko.prototype.copy.call(this, t),
        this.points = [];
        for (var e = 0, n = t.points.length; e < n; e++) {
            var i = t.points[e];
            this.points.push(i.clone())
        }
        return this
    }
    ,
    dc.prototype.toJSON = function() {
        var t = Ko.prototype.toJSON.call(this);
        t.points = [];
        for (var e = 0, n = this.points.length; e < n; e++) {
            var i = this.points[e];
            t.points.push(i.toArray())
        }
        return t
    }
    ,
    dc.prototype.fromJSON = function(t) {
        Ko.prototype.fromJSON.call(this, t),
        this.points = [];
        for (var e = 0, n = t.points.length; e < n; e++) {
            var i = t.points[e];
            this.points.push((new Ge).fromArray(i))
        }
        return this
    }
    ;
    var mc = Object.freeze({
        ArcCurve: $o,
        CatmullRomCurve3: rc,
        CubicBezierCurve: cc,
        CubicBezierCurve3: lc,
        EllipseCurve: Jo,
        LineCurve: pc,
        LineCurve3: hc,
        QuadraticBezierCurve: uc,
        QuadraticBezierCurve3: fc,
        SplineCurve: dc
    });
    function gc() {
        Ko.call(this),
        this.type = "CurvePath",
        this.curves = [],
        this.autoClose = !1
    }
    function vc(t) {
        gc.call(this),
        this.type = "Path",
        this.currentPoint = new Ge,
        t && this.setFromPoints(t)
    }
    function yc(t) {
        vc.call(this, t),
        this.uuid = He.generateUUID(),
        this.type = "Shape",
        this.holes = []
    }
    function bc(t, e) {
        Vn.call(this),
        this.type = "Light",
        this.color = new Ln(t),
        this.intensity = void 0 !== e ? e : 1,
        this.receiveShadow = void 0
    }
    function wc(t, e, n) {
        bc.call(this, t, n),
        this.type = "HemisphereLight",
        this.castShadow = void 0,
        this.position.copy(Vn.DefaultUp),
        this.updateMatrix(),
        this.groundColor = new Ln(e)
    }
    function xc(t) {
        this.camera = t,
        this.bias = 0,
        this.radius = 1,
        this.mapSize = new Ge(512,512),
        this.map = null,
        this.matrix = new wn
    }
    function Mc() {
        xc.call(this, new ys(50,1,.5,500))
    }
    function _c(t, e, n, i, r, s) {
        bc.call(this, t, e),
        this.type = "SpotLight",
        this.position.copy(Vn.DefaultUp),
        this.updateMatrix(),
        this.target = new Vn,
        Object.defineProperty(this, "power", {
            get: function() {
                return this.intensity * Math.PI
            },
            set: function(t) {
                this.intensity = t / Math.PI
            }
        }),
        this.distance = void 0 !== n ? n : 0,
        this.angle = void 0 !== i ? i : Math.PI / 3,
        this.penumbra = void 0 !== r ? r : 0,
        this.decay = void 0 !== s ? s : 1,
        this.shadow = new Mc
    }
    function Sc(t, e, n, i) {
        bc.call(this, t, e),
        this.type = "PointLight",
        Object.defineProperty(this, "power", {
            get: function() {
                return 4 * this.intensity * Math.PI
            },
            set: function(t) {
                this.intensity = t / (4 * Math.PI)
            }
        }),
        this.distance = void 0 !== n ? n : 0,
        this.decay = void 0 !== i ? i : 1,
        this.shadow = new xc(new ys(90,1,.5,500))
    }
    function Tc(t, e, n, i, r, s) {
        vs.call(this),
        this.type = "OrthographicCamera",
        this.zoom = 1,
        this.view = null,
        this.left = void 0 !== t ? t : -1,
        this.right = void 0 !== e ? e : 1,
        this.top = void 0 !== n ? n : 1,
        this.bottom = void 0 !== i ? i : -1,
        this.near = void 0 !== r ? r : .1,
        this.far = void 0 !== s ? s : 2e3,
        this.updateProjectionMatrix()
    }
    function Ec() {
        xc.call(this, new Tc(-5,5,5,-5,.5,500))
    }
    function kc(t, e) {
        bc.call(this, t, e),
        this.type = "DirectionalLight",
        this.position.copy(Vn.DefaultUp),
        this.updateMatrix(),
        this.target = new Vn,
        this.shadow = new Ec
    }
    function Ac(t, e) {
        bc.call(this, t, e),
        this.type = "AmbientLight",
        this.castShadow = void 0
    }
    function Lc(t, e, n, i) {
        bc.call(this, t, e),
        this.type = "RectAreaLight",
        this.width = void 0 !== n ? n : 10,
        this.height = void 0 !== i ? i : 10
    }
    function Pc(t) {
        this.manager = void 0 !== t ? t : Fo,
        this.textures = {}
    }
    gc.prototype = Object.assign(Object.create(Ko.prototype), {
        constructor: gc,
        add: function(t) {
            this.curves.push(t)
        },
        closePath: function() {
            var t = this.curves[0].getPoint(0)
              , e = this.curves[this.curves.length - 1].getPoint(1);
            t.equals(e) || this.curves.push(new pc(e,t))
        },
        getPoint: function(t) {
            for (var e = t * this.getLength(), n = this.getCurveLengths(), i = 0; i < n.length; ) {
                if (n[i] >= e) {
                    var r = n[i] - e
                      , s = this.curves[i]
                      , a = s.getLength()
                      , o = 0 === a ? 0 : 1 - r / a;
                    return s.getPointAt(o)
                }
                i++
            }
            return null
        },
        getLength: function() {
            var t = this.getCurveLengths();
            return t[t.length - 1]
        },
        updateArcLengths: function() {
            this.needsUpdate = !0,
            this.cacheLengths = null,
            this.getCurveLengths()
        },
        getCurveLengths: function() {
            if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
                return this.cacheLengths;
            for (var t = [], e = 0, n = 0, i = this.curves.length; n < i; n++)
                e += this.curves[n].getLength(),
                t.push(e);
            return this.cacheLengths = t,
            t
        },
        getSpacedPoints: function(t) {
            void 0 === t && (t = 40);
            for (var e = [], n = 0; n <= t; n++)
                e.push(this.getPoint(n / t));
            return this.autoClose && e.push(e[0]),
            e
        },
        getPoints: function(t) {
            t = t || 12;
            for (var e, n = [], i = 0, r = this.curves; i < r.length; i++)
                for (var s = r[i], a = s && s.isEllipseCurve ? 2 * t : s && (s.isLineCurve || s.isLineCurve3) ? 1 : s && s.isSplineCurve ? t * s.points.length : t, o = s.getPoints(a), c = 0; c < o.length; c++) {
                    var l = o[c];
                    e && e.equals(l) || (n.push(l),
                    e = l)
                }
            return this.autoClose && n.length > 1 && !n[n.length - 1].equals(n[0]) && n.push(n[0]),
            n
        },
        copy: function(t) {
            Ko.prototype.copy.call(this, t),
            this.curves = [];
            for (var e = 0, n = t.curves.length; e < n; e++) {
                var i = t.curves[e];
                this.curves.push(i.clone())
            }
            return this.autoClose = t.autoClose,
            this
        },
        toJSON: function() {
            var t = Ko.prototype.toJSON.call(this);
            t.autoClose = this.autoClose,
            t.curves = [];
            for (var e = 0, n = this.curves.length; e < n; e++) {
                var i = this.curves[e];
                t.curves.push(i.toJSON())
            }
            return t
        },
        fromJSON: function(t) {
            Ko.prototype.fromJSON.call(this, t),
            this.autoClose = t.autoClose,
            this.curves = [];
            for (var e = 0, n = t.curves.length; e < n; e++) {
                var i = t.curves[e];
                this.curves.push((new mc[i.type]).fromJSON(i))
            }
            return this
        }
    }),
    vc.prototype = Object.assign(Object.create(gc.prototype), {
        constructor: vc,
        setFromPoints: function(t) {
            this.moveTo(t[0].x, t[0].y);
            for (var e = 1, n = t.length; e < n; e++)
                this.lineTo(t[e].x, t[e].y)
        },
        moveTo: function(t, e) {
            this.currentPoint.set(t, e)
        },
        lineTo: function(t, e) {
            var n = new pc(this.currentPoint.clone(),new Ge(t,e));
            this.curves.push(n),
            this.currentPoint.set(t, e)
        },
        quadraticCurveTo: function(t, e, n, i) {
            var r = new uc(this.currentPoint.clone(),new Ge(t,e),new Ge(n,i));
            this.curves.push(r),
            this.currentPoint.set(n, i)
        },
        bezierCurveTo: function(t, e, n, i, r, s) {
            var a = new cc(this.currentPoint.clone(),new Ge(t,e),new Ge(n,i),new Ge(r,s));
            this.curves.push(a),
            this.currentPoint.set(r, s)
        },
        splineThru: function(t) {
            var e = new dc([this.currentPoint.clone()].concat(t));
            this.curves.push(e),
            this.currentPoint.copy(t[t.length - 1])
        },
        arc: function(t, e, n, i, r, s) {
            var a = this.currentPoint.x
              , o = this.currentPoint.y;
            this.absarc(t + a, e + o, n, i, r, s)
        },
        absarc: function(t, e, n, i, r, s) {
            this.absellipse(t, e, n, n, i, r, s)
        },
        ellipse: function(t, e, n, i, r, s, a, o) {
            var c = this.currentPoint.x
              , l = this.currentPoint.y;
            this.absellipse(t + c, e + l, n, i, r, s, a, o)
        },
        absellipse: function(t, e, n, i, r, s, a, o) {
            var c = new Jo(t,e,n,i,r,s,a,o);
            if (this.curves.length > 0) {
                var l = c.getPoint(0);
                l.equals(this.currentPoint) || this.lineTo(l.x, l.y)
            }
            this.curves.push(c);
            var p = c.getPoint(1);
            this.currentPoint.copy(p)
        },
        copy: function(t) {
            return gc.prototype.copy.call(this, t),
            this.currentPoint.copy(t.currentPoint),
            this
        },
        toJSON: function() {
            var t = gc.prototype.toJSON.call(this);
            return t.currentPoint = this.currentPoint.toArray(),
            t
        },
        fromJSON: function(t) {
            return gc.prototype.fromJSON.call(this, t),
            this.currentPoint.fromArray(t.currentPoint),
            this
        }
    }),
    yc.prototype = Object.assign(Object.create(vc.prototype), {
        constructor: yc,
        getPointsHoles: function(t) {
            for (var e = [], n = 0, i = this.holes.length; n < i; n++)
                e[n] = this.holes[n].getPoints(t);
            return e
        },
        extractPoints: function(t) {
            return {
                shape: this.getPoints(t),
                holes: this.getPointsHoles(t)
            }
        },
        copy: function(t) {
            vc.prototype.copy.call(this, t),
            this.holes = [];
            for (var e = 0, n = t.holes.length; e < n; e++) {
                var i = t.holes[e];
                this.holes.push(i.clone())
            }
            return this
        },
        toJSON: function() {
            var t = vc.prototype.toJSON.call(this);
            t.uuid = this.uuid,
            t.holes = [];
            for (var e = 0, n = this.holes.length; e < n; e++) {
                var i = this.holes[e];
                t.holes.push(i.toJSON())
            }
            return t
        },
        fromJSON: function(t) {
            vc.prototype.fromJSON.call(this, t),
            this.uuid = t.uuid,
            this.holes = [];
            for (var e = 0, n = t.holes.length; e < n; e++) {
                var i = t.holes[e];
                this.holes.push((new vc).fromJSON(i))
            }
            return this
        }
    }),
    bc.prototype = Object.assign(Object.create(Vn.prototype), {
        constructor: bc,
        isLight: !0,
        copy: function(t) {
            return Vn.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.intensity = t.intensity,
            this
        },
        toJSON: function(t) {
            var e = Vn.prototype.toJSON.call(this, t);
            return e.object.color = this.color.getHex(),
            e.object.intensity = this.intensity,
            void 0 !== this.groundColor && (e.object.groundColor = this.groundColor.getHex()),
            void 0 !== this.distance && (e.object.distance = this.distance),
            void 0 !== this.angle && (e.object.angle = this.angle),
            void 0 !== this.decay && (e.object.decay = this.decay),
            void 0 !== this.penumbra && (e.object.penumbra = this.penumbra),
            void 0 !== this.shadow && (e.object.shadow = this.shadow.toJSON()),
            e
        }
    }),
    wc.prototype = Object.assign(Object.create(bc.prototype), {
        constructor: wc,
        isHemisphereLight: !0,
        copy: function(t) {
            return bc.prototype.copy.call(this, t),
            this.groundColor.copy(t.groundColor),
            this
        }
    }),
    Object.assign(xc.prototype, {
        copy: function(t) {
            return this.camera = t.camera.clone(),
            this.bias = t.bias,
            this.radius = t.radius,
            this.mapSize.copy(t.mapSize),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        toJSON: function() {
            var t = {};
            return 0 !== this.bias && (t.bias = this.bias),
            1 !== this.radius && (t.radius = this.radius),
            512 === this.mapSize.x && 512 === this.mapSize.y || (t.mapSize = this.mapSize.toArray()),
            t.camera = this.camera.toJSON(!1).object,
            delete t.camera.matrix,
            t
        }
    }),
    Mc.prototype = Object.assign(Object.create(xc.prototype), {
        constructor: Mc,
        isSpotLightShadow: !0,
        update: function(t) {
            var e = this.camera
              , n = 2 * He.RAD2DEG * t.angle
              , i = this.mapSize.width / this.mapSize.height
              , r = t.distance || e.far;
            n === e.fov && i === e.aspect && r === e.far || (e.fov = n,
            e.aspect = i,
            e.far = r,
            e.updateProjectionMatrix())
        }
    }),
    _c.prototype = Object.assign(Object.create(bc.prototype), {
        constructor: _c,
        isSpotLight: !0,
        copy: function(t) {
            return bc.prototype.copy.call(this, t),
            this.distance = t.distance,
            this.angle = t.angle,
            this.penumbra = t.penumbra,
            this.decay = t.decay,
            this.target = t.target.clone(),
            this.shadow = t.shadow.clone(),
            this
        }
    }),
    Sc.prototype = Object.assign(Object.create(bc.prototype), {
        constructor: Sc,
        isPointLight: !0,
        copy: function(t) {
            return bc.prototype.copy.call(this, t),
            this.distance = t.distance,
            this.decay = t.decay,
            this.shadow = t.shadow.clone(),
            this
        }
    }),
    Tc.prototype = Object.assign(Object.create(vs.prototype), {
        constructor: Tc,
        isOrthographicCamera: !0,
        copy: function(t, e) {
            return vs.prototype.copy.call(this, t, e),
            this.left = t.left,
            this.right = t.right,
            this.top = t.top,
            this.bottom = t.bottom,
            this.near = t.near,
            this.far = t.far,
            this.zoom = t.zoom,
            this.view = null === t.view ? null : Object.assign({}, t.view),
            this
        },
        setViewOffset: function(t, e, n, i, r, s) {
            null === this.view && (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
            }),
            this.view.enabled = !0,
            this.view.fullWidth = t,
            this.view.fullHeight = e,
            this.view.offsetX = n,
            this.view.offsetY = i,
            this.view.width = r,
            this.view.height = s,
            this.updateProjectionMatrix()
        },
        clearViewOffset: function() {
            null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix()
        },
        updateProjectionMatrix: function() {
            var t = (this.right - this.left) / (2 * this.zoom)
              , e = (this.top - this.bottom) / (2 * this.zoom)
              , n = (this.right + this.left) / 2
              , i = (this.top + this.bottom) / 2
              , r = n - t
              , s = n + t
              , a = i + e
              , o = i - e;
            if (null !== this.view && this.view.enabled) {
                var c = this.zoom / (this.view.width / this.view.fullWidth)
                  , l = this.zoom / (this.view.height / this.view.fullHeight)
                  , p = (this.right - this.left) / this.view.width
                  , h = (this.top - this.bottom) / this.view.height;
                s = (r += p * (this.view.offsetX / c)) + p * (this.view.width / c),
                o = (a -= h * (this.view.offsetY / l)) - h * (this.view.height / l)
            }
            this.projectionMatrix.makeOrthographic(r, s, a, o, this.near, this.far),
            this.projectionMatrixInverse.getInverse(this.projectionMatrix)
        },
        toJSON: function(t) {
            var e = Vn.prototype.toJSON.call(this, t);
            return e.object.zoom = this.zoom,
            e.object.left = this.left,
            e.object.right = this.right,
            e.object.top = this.top,
            e.object.bottom = this.bottom,
            e.object.near = this.near,
            e.object.far = this.far,
            null !== this.view && (e.object.view = Object.assign({}, this.view)),
            e
        }
    }),
    Ec.prototype = Object.assign(Object.create(xc.prototype), {
        constructor: Ec
    }),
    kc.prototype = Object.assign(Object.create(bc.prototype), {
        constructor: kc,
        isDirectionalLight: !0,
        copy: function(t) {
            return bc.prototype.copy.call(this, t),
            this.target = t.target.clone(),
            this.shadow = t.shadow.clone(),
            this
        }
    }),
    Ac.prototype = Object.assign(Object.create(bc.prototype), {
        constructor: Ac,
        isAmbientLight: !0
    }),
    Lc.prototype = Object.assign(Object.create(bc.prototype), {
        constructor: Lc,
        isRectAreaLight: !0,
        copy: function(t) {
            return bc.prototype.copy.call(this, t),
            this.width = t.width,
            this.height = t.height,
            this
        },
        toJSON: function(t) {
            var e = bc.prototype.toJSON.call(this, t);
            return e.object.width = this.width,
            e.object.height = this.height,
            e
        }
    }),
    Object.assign(Pc.prototype, {
        load: function(t, e, n, i) {
            var r = this
              , s = new Go(r.manager);
            s.setPath(r.path),
            s.load(t, function(t) {
                e(r.parse(JSON.parse(t)))
            }, n, i)
        },
        parse: function(t) {
            var e = this.textures;
            function n(t) {
                return void 0 === e[t] && console.warn("THREE.MaterialLoader: Undefined texture", t),
                e[t]
            }
            var i = new _o[t.type];
            if (void 0 !== t.uuid && (i.uuid = t.uuid),
            void 0 !== t.name && (i.name = t.name),
            void 0 !== t.color && i.color.setHex(t.color),
            void 0 !== t.roughness && (i.roughness = t.roughness),
            void 0 !== t.metalness && (i.metalness = t.metalness),
            void 0 !== t.emissive && i.emissive.setHex(t.emissive),
            void 0 !== t.specular && i.specular.setHex(t.specular),
            void 0 !== t.shininess && (i.shininess = t.shininess),
            void 0 !== t.clearCoat && (i.clearCoat = t.clearCoat),
            void 0 !== t.clearCoatRoughness && (i.clearCoatRoughness = t.clearCoatRoughness),
            void 0 !== t.vertexColors && (i.vertexColors = t.vertexColors),
            void 0 !== t.fog && (i.fog = t.fog),
            void 0 !== t.flatShading && (i.flatShading = t.flatShading),
            void 0 !== t.blending && (i.blending = t.blending),
            void 0 !== t.combine && (i.combine = t.combine),
            void 0 !== t.side && (i.side = t.side),
            void 0 !== t.opacity && (i.opacity = t.opacity),
            void 0 !== t.transparent && (i.transparent = t.transparent),
            void 0 !== t.alphaTest && (i.alphaTest = t.alphaTest),
            void 0 !== t.depthTest && (i.depthTest = t.depthTest),
            void 0 !== t.depthWrite && (i.depthWrite = t.depthWrite),
            void 0 !== t.colorWrite && (i.colorWrite = t.colorWrite),
            void 0 !== t.wireframe && (i.wireframe = t.wireframe),
            void 0 !== t.wireframeLinewidth && (i.wireframeLinewidth = t.wireframeLinewidth),
            void 0 !== t.wireframeLinecap && (i.wireframeLinecap = t.wireframeLinecap),
            void 0 !== t.wireframeLinejoin && (i.wireframeLinejoin = t.wireframeLinejoin),
            void 0 !== t.rotation && (i.rotation = t.rotation),
            1 !== t.linewidth && (i.linewidth = t.linewidth),
            void 0 !== t.dashSize && (i.dashSize = t.dashSize),
            void 0 !== t.gapSize && (i.gapSize = t.gapSize),
            void 0 !== t.scale && (i.scale = t.scale),
            void 0 !== t.polygonOffset && (i.polygonOffset = t.polygonOffset),
            void 0 !== t.polygonOffsetFactor && (i.polygonOffsetFactor = t.polygonOffsetFactor),
            void 0 !== t.polygonOffsetUnits && (i.polygonOffsetUnits = t.polygonOffsetUnits),
            void 0 !== t.skinning && (i.skinning = t.skinning),
            void 0 !== t.morphTargets && (i.morphTargets = t.morphTargets),
            void 0 !== t.dithering && (i.dithering = t.dithering),
            void 0 !== t.visible && (i.visible = t.visible),
            void 0 !== t.userData && (i.userData = t.userData),
            void 0 !== t.uniforms)
                for (var r in t.uniforms) {
                    var s = t.uniforms[r];
                    switch (i.uniforms[r] = {},
                    s.type) {
                    case "t":
                        i.uniforms[r].value = n(s.value);
                        break;
                    case "c":
                        i.uniforms[r].value = (new Ln).setHex(s.value);
                        break;
                    case "v2":
                        i.uniforms[r].value = (new Ge).fromArray(s.value);
                        break;
                    case "v3":
                        i.uniforms[r].value = (new We).fromArray(s.value);
                        break;
                    case "v4":
                        i.uniforms[r].value = (new hn).fromArray(s.value);
                        break;
                    case "m3":
                        i.uniforms[r].value = (new Ye).fromArray(s.value);
                    case "m4":
                        i.uniforms[r].value = (new wn).fromArray(s.value);
                        break;
                    default:
                        i.uniforms[r].value = s.value
                    }
                }
            if (void 0 !== t.defines && (i.defines = t.defines),
            void 0 !== t.vertexShader && (i.vertexShader = t.vertexShader),
            void 0 !== t.fragmentShader && (i.fragmentShader = t.fragmentShader),
            void 0 !== t.extensions)
                for (var a in t.extensions)
                    i.extensions[a] = t.extensions[a];
            if (void 0 !== t.shading && (i.flatShading = 1 === t.shading),
            void 0 !== t.size && (i.size = t.size),
            void 0 !== t.sizeAttenuation && (i.sizeAttenuation = t.sizeAttenuation),
            void 0 !== t.map && (i.map = n(t.map)),
            void 0 !== t.matcap && (i.matcap = n(t.matcap)),
            void 0 !== t.alphaMap && (i.alphaMap = n(t.alphaMap),
            i.transparent = !0),
            void 0 !== t.bumpMap && (i.bumpMap = n(t.bumpMap)),
            void 0 !== t.bumpScale && (i.bumpScale = t.bumpScale),
            void 0 !== t.normalMap && (i.normalMap = n(t.normalMap)),
            void 0 !== t.normalMapType && (i.normalMapType = t.normalMapType),
            void 0 !== t.normalScale) {
                var o = t.normalScale;
                !1 === Array.isArray(o) && (o = [o, o]),
                i.normalScale = (new Ge).fromArray(o)
            }
            return void 0 !== t.displacementMap && (i.displacementMap = n(t.displacementMap)),
            void 0 !== t.displacementScale && (i.displacementScale = t.displacementScale),
            void 0 !== t.displacementBias && (i.displacementBias = t.displacementBias),
            void 0 !== t.roughnessMap && (i.roughnessMap = n(t.roughnessMap)),
            void 0 !== t.metalnessMap && (i.metalnessMap = n(t.metalnessMap)),
            void 0 !== t.emissiveMap && (i.emissiveMap = n(t.emissiveMap)),
            void 0 !== t.emissiveIntensity && (i.emissiveIntensity = t.emissiveIntensity),
            void 0 !== t.specularMap && (i.specularMap = n(t.specularMap)),
            void 0 !== t.envMap && (i.envMap = n(t.envMap)),
            void 0 !== t.envMapIntensity && (i.envMapIntensity = t.envMapIntensity),
            void 0 !== t.reflectivity && (i.reflectivity = t.reflectivity),
            void 0 !== t.lightMap && (i.lightMap = n(t.lightMap)),
            void 0 !== t.lightMapIntensity && (i.lightMapIntensity = t.lightMapIntensity),
            void 0 !== t.aoMap && (i.aoMap = n(t.aoMap)),
            void 0 !== t.aoMapIntensity && (i.aoMapIntensity = t.aoMapIntensity),
            void 0 !== t.gradientMap && (i.gradientMap = n(t.gradientMap)),
            i
        },
        setPath: function(t) {
            return this.path = t,
            this
        },
        setTextures: function(t) {
            return this.textures = t,
            this
        }
    });
    var Cc = {
        decodeText: function(t) {
            if ("undefined" != typeof TextDecoder)
                return (new TextDecoder).decode(t);
            for (var e = "", n = 0, i = t.length; n < i; n++)
                e += String.fromCharCode(t[n]);
            try {
                return decodeURIComponent(escape(e))
            } catch (t) {
                return e
            }
        },
        extractUrlBase: function(t) {
            var e = t.lastIndexOf("/");
            return -1 === e ? "./" : t.substr(0, e + 1)
        }
    };
    function Rc() {
        ci.call(this),
        this.type = "InstancedBufferGeometry",
        this.maxInstancedCount = void 0
    }
    function Ic(t, e, n, i) {
        "number" == typeof n && (i = n,
        n = !1,
        console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),
        Zn.call(this, t, e, n),
        this.meshPerAttribute = i || 1
    }
    function Oc(t) {
        this.manager = void 0 !== t ? t : Fo
    }
    Rc.prototype = Object.assign(Object.create(ci.prototype), {
        constructor: Rc,
        isInstancedBufferGeometry: !0,
        copy: function(t) {
            return ci.prototype.copy.call(this, t),
            this.maxInstancedCount = t.maxInstancedCount,
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        toJSON: function() {
            var t = ci.prototype.toJSON.call(this);
            return t.maxInstancedCount = this.maxInstancedCount,
            t.isInstancedBufferGeometry = !0,
            t
        }
    }),
    Ic.prototype = Object.assign(Object.create(Zn.prototype), {
        constructor: Ic,
        isInstancedBufferAttribute: !0,
        copy: function(t) {
            return Zn.prototype.copy.call(this, t),
            this.meshPerAttribute = t.meshPerAttribute,
            this
        },
        toJSON: function() {
            var t = Zn.prototype.toJSON.call(this);
            return t.meshPerAttribute = this.meshPerAttribute,
            t.isInstancedBufferAttribute = !0,
            t
        }
    }),
    Object.assign(Oc.prototype, {
        load: function(t, e, n, i) {
            var r = this
              , s = new Go(r.manager);
            s.setPath(r.path),
            s.load(t, function(t) {
                e(r.parse(JSON.parse(t)))
            }, n, i)
        },
        parse: function(t) {
            var e = t.isInstancedBufferGeometry ? new Rc : new ci
              , n = t.data.index;
            if (void 0 !== n) {
                var i = new Dc[n.type](n.array);
                e.setIndex(new Zn(i,1))
            }
            var r = t.data.attributes;
            for (var s in r) {
                var a = r[s]
                  , o = (i = new Dc[a.type](a.array),
                new (a.isInstancedBufferAttribute ? Ic : Zn)(i,a.itemSize,a.normalized));
                void 0 !== a.name && (o.name = a.name),
                e.addAttribute(s, o)
            }
            var c = t.data.morphAttributes;
            if (c)
                for (var s in c) {
                    for (var l = c[s], p = [], h = 0, u = l.length; h < u; h++) {
                        a = l[h],
                        o = new Zn(i = new Dc[a.type](a.array),a.itemSize,a.normalized);
                        void 0 !== a.name && (o.name = a.name),
                        p.push(o)
                    }
                    e.morphAttributes[s] = p
                }
            var f = t.data.groups || t.data.drawcalls || t.data.offsets;
            if (void 0 !== f) {
                h = 0;
                for (var d = f.length; h !== d; ++h) {
                    var m = f[h];
                    e.addGroup(m.start, m.count, m.materialIndex)
                }
            }
            var g = t.data.boundingSphere;
            if (void 0 !== g) {
                var v = new We;
                void 0 !== g.center && v.fromArray(g.center),
                e.boundingSphere = new vn(v,g.radius)
            }
            return t.name && (e.name = t.name),
            t.userData && (e.userData = t.userData),
            e
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    });
    var Dc = {
        Int8Array: Int8Array,
        Uint8Array: Uint8Array,
        Uint8ClampedArray: "undefined" != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,
        Int16Array: Int16Array,
        Uint16Array: Uint16Array,
        Int32Array: Int32Array,
        Uint32Array: Uint32Array,
        Float32Array: Float32Array,
        Float64Array: Float64Array
    };
    function zc(t) {
        this.manager = void 0 !== t ? t : Fo,
        this.resourcePath = ""
    }
    Object.assign(zc.prototype, {
        crossOrigin: "anonymous",
        load: function(t, e, n, i) {
            var r = this
              , s = void 0 === this.path ? Cc.extractUrlBase(t) : this.path;
            this.resourcePath = this.resourcePath || s;
            var a = new Go(r.manager);
            a.setPath(this.path),
            a.load(t, function(n) {
                var s = null;
                try {
                    s = JSON.parse(n)
                } catch (e) {
                    return void 0 !== i && i(e),
                    void console.error("THREE:ObjectLoader: Can't parse " + t + ".", e.message)
                }
                var a = s.metadata;
                void 0 !== a && void 0 !== a.type && "geometry" !== a.type.toLowerCase() ? r.parse(s, e) : console.error("THREE.ObjectLoader: Can't load " + t)
            }, n, i)
        },
        setPath: function(t) {
            return this.path = t,
            this
        },
        setResourcePath: function(t) {
            return this.resourcePath = t,
            this
        },
        setCrossOrigin: function(t) {
            return this.crossOrigin = t,
            this
        },
        parse: function(t, e) {
            var n = this.parseShape(t.shapes)
              , i = this.parseGeometries(t.geometries, n)
              , r = this.parseImages(t.images, function() {
                void 0 !== e && e(o)
            })
              , s = this.parseTextures(t.textures, r)
              , a = this.parseMaterials(t.materials, s)
              , o = this.parseObject(t.object, i, a);
            return t.animations && (o.animations = this.parseAnimations(t.animations)),
            void 0 !== t.images && 0 !== t.images.length || void 0 !== e && e(o),
            o
        },
        parseShape: function(t) {
            var e = {};
            if (void 0 !== t)
                for (var n = 0, i = t.length; n < i; n++) {
                    var r = (new yc).fromJSON(t[n]);
                    e[r.uuid] = r
                }
            return e
        },
        parseGeometries: function(t, e) {
            var n = {};
            if (void 0 !== t)
                for (var i = new Oc, r = 0, s = t.length; r < s; r++) {
                    var a, o = t[r];
                    switch (o.type) {
                    case "PlaneGeometry":
                    case "PlaneBufferGeometry":
                        a = new ho[o.type](o.width,o.height,o.widthSegments,o.heightSegments);
                        break;
                    case "BoxGeometry":
                    case "BoxBufferGeometry":
                    case "CubeGeometry":
                        a = new ho[o.type](o.width,o.height,o.depth,o.widthSegments,o.heightSegments,o.depthSegments);
                        break;
                    case "CircleGeometry":
                    case "CircleBufferGeometry":
                        a = new ho[o.type](o.radius,o.segments,o.thetaStart,o.thetaLength);
                        break;
                    case "CylinderGeometry":
                    case "CylinderBufferGeometry":
                        a = new ho[o.type](o.radiusTop,o.radiusBottom,o.height,o.radialSegments,o.heightSegments,o.openEnded,o.thetaStart,o.thetaLength);
                        break;
                    case "ConeGeometry":
                    case "ConeBufferGeometry":
                        a = new ho[o.type](o.radius,o.height,o.radialSegments,o.heightSegments,o.openEnded,o.thetaStart,o.thetaLength);
                        break;
                    case "SphereGeometry":
                    case "SphereBufferGeometry":
                        a = new ho[o.type](o.radius,o.widthSegments,o.heightSegments,o.phiStart,o.phiLength,o.thetaStart,o.thetaLength);
                        break;
                    case "DodecahedronGeometry":
                    case "DodecahedronBufferGeometry":
                    case "IcosahedronGeometry":
                    case "IcosahedronBufferGeometry":
                    case "OctahedronGeometry":
                    case "OctahedronBufferGeometry":
                    case "TetrahedronGeometry":
                    case "TetrahedronBufferGeometry":
                        a = new ho[o.type](o.radius,o.detail);
                        break;
                    case "RingGeometry":
                    case "RingBufferGeometry":
                        a = new ho[o.type](o.innerRadius,o.outerRadius,o.thetaSegments,o.phiSegments,o.thetaStart,o.thetaLength);
                        break;
                    case "TorusGeometry":
                    case "TorusBufferGeometry":
                        a = new ho[o.type](o.radius,o.tube,o.radialSegments,o.tubularSegments,o.arc);
                        break;
                    case "TorusKnotGeometry":
                    case "TorusKnotBufferGeometry":
                        a = new ho[o.type](o.radius,o.tube,o.tubularSegments,o.radialSegments,o.p,o.q);
                        break;
                    case "TubeGeometry":
                    case "TubeBufferGeometry":
                        a = new ho[o.type]((new mc[o.path.type]).fromJSON(o.path),o.tubularSegments,o.radius,o.radialSegments,o.closed);
                        break;
                    case "LatheGeometry":
                    case "LatheBufferGeometry":
                        a = new ho[o.type](o.points,o.segments,o.phiStart,o.phiLength);
                        break;
                    case "PolyhedronGeometry":
                    case "PolyhedronBufferGeometry":
                        a = new ho[o.type](o.vertices,o.indices,o.radius,o.details);
                        break;
                    case "ShapeGeometry":
                    case "ShapeBufferGeometry":
                        for (var c = [], l = 0, p = o.shapes.length; l < p; l++) {
                            var h = e[o.shapes[l]];
                            c.push(h)
                        }
                        a = new ho[o.type](c,o.curveSegments);
                        break;
                    case "ExtrudeGeometry":
                    case "ExtrudeBufferGeometry":
                        for (c = [],
                        l = 0,
                        p = o.shapes.length; l < p; l++) {
                            h = e[o.shapes[l]];
                            c.push(h)
                        }
                        var u = o.options.extrudePath;
                        void 0 !== u && (o.options.extrudePath = (new mc[u.type]).fromJSON(u)),
                        a = new ho[o.type](c,o.options);
                        break;
                    case "BufferGeometry":
                    case "InstancedBufferGeometry":
                        a = i.parse(o);
                        break;
                    case "Geometry":
                        if ("THREE"in window && "LegacyJSONLoader"in THREE)
                            a = (new THREE.LegacyJSONLoader).parse(o, this.resourcePath).geometry;
                        else
                            console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type "Geometry".');
                        break;
                    default:
                        console.warn('THREE.ObjectLoader: Unsupported geometry type "' + o.type + '"');
                        continue
                    }
                    a.uuid = o.uuid,
                    void 0 !== o.name && (a.name = o.name),
                    !0 === a.isBufferGeometry && void 0 !== o.userData && (a.userData = o.userData),
                    n[o.uuid] = a
                }
            return n
        },
        parseMaterials: function(t, e) {
            var n = {}
              , i = {};
            if (void 0 !== t) {
                var r = new Pc;
                r.setTextures(e);
                for (var s = 0, a = t.length; s < a; s++) {
                    var o = t[s];
                    if ("MultiMaterial" === o.type) {
                        for (var c = [], l = 0; l < o.materials.length; l++) {
                            var p = o.materials[l];
                            void 0 === n[p.uuid] && (n[p.uuid] = r.parse(p)),
                            c.push(n[p.uuid])
                        }
                        i[o.uuid] = c
                    } else
                        void 0 === n[o.uuid] && (n[o.uuid] = r.parse(o)),
                        i[o.uuid] = n[o.uuid]
                }
            }
            return i
        },
        parseAnimations: function(t) {
            for (var e = [], n = 0; n < t.length; n++) {
                var i = t[n]
                  , r = Bo.parse(i);
                void 0 !== i.uuid && (r.uuid = i.uuid),
                e.push(r)
            }
            return e
        },
        parseImages: function(t, e) {
            var n = this
              , i = {};
            function r(t) {
                return n.manager.itemStart(t),
                s.load(t, function() {
                    n.manager.itemEnd(t)
                }, void 0, function() {
                    n.manager.itemError(t),
                    n.manager.itemEnd(t)
                })
            }
            if (void 0 !== t && t.length > 0) {
                var s = new qo(new Uo(e));
                s.setCrossOrigin(this.crossOrigin);
                for (var a = 0, o = t.length; a < o; a++) {
                    var c = t[a]
                      , l = c.url;
                    if (Array.isArray(l)) {
                        i[c.uuid] = [];
                        for (var p = 0, h = l.length; p < h; p++) {
                            var u = l[p]
                              , f = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(u) ? u : n.resourcePath + u;
                            i[c.uuid].push(r(f))
                        }
                    } else {
                        f = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url) ? c.url : n.resourcePath + c.url;
                        i[c.uuid] = r(f)
                    }
                }
            }
            return i
        },
        parseTextures: function(t, e) {
            function n(t, e) {
                return "number" == typeof t ? t : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", t),
                e[t])
            }
            var i = {};
            if (void 0 !== t)
                for (var r = 0, s = t.length; r < s; r++) {
                    var a, o = t[r];
                    void 0 === o.image && console.warn('THREE.ObjectLoader: No "image" specified for', o.uuid),
                    void 0 === e[o.image] && console.warn("THREE.ObjectLoader: Undefined image", o.image),
                    (a = Array.isArray(e[o.image]) ? new Wi(e[o.image]) : new pn(e[o.image])).needsUpdate = !0,
                    a.uuid = o.uuid,
                    void 0 !== o.name && (a.name = o.name),
                    void 0 !== o.mapping && (a.mapping = n(o.mapping, Hc)),
                    void 0 !== o.offset && a.offset.fromArray(o.offset),
                    void 0 !== o.repeat && a.repeat.fromArray(o.repeat),
                    void 0 !== o.center && a.center.fromArray(o.center),
                    void 0 !== o.rotation && (a.rotation = o.rotation),
                    void 0 !== o.wrap && (a.wrapS = n(o.wrap[0], Gc),
                    a.wrapT = n(o.wrap[1], Gc)),
                    void 0 !== o.format && (a.format = o.format),
                    void 0 !== o.type && (a.type = o.type),
                    void 0 !== o.encoding && (a.encoding = o.encoding),
                    void 0 !== o.minFilter && (a.minFilter = n(o.minFilter, Vc)),
                    void 0 !== o.magFilter && (a.magFilter = n(o.magFilter, Vc)),
                    void 0 !== o.anisotropy && (a.anisotropy = o.anisotropy),
                    void 0 !== o.flipY && (a.flipY = o.flipY),
                    void 0 !== o.premultiplyAlpha && (a.premultiplyAlpha = o.premultiplyAlpha),
                    void 0 !== o.unpackAlignment && (a.unpackAlignment = o.unpackAlignment),
                    i[o.uuid] = a
                }
            return i
        },
        parseObject: function(t, e, n) {
            var i;
            function r(t) {
                return void 0 === e[t] && console.warn("THREE.ObjectLoader: Undefined geometry", t),
                e[t]
            }
            function s(t) {
                if (void 0 !== t) {
                    if (Array.isArray(t)) {
                        for (var e = [], i = 0, r = t.length; i < r; i++) {
                            var s = t[i];
                            void 0 === n[s] && console.warn("THREE.ObjectLoader: Undefined material", s),
                            e.push(n[s])
                        }
                        return e
                    }
                    return void 0 === n[t] && console.warn("THREE.ObjectLoader: Undefined material", t),
                    n[t]
                }
            }
            switch (t.type) {
            case "Scene":
                i = new Os,
                void 0 !== t.background && Number.isInteger(t.background) && (i.background = new Ln(t.background)),
                void 0 !== t.fog && ("Fog" === t.fog.type ? i.fog = new Is(t.fog.color,t.fog.near,t.fog.far) : "FogExp2" === t.fog.type && (i.fog = new Rs(t.fog.color,t.fog.density)));
                break;
            case "PerspectiveCamera":
                i = new ys(t.fov,t.aspect,t.near,t.far),
                void 0 !== t.focus && (i.focus = t.focus),
                void 0 !== t.zoom && (i.zoom = t.zoom),
                void 0 !== t.filmGauge && (i.filmGauge = t.filmGauge),
                void 0 !== t.filmOffset && (i.filmOffset = t.filmOffset),
                void 0 !== t.view && (i.view = Object.assign({}, t.view));
                break;
            case "OrthographicCamera":
                i = new Tc(t.left,t.right,t.top,t.bottom,t.near,t.far),
                void 0 !== t.zoom && (i.zoom = t.zoom),
                void 0 !== t.view && (i.view = Object.assign({}, t.view));
                break;
            case "AmbientLight":
                i = new Ac(t.color,t.intensity);
                break;
            case "DirectionalLight":
                i = new kc(t.color,t.intensity);
                break;
            case "PointLight":
                i = new Sc(t.color,t.intensity,t.distance,t.decay);
                break;
            case "RectAreaLight":
                i = new Lc(t.color,t.intensity,t.width,t.height);
                break;
            case "SpotLight":
                i = new _c(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);
                break;
            case "HemisphereLight":
                i = new wc(t.color,t.groundColor,t.intensity);
                break;
            case "SkinnedMesh":
                console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
            case "Mesh":
                var a = r(t.geometry)
                  , o = s(t.material);
                i = a.bones && a.bones.length > 0 ? new Us(a,o) : new Ii(a,o),
                void 0 !== t.drawMode && i.setDrawMode(t.drawMode);
                break;
            case "LOD":
                i = new js;
                break;
            case "Line":
                i = new Vs(r(t.geometry),s(t.material),t.mode);
                break;
            case "LineLoop":
                i = new Ys(r(t.geometry),s(t.material));
                break;
            case "LineSegments":
                i = new Ws(r(t.geometry),s(t.material));
                break;
            case "PointCloud":
            case "Points":
                i = new Xs(r(t.geometry),s(t.material));
                break;
            case "Sprite":
                i = new Ns(s(t.material));
                break;
            case "Group":
                i = new gs;
                break;
            default:
                i = new Vn
            }
            if (i.uuid = t.uuid,
            void 0 !== t.name && (i.name = t.name),
            void 0 !== t.matrix ? (i.matrix.fromArray(t.matrix),
            void 0 !== t.matrixAutoUpdate && (i.matrixAutoUpdate = t.matrixAutoUpdate),
            i.matrixAutoUpdate && i.matrix.decompose(i.position, i.quaternion, i.scale)) : (void 0 !== t.position && i.position.fromArray(t.position),
            void 0 !== t.rotation && i.rotation.fromArray(t.rotation),
            void 0 !== t.quaternion && i.quaternion.fromArray(t.quaternion),
            void 0 !== t.scale && i.scale.fromArray(t.scale)),
            void 0 !== t.castShadow && (i.castShadow = t.castShadow),
            void 0 !== t.receiveShadow && (i.receiveShadow = t.receiveShadow),
            t.shadow && (void 0 !== t.shadow.bias && (i.shadow.bias = t.shadow.bias),
            void 0 !== t.shadow.radius && (i.shadow.radius = t.shadow.radius),
            void 0 !== t.shadow.mapSize && i.shadow.mapSize.fromArray(t.shadow.mapSize),
            void 0 !== t.shadow.camera && (i.shadow.camera = this.parseObject(t.shadow.camera))),
            void 0 !== t.visible && (i.visible = t.visible),
            void 0 !== t.frustumCulled && (i.frustumCulled = t.frustumCulled),
            void 0 !== t.renderOrder && (i.renderOrder = t.renderOrder),
            void 0 !== t.userData && (i.userData = t.userData),
            void 0 !== t.layers && (i.layers.mask = t.layers),
            void 0 !== t.children)
                for (var c = t.children, l = 0; l < c.length; l++)
                    i.add(this.parseObject(c[l], e, n));
            if ("LOD" === t.type)
                for (var p = t.levels, h = 0; h < p.length; h++) {
                    var u = p[h]
                      , f = i.getObjectByProperty("uuid", u.object);
                    void 0 !== f && i.addLevel(f, u.distance)
                }
            return i
        }
    });
    var Bc, Nc, jc, Uc, Fc, Hc = {
        UVMapping: ht,
        CubeReflectionMapping: ut,
        CubeRefractionMapping: ft,
        EquirectangularReflectionMapping: dt,
        EquirectangularRefractionMapping: mt,
        SphericalReflectionMapping: gt,
        CubeUVReflectionMapping: vt,
        CubeUVRefractionMapping: yt
    }, Gc = {
        RepeatWrapping: bt,
        ClampToEdgeWrapping: wt,
        MirroredRepeatWrapping: xt
    }, Vc = {
        NearestFilter: Mt,
        NearestMipMapNearestFilter: _t,
        NearestMipMapLinearFilter: St,
        LinearFilter: Tt,
        LinearMipMapNearestFilter: Et,
        LinearMipMapLinearFilter: kt
    };
    function Wc(t) {
        "undefined" == typeof createImageBitmap && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),
        "undefined" == typeof fetch && console.warn("THREE.ImageBitmapLoader: fetch() not supported."),
        this.manager = void 0 !== t ? t : Fo,
        this.options = void 0
    }
    function Yc() {
        this.type = "ShapePath",
        this.color = new Ln,
        this.subPaths = [],
        this.currentPath = null
    }
    function qc(t) {
        this.type = "Font",
        this.data = t
    }
    function Xc(t, e, n, i, r) {
        var s = r.glyphs[t] || r.glyphs["?"];
        if (s) {
            var a, o, c, l, p, h, u, f, d = new Yc;
            if (s.o)
                for (var m = s._cachedOutline || (s._cachedOutline = s.o.split(" ")), g = 0, v = m.length; g < v; ) {
                    switch (m[g++]) {
                    case "m":
                        a = m[g++] * e + n,
                        o = m[g++] * e + i,
                        d.moveTo(a, o);
                        break;
                    case "l":
                        a = m[g++] * e + n,
                        o = m[g++] * e + i,
                        d.lineTo(a, o);
                        break;
                    case "q":
                        c = m[g++] * e + n,
                        l = m[g++] * e + i,
                        p = m[g++] * e + n,
                        h = m[g++] * e + i,
                        d.quadraticCurveTo(p, h, c, l);
                        break;
                    case "b":
                        c = m[g++] * e + n,
                        l = m[g++] * e + i,
                        p = m[g++] * e + n,
                        h = m[g++] * e + i,
                        u = m[g++] * e + n,
                        f = m[g++] * e + i,
                        d.bezierCurveTo(p, h, u, f, c, l)
                    }
                }
            return {
                offsetX: s.ha * e,
                path: d
            }
        }
    }
    function Zc(t) {
        this.manager = void 0 !== t ? t : Fo
    }
    function Kc() {}
    Wc.prototype = {
        constructor: Wc,
        setOptions: function(t) {
            return this.options = t,
            this
        },
        load: function(t, e, n, i) {
            void 0 === t && (t = ""),
            void 0 !== this.path && (t = this.path + t),
            t = this.manager.resolveURL(t);
            var r = this
              , s = jo.get(t);
            if (void 0 !== s)
                return r.manager.itemStart(t),
                setTimeout(function() {
                    e && e(s),
                    r.manager.itemEnd(t)
                }, 0),
                s;
            fetch(t).then(function(t) {
                return t.blob()
            }).then(function(t) {
                return void 0 === r.options ? createImageBitmap(t) : createImageBitmap(t, r.options)
            }).then(function(n) {
                jo.add(t, n),
                e && e(n),
                r.manager.itemEnd(t)
            }).catch(function(e) {
                i && i(e),
                r.manager.itemError(t),
                r.manager.itemEnd(t)
            }),
            r.manager.itemStart(t)
        },
        setCrossOrigin: function() {
            return this
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    },
    Object.assign(Yc.prototype, {
        moveTo: function(t, e) {
            this.currentPath = new vc,
            this.subPaths.push(this.currentPath),
            this.currentPath.moveTo(t, e)
        },
        lineTo: function(t, e) {
            this.currentPath.lineTo(t, e)
        },
        quadraticCurveTo: function(t, e, n, i) {
            this.currentPath.quadraticCurveTo(t, e, n, i)
        },
        bezierCurveTo: function(t, e, n, i, r, s) {
            this.currentPath.bezierCurveTo(t, e, n, i, r, s)
        },
        splineThru: function(t) {
            this.currentPath.splineThru(t)
        },
        toShapes: function(t, e) {
            function n(t) {
                for (var e = [], n = 0, i = t.length; n < i; n++) {
                    var r = t[n]
                      , s = new yc;
                    s.curves = r.curves,
                    e.push(s)
                }
                return e
            }
            function i(t, e) {
                for (var n = e.length, i = !1, r = n - 1, s = 0; s < n; r = s++) {
                    var a = e[r]
                      , o = e[s]
                      , c = o.x - a.x
                      , l = o.y - a.y;
                    if (Math.abs(l) > Number.EPSILON) {
                        if (l < 0 && (a = e[s],
                        c = -c,
                        o = e[r],
                        l = -l),
                        t.y < a.y || t.y > o.y)
                            continue;
                        if (t.y === a.y) {
                            if (t.x === a.x)
                                return !0
                        } else {
                            var p = l * (t.x - a.x) - c * (t.y - a.y);
                            if (0 === p)
                                return !0;
                            if (p < 0)
                                continue;
                            i = !i
                        }
                    } else {
                        if (t.y !== a.y)
                            continue;
                        if (o.x <= t.x && t.x <= a.x || a.x <= t.x && t.x <= o.x)
                            return !0
                    }
                }
                return i
            }
            var r = Ua.isClockWise
              , s = this.subPaths;
            if (0 === s.length)
                return [];
            if (!0 === e)
                return n(s);
            var a, o, c, l = [];
            if (1 === s.length)
                return o = s[0],
                (c = new yc).curves = o.curves,
                l.push(c),
                l;
            var p = !r(s[0].getPoints());
            p = t ? !p : p;
            var h, u, f = [], d = [], m = [], g = 0;
            d[g] = void 0,
            m[g] = [];
            for (var v = 0, y = s.length; v < y; v++)
                a = r(h = (o = s[v]).getPoints()),
                (a = t ? !a : a) ? (!p && d[g] && g++,
                d[g] = {
                    s: new yc,
                    p: h
                },
                d[g].s.curves = o.curves,
                p && g++,
                m[g] = []) : m[g].push({
                    h: o,
                    p: h[0]
                });
            if (!d[0])
                return n(s);
            if (d.length > 1) {
                for (var b = !1, w = [], x = 0, M = d.length; x < M; x++)
                    f[x] = [];
                for (x = 0,
                M = d.length; x < M; x++)
                    for (var _ = m[x], S = 0; S < _.length; S++) {
                        for (var T = _[S], E = !0, k = 0; k < d.length; k++)
                            i(T.p, d[k].p) && (x !== k && w.push({
                                froms: x,
                                tos: k,
                                hole: S
                            }),
                            E ? (E = !1,
                            f[k].push(T)) : b = !0);
                        E && f[x].push(T)
                    }
                w.length > 0 && (b || (m = f))
            }
            v = 0;
            for (var A = d.length; v < A; v++) {
                c = d[v].s,
                l.push(c);
                for (var L = 0, P = (u = m[v]).length; L < P; L++)
                    c.holes.push(u[L].h)
            }
            return l
        }
    }),
    Object.assign(qc.prototype, {
        isFont: !0,
        generateShapes: function(t, e) {
            void 0 === e && (e = 100);
            for (var n = [], i = function(t, e, n) {
                for (var i = Array.from ? Array.from(t) : String(t).split(""), r = e / n.resolution, s = (n.boundingBox.yMax - n.boundingBox.yMin + n.underlineThickness) * r, a = [], o = 0, c = 0, l = 0; l < i.length; l++) {
                    var p = i[l];
                    if ("\n" === p)
                        o = 0,
                        c -= s;
                    else {
                        var h = Xc(p, r, o, c, n);
                        o += h.offsetX,
                        a.push(h.path)
                    }
                }
                return a
            }(t, e, this.data), r = 0, s = i.length; r < s; r++)
                Array.prototype.push.apply(n, i[r].toShapes());
            return n
        }
    }),
    Object.assign(Zc.prototype, {
        load: function(t, e, n, i) {
            var r = this
              , s = new Go(this.manager);
            s.setPath(this.path),
            s.load(t, function(t) {
                var n;
                try {
                    n = JSON.parse(t)
                } catch (e) {
                    console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),
                    n = JSON.parse(t.substring(65, t.length - 2))
                }
                var i = r.parse(n);
                e && e(i)
            }, n, i)
        },
        parse: function(t) {
            return new qc(t)
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    }),
    Kc.Handlers = {
        handlers: [],
        add: function(t, e) {
            this.handlers.push(t, e)
        },
        get: function(t) {
            for (var e = this.handlers, n = 0, i = e.length; n < i; n += 2) {
                var r = e[n]
                  , s = e[n + 1];
                if (r.test(t))
                    return s
            }
            return null
        }
    },
    Object.assign(Kc.prototype, {
        crossOrigin: "anonymous",
        onLoadStart: function() {},
        onLoadProgress: function() {},
        onLoadComplete: function() {},
        initMaterials: function(t, e, n) {
            for (var i = [], r = 0; r < t.length; ++r)
                i[r] = this.createMaterial(t[r], e, n);
            return i
        },
        createMaterial: (Bc = {
            NoBlending: E,
            NormalBlending: k,
            AdditiveBlending: A,
            SubtractiveBlending: L,
            MultiplyBlending: P,
            CustomBlending: C
        },
        Nc = new Ln,
        jc = new Zo,
        Uc = new Pc,
        function(t, e, n) {
            var i = {};
            function r(t, r, s, a, o) {
                var c, l = e + t, p = Kc.Handlers.get(l);
                null !== p ? c = p.load(l) : (jc.setCrossOrigin(n),
                c = jc.load(l)),
                void 0 !== r && (c.repeat.fromArray(r),
                1 !== r[0] && (c.wrapS = bt),
                1 !== r[1] && (c.wrapT = bt)),
                void 0 !== s && c.offset.fromArray(s),
                void 0 !== a && ("repeat" === a[0] && (c.wrapS = bt),
                "mirror" === a[0] && (c.wrapS = xt),
                "repeat" === a[1] && (c.wrapT = bt),
                "mirror" === a[1] && (c.wrapT = xt)),
                void 0 !== o && (c.anisotropy = o);
                var h = He.generateUUID();
                return i[h] = c,
                h
            }
            var s = {
                uuid: He.generateUUID(),
                type: "MeshLambertMaterial"
            };
            for (var a in t) {
                var o = t[a];
                switch (a) {
                case "DbgColor":
                case "DbgIndex":
                case "opticalDensity":
                case "illumination":
                    break;
                case "DbgName":
                    s.name = o;
                    break;
                case "blending":
                    s.blending = Bc[o];
                    break;
                case "colorAmbient":
                case "mapAmbient":
                    console.warn("THREE.Loader.createMaterial:", a, "is no longer supported.");
                    break;
                case "colorDiffuse":
                    s.color = Nc.fromArray(o).getHex();
                    break;
                case "colorSpecular":
                    s.specular = Nc.fromArray(o).getHex();
                    break;
                case "colorEmissive":
                    s.emissive = Nc.fromArray(o).getHex();
                    break;
                case "specularCoef":
                    s.shininess = o;
                    break;
                case "shading":
                    "basic" === o.toLowerCase() && (s.type = "MeshBasicMaterial"),
                    "phong" === o.toLowerCase() && (s.type = "MeshPhongMaterial"),
                    "standard" === o.toLowerCase() && (s.type = "MeshStandardMaterial");
                    break;
                case "mapDiffuse":
                    s.map = r(o, t.mapDiffuseRepeat, t.mapDiffuseOffset, t.mapDiffuseWrap, t.mapDiffuseAnisotropy);
                    break;
                case "mapDiffuseRepeat":
                case "mapDiffuseOffset":
                case "mapDiffuseWrap":
                case "mapDiffuseAnisotropy":
                    break;
                case "mapEmissive":
                    s.emissiveMap = r(o, t.mapEmissiveRepeat, t.mapEmissiveOffset, t.mapEmissiveWrap, t.mapEmissiveAnisotropy);
                    break;
                case "mapEmissiveRepeat":
                case "mapEmissiveOffset":
                case "mapEmissiveWrap":
                case "mapEmissiveAnisotropy":
                    break;
                case "mapLight":
                    s.lightMap = r(o, t.mapLightRepeat, t.mapLightOffset, t.mapLightWrap, t.mapLightAnisotropy);
                    break;
                case "mapLightRepeat":
                case "mapLightOffset":
                case "mapLightWrap":
                case "mapLightAnisotropy":
                    break;
                case "mapAO":
                    s.aoMap = r(o, t.mapAORepeat, t.mapAOOffset, t.mapAOWrap, t.mapAOAnisotropy);
                    break;
                case "mapAORepeat":
                case "mapAOOffset":
                case "mapAOWrap":
                case "mapAOAnisotropy":
                    break;
                case "mapBump":
                    s.bumpMap = r(o, t.mapBumpRepeat, t.mapBumpOffset, t.mapBumpWrap, t.mapBumpAnisotropy);
                    break;
                case "mapBumpScale":
                    s.bumpScale = o;
                    break;
                case "mapBumpRepeat":
                case "mapBumpOffset":
                case "mapBumpWrap":
                case "mapBumpAnisotropy":
                    break;
                case "mapNormal":
                    s.normalMap = r(o, t.mapNormalRepeat, t.mapNormalOffset, t.mapNormalWrap, t.mapNormalAnisotropy);
                    break;
                case "mapNormalFactor":
                    s.normalScale = o;
                    break;
                case "mapNormalRepeat":
                case "mapNormalOffset":
                case "mapNormalWrap":
                case "mapNormalAnisotropy":
                    break;
                case "mapSpecular":
                    s.specularMap = r(o, t.mapSpecularRepeat, t.mapSpecularOffset, t.mapSpecularWrap, t.mapSpecularAnisotropy);
                    break;
                case "mapSpecularRepeat":
                case "mapSpecularOffset":
                case "mapSpecularWrap":
                case "mapSpecularAnisotropy":
                    break;
                case "mapMetalness":
                    s.metalnessMap = r(o, t.mapMetalnessRepeat, t.mapMetalnessOffset, t.mapMetalnessWrap, t.mapMetalnessAnisotropy);
                    break;
                case "mapMetalnessRepeat":
                case "mapMetalnessOffset":
                case "mapMetalnessWrap":
                case "mapMetalnessAnisotropy":
                    break;
                case "mapRoughness":
                    s.roughnessMap = r(o, t.mapRoughnessRepeat, t.mapRoughnessOffset, t.mapRoughnessWrap, t.mapRoughnessAnisotropy);
                    break;
                case "mapRoughnessRepeat":
                case "mapRoughnessOffset":
                case "mapRoughnessWrap":
                case "mapRoughnessAnisotropy":
                    break;
                case "mapAlpha":
                    s.alphaMap = r(o, t.mapAlphaRepeat, t.mapAlphaOffset, t.mapAlphaWrap, t.mapAlphaAnisotropy);
                    break;
                case "mapAlphaRepeat":
                case "mapAlphaOffset":
                case "mapAlphaWrap":
                case "mapAlphaAnisotropy":
                    break;
                case "flipSided":
                    s.side = b;
                    break;
                case "doubleSided":
                    s.side = w;
                    break;
                case "transparency":
                    console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),
                    s.opacity = o;
                    break;
                case "depthTest":
                case "depthWrite":
                case "colorWrite":
                case "opacity":
                case "reflectivity":
                case "transparent":
                case "visible":
                case "wireframe":
                    s[a] = o;
                    break;
                case "vertexColors":
                    !0 === o && (s.vertexColors = T),
                    "face" === o && (s.vertexColors = S);
                    break;
                default:
                    console.error("THREE.Loader.createMaterial: Unsupported", a, o)
                }
            }
            return "MeshBasicMaterial" === s.type && delete s.emissive,
            "MeshPhongMaterial" !== s.type && delete s.specular,
            s.opacity < 1 && (s.transparent = !0),
            Uc.setTextures(i),
            Uc.parse(s)
        }
        )
    });
    var Jc = {
        getContext: function() {
            return void 0 === Fc && (Fc = new (window.AudioContext || window.webkitAudioContext)),
            Fc
        },
        setContext: function(t) {
            Fc = t
        }
    };
    function $c(t) {
        this.manager = void 0 !== t ? t : Fo
    }
    function Qc() {
        this.coefficients = [];
        for (var t = 0; t < 9; t++)
            this.coefficients.push(new We)
    }
    function tl(t, e) {
        bc.call(this, void 0, e),
        this.sh = void 0 !== t ? t : new Qc
    }
    function el(t, e, n) {
        tl.call(this, void 0, n);
        var i = (new Ln).set(t)
          , r = (new Ln).set(e)
          , s = new We(i.r,i.g,i.b)
          , a = new We(r.r,r.g,r.b)
          , o = Math.sqrt(Math.PI)
          , c = o * Math.sqrt(.75);
        this.sh.coefficients[0].copy(s).add(a).multiplyScalar(o),
        this.sh.coefficients[1].copy(s).sub(a).multiplyScalar(c)
    }
    function nl(t, e) {
        tl.call(this, void 0, e);
        var n = (new Ln).set(t);
        this.sh.coefficients[0].set(n.r, n.g, n.b).multiplyScalar(2 * Math.sqrt(Math.PI))
    }
    function il() {
        this.type = "StereoCamera",
        this.aspect = 1,
        this.eyeSep = .064,
        this.cameraL = new ys,
        this.cameraL.layers.enable(1),
        this.cameraL.matrixAutoUpdate = !1,
        this.cameraR = new ys,
        this.cameraR.layers.enable(2),
        this.cameraR.matrixAutoUpdate = !1
    }
    Object.assign($c.prototype, {
        load: function(t, e, n, i) {
            var r = new Go(this.manager);
            r.setResponseType("arraybuffer"),
            r.setPath(this.path),
            r.load(t, function(t) {
                var n = t.slice(0);
                Jc.getContext().decodeAudioData(n, function(t) {
                    e(t)
                })
            }, n, i)
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    }),
    Object.assign(Qc.prototype, {
        isSphericalHarmonics3: !0,
        set: function(t) {
            for (var e = 0; e < 9; e++)
                this.coefficients[e].copy(t[e]);
            return this
        },
        zero: function() {
            for (var t = 0; t < 9; t++)
                this.coefficients[t].set(0, 0, 0);
            return this
        },
        getAt: function(t, e) {
            var n = t.x
              , i = t.y
              , r = t.z
              , s = this.coefficients;
            return e = .282095 * s[0],
            e += .488603 * s[1] * i,
            e += .488603 * s[2] * r,
            e += .488603 * s[3] * n,
            e += 1.092548 * s[4] * (n * i),
            e += 1.092548 * s[5] * (i * r),
            e += .315392 * s[6] * (3 * r * r - 1),
            e += 1.092548 * s[7] * (n * r),
            e += .546274 * s[8] * (n * n - i * i)
        },
        getIrradianceAt: function(t, e) {
            var n = t.x
              , i = t.y
              , r = t.z
              , s = this.coefficients;
            return e = .886227 * s[0],
            e += 2 * s[1] * .511664 * i,
            e += 2 * s[2] * .511664 * r,
            e += 2 * s[3] * .511664 * n,
            e += 2 * s[4] * .429043 * n * i,
            e += 2 * s[5] * .429043 * i * r,
            e += s[6] * (.743125 * r * r - .247708),
            e += 2 * s[7] * .429043 * n * r,
            e += .429043 * s[8] * (n * n - i * i)
        },
        add: function(t) {
            for (var e = 0; e < 9; e++)
                this.coefficients[e].add(t.coefficients[e]);
            return this
        },
        scale: function(t) {
            for (var e = 0; e < 9; e++)
                this.coefficients[e].multiplyScalar(t);
            return this
        },
        lerp: function(t, e) {
            for (var n = 0; n < 9; n++)
                this.coefficients[n].lerp(t.coefficients[n], e);
            return this
        },
        equals: function(t) {
            for (var e = 0; e < 9; e++)
                if (!this.coefficients[e].equals(t.coefficients[e]))
                    return !1;
            return !0
        },
        copy: function(t) {
            return this.set(t.coefficients)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        fromArray: function(t) {
            for (var e = this.coefficients, n = 0; n < 9; n++)
                e[n].fromArray(t, 3 * n);
            return this
        },
        toArray: function() {
            for (var t = [], e = this.coefficients, n = 0; n < 9; n++)
                e[n].toArray(t, 3 * n);
            return t
        }
    }),
    Object.assign(Qc, {
        getBasisAt: function(t, e) {
            var n = t.x
              , i = t.y
              , r = t.z;
            e[0] = .282095,
            e[1] = .488603 * i,
            e[2] = .488603 * r,
            e[3] = .488603 * n,
            e[4] = 1.092548 * n * i,
            e[5] = 1.092548 * i * r,
            e[6] = .315392 * (3 * r * r - 1),
            e[7] = 1.092548 * n * r,
            e[8] = .546274 * (n * n - i * i)
        }
    }),
    tl.prototype = Object.assign(Object.create(bc.prototype), {
        constructor: tl,
        isLightProbe: !0,
        copy: function(t) {
            return bc.prototype.copy.call(this, t),
            this.sh.copy(t.sh),
            this.intensity = t.intensity,
            this
        },
        toJSON: function(t) {
            return bc.prototype.toJSON.call(this, t)
        }
    }),
    el.prototype = Object.assign(Object.create(tl.prototype), {
        constructor: el,
        isHemisphereLightProbe: !0,
        copy: function(t) {
            return tl.prototype.copy.call(this, t),
            this
        },
        toJSON: function(t) {
            return tl.prototype.toJSON.call(this, t)
        }
    }),
    nl.prototype = Object.assign(Object.create(tl.prototype), {
        constructor: nl,
        isAmbientLightProbe: !0,
        copy: function(t) {
            return tl.prototype.copy.call(this, t),
            this
        },
        toJSON: function(t) {
            return tl.prototype.toJSON.call(this, t)
        }
    }),
    Object.assign(il.prototype, {
        update: function() {
            var t, e, n, i, r, s, a, o, c = new wn, l = new wn;
            return function(p) {
                if (t !== this || e !== p.focus || n !== p.fov || i !== p.aspect * this.aspect || r !== p.near || s !== p.far || a !== p.zoom || o !== this.eyeSep) {
                    t = this,
                    e = p.focus,
                    n = p.fov,
                    i = p.aspect * this.aspect,
                    r = p.near,
                    s = p.far,
                    a = p.zoom;
                    var h, u, f = p.projectionMatrix.clone(), d = (o = this.eyeSep / 2) * r / e, m = r * Math.tan(He.DEG2RAD * n * .5) / a;
                    l.elements[12] = -o,
                    c.elements[12] = o,
                    h = -m * i + d,
                    u = m * i + d,
                    f.elements[0] = 2 * r / (u - h),
                    f.elements[8] = (u + h) / (u - h),
                    this.cameraL.projectionMatrix.copy(f),
                    h = -m * i - d,
                    u = m * i - d,
                    f.elements[0] = 2 * r / (u - h),
                    f.elements[8] = (u + h) / (u - h),
                    this.cameraR.projectionMatrix.copy(f)
                }
                this.cameraL.matrixWorld.copy(p.matrixWorld).multiply(l),
                this.cameraR.matrixWorld.copy(p.matrixWorld).multiply(c)
            }
        }()
    });
    var rl = 90
      , sl = 1;
    function al(t, e, n, i) {
        Vn.call(this),
        this.type = "CubeCamera";
        var r = new ys(rl,sl,t,e);
        r.up.set(0, -1, 0),
        r.lookAt(new We(1,0,0)),
        this.add(r);
        var s = new ys(rl,sl,t,e);
        s.up.set(0, -1, 0),
        s.lookAt(new We(-1,0,0)),
        this.add(s);
        var a = new ys(rl,sl,t,e);
        a.up.set(0, 0, 1),
        a.lookAt(new We(0,1,0)),
        this.add(a);
        var o = new ys(rl,sl,t,e);
        o.up.set(0, 0, -1),
        o.lookAt(new We(0,-1,0)),
        this.add(o);
        var c = new ys(rl,sl,t,e);
        c.up.set(0, -1, 0),
        c.lookAt(new We(0,0,1)),
        this.add(c);
        var l = new ys(rl,sl,t,e);
        l.up.set(0, -1, 0),
        l.lookAt(new We(0,0,-1)),
        this.add(l),
        i = i || {
            format: Ft,
            magFilter: Tt,
            minFilter: Tt
        },
        this.renderTarget = new dn(n,n,i),
        this.renderTarget.texture.name = "CubeCamera",
        this.update = function(t, e) {
            null === this.parent && this.updateMatrixWorld();
            var n = t.getRenderTarget()
              , i = this.renderTarget
              , p = i.texture.generateMipmaps;
            i.texture.generateMipmaps = !1,
            t.setRenderTarget(i, 0),
            t.render(e, r),
            t.setRenderTarget(i, 1),
            t.render(e, s),
            t.setRenderTarget(i, 2),
            t.render(e, a),
            t.setRenderTarget(i, 3),
            t.render(e, o),
            t.setRenderTarget(i, 4),
            t.render(e, c),
            i.texture.generateMipmaps = p,
            t.setRenderTarget(i, 5),
            t.render(e, l),
            t.setRenderTarget(n)
        }
        ,
        this.clear = function(t, e, n, i) {
            for (var r = t.getRenderTarget(), s = this.renderTarget, a = 0; a < 6; a++)
                t.setRenderTarget(s, a),
                t.clear(e, n, i);
            t.setRenderTarget(r)
        }
    }
    function ol(t) {
        this.autoStart = void 0 === t || t,
        this.startTime = 0,
        this.oldTime = 0,
        this.elapsedTime = 0,
        this.running = !1
    }
    function cl() {
        Vn.call(this),
        this.type = "AudioListener",
        this.context = Jc.getContext(),
        this.gain = this.context.createGain(),
        this.gain.connect(this.context.destination),
        this.filter = null,
        this.timeDelta = 0
    }
    function ll(t) {
        Vn.call(this),
        this.type = "Audio",
        this.listener = t,
        this.context = t.context,
        this.gain = this.context.createGain(),
        this.gain.connect(t.getInput()),
        this.autoplay = !1,
        this.buffer = null,
        this.detune = 0,
        this.loop = !1,
        this.startTime = 0,
        this.offset = 0,
        this.playbackRate = 1,
        this.isPlaying = !1,
        this.hasPlaybackControl = !0,
        this.sourceType = "empty",
        this.filters = []
    }
    function pl(t) {
        ll.call(this, t),
        this.panner = this.context.createPanner(),
        this.panner.panningModel = "HRTF",
        this.panner.connect(this.gain)
    }
    function hl(t, e) {
        this.analyser = t.context.createAnalyser(),
        this.analyser.fftSize = void 0 !== e ? e : 2048,
        this.data = new Uint8Array(this.analyser.frequencyBinCount),
        t.getOutput().connect(this.analyser)
    }
    function ul(t, e, n) {
        this.binding = t,
        this.valueSize = n;
        var i, r = Float64Array;
        switch (e) {
        case "quaternion":
            i = this._slerp;
            break;
        case "string":
        case "bool":
            r = Array,
            i = this._select;
            break;
        default:
            i = this._lerp
        }
        this.buffer = new r(4 * n),
        this._mixBufferRegion = i,
        this.cumulativeWeight = 0,
        this.useCount = 0,
        this.referenceCount = 0
    }
    al.prototype = Object.create(Vn.prototype),
    al.prototype.constructor = al,
    Object.assign(ol.prototype, {
        start: function() {
            this.startTime = ("undefined" == typeof performance ? Date : performance).now(),
            this.oldTime = this.startTime,
            this.elapsedTime = 0,
            this.running = !0
        },
        stop: function() {
            this.getElapsedTime(),
            this.running = !1,
            this.autoStart = !1
        },
        getElapsedTime: function() {
            return this.getDelta(),
            this.elapsedTime
        },
        getDelta: function() {
            var t = 0;
            if (this.autoStart && !this.running)
                return this.start(),
                0;
            if (this.running) {
                var e = ("undefined" == typeof performance ? Date : performance).now();
                t = (e - this.oldTime) / 1e3,
                this.oldTime = e,
                this.elapsedTime += t
            }
            return t
        }
    }),
    cl.prototype = Object.assign(Object.create(Vn.prototype), {
        constructor: cl,
        getInput: function() {
            return this.gain
        },
        removeFilter: function() {
            return null !== this.filter && (this.gain.disconnect(this.filter),
            this.filter.disconnect(this.context.destination),
            this.gain.connect(this.context.destination),
            this.filter = null),
            this
        },
        getFilter: function() {
            return this.filter
        },
        setFilter: function(t) {
            return null !== this.filter ? (this.gain.disconnect(this.filter),
            this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination),
            this.filter = t,
            this.gain.connect(this.filter),
            this.filter.connect(this.context.destination),
            this
        },
        getMasterVolume: function() {
            return this.gain.gain.value
        },
        setMasterVolume: function(t) {
            return this.gain.gain.setTargetAtTime(t, this.context.currentTime, .01),
            this
        },
        updateMatrixWorld: function() {
            var t = new We
              , e = new Ve
              , n = new We
              , i = new We
              , r = new ol;
            return function(s) {
                Vn.prototype.updateMatrixWorld.call(this, s);
                var a = this.context.listener
                  , o = this.up;
                if (this.timeDelta = r.getDelta(),
                this.matrixWorld.decompose(t, e, n),
                i.set(0, 0, -1).applyQuaternion(e),
                a.positionX) {
                    var c = this.context.currentTime + this.timeDelta;
                    a.positionX.linearRampToValueAtTime(t.x, c),
                    a.positionY.linearRampToValueAtTime(t.y, c),
                    a.positionZ.linearRampToValueAtTime(t.z, c),
                    a.forwardX.linearRampToValueAtTime(i.x, c),
                    a.forwardY.linearRampToValueAtTime(i.y, c),
                    a.forwardZ.linearRampToValueAtTime(i.z, c),
                    a.upX.linearRampToValueAtTime(o.x, c),
                    a.upY.linearRampToValueAtTime(o.y, c),
                    a.upZ.linearRampToValueAtTime(o.z, c)
                } else
                    a.setPosition(t.x, t.y, t.z),
                    a.setOrientation(i.x, i.y, i.z, o.x, o.y, o.z)
            }
        }()
    }),
    ll.prototype = Object.assign(Object.create(Vn.prototype), {
        constructor: ll,
        getOutput: function() {
            return this.gain
        },
        setNodeSource: function(t) {
            return this.hasPlaybackControl = !1,
            this.sourceType = "audioNode",
            this.source = t,
            this.connect(),
            this
        },
        setMediaElementSource: function(t) {
            return this.hasPlaybackControl = !1,
            this.sourceType = "mediaNode",
            this.source = this.context.createMediaElementSource(t),
            this.connect(),
            this
        },
        setBuffer: function(t) {
            return this.buffer = t,
            this.sourceType = "buffer",
            this.autoplay && this.play(),
            this
        },
        play: function() {
            if (!0 !== this.isPlaying) {
                if (!1 !== this.hasPlaybackControl) {
                    var t = this.context.createBufferSource();
                    return t.buffer = this.buffer,
                    t.loop = this.loop,
                    t.onended = this.onEnded.bind(this),
                    this.startTime = this.context.currentTime,
                    t.start(this.startTime, this.offset),
                    this.isPlaying = !0,
                    this.source = t,
                    this.setDetune(this.detune),
                    this.setPlaybackRate(this.playbackRate),
                    this.connect()
                }
                console.warn("THREE.Audio: this Audio has no playback control.")
            } else
                console.warn("THREE.Audio: Audio is already playing.")
        },
        pause: function() {
            if (!1 !== this.hasPlaybackControl)
                return !0 === this.isPlaying && (this.source.stop(),
                this.source.onended = null,
                this.offset += (this.context.currentTime - this.startTime) * this.playbackRate,
                this.isPlaying = !1),
                this;
            console.warn("THREE.Audio: this Audio has no playback control.")
        },
        stop: function() {
            if (!1 !== this.hasPlaybackControl)
                return this.source.stop(),
                this.source.onended = null,
                this.offset = 0,
                this.isPlaying = !1,
                this;
            console.warn("THREE.Audio: this Audio has no playback control.")
        },
        connect: function() {
            if (this.filters.length > 0) {
                this.source.connect(this.filters[0]);
                for (var t = 1, e = this.filters.length; t < e; t++)
                    this.filters[t - 1].connect(this.filters[t]);
                this.filters[this.filters.length - 1].connect(this.getOutput())
            } else
                this.source.connect(this.getOutput());
            return this
        },
        disconnect: function() {
            if (this.filters.length > 0) {
                this.source.disconnect(this.filters[0]);
                for (var t = 1, e = this.filters.length; t < e; t++)
                    this.filters[t - 1].disconnect(this.filters[t]);
                this.filters[this.filters.length - 1].disconnect(this.getOutput())
            } else
                this.source.disconnect(this.getOutput());
            return this
        },
        getFilters: function() {
            return this.filters
        },
        setFilters: function(t) {
            return t || (t = []),
            !0 === this.isPlaying ? (this.disconnect(),
            this.filters = t,
            this.connect()) : this.filters = t,
            this
        },
        setDetune: function(t) {
            if (this.detune = t,
            void 0 !== this.source.detune)
                return !0 === this.isPlaying && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01),
                this
        },
        getDetune: function() {
            return this.detune
        },
        getFilter: function() {
            return this.getFilters()[0]
        },
        setFilter: function(t) {
            return this.setFilters(t ? [t] : [])
        },
        setPlaybackRate: function(t) {
            if (!1 !== this.hasPlaybackControl)
                return this.playbackRate = t,
                !0 === this.isPlaying && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01),
                this;
            console.warn("THREE.Audio: this Audio has no playback control.")
        },
        getPlaybackRate: function() {
            return this.playbackRate
        },
        onEnded: function() {
            this.isPlaying = !1
        },
        getLoop: function() {
            return !1 === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."),
            !1) : this.loop
        },
        setLoop: function(t) {
            if (!1 !== this.hasPlaybackControl)
                return this.loop = t,
                !0 === this.isPlaying && (this.source.loop = this.loop),
                this;
            console.warn("THREE.Audio: this Audio has no playback control.")
        },
        getVolume: function() {
            return this.gain.gain.value
        },
        setVolume: function(t) {
            return this.gain.gain.setTargetAtTime(t, this.context.currentTime, .01),
            this
        }
    }),
    pl.prototype = Object.assign(Object.create(ll.prototype), {
        constructor: pl,
        getOutput: function() {
            return this.panner
        },
        getRefDistance: function() {
            return this.panner.refDistance
        },
        setRefDistance: function(t) {
            return this.panner.refDistance = t,
            this
        },
        getRolloffFactor: function() {
            return this.panner.rolloffFactor
        },
        setRolloffFactor: function(t) {
            return this.panner.rolloffFactor = t,
            this
        },
        getDistanceModel: function() {
            return this.panner.distanceModel
        },
        setDistanceModel: function(t) {
            return this.panner.distanceModel = t,
            this
        },
        getMaxDistance: function() {
            return this.panner.maxDistance
        },
        setMaxDistance: function(t) {
            return this.panner.maxDistance = t,
            this
        },
        setDirectionalCone: function(t, e, n) {
            return this.panner.coneInnerAngle = t,
            this.panner.coneOuterAngle = e,
            this.panner.coneOuterGain = n,
            this
        },
        updateMatrixWorld: function() {
            var t = new We
              , e = new Ve
              , n = new We
              , i = new We;
            return function(r) {
                if (Vn.prototype.updateMatrixWorld.call(this, r),
                !0 !== this.hasPlaybackControl || !1 !== this.isPlaying) {
                    this.matrixWorld.decompose(t, e, n),
                    i.set(0, 0, 1).applyQuaternion(e);
                    var s = this.panner;
                    if (s.positionX) {
                        var a = this.context.currentTime + this.listener.timeDelta;
                        s.positionX.linearRampToValueAtTime(t.x, a),
                        s.positionY.linearRampToValueAtTime(t.y, a),
                        s.positionZ.linearRampToValueAtTime(t.z, a),
                        s.orientationX.linearRampToValueAtTime(i.x, a),
                        s.orientationY.linearRampToValueAtTime(i.y, a),
                        s.orientationZ.linearRampToValueAtTime(i.z, a)
                    } else
                        s.setPosition(t.x, t.y, t.z),
                        s.setOrientation(i.x, i.y, i.z)
                }
            }
        }()
    }),
    Object.assign(hl.prototype, {
        getFrequencyData: function() {
            return this.analyser.getByteFrequencyData(this.data),
            this.data
        },
        getAverageFrequency: function() {
            for (var t = 0, e = this.getFrequencyData(), n = 0; n < e.length; n++)
                t += e[n];
            return t / e.length
        }
    }),
    Object.assign(ul.prototype, {
        accumulate: function(t, e) {
            var n = this.buffer
              , i = this.valueSize
              , r = t * i + i
              , s = this.cumulativeWeight;
            if (0 === s) {
                for (var a = 0; a !== i; ++a)
                    n[r + a] = n[a];
                s = e
            } else {
                var o = e / (s += e);
                this._mixBufferRegion(n, r, 0, o, i)
            }
            this.cumulativeWeight = s
        },
        apply: function(t) {
            var e = this.valueSize
              , n = this.buffer
              , i = t * e + e
              , r = this.cumulativeWeight
              , s = this.binding;
            if (this.cumulativeWeight = 0,
            r < 1) {
                var a = 3 * e;
                this._mixBufferRegion(n, i, a, 1 - r, e)
            }
            for (var o = e, c = e + e; o !== c; ++o)
                if (n[o] !== n[o + e]) {
                    s.setValue(n, i);
                    break
                }
        },
        saveOriginalState: function() {
            var t = this.binding
              , e = this.buffer
              , n = this.valueSize
              , i = 3 * n;
            t.getValue(e, i);
            for (var r = n, s = i; r !== s; ++r)
                e[r] = e[i + r % n];
            this.cumulativeWeight = 0
        },
        restoreOriginalState: function() {
            var t = 3 * this.valueSize;
            this.binding.setValue(this.buffer, t)
        },
        _select: function(t, e, n, i, r) {
            if (i >= .5)
                for (var s = 0; s !== r; ++s)
                    t[e + s] = t[n + s]
        },
        _slerp: function(t, e, n, i) {
            Ve.slerpFlat(t, e, t, e, t, n, i)
        },
        _lerp: function(t, e, n, i, r) {
            for (var s = 1 - i, a = 0; a !== r; ++a) {
                var o = e + a;
                t[o] = t[o] * s + t[n + a] * i
            }
        }
    });
    var fl, dl, ml, gl, vl, yl, bl, wl, xl, Ml, _l, Sl, Tl, El, kl;
    function Al(t, e, n) {
        var i = n || Ll.parseTrackName(e);
        this._targetGroup = t,
        this._bindings = t.subscribe_(e, i)
    }
    function Ll(t, e, n) {
        this.path = e,
        this.parsedPath = n || Ll.parseTrackName(e),
        this.node = Ll.findNode(t, this.parsedPath.nodeName) || t,
        this.rootNode = t
    }
    function Pl() {
        this.uuid = He.generateUUID(),
        this._objects = Array.prototype.slice.call(arguments),
        this.nCachedObjects_ = 0;
        var t = {};
        this._indicesByUUID = t;
        for (var e = 0, n = arguments.length; e !== n; ++e)
            t[arguments[e].uuid] = e;
        this._paths = [],
        this._parsedPaths = [],
        this._bindings = [],
        this._bindingsIndicesByPath = {};
        var i = this;
        this.stats = {
            objects: {
                get total() {
                    return i._objects.length
                },
                get inUse() {
                    return this.total - i.nCachedObjects_
                }
            },
            get bindingsPerObject() {
                return i._bindings.length
            }
        }
    }
    function Cl(t, e, n) {
        this._mixer = t,
        this._clip = e,
        this._localRoot = n || null;
        for (var i = e.tracks, r = i.length, s = new Array(r), a = {
            endingStart: Se,
            endingEnd: Se
        }, o = 0; o !== r; ++o) {
            var c = i[o].createInterpolant(null);
            s[o] = c,
            c.settings = a
        }
        this._interpolantSettings = a,
        this._interpolants = s,
        this._propertyBindings = new Array(r),
        this._cacheIndex = null,
        this._byClipCacheIndex = null,
        this._timeScaleInterpolant = null,
        this._weightInterpolant = null,
        this.loop = be,
        this._loopCount = -1,
        this._startTime = null,
        this.time = 0,
        this.timeScale = 1,
        this._effectiveTimeScale = 1,
        this.weight = 1,
        this._effectiveWeight = 1,
        this.repetitions = 1 / 0,
        this.paused = !1,
        this.enabled = !0,
        this.clampWhenFinished = !1,
        this.zeroSlopeAtStart = !0,
        this.zeroSlopeAtEnd = !0
    }
    function Rl(t) {
        this._root = t,
        this._initMemoryManager(),
        this._accuIndex = 0,
        this.time = 0,
        this.timeScale = 1
    }
    function Il(t) {
        "string" == typeof t && (console.warn("THREE.Uniform: Type parameter is no longer needed."),
        t = arguments[1]),
        this.value = t
    }
    function Ol(t, e, n) {
        Ds.call(this, t, e),
        this.meshPerAttribute = n || 1
    }
    function Dl(t, e, n, i) {
        this.ray = new Pi(t,e),
        this.near = n || 0,
        this.far = i || 1 / 0,
        this.params = {
            Mesh: {},
            Line: {},
            LOD: {},
            Points: {
                threshold: 1
            },
            Sprite: {}
        },
        Object.defineProperties(this.params, {
            PointCloud: {
                get: function() {
                    return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),
                    this.Points
                }
            }
        })
    }
    function zl(t, e) {
        return t.distance - e.distance
    }
    function Bl(t, e, n, i) {
        if (!1 !== t.visible && (t.raycast(e, n),
        !0 === i))
            for (var r = t.children, s = 0, a = r.length; s < a; s++)
                Bl(r[s], e, n, !0)
    }
    function Nl(t, e, n) {
        return this.radius = void 0 !== t ? t : 1,
        this.phi = void 0 !== e ? e : 0,
        this.theta = void 0 !== n ? n : 0,
        this
    }
    function jl(t, e, n) {
        return this.radius = void 0 !== t ? t : 1,
        this.theta = void 0 !== e ? e : 0,
        this.y = void 0 !== n ? n : 0,
        this
    }
    function Ul(t, e) {
        this.min = void 0 !== t ? t : new Ge(1 / 0,1 / 0),
        this.max = void 0 !== e ? e : new Ge(-1 / 0,-1 / 0)
    }
    function Fl(t, e) {
        this.start = void 0 !== t ? t : new We,
        this.end = void 0 !== e ? e : new We
    }
    function Hl(t) {
        Vn.call(this),
        this.material = t,
        this.render = function() {}
    }
    function Gl(t, e, n, i) {
        this.object = t,
        this.size = void 0 !== e ? e : 1;
        var r = void 0 !== n ? n : 16711680
          , s = void 0 !== i ? i : 1
          , a = 0
          , o = this.object.geometry;
        o && o.isGeometry ? a = 3 * o.faces.length : o && o.isBufferGeometry && (a = o.attributes.normal.count);
        var c = new ci
          , l = new ii(2 * a * 3,3);
        c.addAttribute("position", l),
        Ws.call(this, c, new Gs({
            color: r,
            linewidth: s
        })),
        this.matrixAutoUpdate = !1,
        this.update()
    }
    function Vl(t, e) {
        Vn.call(this),
        this.light = t,
        this.light.updateMatrixWorld(),
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = e;
        for (var n = new ci, i = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], r = 0, s = 1; r < 32; r++,
        s++) {
            var a = r / 32 * Math.PI * 2
              , o = s / 32 * Math.PI * 2;
            i.push(Math.cos(a), Math.sin(a), 1, Math.cos(o), Math.sin(o), 1)
        }
        n.addAttribute("position", new ii(i,3));
        var c = new Gs({
            fog: !1
        });
        this.cone = new Ws(n,c),
        this.add(this.cone),
        this.update()
    }
    function Wl(t) {
        for (var e = function t(e) {
            var n = [];
            e && e.isBone && n.push(e);
            for (var i = 0; i < e.children.length; i++)
                n.push.apply(n, t(e.children[i]));
            return n
        }(t), n = new ci, i = [], r = [], s = new Ln(0,0,1), a = new Ln(0,1,0), o = 0; o < e.length; o++) {
            var c = e[o];
            c.parent && c.parent.isBone && (i.push(0, 0, 0),
            i.push(0, 0, 0),
            r.push(s.r, s.g, s.b),
            r.push(a.r, a.g, a.b))
        }
        n.addAttribute("position", new ii(i,3)),
        n.addAttribute("color", new ii(r,3));
        var l = new Gs({
            vertexColors: T,
            depthTest: !1,
            depthWrite: !1,
            transparent: !0
        });
        Ws.call(this, n, l),
        this.root = t,
        this.bones = e,
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1
    }
    function Yl(t, e, n) {
        this.light = t,
        this.light.updateMatrixWorld(),
        this.color = n;
        var i = new Ka(e,4,2)
          , r = new Ri({
            wireframe: !0,
            fog: !1
        });
        Ii.call(this, i, r),
        this.matrix = this.light.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.update()
    }
    function ql(t, e) {
        this.type = "RectAreaLightHelper",
        this.light = t,
        this.color = e;
        var n = new ci;
        n.addAttribute("position", new ii([1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0],3)),
        n.computeBoundingSphere();
        var i = new Gs({
            fog: !1
        });
        Vs.call(this, n, i);
        var r = new ci;
        r.addAttribute("position", new ii([1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0],3)),
        r.computeBoundingSphere(),
        this.add(new Ii(r,new Ri({
            side: b,
            fog: !1
        }))),
        this.update()
    }
    function Xl(t, e, n) {
        Vn.call(this),
        this.light = t,
        this.light.updateMatrixWorld(),
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = n;
        var i = new oa(e);
        i.rotateY(.5 * Math.PI),
        this.material = new Ri({
            wireframe: !0,
            fog: !1
        }),
        void 0 === this.color && (this.material.vertexColors = T);
        var r = i.getAttribute("position")
          , s = new Float32Array(3 * r.count);
        i.addAttribute("color", new Zn(s,3)),
        this.add(new Ii(i,this.material)),
        this.update()
    }
    function Zl(t, e) {
        this.lightProbe = t,
        this.size = e;
        var n = {
            GAMMA_OUTPUT: ""
        }
          , i = new Li({
            defines: n,
            uniforms: {
                sh: {
                    value: this.lightProbe.sh.coefficients
                },
                intensity: {
                    value: this.lightProbe.intensity
                }
            },
            vertexShader: ["varying vec3 vNormal;", "void main() {", "\tvNormal = normalize( normalMatrix * normal );", "\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
            fragmentShader: ["#define RECIPROCAL_PI 0.318309886", "vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {", "\t// matrix is assumed to be orthogonal", "\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );", "}", "vec3 linearToOutput( in vec3 a ) {", "\t#ifdef GAMMA_OUTPUT", "\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );", "\t#else", "\t\treturn a;", "\t#endif", "}", "// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf", "vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {", "\t// normal is assumed to have unit length", "\tfloat x = normal.x, y = normal.y, z = normal.z;", "\t// band 0", "\tvec3 result = shCoefficients[ 0 ] * 0.886227;", "\t// band 1", "\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;", "\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;", "\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;", "\t// band 2", "\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;", "\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;", "\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );", "\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;", "\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );", "\treturn result;", "}", "uniform vec3 sh[ 9 ]; // sh coefficients", "uniform float intensity; // light probe intensity", "varying vec3 vNormal;", "void main() {", "\tvec3 normal = normalize( vNormal );", "\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );", "\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );", "\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;", "\toutgoingLight = linearToOutput( outgoingLight );", "\tgl_FragColor = vec4( outgoingLight, 1.0 );", "}"].join("\n")
        })
          , r = new Ka(1,32,16);
        Ii.call(this, r, i),
        this.onBeforeRender()
    }
    function Kl(t, e, n, i) {
        t = t || 10,
        e = e || 10,
        n = new Ln(void 0 !== n ? n : 4473924),
        i = new Ln(void 0 !== i ? i : 8947848);
        for (var r = e / 2, s = t / e, a = t / 2, o = [], c = [], l = 0, p = 0, h = -a; l <= e; l++,
        h += s) {
            o.push(-a, 0, h, a, 0, h),
            o.push(h, 0, -a, h, 0, a);
            var u = l === r ? n : i;
            u.toArray(c, p),
            p += 3,
            u.toArray(c, p),
            p += 3,
            u.toArray(c, p),
            p += 3,
            u.toArray(c, p),
            p += 3
        }
        var f = new ci;
        f.addAttribute("position", new ii(o,3)),
        f.addAttribute("color", new ii(c,3));
        var d = new Gs({
            vertexColors: T
        });
        Ws.call(this, f, d)
    }
    function Jl(t, e, n, i, r, s) {
        t = t || 10,
        e = e || 16,
        n = n || 8,
        i = i || 64,
        r = new Ln(void 0 !== r ? r : 4473924),
        s = new Ln(void 0 !== s ? s : 8947848);
        var a, o, c, l, p, h, u, f = [], d = [];
        for (l = 0; l <= e; l++)
            c = l / e * (2 * Math.PI),
            a = Math.sin(c) * t,
            o = Math.cos(c) * t,
            f.push(0, 0, 0),
            f.push(a, 0, o),
            u = 1 & l ? r : s,
            d.push(u.r, u.g, u.b),
            d.push(u.r, u.g, u.b);
        for (l = 0; l <= n; l++)
            for (u = 1 & l ? r : s,
            h = t - t / n * l,
            p = 0; p < i; p++)
                c = p / i * (2 * Math.PI),
                a = Math.sin(c) * h,
                o = Math.cos(c) * h,
                f.push(a, 0, o),
                d.push(u.r, u.g, u.b),
                c = (p + 1) / i * (2 * Math.PI),
                a = Math.sin(c) * h,
                o = Math.cos(c) * h,
                f.push(a, 0, o),
                d.push(u.r, u.g, u.b);
        var m = new ci;
        m.addAttribute("position", new ii(f,3)),
        m.addAttribute("color", new ii(d,3));
        var g = new Gs({
            vertexColors: T
        });
        Ws.call(this, m, g)
    }
    function $l(t, e, n, i) {
        this.audio = t,
        this.range = e || 1,
        this.divisionsInnerAngle = n || 16,
        this.divisionsOuterAngle = i || 2;
        var r = new ci
          , s = this.divisionsInnerAngle + 2 * this.divisionsOuterAngle
          , a = new Float32Array(3 * (3 * s + 3));
        r.addAttribute("position", new Zn(a,3));
        var o = new Gs({
            color: 65280
        })
          , c = new Gs({
            color: 16776960
        });
        Vs.call(this, r, [c, o]),
        this.update()
    }
    function Ql(t, e, n, i) {
        this.object = t,
        this.size = void 0 !== e ? e : 1;
        var r = void 0 !== n ? n : 16776960
          , s = void 0 !== i ? i : 1
          , a = 0
          , o = this.object.geometry;
        o && o.isGeometry ? a = o.faces.length : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
        var c = new ci
          , l = new ii(2 * a * 3,3);
        c.addAttribute("position", l),
        Ws.call(this, c, new Gs({
            color: r,
            linewidth: s
        })),
        this.matrixAutoUpdate = !1,
        this.update()
    }
    function tp(t, e, n) {
        Vn.call(this),
        this.light = t,
        this.light.updateMatrixWorld(),
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = n,
        void 0 === e && (e = 1);
        var i = new ci;
        i.addAttribute("position", new ii([-e, e, 0, e, e, 0, e, -e, 0, -e, -e, 0, -e, e, 0],3));
        var r = new Gs({
            fog: !1
        });
        this.lightPlane = new Vs(i,r),
        this.add(this.lightPlane),
        (i = new ci).addAttribute("position", new ii([0, 0, 0, 0, 0, 1],3)),
        this.targetLine = new Vs(i,r),
        this.add(this.targetLine),
        this.update()
    }
    function ep(t) {
        var e = new ci
          , n = new Gs({
            color: 16777215,
            vertexColors: S
        })
          , i = []
          , r = []
          , s = {}
          , a = new Ln(16755200)
          , o = new Ln(16711680)
          , c = new Ln(43775)
          , l = new Ln(16777215)
          , p = new Ln(3355443);
        function h(t, e, n) {
            u(t, n),
            u(e, n)
        }
        function u(t, e) {
            i.push(0, 0, 0),
            r.push(e.r, e.g, e.b),
            void 0 === s[t] && (s[t] = []),
            s[t].push(i.length / 3 - 1)
        }
        h("n1", "n2", a),
        h("n2", "n4", a),
        h("n4", "n3", a),
        h("n3", "n1", a),
        h("f1", "f2", a),
        h("f2", "f4", a),
        h("f4", "f3", a),
        h("f3", "f1", a),
        h("n1", "f1", a),
        h("n2", "f2", a),
        h("n3", "f3", a),
        h("n4", "f4", a),
        h("p", "n1", o),
        h("p", "n2", o),
        h("p", "n3", o),
        h("p", "n4", o),
        h("u1", "u2", c),
        h("u2", "u3", c),
        h("u3", "u1", c),
        h("c", "t", l),
        h("p", "c", p),
        h("cn1", "cn2", p),
        h("cn3", "cn4", p),
        h("cf1", "cf2", p),
        h("cf3", "cf4", p),
        e.addAttribute("position", new ii(i,3)),
        e.addAttribute("color", new ii(r,3)),
        Ws.call(this, e, n),
        this.camera = t,
        this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(),
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.pointMap = s,
        this.update()
    }
    function np(t, e) {
        this.object = t,
        void 0 === e && (e = 16776960);
        var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
          , i = new Float32Array(24)
          , r = new ci;
        r.setIndex(new Zn(n,1)),
        r.addAttribute("position", new Zn(i,3)),
        Ws.call(this, r, new Gs({
            color: e
        })),
        this.matrixAutoUpdate = !1,
        this.update()
    }
    function ip(t, e) {
        this.type = "Box3Helper",
        this.box = t;
        var n = void 0 !== e ? e : 16776960
          , i = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
          , r = new ci;
        r.setIndex(new Zn(i,1)),
        r.addAttribute("position", new ii([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1],3)),
        Ws.call(this, r, new Gs({
            color: n
        })),
        this.geometry.computeBoundingSphere()
    }
    function rp(t, e, n) {
        this.type = "PlaneHelper",
        this.plane = t,
        this.size = void 0 === e ? 1 : e;
        var i = void 0 !== n ? n : 16776960
          , r = new ci;
        r.addAttribute("position", new ii([1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0],3)),
        r.computeBoundingSphere(),
        Vs.call(this, r, new Gs({
            color: i
        }));
        var s = new ci;
        s.addAttribute("position", new ii([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1],3)),
        s.computeBoundingSphere(),
        this.add(new Ii(s,new Ri({
            color: i,
            opacity: .2,
            transparent: !0,
            depthWrite: !1
        })))
    }
    function sp(t, e, n, i, r, s) {
        Vn.call(this),
        void 0 === t && (t = new We(0,0,1)),
        void 0 === e && (e = new We(0,0,0)),
        void 0 === n && (n = 1),
        void 0 === i && (i = 16776960),
        void 0 === r && (r = .2 * n),
        void 0 === s && (s = .2 * r),
        void 0 === Sl && ((Sl = new ci).addAttribute("position", new ii([0, 0, 0, 0, 1, 0],3)),
        (Tl = new ao(0,.5,1,5,1)).translate(0, -.5, 0)),
        this.position.copy(e),
        this.line = new Vs(Sl,new Gs({
            color: i
        })),
        this.line.matrixAutoUpdate = !1,
        this.add(this.line),
        this.cone = new Ii(Tl,new Ri({
            color: i
        })),
        this.cone.matrixAutoUpdate = !1,
        this.add(this.cone),
        this.setDirection(t),
        this.setLength(n, r, s)
    }
    function ap(t) {
        var e = [0, 0, 0, t = t || 1, 0, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, 0, t]
          , n = new ci;
        n.addAttribute("position", new ii(e,3)),
        n.addAttribute("color", new ii([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1],3));
        var i = new Gs({
            vertexColors: T
        });
        Ws.call(this, n, i)
    }
    function op(t, e, n, i, r, s, a) {
        return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),
        new Dn(t,e,n,r,s,a)
    }
    Object.assign(Al.prototype, {
        getValue: function(t, e) {
            this.bind();
            var n = this._targetGroup.nCachedObjects_
              , i = this._bindings[n];
            void 0 !== i && i.getValue(t, e)
        },
        setValue: function(t, e) {
            for (var n = this._bindings, i = this._targetGroup.nCachedObjects_, r = n.length; i !== r; ++i)
                n[i].setValue(t, e)
        },
        bind: function() {
            for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, n = t.length; e !== n; ++e)
                t[e].bind()
        },
        unbind: function() {
            for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, n = t.length; e !== n; ++e)
                t[e].unbind()
        }
    }),
    Object.assign(Ll, {
        Composite: Al,
        create: function(t, e, n) {
            return t && t.isAnimationObjectGroup ? new Ll.Composite(t,e,n) : new Ll(t,e,n)
        },
        sanitizeNodeName: (xl = new RegExp("[\\[\\]\\.:\\/]","g"),
        function(t) {
            return t.replace(/\s/g, "_").replace(xl, "")
        }
        ),
        parseTrackName: (fl = "[^\\[\\]\\.:\\/]",
        dl = "[^" + "\\[\\]\\.:\\/".replace("\\.", "") + "]",
        ml = /((?:WC+[\/:])*)/.source.replace("WC", fl),
        gl = /(WCOD+)?/.source.replace("WCOD", dl),
        vl = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", fl),
        yl = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", fl),
        bl = new RegExp("^" + ml + gl + vl + yl + "$"),
        wl = ["material", "materials", "bones"],
        function(t) {
            var e = bl.exec(t);
            if (!e)
                throw new Error("PropertyBinding: Cannot parse trackName: " + t);
            var n = {
                nodeName: e[2],
                objectName: e[3],
                objectIndex: e[4],
                propertyName: e[5],
                propertyIndex: e[6]
            }
              , i = n.nodeName && n.nodeName.lastIndexOf(".");
            if (void 0 !== i && -1 !== i) {
                var r = n.nodeName.substring(i + 1);
                -1 !== wl.indexOf(r) && (n.nodeName = n.nodeName.substring(0, i),
                n.objectName = r)
            }
            if (null === n.propertyName || 0 === n.propertyName.length)
                throw new Error("PropertyBinding: can not parse propertyName from trackName: " + t);
            return n
        }
        ),
        findNode: function(t, e) {
            if (!e || "" === e || "root" === e || "." === e || -1 === e || e === t.name || e === t.uuid)
                return t;
            if (t.skeleton) {
                var n = t.skeleton.getBoneByName(e);
                if (void 0 !== n)
                    return n
            }
            if (t.children) {
                var i = function(t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        if (r.name === e || r.uuid === e)
                            return r;
                        var s = i(r.children);
                        if (s)
                            return s
                    }
                    return null
                }
                  , r = i(t.children);
                if (r)
                    return r
            }
            return null
        }
    }),
    Object.assign(Ll.prototype, {
        _getValue_unavailable: function() {},
        _setValue_unavailable: function() {},
        BindingType: {
            Direct: 0,
            EntireArray: 1,
            ArrayElement: 2,
            HasFromToArray: 3
        },
        Versioning: {
            None: 0,
            NeedsUpdate: 1,
            MatrixWorldNeedsUpdate: 2
        },
        GetterByBindingType: [function(t, e) {
            t[e] = this.node[this.propertyName]
        }
        , function(t, e) {
            for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i)
                t[e++] = n[i]
        }
        , function(t, e) {
            t[e] = this.resolvedProperty[this.propertyIndex]
        }
        , function(t, e) {
            this.resolvedProperty.toArray(t, e)
        }
        ],
        SetterByBindingTypeAndVersioning: [[function(t, e) {
            this.targetObject[this.propertyName] = t[e]
        }
        , function(t, e) {
            this.targetObject[this.propertyName] = t[e],
            this.targetObject.needsUpdate = !0
        }
        , function(t, e) {
            this.targetObject[this.propertyName] = t[e],
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ], [function(t, e) {
            for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i)
                n[i] = t[e++]
        }
        , function(t, e) {
            for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i)
                n[i] = t[e++];
            this.targetObject.needsUpdate = !0
        }
        , function(t, e) {
            for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i)
                n[i] = t[e++];
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ], [function(t, e) {
            this.resolvedProperty[this.propertyIndex] = t[e]
        }
        , function(t, e) {
            this.resolvedProperty[this.propertyIndex] = t[e],
            this.targetObject.needsUpdate = !0
        }
        , function(t, e) {
            this.resolvedProperty[this.propertyIndex] = t[e],
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ], [function(t, e) {
            this.resolvedProperty.fromArray(t, e)
        }
        , function(t, e) {
            this.resolvedProperty.fromArray(t, e),
            this.targetObject.needsUpdate = !0
        }
        , function(t, e) {
            this.resolvedProperty.fromArray(t, e),
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ]],
        getValue: function(t, e) {
            this.bind(),
            this.getValue(t, e)
        },
        setValue: function(t, e) {
            this.bind(),
            this.setValue(t, e)
        },
        bind: function() {
            var t = this.node
              , e = this.parsedPath
              , n = e.objectName
              , i = e.propertyName
              , r = e.propertyIndex;
            if (t || (t = Ll.findNode(this.rootNode, e.nodeName) || this.rootNode,
            this.node = t),
            this.getValue = this._getValue_unavailable,
            this.setValue = this._setValue_unavailable,
            t) {
                if (n) {
                    var s = e.objectIndex;
                    switch (n) {
                    case "materials":
                        if (!t.material)
                            return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                        if (!t.material.materials)
                            return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                        t = t.material.materials;
                        break;
                    case "bones":
                        if (!t.skeleton)
                            return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                        t = t.skeleton.bones;
                        for (var a = 0; a < t.length; a++)
                            if (t[a].name === s) {
                                s = a;
                                break
                            }
                        break;
                    default:
                        if (void 0 === t[n])
                            return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                        t = t[n]
                    }
                    if (void 0 !== s) {
                        if (void 0 === t[s])
                            return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, t);
                        t = t[s]
                    }
                }
                var o = t[i];
                if (void 0 !== o) {
                    var c = this.Versioning.None;
                    this.targetObject = t,
                    void 0 !== t.needsUpdate ? c = this.Versioning.NeedsUpdate : void 0 !== t.matrixWorldNeedsUpdate && (c = this.Versioning.MatrixWorldNeedsUpdate);
                    var l = this.BindingType.Direct;
                    if (void 0 !== r) {
                        if ("morphTargetInfluences" === i) {
                            if (!t.geometry)
                                return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                            if (t.geometry.isBufferGeometry) {
                                if (!t.geometry.morphAttributes)
                                    return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                                for (a = 0; a < this.node.geometry.morphAttributes.position.length; a++)
                                    if (t.geometry.morphAttributes.position[a].name === r) {
                                        r = a;
                                        break
                                    }
                            } else {
                                if (!t.geometry.morphTargets)
                                    return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.", this);
                                for (a = 0; a < this.node.geometry.morphTargets.length; a++)
                                    if (t.geometry.morphTargets[a].name === r) {
                                        r = a;
                                        break
                                    }
                            }
                        }
                        l = this.BindingType.ArrayElement,
                        this.resolvedProperty = o,
                        this.propertyIndex = r
                    } else
                        void 0 !== o.fromArray && void 0 !== o.toArray ? (l = this.BindingType.HasFromToArray,
                        this.resolvedProperty = o) : Array.isArray(o) ? (l = this.BindingType.EntireArray,
                        this.resolvedProperty = o) : this.propertyName = i;
                    this.getValue = this.GetterByBindingType[l],
                    this.setValue = this.SetterByBindingTypeAndVersioning[l][c]
                } else {
                    var p = e.nodeName;
                    console.error("THREE.PropertyBinding: Trying to update property for track: " + p + "." + i + " but it wasn't found.", t)
                }
            } else
                console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.")
        },
        unbind: function() {
            this.node = null,
            this.getValue = this._getValue_unbound,
            this.setValue = this._setValue_unbound
        }
    }),
    //!\ DECLARE ALIAS AFTER assign prototype !
    Object.assign(Ll.prototype, {
        _getValue_unbound: Ll.prototype.getValue,
        _setValue_unbound: Ll.prototype.setValue
    }),
    Object.assign(Pl.prototype, {
        isAnimationObjectGroup: !0,
        add: function() {
            for (var t = this._objects, e = t.length, n = this.nCachedObjects_, i = this._indicesByUUID, r = this._paths, s = this._parsedPaths, a = this._bindings, o = a.length, c = void 0, l = 0, p = arguments.length; l !== p; ++l) {
                var h = arguments[l]
                  , u = h.uuid
                  , f = i[u];
                if (void 0 === f) {
                    f = e++,
                    i[u] = f,
                    t.push(h);
                    for (var d = 0, m = o; d !== m; ++d)
                        a[d].push(new Ll(h,r[d],s[d]))
                } else if (f < n) {
                    c = t[f];
                    var g = --n
                      , v = t[g];
                    i[v.uuid] = f,
                    t[f] = v,
                    i[u] = g,
                    t[g] = h;
                    for (d = 0,
                    m = o; d !== m; ++d) {
                        var y = a[d]
                          , b = y[g]
                          , w = y[f];
                        y[f] = b,
                        void 0 === w && (w = new Ll(h,r[d],s[d])),
                        y[g] = w
                    }
                } else
                    t[f] !== c && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")
            }
            this.nCachedObjects_ = n
        },
        remove: function() {
            for (var t = this._objects, e = this.nCachedObjects_, n = this._indicesByUUID, i = this._bindings, r = i.length, s = 0, a = arguments.length; s !== a; ++s) {
                var o = arguments[s]
                  , c = o.uuid
                  , l = n[c];
                if (void 0 !== l && l >= e) {
                    var p = e++
                      , h = t[p];
                    n[h.uuid] = l,
                    t[l] = h,
                    n[c] = p,
                    t[p] = o;
                    for (var u = 0, f = r; u !== f; ++u) {
                        var d = i[u]
                          , m = d[p]
                          , g = d[l];
                        d[l] = m,
                        d[p] = g
                    }
                }
            }
            this.nCachedObjects_ = e
        },
        uncache: function() {
            for (var t = this._objects, e = t.length, n = this.nCachedObjects_, i = this._indicesByUUID, r = this._bindings, s = r.length, a = 0, o = arguments.length; a !== o; ++a) {
                var c = arguments[a].uuid
                  , l = i[c];
                if (void 0 !== l)
                    if (delete i[c],
                    l < n) {
                        var p = --n
                          , h = t[p]
                          , u = t[v = --e];
                        i[h.uuid] = l,
                        t[l] = h,
                        i[u.uuid] = p,
                        t[p] = u,
                        t.pop();
                        for (var f = 0, d = s; f !== d; ++f) {
                            var m = (y = r[f])[p]
                              , g = y[v];
                            y[l] = m,
                            y[p] = g,
                            y.pop()
                        }
                    } else {
                        var v;
                        i[(u = t[v = --e]).uuid] = l,
                        t[l] = u,
                        t.pop();
                        for (f = 0,
                        d = s; f !== d; ++f) {
                            var y;
                            (y = r[f])[l] = y[v],
                            y.pop()
                        }
                    }
            }
            this.nCachedObjects_ = n
        },
        subscribe_: function(t, e) {
            var n = this._bindingsIndicesByPath
              , i = n[t]
              , r = this._bindings;
            if (void 0 !== i)
                return r[i];
            var s = this._paths
              , a = this._parsedPaths
              , o = this._objects
              , c = o.length
              , l = this.nCachedObjects_
              , p = new Array(c);
            i = r.length,
            n[t] = i,
            s.push(t),
            a.push(e),
            r.push(p);
            for (var h = l, u = o.length; h !== u; ++h) {
                var f = o[h];
                p[h] = new Ll(f,t,e)
            }
            return p
        },
        unsubscribe_: function(t) {
            var e = this._bindingsIndicesByPath
              , n = e[t];
            if (void 0 !== n) {
                var i = this._paths
                  , r = this._parsedPaths
                  , s = this._bindings
                  , a = s.length - 1
                  , o = s[a];
                e[t[a]] = n,
                s[n] = o,
                s.pop(),
                r[n] = r[a],
                r.pop(),
                i[n] = i[a],
                i.pop()
            }
        }
    }),
    Object.assign(Cl.prototype, {
        play: function() {
            return this._mixer._activateAction(this),
            this
        },
        stop: function() {
            return this._mixer._deactivateAction(this),
            this.reset()
        },
        reset: function() {
            return this.paused = !1,
            this.enabled = !0,
            this.time = 0,
            this._loopCount = -1,
            this._startTime = null,
            this.stopFading().stopWarping()
        },
        isRunning: function() {
            return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
        },
        isScheduled: function() {
            return this._mixer._isActiveAction(this)
        },
        startAt: function(t) {
            return this._startTime = t,
            this
        },
        setLoop: function(t, e) {
            return this.loop = t,
            this.repetitions = e,
            this
        },
        setEffectiveWeight: function(t) {
            return this.weight = t,
            this._effectiveWeight = this.enabled ? t : 0,
            this.stopFading()
        },
        getEffectiveWeight: function() {
            return this._effectiveWeight
        },
        fadeIn: function(t) {
            return this._scheduleFading(t, 0, 1)
        },
        fadeOut: function(t) {
            return this._scheduleFading(t, 1, 0)
        },
        crossFadeFrom: function(t, e, n) {
            if (t.fadeOut(e),
            this.fadeIn(e),
            n) {
                var i = this._clip.duration
                  , r = t._clip.duration
                  , s = r / i
                  , a = i / r;
                t.warp(1, s, e),
                this.warp(a, 1, e)
            }
            return this
        },
        crossFadeTo: function(t, e, n) {
            return t.crossFadeFrom(this, e, n)
        },
        stopFading: function() {
            var t = this._weightInterpolant;
            return null !== t && (this._weightInterpolant = null,
            this._mixer._takeBackControlInterpolant(t)),
            this
        },
        setEffectiveTimeScale: function(t) {
            return this.timeScale = t,
            this._effectiveTimeScale = this.paused ? 0 : t,
            this.stopWarping()
        },
        getEffectiveTimeScale: function() {
            return this._effectiveTimeScale
        },
        setDuration: function(t) {
            return this.timeScale = this._clip.duration / t,
            this.stopWarping()
        },
        syncWith: function(t) {
            return this.time = t.time,
            this.timeScale = t.timeScale,
            this.stopWarping()
        },
        halt: function(t) {
            return this.warp(this._effectiveTimeScale, 0, t)
        },
        warp: function(t, e, n) {
            var i = this._mixer
              , r = i.time
              , s = this._timeScaleInterpolant
              , a = this.timeScale;
            null === s && (s = i._lendControlInterpolant(),
            this._timeScaleInterpolant = s);
            var o = s.parameterPositions
              , c = s.sampleValues;
            return o[0] = r,
            o[1] = r + n,
            c[0] = t / a,
            c[1] = e / a,
            this
        },
        stopWarping: function() {
            var t = this._timeScaleInterpolant;
            return null !== t && (this._timeScaleInterpolant = null,
            this._mixer._takeBackControlInterpolant(t)),
            this
        },
        getMixer: function() {
            return this._mixer
        },
        getClip: function() {
            return this._clip
        },
        getRoot: function() {
            return this._localRoot || this._mixer._root
        },
        _update: function(t, e, n, i) {
            if (this.enabled) {
                var r = this._startTime;
                if (null !== r) {
                    var s = (t - r) * n;
                    if (s < 0 || 0 === n)
                        return;
                    this._startTime = null,
                    e = n * s
                }
                e *= this._updateTimeScale(t);
                var a = this._updateTime(e)
                  , o = this._updateWeight(t);
                if (o > 0)
                    for (var c = this._interpolants, l = this._propertyBindings, p = 0, h = c.length; p !== h; ++p)
                        c[p].evaluate(a),
                        l[p].accumulate(i, o)
            } else
                this._updateWeight(t)
        },
        _updateWeight: function(t) {
            var e = 0;
            if (this.enabled) {
                e = this.weight;
                var n = this._weightInterpolant;
                if (null !== n) {
                    var i = n.evaluate(t)[0];
                    e *= i,
                    t > n.parameterPositions[1] && (this.stopFading(),
                    0 === i && (this.enabled = !1))
                }
            }
            return this._effectiveWeight = e,
            e
        },
        _updateTimeScale: function(t) {
            var e = 0;
            if (!this.paused) {
                e = this.timeScale;
                var n = this._timeScaleInterpolant;
                if (null !== n)
                    e *= n.evaluate(t)[0],
                    t > n.parameterPositions[1] && (this.stopWarping(),
                    0 === e ? this.paused = !0 : this.timeScale = e)
            }
            return this._effectiveTimeScale = e,
            e
        },
        _updateTime: function(t) {
            var e = this.time + t
              , n = this._clip.duration
              , i = this.loop
              , r = this._loopCount
              , s = i === we;
            if (0 === t)
                return -1 === r ? e : s && 1 == (1 & r) ? n - e : e;
            if (i === ye) {
                -1 === r && (this._loopCount = 0,
                this._setEndings(!0, !0, !1));
                t: {
                    if (e >= n)
                        e = n;
                    else {
                        if (!(e < 0)) {
                            this.time = e;
                            break t
                        }
                        e = 0
                    }
                    this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                    this.time = e,
                    this._mixer.dispatchEvent({
                        type: "finished",
                        action: this,
                        direction: t < 0 ? -1 : 1
                    })
                }
            } else {
                if (-1 === r && (t >= 0 ? (r = 0,
                this._setEndings(!0, 0 === this.repetitions, s)) : this._setEndings(0 === this.repetitions, !0, s)),
                e >= n || e < 0) {
                    var a = Math.floor(e / n);
                    e -= n * a,
                    r += Math.abs(a);
                    var o = this.repetitions - r;
                    if (o <= 0)
                        this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                        e = t > 0 ? n : 0,
                        this.time = e,
                        this._mixer.dispatchEvent({
                            type: "finished",
                            action: this,
                            direction: t > 0 ? 1 : -1
                        });
                    else {
                        if (1 === o) {
                            var c = t < 0;
                            this._setEndings(c, !c, s)
                        } else
                            this._setEndings(!1, !1, s);
                        this._loopCount = r,
                        this.time = e,
                        this._mixer.dispatchEvent({
                            type: "loop",
                            action: this,
                            loopDelta: a
                        })
                    }
                } else
                    this.time = e;
                if (s && 1 == (1 & r))
                    return n - e
            }
            return e
        },
        _setEndings: function(t, e, n) {
            var i = this._interpolantSettings;
            n ? (i.endingStart = Te,
            i.endingEnd = Te) : (i.endingStart = t ? this.zeroSlopeAtStart ? Te : Se : Ee,
            i.endingEnd = e ? this.zeroSlopeAtEnd ? Te : Se : Ee)
        },
        _scheduleFading: function(t, e, n) {
            var i = this._mixer
              , r = i.time
              , s = this._weightInterpolant;
            null === s && (s = i._lendControlInterpolant(),
            this._weightInterpolant = s);
            var a = s.parameterPositions
              , o = s.sampleValues;
            return a[0] = r,
            o[0] = e,
            a[1] = r + t,
            o[1] = n,
            this
        }
    }),
    Rl.prototype = Object.assign(Object.create(i.prototype), {
        constructor: Rl,
        _bindAction: function(t, e) {
            var n = t._localRoot || this._root
              , i = t._clip.tracks
              , r = i.length
              , s = t._propertyBindings
              , a = t._interpolants
              , o = n.uuid
              , c = this._bindingsByRootAndName
              , l = c[o];
            void 0 === l && (l = {},
            c[o] = l);
            for (var p = 0; p !== r; ++p) {
                var h = i[p]
                  , u = h.name
                  , f = l[u];
                if (void 0 !== f)
                    s[p] = f;
                else {
                    if (void 0 !== (f = s[p])) {
                        null === f._cacheIndex && (++f.referenceCount,
                        this._addInactiveBinding(f, o, u));
                        continue
                    }
                    var d = e && e._propertyBindings[p].binding.parsedPath;
                    ++(f = new ul(Ll.create(n, u, d),h.ValueTypeName,h.getValueSize())).referenceCount,
                    this._addInactiveBinding(f, o, u),
                    s[p] = f
                }
                a[p].resultBuffer = f.buffer
            }
        },
        _activateAction: function(t) {
            if (!this._isActiveAction(t)) {
                if (null === t._cacheIndex) {
                    var e = (t._localRoot || this._root).uuid
                      , n = t._clip.uuid
                      , i = this._actionsByClip[n];
                    this._bindAction(t, i && i.knownActions[0]),
                    this._addInactiveAction(t, n, e)
                }
                for (var r = t._propertyBindings, s = 0, a = r.length; s !== a; ++s) {
                    var o = r[s];
                    0 == o.useCount++ && (this._lendBinding(o),
                    o.saveOriginalState())
                }
                this._lendAction(t)
            }
        },
        _deactivateAction: function(t) {
            if (this._isActiveAction(t)) {
                for (var e = t._propertyBindings, n = 0, i = e.length; n !== i; ++n) {
                    var r = e[n];
                    0 == --r.useCount && (r.restoreOriginalState(),
                    this._takeBackBinding(r))
                }
                this._takeBackAction(t)
            }
        },
        _initMemoryManager: function() {
            this._actions = [],
            this._nActiveActions = 0,
            this._actionsByClip = {},
            this._bindings = [],
            this._nActiveBindings = 0,
            this._bindingsByRootAndName = {},
            this._controlInterpolants = [],
            this._nActiveControlInterpolants = 0;
            var t = this;
            this.stats = {
                actions: {
                    get total() {
                        return t._actions.length
                    },
                    get inUse() {
                        return t._nActiveActions
                    }
                },
                bindings: {
                    get total() {
                        return t._bindings.length
                    },
                    get inUse() {
                        return t._nActiveBindings
                    }
                },
                controlInterpolants: {
                    get total() {
                        return t._controlInterpolants.length
                    },
                    get inUse() {
                        return t._nActiveControlInterpolants
                    }
                }
            }
        },
        _isActiveAction: function(t) {
            var e = t._cacheIndex;
            return null !== e && e < this._nActiveActions
        },
        _addInactiveAction: function(t, e, n) {
            var i = this._actions
              , r = this._actionsByClip
              , s = r[e];
            if (void 0 === s)
                s = {
                    knownActions: [t],
                    actionByRoot: {}
                },
                t._byClipCacheIndex = 0,
                r[e] = s;
            else {
                var a = s.knownActions;
                t._byClipCacheIndex = a.length,
                a.push(t)
            }
            t._cacheIndex = i.length,
            i.push(t),
            s.actionByRoot[n] = t
        },
        _removeInactiveAction: function(t) {
            var e = this._actions
              , n = e[e.length - 1]
              , i = t._cacheIndex;
            n._cacheIndex = i,
            e[i] = n,
            e.pop(),
            t._cacheIndex = null;
            var r = t._clip.uuid
              , s = this._actionsByClip
              , a = s[r]
              , o = a.knownActions
              , c = o[o.length - 1]
              , l = t._byClipCacheIndex;
            c._byClipCacheIndex = l,
            o[l] = c,
            o.pop(),
            t._byClipCacheIndex = null,
            delete a.actionByRoot[(t._localRoot || this._root).uuid],
            0 === o.length && delete s[r],
            this._removeInactiveBindingsForAction(t)
        },
        _removeInactiveBindingsForAction: function(t) {
            for (var e = t._propertyBindings, n = 0, i = e.length; n !== i; ++n) {
                var r = e[n];
                0 == --r.referenceCount && this._removeInactiveBinding(r)
            }
        },
        _lendAction: function(t) {
            var e = this._actions
              , n = t._cacheIndex
              , i = this._nActiveActions++
              , r = e[i];
            t._cacheIndex = i,
            e[i] = t,
            r._cacheIndex = n,
            e[n] = r
        },
        _takeBackAction: function(t) {
            var e = this._actions
              , n = t._cacheIndex
              , i = --this._nActiveActions
              , r = e[i];
            t._cacheIndex = i,
            e[i] = t,
            r._cacheIndex = n,
            e[n] = r
        },
        _addInactiveBinding: function(t, e, n) {
            var i = this._bindingsByRootAndName
              , r = i[e]
              , s = this._bindings;
            void 0 === r && (r = {},
            i[e] = r),
            r[n] = t,
            t._cacheIndex = s.length,
            s.push(t)
        },
        _removeInactiveBinding: function(t) {
            var e = this._bindings
              , n = t.binding
              , i = n.rootNode.uuid
              , r = n.path
              , s = this._bindingsByRootAndName
              , a = s[i]
              , o = e[e.length - 1]
              , c = t._cacheIndex;
            o._cacheIndex = c,
            e[c] = o,
            e.pop(),
            delete a[r];
            t: {
                for (var l in a)
                    break t;
                delete s[i]
            }
        },
        _lendBinding: function(t) {
            var e = this._bindings
              , n = t._cacheIndex
              , i = this._nActiveBindings++
              , r = e[i];
            t._cacheIndex = i,
            e[i] = t,
            r._cacheIndex = n,
            e[n] = r
        },
        _takeBackBinding: function(t) {
            var e = this._bindings
              , n = t._cacheIndex
              , i = --this._nActiveBindings
              , r = e[i];
            t._cacheIndex = i,
            e[i] = t,
            r._cacheIndex = n,
            e[n] = r
        },
        _lendControlInterpolant: function() {
            var t = this._controlInterpolants
              , e = this._nActiveControlInterpolants++
              , n = t[e];
            return void 0 === n && ((n = new ko(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex = e,
            t[e] = n),
            n
        },
        _takeBackControlInterpolant: function(t) {
            var e = this._controlInterpolants
              , n = t.__cacheIndex
              , i = --this._nActiveControlInterpolants
              , r = e[i];
            t.__cacheIndex = i,
            e[i] = t,
            r.__cacheIndex = n,
            e[n] = r
        },
        _controlInterpolantsResultBuffer: new Float32Array(1),
        clipAction: function(t, e) {
            var n = e || this._root
              , i = n.uuid
              , r = "string" == typeof t ? Bo.findByName(n, t) : t
              , s = null !== r ? r.uuid : t
              , a = this._actionsByClip[s]
              , o = null;
            if (void 0 !== a) {
                var c = a.actionByRoot[i];
                if (void 0 !== c)
                    return c;
                o = a.knownActions[0],
                null === r && (r = o._clip)
            }
            if (null === r)
                return null;
            var l = new Cl(this,r,e);
            return this._bindAction(l, o),
            this._addInactiveAction(l, s, i),
            l
        },
        existingAction: function(t, e) {
            var n = e || this._root
              , i = n.uuid
              , r = "string" == typeof t ? Bo.findByName(n, t) : t
              , s = r ? r.uuid : t
              , a = this._actionsByClip[s];
            return void 0 !== a && a.actionByRoot[i] || null
        },
        stopAllAction: function() {
            var t = this._actions
              , e = this._nActiveActions
              , n = this._bindings
              , i = this._nActiveBindings;
            this._nActiveActions = 0,
            this._nActiveBindings = 0;
            for (var r = 0; r !== e; ++r)
                t[r].reset();
            for (r = 0; r !== i; ++r)
                n[r].useCount = 0;
            return this
        },
        update: function(t) {
            t *= this.timeScale;
            for (var e = this._actions, n = this._nActiveActions, i = this.time += t, r = Math.sign(t), s = this._accuIndex ^= 1, a = 0; a !== n; ++a) {
                e[a]._update(i, t, r, s)
            }
            var o = this._bindings
              , c = this._nActiveBindings;
            for (a = 0; a !== c; ++a)
                o[a].apply(s);
            return this
        },
        getRoot: function() {
            return this._root
        },
        uncacheClip: function(t) {
            var e = this._actions
              , n = t.uuid
              , i = this._actionsByClip
              , r = i[n];
            if (void 0 !== r) {
                for (var s = r.knownActions, a = 0, o = s.length; a !== o; ++a) {
                    var c = s[a];
                    this._deactivateAction(c);
                    var l = c._cacheIndex
                      , p = e[e.length - 1];
                    c._cacheIndex = null,
                    c._byClipCacheIndex = null,
                    p._cacheIndex = l,
                    e[l] = p,
                    e.pop(),
                    this._removeInactiveBindingsForAction(c)
                }
                delete i[n]
            }
        },
        uncacheRoot: function(t) {
            var e = t.uuid
              , n = this._actionsByClip;
            for (var i in n) {
                var r = n[i].actionByRoot[e];
                void 0 !== r && (this._deactivateAction(r),
                this._removeInactiveAction(r))
            }
            var s = this._bindingsByRootAndName[e];
            if (void 0 !== s)
                for (var a in s) {
                    var o = s[a];
                    o.restoreOriginalState(),
                    this._removeInactiveBinding(o)
                }
        },
        uncacheAction: function(t, e) {
            var n = this.existingAction(t, e);
            null !== n && (this._deactivateAction(n),
            this._removeInactiveAction(n))
        }
    }),
    Il.prototype.clone = function() {
        return new Il(void 0 === this.value.clone ? this.value : this.value.clone())
    }
    ,
    Ol.prototype = Object.assign(Object.create(Ds.prototype), {
        constructor: Ol,
        isInstancedInterleavedBuffer: !0,
        copy: function(t) {
            return Ds.prototype.copy.call(this, t),
            this.meshPerAttribute = t.meshPerAttribute,
            this
        }
    }),
    Object.assign(Dl.prototype, {
        linePrecision: 1,
        set: function(t, e) {
            this.ray.set(t, e)
        },
        setFromCamera: function(t, e) {
            e && e.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(e.matrixWorld),
            this.ray.direction.set(t.x, t.y, .5).unproject(e).sub(this.ray.origin).normalize()) : e && e.isOrthographicCamera ? (this.ray.origin.set(t.x, t.y, (e.near + e.far) / (e.near - e.far)).unproject(e),
            this.ray.direction.set(0, 0, -1).transformDirection(e.matrixWorld)) : console.error("THREE.Raycaster: Unsupported camera type.")
        },
        intersectObject: function(t, e, n) {
            var i = n || [];
            return Bl(t, this, i, e),
            i.sort(zl),
            i
        },
        intersectObjects: function(t, e, n) {
            var i = n || [];
            if (!1 === Array.isArray(t))
                return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),
                i;
            for (var r = 0, s = t.length; r < s; r++)
                Bl(t[r], this, i, e);
            return i.sort(zl),
            i
        }
    }),
    Object.assign(Nl.prototype, {
        set: function(t, e, n) {
            return this.radius = t,
            this.phi = e,
            this.theta = n,
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.radius = t.radius,
            this.phi = t.phi,
            this.theta = t.theta,
            this
        },
        makeSafe: function() {
            return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)),
            this
        },
        setFromVector3: function(t) {
            return this.setFromCartesianCoords(t.x, t.y, t.z)
        },
        setFromCartesianCoords: function(t, e, n) {
            return this.radius = Math.sqrt(t * t + e * e + n * n),
            0 === this.radius ? (this.theta = 0,
            this.phi = 0) : (this.theta = Math.atan2(t, n),
            this.phi = Math.acos(He.clamp(e / this.radius, -1, 1))),
            this
        }
    }),
    Object.assign(jl.prototype, {
        set: function(t, e, n) {
            return this.radius = t,
            this.theta = e,
            this.y = n,
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.radius = t.radius,
            this.theta = t.theta,
            this.y = t.y,
            this
        },
        setFromVector3: function(t) {
            return this.setFromCartesianCoords(t.x, t.y, t.z)
        },
        setFromCartesianCoords: function(t, e, n) {
            return this.radius = Math.sqrt(t * t + n * n),
            this.theta = Math.atan2(t, n),
            this.y = e,
            this
        }
    }),
    Object.assign(Ul.prototype, {
        set: function(t, e) {
            return this.min.copy(t),
            this.max.copy(e),
            this
        },
        setFromPoints: function(t) {
            this.makeEmpty();
            for (var e = 0, n = t.length; e < n; e++)
                this.expandByPoint(t[e]);
            return this
        },
        setFromCenterAndSize: function() {
            var t = new Ge;
            return function(e, n) {
                var i = t.copy(n).multiplyScalar(.5);
                return this.min.copy(e).sub(i),
                this.max.copy(e).add(i),
                this
            }
        }(),
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.min.copy(t.min),
            this.max.copy(t.max),
            this
        },
        makeEmpty: function() {
            return this.min.x = this.min.y = 1 / 0,
            this.max.x = this.max.y = -1 / 0,
            this
        },
        isEmpty: function() {
            return this.max.x < this.min.x || this.max.y < this.min.y
        },
        getCenter: function(t) {
            return void 0 === t && (console.warn("THREE.Box2: .getCenter() target is now required"),
            t = new Ge),
            this.isEmpty() ? t.set(0, 0) : t.addVectors(this.min, this.max).multiplyScalar(.5)
        },
        getSize: function(t) {
            return void 0 === t && (console.warn("THREE.Box2: .getSize() target is now required"),
            t = new Ge),
            this.isEmpty() ? t.set(0, 0) : t.subVectors(this.max, this.min)
        },
        expandByPoint: function(t) {
            return this.min.min(t),
            this.max.max(t),
            this
        },
        expandByVector: function(t) {
            return this.min.sub(t),
            this.max.add(t),
            this
        },
        expandByScalar: function(t) {
            return this.min.addScalar(-t),
            this.max.addScalar(t),
            this
        },
        containsPoint: function(t) {
            return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y)
        },
        containsBox: function(t) {
            return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y
        },
        getParameter: function(t, e) {
            return void 0 === e && (console.warn("THREE.Box2: .getParameter() target is now required"),
            e = new Ge),
            e.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y))
        },
        intersectsBox: function(t) {
            return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y)
        },
        clampPoint: function(t, e) {
            return void 0 === e && (console.warn("THREE.Box2: .clampPoint() target is now required"),
            e = new Ge),
            e.copy(t).clamp(this.min, this.max)
        },
        distanceToPoint: function() {
            var t = new Ge;
            return function(e) {
                return t.copy(e).clamp(this.min, this.max).sub(e).length()
            }
        }(),
        intersect: function(t) {
            return this.min.max(t.min),
            this.max.min(t.max),
            this
        },
        union: function(t) {
            return this.min.min(t.min),
            this.max.max(t.max),
            this
        },
        translate: function(t) {
            return this.min.add(t),
            this.max.add(t),
            this
        },
        equals: function(t) {
            return t.min.equals(this.min) && t.max.equals(this.max)
        }
    }),
    Object.assign(Fl.prototype, {
        set: function(t, e) {
            return this.start.copy(t),
            this.end.copy(e),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.start.copy(t.start),
            this.end.copy(t.end),
            this
        },
        getCenter: function(t) {
            return void 0 === t && (console.warn("THREE.Line3: .getCenter() target is now required"),
            t = new We),
            t.addVectors(this.start, this.end).multiplyScalar(.5)
        },
        delta: function(t) {
            return void 0 === t && (console.warn("THREE.Line3: .delta() target is now required"),
            t = new We),
            t.subVectors(this.end, this.start)
        },
        distanceSq: function() {
            return this.start.distanceToSquared(this.end)
        },
        distance: function() {
            return this.start.distanceTo(this.end)
        },
        at: function(t, e) {
            return void 0 === e && (console.warn("THREE.Line3: .at() target is now required"),
            e = new We),
            this.delta(e).multiplyScalar(t).add(this.start)
        },
        closestPointToPointParameter: (Ml = new We,
        _l = new We,
        function(t, e) {
            Ml.subVectors(t, this.start),
            _l.subVectors(this.end, this.start);
            var n = _l.dot(_l)
              , i = _l.dot(Ml) / n;
            return e && (i = He.clamp(i, 0, 1)),
            i
        }
        ),
        closestPointToPoint: function(t, e, n) {
            var i = this.closestPointToPointParameter(t, e);
            return void 0 === n && (console.warn("THREE.Line3: .closestPointToPoint() target is now required"),
            n = new We),
            this.delta(n).multiplyScalar(i).add(this.start)
        },
        applyMatrix4: function(t) {
            return this.start.applyMatrix4(t),
            this.end.applyMatrix4(t),
            this
        },
        equals: function(t) {
            return t.start.equals(this.start) && t.end.equals(this.end)
        }
    }),
    Hl.prototype = Object.create(Vn.prototype),
    Hl.prototype.constructor = Hl,
    Hl.prototype.isImmediateRenderObject = !0,
    Gl.prototype = Object.create(Ws.prototype),
    Gl.prototype.constructor = Gl,
    Gl.prototype.update = function() {
        var t = new We
          , e = new We
          , n = new Ye;
        return function() {
            var i = ["a", "b", "c"];
            this.object.updateMatrixWorld(!0),
            n.getNormalMatrix(this.object.matrixWorld);
            var r = this.object.matrixWorld
              , s = this.geometry.attributes.position
              , a = this.object.geometry;
            if (a && a.isGeometry)
                for (var o = a.vertices, c = a.faces, l = 0, p = 0, h = c.length; p < h; p++)
                    for (var u = c[p], f = 0, d = u.vertexNormals.length; f < d; f++) {
                        var m = o[u[i[f]]]
                          , g = u.vertexNormals[f];
                        t.copy(m).applyMatrix4(r),
                        e.copy(g).applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),
                        s.setXYZ(l, t.x, t.y, t.z),
                        l += 1,
                        s.setXYZ(l, e.x, e.y, e.z),
                        l += 1
                    }
            else if (a && a.isBufferGeometry) {
                var v = a.attributes.position
                  , y = a.attributes.normal;
                for (l = 0,
                f = 0,
                d = v.count; f < d; f++)
                    t.set(v.getX(f), v.getY(f), v.getZ(f)).applyMatrix4(r),
                    e.set(y.getX(f), y.getY(f), y.getZ(f)),
                    e.applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),
                    s.setXYZ(l, t.x, t.y, t.z),
                    l += 1,
                    s.setXYZ(l, e.x, e.y, e.z),
                    l += 1
            }
            s.needsUpdate = !0
        }
    }(),
    Vl.prototype = Object.create(Vn.prototype),
    Vl.prototype.constructor = Vl,
    Vl.prototype.dispose = function() {
        this.cone.geometry.dispose(),
        this.cone.material.dispose()
    }
    ,
    Vl.prototype.update = function() {
        var t = new We;
        return function() {
            this.light.updateMatrixWorld();
            var e = this.light.distance ? this.light.distance : 1e3
              , n = e * Math.tan(this.light.angle);
            this.cone.scale.set(n, n, e),
            t.setFromMatrixPosition(this.light.target.matrixWorld),
            this.cone.lookAt(t),
            void 0 !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color)
        }
    }(),
    Wl.prototype = Object.create(Ws.prototype),
    Wl.prototype.constructor = Wl,
    Wl.prototype.updateMatrixWorld = function() {
        var t = new We
          , e = new wn
          , n = new wn;
        return function(i) {
            var r = this.bones
              , s = this.geometry
              , a = s.getAttribute("position");
            n.getInverse(this.root.matrixWorld);
            for (var o = 0, c = 0; o < r.length; o++) {
                var l = r[o];
                l.parent && l.parent.isBone && (e.multiplyMatrices(n, l.matrixWorld),
                t.setFromMatrixPosition(e),
                a.setXYZ(c, t.x, t.y, t.z),
                e.multiplyMatrices(n, l.parent.matrixWorld),
                t.setFromMatrixPosition(e),
                a.setXYZ(c + 1, t.x, t.y, t.z),
                c += 2)
            }
            s.getAttribute("position").needsUpdate = !0,
            Vn.prototype.updateMatrixWorld.call(this, i)
        }
    }(),
    Yl.prototype = Object.create(Ii.prototype),
    Yl.prototype.constructor = Yl,
    Yl.prototype.dispose = function() {
        this.geometry.dispose(),
        this.material.dispose()
    }
    ,
    Yl.prototype.update = function() {
        void 0 !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color)
    }
    ,
    ql.prototype = Object.create(Vs.prototype),
    ql.prototype.constructor = ql,
    ql.prototype.update = function() {
        if (this.scale.set(.5 * this.light.width, .5 * this.light.height, 1),
        void 0 !== this.color)
            this.material.color.set(this.color),
            this.children[0].material.color.set(this.color);
        else {
            this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);
            var t = this.material.color
              , e = Math.max(t.r, t.g, t.b);
            e > 1 && t.multiplyScalar(1 / e),
            this.children[0].material.color.copy(this.material.color)
        }
    }
    ,
    ql.prototype.dispose = function() {
        this.geometry.dispose(),
        this.material.dispose(),
        this.children[0].geometry.dispose(),
        this.children[0].material.dispose()
    }
    ,
    Xl.prototype = Object.create(Vn.prototype),
    Xl.prototype.constructor = Xl,
    Xl.prototype.dispose = function() {
        this.children[0].geometry.dispose(),
        this.children[0].material.dispose()
    }
    ,
    Xl.prototype.update = function() {
        var t = new We
          , e = new Ln
          , n = new Ln;
        return function() {
            var i = this.children[0];
            if (void 0 !== this.color)
                this.material.color.set(this.color);
            else {
                var r = i.geometry.getAttribute("color");
                e.copy(this.light.color),
                n.copy(this.light.groundColor);
                for (var s = 0, a = r.count; s < a; s++) {
                    var o = s < a / 2 ? e : n;
                    r.setXYZ(s, o.r, o.g, o.b)
                }
                r.needsUpdate = !0
            }
            i.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate())
        }
    }(),
    Zl.prototype = Object.create(Ii.prototype),
    Zl.prototype.constructor = Zl,
    Zl.prototype.dispose = function() {
        this.geometry.dispose(),
        this.material.dispose()
    }
    ,
    Zl.prototype.onBeforeRender = function() {
        this.position.copy(this.lightProbe.position),
        this.scale.set(1, 1, 1).multiplyScalar(this.size),
        this.material.uniforms.intensity.value = this.lightProbe.intensity
    }
    ,
    Kl.prototype = Object.assign(Object.create(Ws.prototype), {
        constructor: Kl,
        copy: function(t) {
            return Ws.prototype.copy.call(this, t),
            this.geometry.copy(t.geometry),
            this.material.copy(t.material),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        }
    }),
    Jl.prototype = Object.create(Ws.prototype),
    Jl.prototype.constructor = Jl,
    $l.prototype = Object.create(Vs.prototype),
    $l.prototype.constructor = $l,
    $l.prototype.update = function() {
        var t, e, n = this.audio, i = this.range, r = this.divisionsInnerAngle, s = this.divisionsOuterAngle, a = He.degToRad(n.panner.coneInnerAngle), o = He.degToRad(n.panner.coneOuterAngle), c = a / 2, l = o / 2, p = 0, h = 0, u = this.geometry, f = u.attributes.position;
        function d(n, r, s, a) {
            var o = (r - n) / s;
            for (f.setXYZ(p, 0, 0, 0),
            h++,
            t = n; t < r; t += o)
                e = p + h,
                f.setXYZ(e, Math.sin(t) * i, 0, Math.cos(t) * i),
                f.setXYZ(e + 1, Math.sin(Math.min(t + o, r)) * i, 0, Math.cos(Math.min(t + o, r)) * i),
                f.setXYZ(e + 2, 0, 0, 0),
                h += 3;
            u.addGroup(p, h, a),
            p += h,
            h = 0
        }
        u.clearGroups(),
        d(-l, -c, s, 0),
        d(-c, c, r, 1),
        d(c, l, s, 0),
        f.needsUpdate = !0,
        a === o && (this.material[0].visible = !1)
    }
    ,
    $l.prototype.dispose = function() {
        this.geometry.dispose(),
        this.material[0].dispose(),
        this.material[1].dispose()
    }
    ,
    Ql.prototype = Object.create(Ws.prototype),
    Ql.prototype.constructor = Ql,
    Ql.prototype.update = function() {
        var t = new We
          , e = new We
          , n = new Ye;
        return function() {
            this.object.updateMatrixWorld(!0),
            n.getNormalMatrix(this.object.matrixWorld);
            for (var i = this.object.matrixWorld, r = this.geometry.attributes.position, s = this.object.geometry, a = s.vertices, o = s.faces, c = 0, l = 0, p = o.length; l < p; l++) {
                var h = o[l]
                  , u = h.normal;
                t.copy(a[h.a]).add(a[h.b]).add(a[h.c]).divideScalar(3).applyMatrix4(i),
                e.copy(u).applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),
                r.setXYZ(c, t.x, t.y, t.z),
                c += 1,
                r.setXYZ(c, e.x, e.y, e.z),
                c += 1
            }
            r.needsUpdate = !0
        }
    }(),
    tp.prototype = Object.create(Vn.prototype),
    tp.prototype.constructor = tp,
    tp.prototype.dispose = function() {
        this.lightPlane.geometry.dispose(),
        this.lightPlane.material.dispose(),
        this.targetLine.geometry.dispose(),
        this.targetLine.material.dispose()
    }
    ,
    tp.prototype.update = function() {
        var t = new We
          , e = new We
          , n = new We;
        return function() {
            t.setFromMatrixPosition(this.light.matrixWorld),
            e.setFromMatrixPosition(this.light.target.matrixWorld),
            n.subVectors(e, t),
            this.lightPlane.lookAt(e),
            void 0 !== this.color ? (this.lightPlane.material.color.set(this.color),
            this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color),
            this.targetLine.material.color.copy(this.light.color)),
            this.targetLine.lookAt(e),
            this.targetLine.scale.z = n.length()
        }
    }(),
    ep.prototype = Object.create(Ws.prototype),
    ep.prototype.constructor = ep,
    ep.prototype.update = function() {
        var t, e, n = new We, i = new vs;
        function r(r, s, a, o) {
            n.set(s, a, o).unproject(i);
            var c = e[r];
            if (void 0 !== c)
                for (var l = t.getAttribute("position"), p = 0, h = c.length; p < h; p++)
                    l.setXYZ(c[p], n.x, n.y, n.z)
        }
        return function() {
            t = this.geometry,
            e = this.pointMap;
            i.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),
            r("c", 0, 0, -1),
            r("t", 0, 0, 1),
            r("n1", -1, -1, -1),
            r("n2", 1, -1, -1),
            r("n3", -1, 1, -1),
            r("n4", 1, 1, -1),
            r("f1", -1, -1, 1),
            r("f2", 1, -1, 1),
            r("f3", -1, 1, 1),
            r("f4", 1, 1, 1),
            r("u1", .7, 1.1, -1),
            r("u2", -.7, 1.1, -1),
            r("u3", 0, 2, -1),
            r("cf1", -1, 0, 1),
            r("cf2", 1, 0, 1),
            r("cf3", 0, -1, 1),
            r("cf4", 0, 1, 1),
            r("cn1", -1, 0, -1),
            r("cn2", 1, 0, -1),
            r("cn3", 0, -1, -1),
            r("cn4", 0, 1, -1),
            t.getAttribute("position").needsUpdate = !0
        }
    }(),
    np.prototype = Object.create(Ws.prototype),
    np.prototype.constructor = np,
    np.prototype.update = function() {
        var t = new gn;
        return function(e) {
            if (void 0 !== e && console.warn("THREE.BoxHelper: .update() has no longer arguments."),
            void 0 !== this.object && t.setFromObject(this.object),
            !t.isEmpty()) {
                var n = t.min
                  , i = t.max
                  , r = this.geometry.attributes.position
                  , s = r.array;
                s[0] = i.x,
                s[1] = i.y,
                s[2] = i.z,
                s[3] = n.x,
                s[4] = i.y,
                s[5] = i.z,
                s[6] = n.x,
                s[7] = n.y,
                s[8] = i.z,
                s[9] = i.x,
                s[10] = n.y,
                s[11] = i.z,
                s[12] = i.x,
                s[13] = i.y,
                s[14] = n.z,
                s[15] = n.x,
                s[16] = i.y,
                s[17] = n.z,
                s[18] = n.x,
                s[19] = n.y,
                s[20] = n.z,
                s[21] = i.x,
                s[22] = n.y,
                s[23] = n.z,
                r.needsUpdate = !0,
                this.geometry.computeBoundingSphere()
            }
        }
    }(),
    np.prototype.setFromObject = function(t) {
        return this.object = t,
        this.update(),
        this
    }
    ,
    np.prototype.copy = function(t) {
        return Ws.prototype.copy.call(this, t),
        this.object = t.object,
        this
    }
    ,
    np.prototype.clone = function() {
        return (new this.constructor).copy(this)
    }
    ,
    ip.prototype = Object.create(Ws.prototype),
    ip.prototype.constructor = ip,
    ip.prototype.updateMatrixWorld = function(t) {
        var e = this.box;
        e.isEmpty() || (e.getCenter(this.position),
        e.getSize(this.scale),
        this.scale.multiplyScalar(.5),
        Vn.prototype.updateMatrixWorld.call(this, t))
    }
    ,
    rp.prototype = Object.create(Vs.prototype),
    rp.prototype.constructor = rp,
    rp.prototype.updateMatrixWorld = function(t) {
        var e = -this.plane.constant;
        Math.abs(e) < 1e-8 && (e = 1e-8),
        this.scale.set(.5 * this.size, .5 * this.size, e),
        this.children[0].material.side = e < 0 ? b : y,
        this.lookAt(this.plane.normal),
        Vn.prototype.updateMatrixWorld.call(this, t)
    }
    ,
    sp.prototype = Object.create(Vn.prototype),
    sp.prototype.constructor = sp,
    sp.prototype.setDirection = (kl = new We,
    function(t) {
        t.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : t.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (kl.set(t.z, 0, -t.x).normalize(),
        El = Math.acos(t.y),
        this.quaternion.setFromAxisAngle(kl, El))
    }
    ),
    sp.prototype.setLength = function(t, e, n) {
        void 0 === e && (e = .2 * t),
        void 0 === n && (n = .2 * e),
        this.line.scale.set(1, Math.max(0, t - e), 1),
        this.line.updateMatrix(),
        this.cone.scale.set(n, e, n),
        this.cone.position.y = t,
        this.cone.updateMatrix()
    }
    ,
    sp.prototype.setColor = function(t) {
        this.line.material.color.copy(t),
        this.cone.material.color.copy(t)
    }
    ,
    sp.prototype.copy = function(t) {
        return Vn.prototype.copy.call(this, t, !1),
        this.line.copy(t.line),
        this.cone.copy(t.cone),
        this
    }
    ,
    sp.prototype.clone = function() {
        return (new this.constructor).copy(this)
    }
    ,
    ap.prototype = Object.create(Ws.prototype),
    ap.prototype.constructor = ap;
    var cp = 0
      , lp = 1;
    function pp(t) {
        return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),
        t
    }
    function hp(t) {
        return void 0 === t && (t = []),
        console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),
        t.isMultiMaterial = !0,
        t.materials = t,
        t.clone = function() {
            return t.slice()
        }
        ,
        t
    }
    function up(t, e) {
        return console.warn("THREE.PointCloud has been renamed to THREE.Points."),
        new Xs(t,e)
    }
    function fp(t) {
        return console.warn("THREE.Particle has been renamed to THREE.Sprite."),
        new Ns(t)
    }
    function dp(t, e) {
        return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),
        new Xs(t,e)
    }
    function mp(t) {
        return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),
        new qs(t)
    }
    function gp(t) {
        return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),
        new qs(t)
    }
    function vp(t) {
        return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),
        new qs(t)
    }
    function yp(t, e, n) {
        return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),
        new We(t,e,n)
    }
    function bp(t, e) {
        return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),
        new Zn(t,e).setDynamic(!0)
    }
    function wp(t, e) {
        return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),
        new Kn(t,e)
    }
    function xp(t, e) {
        return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),
        new Jn(t,e)
    }
    function Mp(t, e) {
        return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),
        new $n(t,e)
    }
    function _p(t, e) {
        return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),
        new Qn(t,e)
    }
    function Sp(t, e) {
        return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),
        new ti(t,e)
    }
    function Tp(t, e) {
        return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),
        new ei(t,e)
    }
    function Ep(t, e) {
        return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),
        new ni(t,e)
    }
    function kp(t, e) {
        return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),
        new ii(t,e)
    }
    function Ap(t, e) {
        return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),
        new ri(t,e)
    }
    function Lp(t) {
        console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),
        rc.call(this, t),
        this.type = "catmullrom",
        this.closed = !0
    }
    function Pp(t) {
        console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),
        rc.call(this, t),
        this.type = "catmullrom"
    }
    function Cp(t) {
        console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),
        rc.call(this, t),
        this.type = "catmullrom"
    }
    function Rp(t) {
        return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),
        new ap(t)
    }
    function Ip(t, e) {
        return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),
        new np(t,e)
    }
    function Op(t, e) {
        return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),
        new Ws(new ro(t.geometry),new Gs({
            color: void 0 !== e ? e : 16777215
        }))
    }
    function Dp(t, e) {
        return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),
        new Ws(new Qs(t.geometry),new Gs({
            color: void 0 !== e ? e : 16777215
        }))
    }
    function zp(t) {
        return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),
        new Go(t)
    }
    function Bp(t) {
        return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),
        new Yo(t)
    }
    Ko.create = function(t, e) {
        return console.log("THREE.Curve.create() has been deprecated"),
        t.prototype = Object.create(Ko.prototype),
        t.prototype.constructor = t,
        t.prototype.getPoint = e,
        t
    }
    ,
    Object.assign(gc.prototype, {
        createPointsGeometry: function(t) {
            console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            var e = this.getPoints(t);
            return this.createGeometry(e)
        },
        createSpacedPointsGeometry: function(t) {
            console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            var e = this.getSpacedPoints(t);
            return this.createGeometry(e)
        },
        createGeometry: function(t) {
            console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            for (var e = new Xn, n = 0, i = t.length; n < i; n++) {
                var r = t[n];
                e.vertices.push(new We(r.x,r.y,r.z || 0))
            }
            return e
        }
    }),
    Object.assign(vc.prototype, {
        fromPoints: function(t) {
            console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),
            this.setFromPoints(t)
        }
    }),
    Lp.prototype = Object.create(rc.prototype),
    Pp.prototype = Object.create(rc.prototype),
    Cp.prototype = Object.create(rc.prototype),
    Object.assign(Cp.prototype, {
        initFromArray: function() {
            console.error("THREE.Spline: .initFromArray() has been removed.")
        },
        getControlPointsArray: function() {
            console.error("THREE.Spline: .getControlPointsArray() has been removed.")
        },
        reparametrizeByArcLength: function() {
            console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")
        }
    }),
    Kl.prototype.setColors = function() {
        console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")
    }
    ,
    Wl.prototype.update = function() {
        console.error("THREE.SkeletonHelper: update() no longer needs to be called.")
    }
    ,
    Object.assign(Kc.prototype, {
        extractUrlBase: function(t) {
            return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),
            Cc.extractUrlBase(t)
        }
    }),
    Object.assign(zc.prototype, {
        setTexturePath: function(t) {
            return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),
            this.setResourcePath(t)
        }
    }),
    Object.assign(Ul.prototype, {
        center: function(t) {
            return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),
            this.getCenter(t)
        },
        empty: function() {
            return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),
            this.isEmpty()
        },
        isIntersectionBox: function(t) {
            return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),
            this.intersectsBox(t)
        },
        size: function(t) {
            return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),
            this.getSize(t)
        }
    }),
    Object.assign(gn.prototype, {
        center: function(t) {
            return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),
            this.getCenter(t)
        },
        empty: function() {
            return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),
            this.isEmpty()
        },
        isIntersectionBox: function(t) {
            return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),
            this.intersectsBox(t)
        },
        isIntersectionSphere: function(t) {
            return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
            this.intersectsSphere(t)
        },
        size: function(t) {
            return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),
            this.getSize(t)
        }
    }),
    Fl.prototype.center = function(t) {
        return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),
        this.getCenter(t)
    }
    ,
    Object.assign(He, {
        random16: function() {
            return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),
            Math.random()
        },
        nearestPowerOfTwo: function(t) {
            return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),
            He.floorPowerOfTwo(t)
        },
        nextPowerOfTwo: function(t) {
            return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),
            He.ceilPowerOfTwo(t)
        }
    }),
    Object.assign(Ye.prototype, {
        flattenToArrayOffset: function(t, e) {
            return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),
            this.toArray(t, e)
        },
        multiplyVector3: function(t) {
            return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),
            t.applyMatrix3(this)
        },
        multiplyVector3Array: function() {
            console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")
        },
        applyToBuffer: function(t) {
            return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),
            this.applyToBufferAttribute(t)
        },
        applyToVector3Array: function() {
            console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")
        }
    }),
    Object.assign(wn.prototype, {
        extractPosition: function(t) {
            return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),
            this.copyPosition(t)
        },
        flattenToArrayOffset: function(t, e) {
            return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),
            this.toArray(t, e)
        },
        getPosition: function() {
            var t;
            return function() {
                return void 0 === t && (t = new We),
                console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),
                t.setFromMatrixColumn(this, 3)
            }
        }(),
        setRotationFromQuaternion: function(t) {
            return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),
            this.makeRotationFromQuaternion(t)
        },
        multiplyToArray: function() {
            console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")
        },
        multiplyVector3: function(t) {
            return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),
            t.applyMatrix4(this)
        },
        multiplyVector4: function(t) {
            return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),
            t.applyMatrix4(this)
        },
        multiplyVector3Array: function() {
            console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")
        },
        rotateAxis: function(t) {
            console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),
            t.transformDirection(this)
        },
        crossVector: function(t) {
            return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),
            t.applyMatrix4(this)
        },
        translate: function() {
            console.error("THREE.Matrix4: .translate() has been removed.")
        },
        rotateX: function() {
            console.error("THREE.Matrix4: .rotateX() has been removed.")
        },
        rotateY: function() {
            console.error("THREE.Matrix4: .rotateY() has been removed.")
        },
        rotateZ: function() {
            console.error("THREE.Matrix4: .rotateZ() has been removed.")
        },
        rotateByAxis: function() {
            console.error("THREE.Matrix4: .rotateByAxis() has been removed.")
        },
        applyToBuffer: function(t) {
            return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),
            this.applyToBufferAttribute(t)
        },
        applyToVector3Array: function() {
            console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")
        },
        makeFrustum: function(t, e, n, i, r, s) {
            return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),
            this.makePerspective(t, e, i, n, r, s)
        }
    }),
    yn.prototype.isIntersectionLine = function(t) {
        return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),
        this.intersectsLine(t)
    }
    ,
    Ve.prototype.multiplyVector3 = function(t) {
        return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),
        t.applyQuaternion(this)
    }
    ,
    Object.assign(Pi.prototype, {
        isIntersectionBox: function(t) {
            return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),
            this.intersectsBox(t)
        },
        isIntersectionPlane: function(t) {
            return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),
            this.intersectsPlane(t)
        },
        isIntersectionSphere: function(t) {
            return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
            this.intersectsSphere(t)
        }
    }),
    Object.assign(Ci.prototype, {
        area: function() {
            return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),
            this.getArea()
        },
        barycoordFromPoint: function(t, e) {
            return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),
            this.getBarycoord(t, e)
        },
        midpoint: function(t) {
            return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),
            this.getMidpoint(t)
        },
        normal: function(t) {
            return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),
            this.getNormal(t)
        },
        plane: function(t) {
            return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),
            this.getPlane(t)
        }
    }),
    Object.assign(Ci, {
        barycoordFromPoint: function(t, e, n, i, r) {
            return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),
            Ci.getBarycoord(t, e, n, i, r)
        },
        normal: function(t, e, n, i) {
            return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),
            Ci.getNormal(t, e, n, i)
        }
    }),
    Object.assign(yc.prototype, {
        extractAllPoints: function(t) {
            return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),
            this.extractPoints(t)
        },
        extrude: function(t) {
            return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),
            new Ga(this,t)
        },
        makeGeometry: function(t) {
            return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),
            new eo(this,t)
        }
    }),
    Object.assign(Ge.prototype, {
        fromAttribute: function(t, e, n) {
            return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),
            this.fromBufferAttribute(t, e, n)
        },
        distanceToManhattan: function(t) {
            return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),
            this.manhattanDistanceTo(t)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),
            this.manhattanLength()
        }
    }),
    Object.assign(We.prototype, {
        setEulerFromRotationMatrix: function() {
            console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
        },
        setEulerFromQuaternion: function() {
            console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
        },
        getPositionFromMatrix: function(t) {
            return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),
            this.setFromMatrixPosition(t)
        },
        getScaleFromMatrix: function(t) {
            return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),
            this.setFromMatrixScale(t)
        },
        getColumnFromMatrix: function(t, e) {
            return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),
            this.setFromMatrixColumn(e, t)
        },
        applyProjection: function(t) {
            return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),
            this.applyMatrix4(t)
        },
        fromAttribute: function(t, e, n) {
            return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),
            this.fromBufferAttribute(t, e, n)
        },
        distanceToManhattan: function(t) {
            return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),
            this.manhattanDistanceTo(t)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),
            this.manhattanLength()
        }
    }),
    Object.assign(hn.prototype, {
        fromAttribute: function(t, e, n) {
            return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),
            this.fromBufferAttribute(t, e, n)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),
            this.manhattanLength()
        }
    }),
    Object.assign(Xn.prototype, {
        computeTangents: function() {
            console.error("THREE.Geometry: .computeTangents() has been removed.")
        },
        computeLineDistances: function() {
            console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")
        }
    }),
    Object.assign(Vn.prototype, {
        getChildByName: function(t) {
            return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),
            this.getObjectByName(t)
        },
        renderDepth: function() {
            console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
        },
        translate: function(t, e) {
            return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),
            this.translateOnAxis(e, t)
        },
        getWorldRotation: function() {
            console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")
        }
    }),
    Object.defineProperties(Vn.prototype, {
        eulerOrder: {
            get: function() {
                return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                this.rotation.order
            },
            set: function(t) {
                console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                this.rotation.order = t
            }
        },
        useQuaternion: {
            get: function() {
                console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
            },
            set: function() {
                console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
            }
        }
    }),
    Object.defineProperties(js.prototype, {
        objects: {
            get: function() {
                return console.warn("THREE.LOD: .objects has been renamed to .levels."),
                this.levels
            }
        }
    }),
    Object.defineProperty(Fs.prototype, "useVertexTexture", {
        get: function() {
            console.warn("THREE.Skeleton: useVertexTexture has been removed.")
        },
        set: function() {
            console.warn("THREE.Skeleton: useVertexTexture has been removed.")
        }
    }),
    Us.prototype.initBones = function() {
        console.error("THREE.SkinnedMesh: initBones() has been removed.")
    }
    ,
    Object.defineProperty(Ko.prototype, "__arcLengthDivisions", {
        get: function() {
            return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),
            this.arcLengthDivisions
        },
        set: function(t) {
            console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),
            this.arcLengthDivisions = t
        }
    }),
    ys.prototype.setLens = function(t, e) {
        console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),
        void 0 !== e && (this.filmGauge = e),
        this.setFocalLength(t)
    }
    ,
    Object.defineProperties(bc.prototype, {
        onlyShadow: {
            set: function() {
                console.warn("THREE.Light: .onlyShadow has been removed.")
            }
        },
        shadowCameraFov: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),
                this.shadow.camera.fov = t
            }
        },
        shadowCameraLeft: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),
                this.shadow.camera.left = t
            }
        },
        shadowCameraRight: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),
                this.shadow.camera.right = t
            }
        },
        shadowCameraTop: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),
                this.shadow.camera.top = t
            }
        },
        shadowCameraBottom: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),
                this.shadow.camera.bottom = t
            }
        },
        shadowCameraNear: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),
                this.shadow.camera.near = t
            }
        },
        shadowCameraFar: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),
                this.shadow.camera.far = t
            }
        },
        shadowCameraVisible: {
            set: function() {
                console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")
            }
        },
        shadowBias: {
            set: function(t) {
                console.warn("THREE.Light: .shadowBias is now .shadow.bias."),
                this.shadow.bias = t
            }
        },
        shadowDarkness: {
            set: function() {
                console.warn("THREE.Light: .shadowDarkness has been removed.")
            }
        },
        shadowMapWidth: {
            set: function(t) {
                console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),
                this.shadow.mapSize.width = t
            }
        },
        shadowMapHeight: {
            set: function(t) {
                console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),
                this.shadow.mapSize.height = t
            }
        }
    }),
    Object.defineProperties(Zn.prototype, {
        length: {
            get: function() {
                return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),
                this.array.length
            }
        },
        copyIndicesArray: function() {
            console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")
        }
    }),
    Object.assign(ci.prototype, {
        addIndex: function(t) {
            console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),
            this.setIndex(t)
        },
        addDrawCall: function(t, e, n) {
            void 0 !== n && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),
            console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),
            this.addGroup(t, e)
        },
        clearDrawCalls: function() {
            console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),
            this.clearGroups()
        },
        computeTangents: function() {
            console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")
        },
        computeOffsets: function() {
            console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
        }
    }),
    Object.defineProperties(ci.prototype, {
        drawcalls: {
            get: function() {
                return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),
                this.groups
            }
        },
        offsets: {
            get: function() {
                return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),
                this.groups
            }
        }
    }),
    Object.assign(Va.prototype, {
        getArrays: function() {
            console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")
        },
        addShapeList: function() {
            console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")
        },
        addShape: function() {
            console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")
        }
    }),
    Object.defineProperties(Il.prototype, {
        dynamic: {
            set: function() {
                console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")
            }
        },
        onUpdate: {
            value: function() {
                return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),
                this
            }
        }
    }),
    Object.defineProperties(di.prototype, {
        wrapAround: {
            get: function() {
                console.warn("THREE.Material: .wrapAround has been removed.")
            },
            set: function() {
                console.warn("THREE.Material: .wrapAround has been removed.")
            }
        },
        overdraw: {
            get: function() {
                console.warn("THREE.Material: .overdraw has been removed.")
            },
            set: function() {
                console.warn("THREE.Material: .overdraw has been removed.")
            }
        },
        wrapRGB: {
            get: function() {
                return console.warn("THREE.Material: .wrapRGB has been removed."),
                new Ln
            }
        },
        shading: {
            get: function() {
                console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.")
            },
            set: function(t) {
                console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."),
                this.flatShading = t === x
            }
        }
    }),
    Object.defineProperties(vo.prototype, {
        metal: {
            get: function() {
                return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),
                !1
            },
            set: function() {
                console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")
            }
        }
    }),
    Object.defineProperties(Li.prototype, {
        derivatives: {
            get: function() {
                return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                this.extensions.derivatives
            },
            set: function(t) {
                console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                this.extensions.derivatives = t
            }
        }
    }),
    Object.assign(Cs.prototype, {
        clearTarget: function(t, e, n, i) {
            console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),
            this.setRenderTarget(t),
            this.clear(e, n, i)
        },
        animate: function(t) {
            console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),
            this.setAnimationLoop(t)
        },
        getCurrentRenderTarget: function() {
            return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),
            this.getRenderTarget()
        },
        getMaxAnisotropy: function() {
            return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),
            this.capabilities.getMaxAnisotropy()
        },
        getPrecision: function() {
            return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),
            this.capabilities.precision
        },
        resetGLState: function() {
            return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),
            this.state.reset()
        },
        supportsFloatTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),
            this.extensions.get("OES_texture_float")
        },
        supportsHalfFloatTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),
            this.extensions.get("OES_texture_half_float")
        },
        supportsStandardDerivatives: function() {
            return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),
            this.extensions.get("OES_standard_derivatives")
        },
        supportsCompressedTextureS3TC: function() {
            return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),
            this.extensions.get("WEBGL_compressed_texture_s3tc")
        },
        supportsCompressedTexturePVRTC: function() {
            return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),
            this.extensions.get("WEBGL_compressed_texture_pvrtc")
        },
        supportsBlendMinMax: function() {
            return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),
            this.extensions.get("EXT_blend_minmax")
        },
        supportsVertexTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),
            this.capabilities.vertexTextures
        },
        supportsInstancedArrays: function() {
            return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),
            this.extensions.get("ANGLE_instanced_arrays")
        },
        enableScissorTest: function(t) {
            console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),
            this.setScissorTest(t)
        },
        initMaterial: function() {
            console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
        },
        addPrePlugin: function() {
            console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
        },
        addPostPlugin: function() {
            console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
        },
        updateShadowMap: function() {
            console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
        },
        setFaceCulling: function() {
            console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")
        },
        allocTextureUnit: function() {
            console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")
        },
        setTexture: function() {
            console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")
        },
        setTexture2D: function() {
            console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")
        },
        setTextureCube: function() {
            console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")
        }
    }),
    Object.defineProperties(Cs.prototype, {
        shadowMapEnabled: {
            get: function() {
                return this.shadowMap.enabled
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),
                this.shadowMap.enabled = t
            }
        },
        shadowMapType: {
            get: function() {
                return this.shadowMap.type
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),
                this.shadowMap.type = t
            }
        },
        shadowMapCullFace: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
            }
        }
    }),
    Object.defineProperties(us.prototype, {
        cullFace: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
            }
        },
        renderReverseSided: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
            }
        },
        renderSingleSided: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
            }
        }
    }),
    Object.defineProperties(dn.prototype, {
        activeCubeFace: {
            set: function() {
                console.warn("THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().")
            }
        },
        activeMipMapLevel: {
            set: function() {
                console.warn("THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().")
            }
        }
    }),
    Object.defineProperties(un.prototype, {
        wrapS: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                this.texture.wrapS
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                this.texture.wrapS = t
            }
        },
        wrapT: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                this.texture.wrapT
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                this.texture.wrapT = t
            }
        },
        magFilter: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                this.texture.magFilter
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                this.texture.magFilter = t
            }
        },
        minFilter: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                this.texture.minFilter
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                this.texture.minFilter = t
            }
        },
        anisotropy: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                this.texture.anisotropy
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                this.texture.anisotropy = t
            }
        },
        offset: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                this.texture.offset
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                this.texture.offset = t
            }
        },
        repeat: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                this.texture.repeat
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                this.texture.repeat = t
            }
        },
        format: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                this.texture.format
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                this.texture.format = t
            }
        },
        type: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                this.texture.type
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                this.texture.type = t
            }
        },
        generateMipmaps: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                this.texture.generateMipmaps
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                this.texture.generateMipmaps = t
            }
        }
    }),
    Object.defineProperties(Ls.prototype, {
        standing: {
            set: function() {
                console.warn("THREE.WebVRManager: .standing has been removed.")
            }
        },
        userHeight: {
            set: function() {
                console.warn("THREE.WebVRManager: .userHeight has been removed.")
            }
        }
    }),
    ll.prototype.load = function(t) {
        console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
        var e = this;
        return (new $c).load(t, function(t) {
            e.setBuffer(t)
        }),
        this
    }
    ,
    hl.prototype.getData = function() {
        return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),
        this.getFrequencyData()
    }
    ,
    al.prototype.updateCubeMap = function(t, e) {
        return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),
        this.update(t, e)
    }
    ;
    var Np = {
        merge: function(t, e, n) {
            var i;
            console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),
            e.isMesh && (e.matrixAutoUpdate && e.updateMatrix(),
            i = e.matrix,
            e = e.geometry),
            t.merge(e, i, n)
        },
        center: function(t) {
            return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),
            t.center()
        }
    };
    function jp() {
        console.error("THREE.CanvasRenderer has been removed")
    }
    function Up() {
        console.error("THREE.JSONLoader has been removed.")
    }
    cn.crossOrigin = void 0,
    cn.loadTexture = function(t, e, n, i) {
        console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
        var r = new Zo;
        r.setCrossOrigin(this.crossOrigin);
        var s = r.load(t, n, void 0, i);
        return e && (s.mapping = e),
        s
    }
    ,
    cn.loadTextureCube = function(t, e, n, i) {
        console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
        var r = new Xo;
        r.setCrossOrigin(this.crossOrigin);
        var s = r.load(t, n, void 0, i);
        return e && (s.mapping = e),
        s
    }
    ,
    cn.loadCompressedTexture = function() {
        console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
    }
    ,
    cn.loadCompressedTextureCube = function() {
        console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
    }
    ;
    var Fp = {
        createMultiMaterialObject: function() {
            console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")
        },
        detach: function() {
            console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")
        },
        attach: function() {
            console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")
        }
    };
    function Hp() {
        console.error("THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js")
    }
}
, function(t, e, n) {
    function i(t) {
        switch (Object.prototype.toString.call(t)) {
        case "[object Error]":
        case "[object Exception]":
        case "[object DOMException]":
            return !0;
        default:
            return t instanceof Error
        }
    }
    function r(t) {
        return "[object ErrorEvent]" === Object.prototype.toString.call(t)
    }
    function s(t) {
        return "[object DOMError]" === Object.prototype.toString.call(t)
    }
    function a(t) {
        return "[object DOMException]" === Object.prototype.toString.call(t)
    }
    function o(t) {
        return "[object String]" === Object.prototype.toString.call(t)
    }
    function c(t) {
        return null === t || "object" != typeof t && "function" != typeof t
    }
    function l(t) {
        return "[object Object]" === Object.prototype.toString.call(t)
    }
    function p(t) {
        return "[object RegExp]" === Object.prototype.toString.call(t)
    }
    function h(t) {
        return !(!t || !t.then || "function" != typeof t.then)
    }
    function u(t) {
        return l(t) && "nativeEvent"in t && "preventDefault"in t && "stopPropagation"in t
    }
    n.d(e, "c", function() {
        return i
    }),
    n.d(e, "d", function() {
        return r
    }),
    n.d(e, "a", function() {
        return s
    }),
    n.d(e, "b", function() {
        return a
    }),
    n.d(e, "h", function() {
        return o
    }),
    n.d(e, "f", function() {
        return c
    }),
    n.d(e, "e", function() {
        return l
    }),
    n.d(e, "g", function() {
        return p
    }),
    n.d(e, "j", function() {
        return h
    }),
    n.d(e, "i", function() {
        return u
    })
}
, function(t, e, n) {
    (function(t) {
        n.d(e, "a", function() {
            return s
        }),
        n.d(e, "d", function() {
            return a
        }),
        n.d(e, "c", function() {
            return c
        }),
        n.d(e, "b", function() {
            return h
        });
        var i = n(5)
          , r = n(38);
        function s(t, e, n) {
            if (e in t) {
                var i = t[e]
                  , r = n(i);
                if ("function" == typeof r)
                    try {
                        r.prototype = r.prototype || {},
                        Object.defineProperties(r, {
                            __sentry__: {
                                enumerable: !1,
                                value: !0
                            },
                            __sentry_original__: {
                                enumerable: !1,
                                value: i
                            },
                            __sentry_wrapped__: {
                                enumerable: !1,
                                value: r
                            }
                        })
                    } catch (t) {}
                t[e] = r
            }
        }
        function a(t) {
            return Object.keys(t).map(function(e) {
                return encodeURIComponent(e) + "=" + encodeURIComponent(t[e])
            }).join("&")
        }
        function o(t) {
            return function(t) {
                return ~-encodeURI(t).split(/%..|./).length
            }(JSON.stringify(t))
        }
        function c(t, e, n) {
            void 0 === e && (e = 3),
            void 0 === n && (n = 102400);
            var i = h(t, e);
            return o(i) > n ? c(t, e - 1, n) : i
        }
        function l(e, n) {
            return "domain" === n && "object" == typeof e && e._events ? "[Domain]" : "domainEmitter" === n ? "[DomainEmitter]" : void 0 !== t && e === t ? "[Global]" : "undefined" != typeof window && e === window ? "[Window]" : "undefined" != typeof document && e === document ? "[Document]" : "undefined" != typeof Event && e instanceof Event ? Object.getPrototypeOf(e) ? e.constructor.name : "Event" : Object(i.i)(e) ? "[SyntheticEvent]" : Number.isNaN(e) ? "[NaN]" : void 0 === e ? "[undefined]" : "function" == typeof e ? "[Function: " + (e.name || "<unknown-function-name>") + "]" : e
        }
        function p(t, e, n, s) {
            if (void 0 === n && (n = 1 / 0),
            void 0 === s && (s = new r.a),
            0 === n)
                return function(t) {
                    var e = Object.prototype.toString.call(t);
                    if ("string" == typeof t)
                        return t;
                    if ("[object Object]" === e)
                        return "[Object]";
                    if ("[object Array]" === e)
                        return "[Array]";
                    var n = l(t);
                    return Object(i.f)(n) ? n : e
                }(e);
            if (null != e && "function" == typeof e.toJSON)
                return e.toJSON();
            var a = l(e, t);
            if (Object(i.f)(a))
                return a;
            var o = Object(i.c)(e) ? function(t) {
                var e = {
                    message: t.message,
                    name: t.name,
                    stack: t.stack
                };
                for (var n in t)
                    Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
                return e
            }(e) : e
              , c = Array.isArray(e) ? [] : {};
            if (s.memoize(e))
                return "[Circular ~]";
            for (var h in o)
                Object.prototype.hasOwnProperty.call(o, h) && (c[h] = p(h, o[h], n - 1, s));
            return s.unmemoize(e),
            c
        }
        function h(t, e) {
            try {
                return JSON.parse(JSON.stringify(t, function(t, n) {
                    return p(t, n, e)
                }))
            } catch (t) {
                return "**non-serializable**"
            }
        }
    }
    ).call(this, n(21))
}
, function(t, e, n) {
    (function(e) {
        t.exports.isProd = void 0 !== e && !!e.env.IS_PROD || "undefined" != typeof location && "127.0.0.1" !== location.hostname && "localhost" !== location.hostname && !location.hostname.startsWith("192.168."),
        t.exports.enableHttps = t.exports.isProd,
        t.exports.serverTickRate = 1e3 / 30,
        t.exports.serverSendRate = 100,
        t.exports.clientSendRate = 1e3 / 30,
        t.exports.dltMx = Math.round(1e3 / 30),
        t.exports.streamUpdate = 1e4,
        t.exports.maxPlayers = 8,
        t.exports.serverSpread = 3,
        t.exports.minServerSpace = 3,
        t.exports.gamesPerServer = 5,
        t.exports.serverBrowserRate = 1e4,
        t.exports.maxPlayersTotal = t.exports.maxPlayers * t.exports.gamesPerServer + 50,
        t.exports.kickTimer = 9e4,
        t.exports.apiURL = void 0 === e ? t.exports.isProd ? "krunker.io" == location.hostname ? "https://api.krunker.io" : "https://api_beta.krunker.io" : "http://127.0.0.1:5060" : t.exports.isProd ? "krunker_prod" == e.env.VULTR_SCHEME || "krunker_social" == e.env.VULTR_SCHEME ? "https://api.krunker.io" : "https://api_beta.krunker.io" : "http://127.0.0.1:5060",
        t.exports.needsRestart = !1,
        t.exports.useLooseClient = !1,
        t.exports.rewardTime = 216e5,
        t.exports.rewardMinLvl = 5,
        t.exports.compRegions = [{
            name: "EU",
            icon: "eu",
            data: [{
                name: "KRUNKEUR",
                prize: 1400,
                roster: ["VoKUS", "ronics", "AlexDoubleU", "Nitrahh"]
            }, {
                name: "UUED GUMMID",
                prize: 600,
                roster: ["kiiturii", "WasabiS", "xXNONUTTERXx", "BLNCR"]
            }, {
                name: "Nine",
                prize: 0,
                roster: ["Chupacabra", "The_Zionist", "Tatsuu", "ZR1"]
            }, {
                name: "DOOM",
                prize: 0,
                roster: ["Viiper", "Jbusom", "Tahha", "kari:D"]
            }, {
                name: "OxicPoonTang",
                prize: 0,
                roster: ["cato818", "Amuu123", "Darebydare", "Fortysevens"]
            }]
        }, {
            name: "NA",
            icon: "na",
            data: [{
                name: "nV",
                prize: 1400,
                roster: ["RandomExport", "Rickabonkers", "Kouka", "TaylorFerguson"]
            }, {
                name: "BAKA",
                prize: 600,
                roster: ["4tapp", "Gxngu", "魔42", "Friendlies"]
            }, {
                name: "Krunky Boys",
                prize: 0,
                roster: ["bububoosh", "GGkns", "chazzychaz", "ev0xge0"]
            }, {
                name: "RIP Theta",
                prize: 0,
                roster: ["UB_Caboose", "Applechase", "Predixtions", "Visuall"]
            }, {
                name: "Nine NA",
                prize: 0,
                roster: ["Aoqii", "Keyown", "TristanTu", "Byto"]
            }]
        }, {
            name: "OCE",
            icon: "oce",
            data: [{
                name: "Lore",
                prize: 1400,
                roster: ["Mosswi", "Agent_Chicken", "Stazza", "ShiraishiEZ"]
            }, {
                name: "Omen",
                prize: 600,
                roster: ["Equinoxian", "iiBazza", "vEternity", "Equaus"]
            }, {
                name: "Tokgang",
                prize: 0,
                roster: ["caL_Tv", "gymgoer31", "maxmillion", "peepoglad"]
            }, {
                name: "Lore v2",
                prize: 0,
                roster: ["ZaneAU", "JamemesG", "riderrr", "*Void"]
            }, {
                name: "EXLE",
                prize: 0,
                roster: ["Tatti123", "Kurocchi", "F24CTAL", "-Gaze"]
            }]
        }],
        t.exports.endTimer = 25e3,
        t.exports.endAnim = 5e3,
        t.exports.thirdPZ = 14,
        t.exports.thirdPX = 5,
        t.exports.serverConfig = [{
            name: "Players",
            varN: "maxPlayers",
            def: 2,
            max: 10,
            maxF: 16,
            min: 1,
            step: 1
        }, {
            name: "Min Players",
            varN: "minPlayers",
            def: 0,
            max: 10,
            maxF: 16,
            min: 0,
            step: 1
        }, {
            name: "Lives",
            varN: "lives",
            def: 0,
            max: 10,
            min: 0,
            step: 1
        }, {
            name: "Minutes",
            varN: "gameTime",
            def: 4,
            max: 60,
            min: 0,
            step: 1
        }, {
            name: "Gravity",
            varN: "gravMlt",
            dontChange: !0,
            def: 1,
            max: 2,
            min: .1,
            step: .1
        }, {
            name: "Jump Force",
            varN: "jumpMlt",
            dontChange: !0,
            def: 1,
            max: 3,
            min: .1,
            step: .1
        }, {
            name: "Time Scale",
            varN: "deltaMlt",
            dontChange: !0,
            def: 1,
            max: 1.5,
            min: .1,
            step: .1
        }, {
            name: "Strafe Speed",
            varN: "strafeSpd",
            dontChange: !0,
            def: 1.2,
            max: 2,
            min: 1,
            step: .1
        }, {
            name: "Health Multiplier",
            varN: "healthMlt",
            dontChange: !0,
            def: 1,
            max: 3,
            min: .1,
            step: .1
        }, {
            name: "Weapon Impulse",
            varN: "impulseMlt",
            dontChange: !0,
            def: 1,
            max: 3,
            min: 0,
            step: .1
        }, {
            name: "Team 1 Name",
            varN: "nameTeam1",
            def: "Team 1",
            hideE: !0,
            input: !0
        }, {
            name: "Team 2 Name",
            varN: "nameTeam2",
            def: "Team 2",
            hideE: !0,
            input: !0
        }, {
            name: "Select Team",
            varN: "selTeam",
            def: !1,
            bool: !0
        }, {
            name: "Spectating",
            varN: "allowSpect",
            def: !0,
            bool: !0
        }, {
            name: "Kill Rewards",
            varN: "killRewards",
            dontChange: !0,
            def: !0,
            bool: !0
        }, {
            name: "Sliding",
            varN: "canSlide",
            def: !0,
            bool: !0
        }, {
            name: "Auto Jump",
            varN: "autoJump",
            def: !1,
            bool: !0
        }, {
            name: "3rd Person",
            varN: "thirdPerson",
            def: !1,
            bool: !0
        }, {
            name: "Hide Nametags",
            varN: "nameTags",
            def: !1,
            bool: !0
        }],
        t.exports.prefabIDS = ["CUBE", "CRATE", "BARREL", "LADDER", "PLANE", "SPAWN_POINT", "CAMERA_POSITION", "VEHICLE", "STACK", "RAMP", "SCORE_ZONE", "BILLBOARD", "DEATH_ZONE", "PARTICLES", "OBJECTIVE", "TREE", "CONE", "CONTAINER", "GRASS", "CONTAINERR", "ACIDBARREL", "DOOR", "WINDOW", "FLAG", "WATER", "CHECK_POINT", "WEAPON_PICKUP"],
        t.exports.textureIDS = ["WALL", "DIRT", "FLOOR", "GRID", "GREY", "DEFAULT", "ROOF", "FLAG", "GRASS", "CHECK", "LINES", "BRICK", "LINK"],
        t.exports.objectLimit = 3500,
        t.exports.objectLimitF = 6e3,
        t.exports.spawnLimit = 20,
        t.exports.billboardCnt = 5,
        t.exports.followURLS = ["https://www.instagram.com/sidney.devries/", "https://www.instagram.com/sidney.devries/", "https://www.instagram.com/sidney.devries/", "https://www.instagram.com/sidney.devries/", "https://www.instagram.com/sidney.devries/", "https://www.instagram.com/sidney.devries/", "https://www.instagram.com/vincent.de.vries/"],
        t.exports.gravity = 15e-5,
        t.exports.deathY = -100,
        t.exports.skyScale = 18e3,
        t.exports.shadowDst = 1200,
        t.exports.shadowRes = 1024,
        t.exports.shadowOff = .004,
        t.exports.lightDistance = 500,
        t.exports.cornerPad = 1,
        t.exports.cornerScl = 2.5,
        t.exports.cornerH = 7,
        t.exports.wallH = 5,
        t.exports.wallW = .8,
        t.exports.crateScale = 6,
        t.exports.stackScale = 6,
        t.exports.barrelScale = 4,
        t.exports.acidbarrelScale = t.exports.barrelScale,
        t.exports.treeScale = 10,
        t.exports.doorScale = 5,
        t.exports.windowScale = 6,
        t.exports.coneScale = 4,
        t.exports.containerScale = 7,
        t.exports.containerrScale = t.exports.containerScale,
        t.exports.grassScale = 32,
        t.exports.vehicleScale = 20,
        t.exports.barrelMlt = 1,
        t.exports.ladderWidth = 3.2,
        t.exports.ladderScale = .5,
        t.exports.terrainGrid = 8,
        t.exports.maxTerrainS = 4e3,
        t.exports.otherSoundMlt = .55,
        t.exports.maxParticles = 100,
        t.exports.explosionRange = 200,
        t.exports.chatMaxLength = 70,
        t.exports.chatInterval = 800,
        t.exports.voiceChatInterval = 2e3,
        t.exports.voiceChatMaxLength = 5,
        t.exports.movDirs = [];
        for (var n = 0; 8 > n; ++n)
            t.exports.movDirs.push(-Math.PI + (n + 1) * Math.PI / 4);
        t.exports.interpolation = 1.1,
        t.exports.stateHistory = 1e3,
        t.exports.syncFreq = 800,
        t.exports.pingCount = 10,
        t.exports.mouseSens = .0024,
        t.exports.camChaseTrn = .0022,
        t.exports.camChaseSpd = .0012,
        t.exports.camChaseSen = .2,
        t.exports.camChaseDst = 24,
        t.exports.menuCamDist = 200,
        t.exports.menuCamAngle = -.5,
        t.exports.menuCamSpeed = .1,
        t.exports.idleAnimS = .0015,
        t.exports.animMult = 1.2,
        t.exports.leanPull = .99,
        t.exports.leanSens = .05,
        t.exports.leanMax = .16,
        t.exports.leanPullZ = .99,
        t.exports.leanMltZ = .03,
        t.exports.bobMltY = .024,
        t.exports.bobMltZ = .02,
        t.exports.bobPullY = .985,
        t.exports.bobPullZ = .99,
        t.exports.landPull = .994,
        t.exports.landPullV = .985,
        t.exports.landOff = .15,
        t.exports.aimAnimMlt = .18,
        t.exports.aimSlow = .55,
        t.exports.aimJumpSlow = .85,
        t.exports.stepAnim = .075,
        t.exports.stepMlt = .25,
        t.exports.stepPull = .995,
        t.exports.hpSegments = 7,
        t.exports.maxHealth = 100,
        t.exports.passiveInc = 500,
        t.exports.cameraHeight = 1.5,
        t.exports.playerSpeed = 42e-5,
        t.exports.slippingSpeed = 3e-4,
        t.exports.ladderSpeed = .035,
        t.exports.ladderDecel = .97,
        t.exports.slideDecel = .999,
        t.exports.slideTime = 350,
        t.exports.terrainSlideDecel = .9996,
        t.exports.groundDecel = .99,
        t.exports.terrainDecel = .99,
        t.exports.terrainSlipDecel = .99,
        t.exports.airSpeed = 47e-6,
        t.exports.airDecel = .9996,
        t.exports.jumpVel = .072,
        t.exports.jumpPush = .1,
        t.exports.decelMin = 1e-4,
        t.exports.climbHeight = 3,
        t.exports.wpnSpin = .018,
        t.exports.terrainSlideThreshold = 1.2,
        t.exports.terrainGravityMlt = 1.85,
        t.exports.playerSlideVelMlt = 1.2,
        t.exports.playerTerrainSlideVelMlt = .4,
        t.exports.playerSlippingJumpCooldown = 500,
        t.exports.materialDens = {
            flesh: .2,
            default: .5
        },
        t.exports.nameOffset = .6,
        t.exports.nameOffsetHat = .8,
        t.exports.maxNameLength = 14,
        t.exports.maxPassLength = 16,
        t.exports.playerHeight = 11,
        t.exports.chestWidth = 2.6,
        t.exports.chestScale = 1.3,
        t.exports.armScale = 1.3,
        t.exports.legScale = 1.3,
        t.exports.uArmLength = 2.7,
        t.exports.armInset = -.1,
        t.exports.lArmLength = 2.7,
        t.exports.headScale = 2,
        t.exports.armOff = -.8,
        t.exports.legHeight = 4.2,
        t.exports.playerScale = (2 * t.exports.armScale + t.exports.chestWidth + t.exports.armInset) / 2,
        t.exports.hitBoxPad = 1,
        t.exports.tracerMinDst = 20,
        t.exports.tracerMaxDst = 500,
        t.exports.tracerChance = 1,
        t.exports.crouchLean = -.1 * Math.PI,
        t.exports.crouchDst = 3,
        t.exports.crouchSlow = .3,
        t.exports.crouchSpeed = .007,
        t.exports.crouchJump = .25,
        t.exports.crouchSpread = .4,
        t.exports.crouchAnim = 8e-4,
        t.exports.crouchAnimMlt = .5,
        t.exports.spreadMove = 30,
        t.exports.spreadFall = 35,
        t.exports.spreadRecover = .985,
        t.exports.spreadAdj = 63e-5,
        t.exports.spreadMlt = 400,
        t.exports.recoilMlt = .3,
        t.exports.flagMsg = "You have the Flag",
        t.exports.flagMsgE = "Enemy has your Flag",
        t.exports.flagMsgRC = "Enemy has your Flag",
        t.exports.flagZoneS = 24,
        t.exports.flagZoneH = 36,
        t.exports.flagScale = 12,
        t.exports.flagOff = 6,
        t.exports.flagHOff = 15,
        t.exports.pickupTimer = 100,
        t.exports.pickupZoneX = 12,
        t.exports.pickupZoneZ = 4,
        t.exports.pickupZoneH = 2,
        t.exports.pickupScale = 6,
        t.exports.pickupOff = 1,
        t.exports.maxLevel = 102,
        t.exports.assistTime = 5e3,
        t.exports.assistScore = 25,
        t.exports.assistMin = 20,
        t.exports.medalAnim = 1e3,
        t.exports.medalDelay = 900,
        t.exports.scoreStreak = 2e3,
        t.exports.feedTimer = 2e3,
        t.exports.spinTimer = 1800,
        t.exports.endStats = ["sid", "name", "score", "kills", "deaths", "reward"],
        t.exports.endForm = {
            reward: function(t) {
                return t ? "<span style='color:#F8C55C'>+" + t + "</span> KR" : "NONE"
            },
            time: function(t, e, n) {
                return n.timer || "DNF"
            },
            infected: function(t, e, n) {
                return n.convs
            },
            found: function(t, e, n) {
                return n.convs
            },
            weapon: function(t, e, n) {
                return n.killList.length
            }
        },
        t.exports.hitLife = 2e3,
        t.exports.regenDelay = 5e3,
        t.exports.regenVal = .1,
        t.exports.sprayTimer = 1e3,
        t.exports.sprayRange = 25,
        t.exports.sprayScale = 15,
        t.exports.deathDelay = 2800,
        t.exports.deathFollowD = 100,
        t.exports.suicides = ["uninstall life", "toaster bath", "alt f4", "not alive", "neck rope", "scooter ankle", "death.exe"],
        t.exports.fov = 70,
        t.exports.viewDist = 2e3,
        t.exports.nameVisRate = 200,
        t.exports.worldUV = 60,
        t.exports.ambientVal = .5,
        t.exports.ambD = 2,
        t.exports.ambMlt = 15,
        t.exports.ambOff = .09,
        t.exports.ambScale = 10,
        t.exports.ambDiv = 20,
        t.exports.ambSFactor = 1,
        t.exports.ambBleed = 0,
        t.exports.boosterSpd = .002,
        t.exports.borderH = 1e3,
        t.exports.soundScapes = {
            Default: 1,
            City: 2,
            Desert: 3,
            Market: 4
        },
        t.exports.mapTabs = [{
            n: "Hot",
            c: 45,
            t: "recent"
        }, {
            n: "New",
            c: 30,
            t: "initialdate"
        }, {
            n: "Favorites",
            c: 36,
            t: "votes"
        }, {
            n: "My Maps",
            c: 45,
            sendID: !0,
            t: "votes"
        }, {
            n: "Search",
            search: !0,
            t: "votes"
        }],
        t.exports.modTabs = [{
            n: "Hot",
            t: "recent"
        }, {
            n: "New",
            t: "initialdate"
        }, {
            n: "Favorites",
            t: "votes"
        }, {
            n: "My Mods",
            sendID: !0,
            t: "votes"
        }, {
            n: "Search",
            search: !0,
            t: "votes"
        }],
        t.exports.saleMax = 1e7,
        t.exports.saleGrace = 9e5,
        t.exports.marketMinLVl = 20,
        t.exports.wordFilterT = .7,
        t.exports.rankVar = .03,
        t.exports.newDataInterval = 12e4,
        t.exports.socials = ["leaders", "profile", "maps", "tourney", "market"],
        t.exports.marketQueries = {
            market: {
                btn: "Info",
                checkItem: function(t) {
                    return !!t.funds
                }
            },
            inventory: {
                btn: "List to Sell",
                checkItem: function(t) {
                    return !t.funds && t.cnt
                }
            },
            sales: {
                btn: "Unlist",
                checkItem: function(t) {
                    return !!t.funds
                }
            }
        },
        t.exports.leaderQueries = ["player_score", "player_kills", "player_wins", "player_timeplayed", "player_funds", "player_clan"],
        t.exports.leaderCal = {
            player_score: function(e) {
                var n = Math.max(1, Math.floor(t.exports.rankVar * Math.sqrt(e)));
                return "<span class='floatR'><img src='./img/levels/" + Math.max(Math.min(t.exports.maxLevel - 1, n.roundToNearest(2) - 1), 0) + ".png' class='rnkIcon'>" + n + "</span>"
            },
            player_kills: function(t) {
                return t + "<span class='lName'> kills</span>"
            },
            player_wins: function(t) {
                return t + "<span class='lName'> wins</span>"
            },
            player_funds: function(t) {
                return "<span style='color:rgba(0,0,0,0.4)'>" + t.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + "</span> KR"
            },
            player_timeplayed: function(t) {
                var e = t / 1e3 / 60
                  , n = parseInt(e % 60);
                e /= 60;
                var i = parseInt(e % 24);
                e /= 24;
                var r = parseInt(e);
                return (r ? r + "d " : "") + (i ? i + "h " : "") + (n || 0) + "m "
            }
        },
        t.exports.regionNames = {
            local: "Local",
            "us-nj": "New York",
            "us-il": "Chicago",
            "us-tx": "Dallas",
            "us-wa": "Seattle",
            "us-ca-la": "Los Angeles",
            "us-ga": "Atlanta",
            "nl-ams": "Amsterdam",
            "gb-lon": "London",
            "de-fra": "Frankfurt",
            "us-ca-sv": "Silicon Valley",
            "au-syd": "Sydney",
            "fr-par": "Paris",
            "jb-hnd": "Tokyo",
            "us-fl": "Miami",
            sgp: "Singapore"
        }
    }
    ).call(this, n(14))
}
, function(t, e, n) {
    (function(e) {
        const i = n(7)
          , r = n(35);
        t.exports.keyboardMap = ["", "", "", "CANCEL", "", "", "HELP", "", "BACK_SPACE", "TAB", "", "", "CLEAR", "ENTER", "ENTER_SPECIAL", "", "SHIFT", "CONTROL", "ALT", "PAUSE", "CAPS_LOCK", "KANA", "EISU", "JUNJA", "FINAL", "HANJA", "", "ESCAPE", "CONVERT", "NONCONVERT", "ACCEPT", "MODECHANGE", "SPACE", "PAGE_UP", "PAGE_DOWN", "END", "HOME", "LEFT", "UP", "RIGHT", "DOWN", "SELECT", "PRINT", "EXECUTE", "PRINTSCREEN", "INSERT", "DELETE", "", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "COLON", "SEMICOLON", "LESS_THAN", "EQUALS", "GREATER_THAN", "QUESTION_MARK", "AT", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "OS_KEY", "", "CONTEXT_MENU", "", "SLEEP", "NUMPAD0", "NUMPAD1", "NUMPAD2", "NUMPAD3", "NUMPAD4", "NUMPAD5", "NUMPAD6", "NUMPAD7", "NUMPAD8", "NUMPAD9", "MULTIPLY", "ADD", "SEPARATOR", "SUBTRACT", "DECIMAL", "DIVIDE", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12", "F13", "F14", "F15", "F16", "F17", "F18", "F19", "F20", "F21", "F22", "F23", "F24", "", "", "", "", "", "", "", "", "NUM_LOCK", "SCROLL_LOCK", "WIN_OEM_FJ_JISHO", "WIN_OEM_FJ_MASSHOU", "WIN_OEM_FJ_TOUROKU", "WIN_OEM_FJ_LOYA", "WIN_OEM_FJ_ROYA", "", "", "", "", "", "", "", "", "", "CIRCUMFLEX", "EXCLAMATION", "DOUBLE_QUOTE", "HASH", "DOLLAR", "PERCENT", "AMPERSAND", "UNDERSCORE", "OPEN_PAREN", "CLOSE_PAREN", "ASTERISK", "PLUS", "PIPE", "HYPHEN_MINUS", "OPEN_CURLY_BRACKET", "CLOSE_CURLY_BRACKET", "TILDE", "", "", "", "", "VOLUME_MUTE", "VOLUME_DOWN", "VOLUME_UP", "", "", "SEMICOLON", "EQUALS", "COMMA", "MINUS", "PERIOD", "SLASH", "BACK_QUOTE", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "OPEN_BRACKET", "BACK_SLASH", "CLOSE_BRACKET", "QUOTE", "", "META", "ALTGR", "", "WIN_ICO_HELP", "WIN_ICO_00", "", "WIN_ICO_CLEAR", "", "", "WIN_OEM_RESET", "WIN_OEM_JUMP", "WIN_OEM_PA1", "WIN_OEM_PA2", "WIN_OEM_PA3", "WIN_OEM_WSCTRL", "WIN_OEM_CUSEL", "WIN_OEM_ATTN", "WIN_OEM_FINISH", "WIN_OEM_COPY", "WIN_OEM_AUTO", "WIN_OEM_ENLW", "WIN_OEM_BACKTAB", "ATTN", "CRSEL", "EXSEL", "EREOF", "PLAY", "ZOOM", "", "PA1", "WIN_OEM_CLEAR", ""],
        t.exports.getB64Size = function() {}
        ,
        Number.prototype.round = function(t) {
            return +this.toFixed(t)
        }
        ,
        String.prototype.escape = function() {
            return (this + "").replace(/[\\"']/g, "\\$&").replace(/\u0000/g, "\\0")
        }
        ,
        Number.prototype.roundToNearest = function(t) {
            return 0 < this ? Math.ceil(this / t) * t : 0 > this ? Math.floor(this / t) * t : this
        }
        ,
        t.exports.capFirst = function(t) {
            return t.charAt(0).toUpperCase() + t.slice(1)
        }
        ,
        t.exports.isURL = function(t) {
            try {
                return /^(https?:\/\/)?((([a-z\d]([a-z\d-]*[a-z\d])*)\.)+[a-z]{2,}|((\d{1,3}\.){3}\d{1,3}))(\:\d+)?(\/[-a-z\d%@_.~+&:]*)*(\?[;&a-z\d%@_.,~+&:=-]*)?(\#[-a-z\d_]*)?$/i.test(t)
            } catch (t) {}
            return !1
        }
        ,
        t.exports.arrayAverage = function(t) {
            for (var e = 0, n = 0; n < t.length; n++)
                e += t[n];
            return e / t.length
        }
        ,
        t.exports.countInArray = function(t, e) {
            for (var n = 0, i = 0; i < t.length; i++)
                t[i] === e && n++;
            return n
        }
        ,
        t.exports.formatNum = function(t) {
            var e = Math.floor(Math.log(Math.abs(t)) / Math.log(1e3))
              , n = "kmb"[e - 1];
            return n ? (t / Math.pow(1e3, e)).toFixed(1) + n : "" + t
        }
        ,
        t.exports.randInt = function(t, e) {
            return Math.floor(Math.random() * (e - t + 1)) + t
        }
        ,
        t.exports.randFloat = function(t, e) {
            return Math.random() * (e - t) + t
        }
        ,
        t.exports.getRandom = function(e) {
            return e[t.exports.randInt(0, e.length - 1)]
        }
        ,
        t.exports.getDistance = function(t, e, n, i) {
            return Math.sqrt((n -= t) * n + (i -= e) * i)
        }
        ,
        t.exports.getDistance3D = function(t, e, n, i, r, s) {
            var a = t - i
              , o = e - r
              , c = n - s;
            return Math.sqrt(a * a + o * o + c * c)
        }
        ,
        t.exports.getAnglesSSS = function(t, e, n) {
            var i = Math.acos((e * e + n * n - t * t) / (2 * e * n))
              , r = Math.acos((n * n + t * t - e * e) / (2 * n * t))
              , s = Math.PI - i - r;
            return [-i - Math.PI / 2, r, s]
        }
        ,
        t.exports.getXDir = function(e, n, i, r, s, a) {
            var o = Math.abs(n - s)
              , c = t.exports.getDistance3D(e, n, i, r, s, a);
            return Math.asin(o / c) * (n > s ? -1 : 1)
        }
        ,
        t.exports.getAngleDist = function(t, e) {
            return Math.atan2(Math.sin(e - t), Math.cos(t - e))
        }
        ,
        t.exports.getAngleDist2 = function(t, e) {
            var n = Math.abs(e - t) % (2 * Math.PI);
            return n > Math.PI ? 2 * Math.PI - n : n
        }
        ,
        t.exports.toRad = function(t) {
            return t * (Math.PI / 180)
        }
        ,
        t.exports.getDirection = function(t, e, n, i) {
            return Math.atan2(e - i, t - n)
        }
        ,
        t.exports.lerp = function(t, e, n) {
            return t + (e - t) * n
        }
        ,
        t.exports.orderByScore = function(t, e) {
            return e.score - t.score
        }
        ,
        t.exports.orderByKills = function(t, e) {
            return e.kills - t.kills
        }
        ,
        t.exports.orderByDst = function(t, e) {
            return t.dst - e.dst
        }
        ,
        t.exports.orderByNum = function(t, e) {
            return t - e
        }
        ,
        t.exports.capFirst = function(t) {
            return t.charAt(0).toUpperCase() + t.slice(1)
        }
        ,
        t.exports.truncateText = function(t, e) {
            return t.length > e ? t.substring(0, e) + "..." : t
        }
        ,
        t.exports.randomString = function(t) {
            for (var e = "", n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", i = 0; i < t; i++)
                e += n.charAt(Math.floor(Math.random() * n.length));
            return e
        }
        ,
        t.exports.formatNumCash = function(t) {
            return parseFloat(Math.round(100 * t) / 100).toFixed(2)
        }
        ,
        t.exports.getKeyName = function(e) {
            return 1e4 < e ? "MOUSE " + (e - 1e4) : t.exports.keyboardMap[e]
        }
        ;
        var s = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        t.exports.getDate = function(t) {
            t = t.split(/[-A-Z :\.]/i);
            var e = new Date(t[0],--t[1],t[2],t[3],t[4],t[5])
              , n = new Date(e.getTime());
            return n.getDate() + " " + s[n.getMonth()] + " " + n.getFullYear()
        }
        ,
        t.exports.getTime = function(t, e) {
            var n = parseInt(t % 1e3 / 100)
              , i = parseInt(t / 1e3 % 60)
              , r = parseInt(t / 6e4 % 60);
            return (r = 10 > r ? "0" + r : r) + ":" + (i = 10 > i ? "0" + i : i) + (e ? "." + n : "")
        }
        ,
        t.exports.commaFormatNum = function(t) {
            return t.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
        }
        ,
        t.exports.getReadableTime = function(t, e) {
            var n = Math.floor(t / 864e5)
              , i = Math.floor(t % 864e5 / 36e5)
              , r = Math.floor(t % 36e5 / 6e4)
              , s = Math.floor(t % 6e4 / 1e3);
            return (n ? n + "d " : "") + (i ? i + "h " : "") + (r || 0) + "m " + (e ? s + "s" : "")
        }
        ,
        t.exports.getTimeH = function(t) {
            parseInt(t % 1e3 / 100);
            var e = Math.floor(t / 1e3 % 60)
              , n = Math.floor(t / 6e4 % 60)
              , i = Math.floor(t / 36e5 % 24);
            return (i = 10 > i ? "0" + i : i) + ":" + (n = 10 > n ? "0" + n : n) + ":" + (e = 10 > e ? "0" + e : e)
        }
        ,
        t.exports.scrambleS = function(t) {
            return t && t.replace ? t.replace(/.(.)?/g, "$1") + ("d" + t).replace(/.(.)?/g, "$1") : t
        }
        ,
        t.exports.sanitizeStr = function(t) {
            return t && t.replace ? t.replace(/<|>/g, "").replace(/[^\x00-\x7F]/g, "") : t
        }
        ,
        t.exports.fixTo = function(t, e) {
            return parseFloat(t.toFixed(e))
        }
        ,
        t.exports.limit = function(t, e) {
            return t < -e ? -e : t > e ? e : t
        }
        ,
        t.exports.limitMM = function(t, e, n) {
            return t < e ? e : t > n ? n : t
        }
        ,
        t.exports.cropVal = function(t, e) {
            return t <= e && t >= -e ? 0 : t
        }
        ,
        t.exports.isNumber = function(t) {
            return null != t && "number" == typeof t && !isNaN(t) && isFinite(t)
        }
        ,
        t.exports.arrayInts = function(e) {
            for (var n = 0; n < e.length; ++n)
                if (!t.exports.isNumber(e[n]))
                    return !1;
            return !0
        }
        ,
        t.exports.isArray = function(t) {
            return !!t && t.constructor === Array
        }
        ,
        t.exports.isString = function(t) {
            return t && "string" == typeof t
        }
        ,
        t.exports.emptyString = function(t) {
            return !t || 0 === t.length || /^\s*$/.test(t) || !t.trim()
        }
        ,
        t.exports.compareString = function(t, e) {
            return 0 <= t.toLowerCase().indexOf(e.toLowerCase()) || 0 <= e.toLowerCase().indexOf(t.toLowerCase())
        }
        ;
        t.exports.lineInRect = function(t, e, n, i, r, s, a, o, c, l, p, h) {
            var u = (a - t) * i
              , f = (l - t) * i
              , d = (c - n) * s
              , m = (h - n) * s
              , g = (o - e) * r
              , v = (p - e) * r
              , y = Math.max(Math.max(Math.min(u, f), Math.min(d, m)), Math.min(g, v))
              , b = Math.min(Math.min(Math.max(u, f), Math.max(d, m)), Math.max(g, v));
            return !(0 > b) && !(y > b) && y
        }
        ,
        t.exports.pointInBox3D = function(t, e, n, i, r) {
            return r = r || 0,
            t >= i.x - i.width - r && t <= i.x + i.width + r && e >= i.y - i.height - r && e <= i.y + i.height + r && n >= i.z - i.length - r && n <= i.z + i.length + r
        }
        ,
        t.exports.similar = function(t, e, n) {
            return n = n || 0,
            Math.abs(t - e) <= n
        }
        ,
        t.exports.pointInBox = function(t, e, n, i, r, s, a) {
            return a ? t >= n && t <= r && e >= i && e <= s : t > n && t < r && e > i && e < s
        }
        ,
        t.exports.sharePos = function(t, e, n) {
            return n = n || 0,
            Math.abs(t.x - e.x) <= n && Math.abs(t.y - e.y) <= n && Math.abs(t.z - e.z) <= n && Math.abs(t.d - e.d) <= n
        }
        ,
        t.exports.cdv = {
            x: "width",
            y: "height",
            z: "length"
        },
        t.exports.boxIntersection = function(e, n, i, r, s) {
            var a = t.exports.cdv[i]
              , o = t.exports.cdv[r]
              , c = e[i] - e[a] - .1
              , l = n[i] - n[a] - .1
              , p = e[i] + e[a] + .1
              , h = n[i] + n[a] + .1
              , u = e[r] - e[o] - .1
              , f = n[r] - n[o] - .1
              , d = e[r] + e[o] + .1
              , m = n[r] + n[o] + .1
              , g = Math.max(c, l)
              , v = Math.min(p, h);
            if (v >= g) {
                var y = Math.max(u, f)
                  , b = Math.min(d, m);
                if (b >= y) {
                    for (var w = [{
                        [i]: g,
                        [r]: y,
                        d: s[0]
                    }, {
                        [i]: v,
                        [r]: b,
                        d: s[1]
                    }, {
                        [i]: g,
                        [r]: b,
                        d: s[2]
                    }, {
                        [i]: v,
                        [r]: y,
                        d: s[3]
                    }], x = w.length - 1; 0 <= x; --x)
                        (w[x][i] == p && w[x][i] == h || w[x][i] == c && w[x][i] == l || w[x][r] == d && w[x][r] == m || w[x][r] == u && w[x][r] == f || t.exports.pointInBox(w[x][i], w[x][r], c, u, p, d) || t.exports.pointInBox(w[x][i], w[x][r], l, f, h, m)) && (w[x].dontUse = !0);
                    return w
                }
            }
            return null
        }
        ,
        t.exports.boxCornerIntersection = function(e, n, i, r) {
            for (var s = t.exports.cdv[i], a = t.exports.cdv[r], o = e[i] - e[s], c = n[i] - n[s], l = e[i] + e[s], p = n[i] + n[s], h = e[r] - e[a], u = n[r] - n[a], f = e[r] + e[a], d = n[r] + n[a], m = [{
                [i]: o,
                [r]: h,
                d: Math.PI / 2
            }, {
                [i]: o,
                [r]: f,
                d: Math.PI
            }, {
                [i]: l,
                [r]: h,
                d: 0
            }, {
                [i]: l,
                [r]: f,
                d: -Math.PI / 2
            }], g = m.length - 1; 0 <= g; --g)
                m[g].i = g,
                t.exports.pointInBox(m[g][i], m[g][r], c, u, p, d, !0) || m.splice(g, 1);
            return m.length ? m : null
        }
        ,
        t.exports.getIntersection = function(e, n, i) {
            var r = t.exports.cdv[i]
              , s = e[i] - e[r]
              , a = n[i] - n[r]
              , o = e[i] + e[r]
              , c = n[i] + n[r]
              , l = Math.max(s, a)
              , p = Math.min(o, c);
            if (p >= l) {
                var h = (p - l) / 2;
                return {
                    [i]: l + h,
                    [r]: h
                }
            }
            return null
        }
        ,
        t.exports.limitRectVal = function(e, n, i) {
            var r = t.exports.cdv[i];
            if (e[i] - e[r] < n[i] - n[r]) {
                var s = (n[i] - n[r] - (e[i] - e[r])) / 2;
                e[r] -= s,
                e[i] += s
            }
            if (e[i] + e[r] > n[i] + n[r]) {
                s = (e[i] + e[r] - (n[i] + n[r])) / 2;
                e[r] -= s,
                e[i] -= s
            }
        }
        ,
        t.exports.getMaxRect = function(e, n, i) {
            for (var r, s, a, o, c = t.exports.cdv[n], l = t.exports.cdv[i], p = 0; p < e.length; ++p)
                r = null == r ? e[p][n] - e[p][c] : Math.min(e[p][n] - e[p][c], r),
                a = null == a ? e[p][n] + e[p][c] : Math.max(e[p][n] + e[p][c], a),
                s = null == s ? e[p][i] - e[p][l] : Math.min(e[p][i] - e[p][l], s),
                o = null == o ? e[p][i] + e[p][l] : Math.max(e[p][i] + e[p][l], o);
            return {
                [n]: (r + a) / 2,
                [i]: (s + o) / 2,
                [c]: Math.abs(a - r) / 2,
                [l]: Math.abs(o - s) / 2
            }
        }
        ,
        t.exports.limitRect = function(e, n, i, r, s, a, o, c) {
            var l = t.exports.getMaxRect(a, o, c)
              , p = t.exports.cdv[o]
              , h = t.exports.cdv[c]
              , u = {};
            if (u[o] = e,
            u[c] = n,
            u[p] = i,
            u[h] = r,
            t.exports.limitRectVal(u, l, o),
            t.exports.limitRectVal(u, l, c),
            0 == s || s == Math.PI) {
                var f = u[p];
                u[p] = u[h],
                u[h] = f
            }
            return u
        }
        ,
        t.exports.progressOnLine = function(t, e, n, i, r, s) {
            var a = n - t
              , o = i - e
              , c = Math.sqrt(a * a + o * o);
            return ((a /= c) * (r - t) + (o /= c) * (s - e)) / Math.sqrt(Math.pow(n - t, 2) + Math.pow(i - e, 2))
        }
        ,
        t.exports.generateSID = function(t) {
            for (var e = 0, n = !0; n; ) {
                n = !1,
                e++;
                for (var i = 0; i < t.length; ++i)
                    if (t[i].sid == e) {
                        n = !0;
                        break
                    }
            }
            return e
        }
        ,
        t.exports.levelIconId = function(t) {
            return Math.max(Math.min(i.maxLevel - 1, t.roundToNearest(2) - 1), 0)
        }
        ,
        t.exports.copyToClipboard = function(t) {
            const e = document.createElement("textarea");
            e.value = t,
            e.setAttribute("readonly", ""),
            e.style.position = "absolute",
            e.style.left = "-9999px",
            document.body.appendChild(e);
            const n = !!(0 < document.getSelection().rangeCount) && document.getSelection().getRangeAt(0);
            e.select(),
            document.execCommand("copy"),
            document.body.removeChild(e),
            n && (document.getSelection().removeAllRanges(),
            document.getSelection().addRange(n))
        }
        ;
        var a = function(t, e) {
            return t.concat(e)
        };
        Array.prototype.flatMap = function(t) {
            return function(t, e) {
                return e.map(t).reduce(a, [])
            }(t, this)
        }
        ;
        var o = n(40);
        t.exports.XzkvoOmJxYX = function(e, n) {
            let i = o.encode(e)
              , r = new Uint8Array(i.length + 2);
            return r.set(t.exports.EqpDfiqt(n), r.length - 2),
            r.set(i, 0),
            r
        }
        ,
        t.exports.DoToY = function(e) {
            e = new Uint8Array(e);
            let n = t.exports.pHOAdPW(e[e.length - 2], e[e.length - 1])
              , i = e.slice(0, e.length - 2);
            return [o.decode(i), n]
        }
        ,
        t.exports.wTwBDG = function(t, e) {
            return 255 & t + e
        }
        ,
        t.exports.EqpDfiqt = function(t) {
            return [15 & t >> 4, 15 & t]
        }
        ,
        t.exports.pHOAdPW = function(t, e) {
            return (t << 4) + e
        }
        ,
        t.exports.restartIfNeeded = function(t) {
            if (i.needsRestart) {
                for (var n in t.sockets) {
                    var r = t.sockets[n];
                    r.send("error", "GAME UPDATING"),
                    r.close()
                }
                setTimeout(function() {
                    e.exit()
                }, 1e3)
            }
        }
        ,
        t.exports.thumbnailSize = function(t) {
            return parseInt(.75 * t.replace(/=/g, "").length) / 1e3
        }
        ,
        t.exports.hexToRGB = (t=>t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, (t,e,n,i)=>"#" + e + e + n + n + i + i).substring(1).match(/.{2}/g).map(t=>parseInt(t, 16))),
        t.exports.versionifyUrl = function(t) {
            return t + "?build=" + r
        }
    }
    ).call(this, n(14))
}
, function(t, e, n) {
    (function(t) {
        n.d(e, "a", function() {
            return c
        }),
        n.d(e, "b", function() {
            return h
        }),
        n.d(e, "c", function() {
            return f
        });
        var i = n(0)
          , r = n(2)
          , s = n(24)
          , a = n(10)
          , o = 3
          , c = function() {
            function t(t, e, n) {
                void 0 === e && (e = new a.a),
                void 0 === n && (n = o),
                this._version = n,
                this._stack = [],
                this._stack.push({
                    client: t,
                    scope: e
                })
            }
            return t.prototype._invokeClient = function(t) {
                for (var e, n = [], r = 1; r < arguments.length; r++)
                    n[r - 1] = arguments[r];
                var s = this.getStackTop();
                s && s.client && s.client[t] && (e = s.client)[t].apply(e, i.d(n, [s.scope]))
            }
            ,
            t.prototype.isOlderThan = function(t) {
                return this._version < t
            }
            ,
            t.prototype.bindClient = function(t) {
                this.getStackTop().client = t
            }
            ,
            t.prototype.pushScope = function() {
                var t = this.getStack()
                  , e = 0 < t.length ? t[t.length - 1].scope : void 0
                  , n = a.a.clone(e);
                return this.getStack().push({
                    client: this.getClient(),
                    scope: n
                }),
                n
            }
            ,
            t.prototype.popScope = function() {
                return void 0 !== this.getStack().pop()
            }
            ,
            t.prototype.withScope = function(t) {
                var e = this.pushScope();
                try {
                    t(e)
                } finally {
                    this.popScope()
                }
            }
            ,
            t.prototype.getClient = function() {
                return this.getStackTop().client
            }
            ,
            t.prototype.getScope = function() {
                return this.getStackTop().scope
            }
            ,
            t.prototype.getStack = function() {
                return this._stack
            }
            ,
            t.prototype.getStackTop = function() {
                return this._stack[this._stack.length - 1]
            }
            ,
            t.prototype.captureException = function(t, e) {
                var n = this._lastEventId = Object(r.g)();
                return this._invokeClient("captureException", t, i.a({}, e, {
                    event_id: n
                })),
                n
            }
            ,
            t.prototype.captureMessage = function(t, e, n) {
                var s = this._lastEventId = Object(r.g)();
                return this._invokeClient("captureMessage", t, e, i.a({}, n, {
                    event_id: s
                })),
                s
            }
            ,
            t.prototype.captureEvent = function(t, e) {
                var n = this._lastEventId = Object(r.g)();
                return this._invokeClient("captureEvent", t, i.a({}, e, {
                    event_id: n
                })),
                n
            }
            ,
            t.prototype.lastEventId = function() {
                return this._lastEventId
            }
            ,
            t.prototype.addBreadcrumb = function(t, e) {
                var n = this.getStackTop();
                if (n.scope && n.client) {
                    var s = n.client.getOptions && n.client.getOptions() || {}
                      , a = s.beforeBreadcrumb
                      , o = void 0 === a ? null : a
                      , c = s.maxBreadcrumbs
                      , l = void 0 === c ? 30 : c;
                    if (!(0 >= l)) {
                        var p = (new Date).getTime() / 1e3
                          , h = i.a({
                            timestamp: p
                        }, t)
                          , u = o ? Object(r.b)(function() {
                            return o(h, e)
                        }) : h;
                        null === u || n.scope.addBreadcrumb(u, Math.min(l, 100))
                    }
                }
            }
            ,
            t.prototype.setUser = function(t) {
                var e = this.getStackTop();
                e.scope && e.scope.setUser(t)
            }
            ,
            t.prototype.setTags = function(t) {
                var e = this.getStackTop();
                e.scope && e.scope.setTags(t)
            }
            ,
            t.prototype.setExtras = function(t) {
                var e = this.getStackTop();
                e.scope && e.scope.setExtras(t)
            }
            ,
            t.prototype.setTag = function(t, e) {
                var n = this.getStackTop();
                n.scope && n.scope.setTag(t, e)
            }
            ,
            t.prototype.setExtra = function(t, e) {
                var n = this.getStackTop();
                n.scope && n.scope.setExtra(t, e)
            }
            ,
            t.prototype.setContext = function(t, e) {
                var n = this.getStackTop();
                n.scope && n.scope.setContext(t, e)
            }
            ,
            t.prototype.configureScope = function(t) {
                var e = this.getStackTop();
                e.scope && e.client && t(e.scope)
            }
            ,
            t.prototype.run = function(t) {
                var e = p(this);
                try {
                    t(this)
                } finally {
                    p(e)
                }
            }
            ,
            t.prototype.getIntegration = function(t) {
                var e = this.getClient();
                if (!e)
                    return null;
                try {
                    return e.getIntegration(t)
                } catch (e) {
                    return s.a.warn("Cannot retrieve integration " + t.id + " from the current Hub"),
                    null
                }
            }
            ,
            t.prototype.traceHeaders = function() {
                var t = this.getStackTop();
                if (t.scope && t.client) {
                    var e = t.scope.getSpan();
                    if (e)
                        return {
                            "sentry-trace": e.toTraceparent()
                        }
                }
                return {}
            }
            ,
            t
        }();
        function l() {
            var t = Object(r.e)();
            return t.__SENTRY__ = t.__SENTRY__ || {
                hub: void 0
            },
            t
        }
        function p(t) {
            var e = l()
              , n = f(e);
            return d(e, t),
            n
        }
        function h() {
            var e = l();
            (!u(e) || f(e).isOlderThan(o)) && d(e, new c);
            try {
                var n = Object(r.c)(t, "domain").active;
                if (!n)
                    return f(e);
                if (!u(n) || f(n).isOlderThan(o)) {
                    var i = f(e).getStackTop();
                    d(n, new c(i.client,a.a.clone(i.scope)))
                }
                return f(n)
            } catch (t) {
                return f(e)
            }
        }
        function u(t) {
            return !!(t && t.__SENTRY__ && t.__SENTRY__.hub)
        }
        function f(t) {
            return t && t.__SENTRY__ && t.__SENTRY__.hub ? t.__SENTRY__.hub : (t.__SENTRY__ = t.__SENTRY__ || {},
            t.__SENTRY__.hub = new c,
            t.__SENTRY__.hub)
        }
        function d(t, e) {
            return !!t && (t.__SENTRY__ = t.__SENTRY__ || {},
            t.__SENTRY__.hub = e,
            !0)
        }
    }
    ).call(this, n(62)(t))
}
, function(t, e, n) {
    n.d(e, "a", function() {
        return l
    }),
    n.d(e, "b", function() {
        return h
    });
    var i = n(0)
      , r = n(72)
      , s = n(5)
      , a = n(6)
      , o = n(2)
      , c = n(13)
      , l = function() {
        function t() {
            this._notifyingListeners = !1,
            this._scopeListeners = [],
            this._eventProcessors = [],
            this._breadcrumbs = [],
            this._user = {},
            this._tags = {},
            this._extra = {},
            this._context = {}
        }
        return t.prototype.addScopeListener = function(t) {
            this._scopeListeners.push(t)
        }
        ,
        t.prototype.addEventProcessor = function(t) {
            return this._eventProcessors.push(t),
            this
        }
        ,
        t.prototype._notifyScopeListeners = function() {
            var t = this;
            this._notifyingListeners || (this._notifyingListeners = !0,
            setTimeout(function() {
                t._scopeListeners.forEach(function(e) {
                    e(t)
                }),
                t._notifyingListeners = !1
            }))
        }
        ,
        t.prototype._notifyEventProcessors = function(t, e, n, a) {
            var o = this;
            return void 0 === a && (a = 0),
            new r.a(function(r, c) {
                var l = t[a];
                if (null === e || "function" != typeof l)
                    r(e);
                else {
                    var p = l(i.a({}, e), n);
                    Object(s.j)(p) ? p.then(function(e) {
                        return o._notifyEventProcessors(t, e, n, a + 1).then(r)
                    }).catch(c) : o._notifyEventProcessors(t, p, n, a + 1).then(r).catch(c)
                }
            }
            )
        }
        ,
        t.prototype.setUser = function(t) {
            return this._user = Object(a.b)(t),
            this._notifyScopeListeners(),
            this
        }
        ,
        t.prototype.setTags = function(t) {
            return this._tags = i.a({}, this._tags, Object(a.b)(t)),
            this._notifyScopeListeners(),
            this
        }
        ,
        t.prototype.setTag = function(t, e) {
            var n;
            return this._tags = i.a({}, this._tags, ((n = {})[t] = Object(a.b)(e),
            n)),
            this._notifyScopeListeners(),
            this
        }
        ,
        t.prototype.setExtras = function(t) {
            return this._extra = i.a({}, this._extra, Object(a.b)(t)),
            this._notifyScopeListeners(),
            this
        }
        ,
        t.prototype.setExtra = function(t, e) {
            var n;
            return this._extra = i.a({}, this._extra, ((n = {})[t] = Object(a.b)(e),
            n)),
            this._notifyScopeListeners(),
            this
        }
        ,
        t.prototype.setFingerprint = function(t) {
            return this._fingerprint = Object(a.b)(t),
            this._notifyScopeListeners(),
            this
        }
        ,
        t.prototype.setLevel = function(t) {
            return this._level = Object(a.b)(t),
            this._notifyScopeListeners(),
            this
        }
        ,
        t.prototype.setTransaction = function(t) {
            return this._transaction = t,
            this._notifyScopeListeners(),
            this
        }
        ,
        t.prototype.setContext = function(t, e) {
            return this._context[t] = e ? Object(a.b)(e) : void 0,
            this._notifyScopeListeners(),
            this
        }
        ,
        t.prototype.setSpan = function(t) {
            return this._span = t,
            this._notifyScopeListeners(),
            this
        }
        ,
        t.prototype.startSpan = function(t) {
            var e = new c.a;
            return e.setParent(t),
            this.setSpan(e),
            e
        }
        ,
        t.prototype.getSpan = function() {
            return this._span
        }
        ,
        t.clone = function(e) {
            var n = new t;
            return Object.assign(n, e, {
                _scopeListeners: []
            }),
            e && (n._breadcrumbs = i.d(e._breadcrumbs),
            n._tags = i.a({}, e._tags),
            n._extra = i.a({}, e._extra),
            n._context = i.a({}, e._context),
            n._user = e._user,
            n._level = e._level,
            n._span = e._span,
            n._transaction = e._transaction,
            n._fingerprint = e._fingerprint,
            n._eventProcessors = i.d(e._eventProcessors)),
            n
        }
        ,
        t.prototype.clear = function() {
            return this._breadcrumbs = [],
            this._tags = {},
            this._extra = {},
            this._user = {},
            this._context = {},
            this._level = void 0,
            this._transaction = void 0,
            this._fingerprint = void 0,
            this._span = void 0,
            this._notifyScopeListeners(),
            this
        }
        ,
        t.prototype.addBreadcrumb = function(t, e) {
            var n = (new Date).getTime() / 1e3
              , r = i.a({
                timestamp: n
            }, t);
            return this._breadcrumbs = void 0 !== e && 0 <= e ? i.d(this._breadcrumbs, [Object(a.b)(r)]).slice(-e) : i.d(this._breadcrumbs, [Object(a.b)(r)]),
            this._notifyScopeListeners(),
            this
        }
        ,
        t.prototype.clearBreadcrumbs = function() {
            return this._breadcrumbs = [],
            this._notifyScopeListeners(),
            this
        }
        ,
        t.prototype._applyFingerprint = function(t) {
            t.fingerprint = t.fingerprint ? Array.isArray(t.fingerprint) ? t.fingerprint : [t.fingerprint] : [],
            this._fingerprint && (t.fingerprint = t.fingerprint.concat(this._fingerprint)),
            t.fingerprint && !t.fingerprint.length && delete t.fingerprint
        }
        ,
        t.prototype.applyToEvent = function(t, e) {
            return this._extra && Object.keys(this._extra).length && (t.extra = i.a({}, this._extra, t.extra)),
            this._tags && Object.keys(this._tags).length && (t.tags = i.a({}, this._tags, t.tags)),
            this._user && Object.keys(this._user).length && (t.user = i.a({}, this._user, t.user)),
            this._context && Object.keys(this._context).length && (t.contexts = i.a({}, this._context, t.contexts)),
            this._level && (t.level = this._level),
            this._transaction && (t.transaction = this._transaction),
            this._span && (t.contexts = t.contexts || {},
            t.contexts.trace = this._span),
            this._applyFingerprint(t),
            t.breadcrumbs = i.d(t.breadcrumbs || [], this._breadcrumbs),
            t.breadcrumbs = 0 < t.breadcrumbs.length ? t.breadcrumbs : void 0,
            this._notifyEventProcessors(i.d(p(), this._eventProcessors), t, e)
        }
        ,
        t
    }();
    function p() {
        var t = Object(o.e)();
        return t.__SENTRY__ = t.__SENTRY__ || {},
        t.__SENTRY__.globalEventProcessors = t.__SENTRY__.globalEventProcessors || [],
        t.__SENTRY__.globalEventProcessors
    }
    function h(t) {
        p().push(t)
    }
}
, function(t, e) {
    var n = {}.toString;
    t.exports = Array.isArray || function(t) {
        return "[object Array]" == n.call(t)
    }
}
, function(t, e, n) {
    var i = n(11);
    e.createCodec = o,
    e.install = function(t) {
        for (var e in t)
            s.prototype[e] = a(s.prototype[e], t[e])
    }
    ,
    e.filter = function(t) {
        return i(t) ? function(t) {
            function e(t, e) {
                return e(t)
            }
            return t = t.slice(),
            function(n) {
                return t.reduce(e, n)
            }
        }(t) : t
    }
    ;
    var r = n(3);
    function s(t) {
        return this instanceof s ? (this.options = t,
        void this.init()) : new s(t)
    }
    function a(t, e) {
        return t && e ? function() {
            return t.apply(this, arguments),
            e.apply(this, arguments)
        }
        : t || e
    }
    function o(t) {
        return new s(t)
    }
    s.prototype.init = function() {
        var t = this.options;
        return t && t.uint8array && (this.bufferish = r.Uint8Array),
        this
    }
    ,
    e.preset = o({
        preset: !0
    })
}
, function(t, e, n) {
    n.d(e, "a", function() {
        return s
    });
    var i = n(2)
      , r = /^[ \t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \t]*$/
      , s = function() {
        function t(t, e, n, r) {
            void 0 === t && (t = Object(i.g)()),
            void 0 === e && (e = Object(i.g)().substring(16)),
            this._traceId = t,
            this._spanId = e,
            this._sampled = n,
            this._parent = r
        }
        return t.prototype.setParent = function(t) {
            return this._parent = t,
            this
        }
        ,
        t.prototype.setSampled = function(t) {
            return this._sampled = t,
            this
        }
        ,
        t.fromTraceparent = function(e) {
            var n = e.match(r);
            if (n) {
                var i;
                "1" === n[3] ? i = !0 : "0" === n[3] && (i = !1);
                var s = new t(n[1],n[2],i);
                return new t(n[1],void 0,i,s)
            }
        }
        ,
        t.prototype.toTraceparent = function() {
            var t = "";
            return !0 === this._sampled ? t = "-1" : !1 === this._sampled && (t = "-0"),
            this._traceId + "-" + this._spanId + t
        }
        ,
        t.prototype.toJSON = function() {
            return {
                parent: this._parent && this._parent.toJSON() || void 0,
                sampled: this._sampled,
                span_id: this._spanId,
                trace_id: this._traceId
            }
        }
        ,
        t
    }()
}
, function(t, e) {
    var n, i, r = t.exports = {};
    function s() {
        throw new Error("setTimeout has not been defined")
    }
    function a() {
        throw new Error("clearTimeout has not been defined")
    }
    function o(t) {
        if (n === setTimeout)
            return setTimeout(t, 0);
        if ((n === s || !n) && setTimeout)
            return n = setTimeout,
            setTimeout(t, 0);
        try {
            return n(t, 0)
        } catch (e) {
            try {
                return n.call(null, t, 0)
            } catch (e) {
                return n.call(this, t, 0)
            }
        }
    }
    !function() {
        try {
            n = "function" == typeof setTimeout ? setTimeout : s
        } catch (t) {
            n = s
        }
        try {
            i = "function" == typeof clearTimeout ? clearTimeout : a
        } catch (t) {
            i = a
        }
    }();
    var c, l = [], p = !1, h = -1;
    function u() {
        p && c && (p = !1,
        c.length ? l = c.concat(l) : h = -1,
        l.length && f())
    }
    function f() {
        if (!p) {
            var t = o(u);
            p = !0;
            for (var e = l.length; e; ) {
                for (c = l,
                l = []; ++h < e; )
                    c && c[h].run();
                h = -1,
                e = l.length
            }
            c = null,
            p = !1,
            function(t) {
                if (i === clearTimeout)
                    return clearTimeout(t);
                if ((i === a || !i) && clearTimeout)
                    return i = clearTimeout,
                    clearTimeout(t);
                try {
                    i(t)
                } catch (e) {
                    try {
                        return i.call(null, t)
                    } catch (e) {
                        return i.call(this, t)
                    }
                }
            }(t)
        }
    }
    function d(t, e) {
        this.fun = t,
        this.array = e
    }
    function m() {}
    r.nextTick = function(t) {
        var e = Array(arguments.length - 1);
        if (1 < arguments.length)
            for (var n = 1; n < arguments.length; n++)
                e[n - 1] = arguments[n];
        l.push(new d(t,e)),
        1 !== l.length || p || o(f)
    }
    ,
    d.prototype.run = function() {
        this.fun.apply(null, this.array)
    }
    ,
    r.title = "browser",
    r.browser = !0,
    r.env = {},
    r.argv = [],
    r.version = "",
    r.versions = {},
    r.on = m,
    r.addListener = m,
    r.once = m,
    r.off = m,
    r.removeListener = m,
    r.removeAllListeners = m,
    r.emit = m,
    r.prependListener = m,
    r.prependOnceListener = m,
    r.listeners = function() {
        return []
    }
    ,
    r.binding = function() {
        throw new Error("process.binding is not supported")
    }
    ,
    r.cwd = function() {
        return "/"
    }
    ,
    r.chdir = function() {
        throw new Error("process.chdir is not supported")
    }
    ,
    r.umask = function() {
        return 0
    }
}
, function(t, e, n) {
    var i = n(16).ExtBuffer
      , r = n(47)
      , s = n(48)
      , a = n(12);
    function o() {
        var t = this.options;
        return this.encode = function(t) {
            var e = s.getWriteType(t);
            return function(t, n) {
                var i = e[typeof n];
                if (!i)
                    throw new Error('Unsupported type "' + typeof n + '": ' + n);
                i(t, n)
            }
        }(t),
        t && t.preset && r.setExtPackers(this),
        this
    }
    a.install({
        addExtPacker: function(t, e, n) {
            function r(e) {
                return n && (e = n(e)),
                new i(e,t)
            }
            n = a.filter(n);
            var s = e.name;
            if (s && "Object" !== s) {
                var o = this.extPackers || (this.extPackers = {});
                o[s] = r
            } else {
                var c = this.extEncoderList || (this.extEncoderList = []);
                c.unshift([e, r])
            }
        },
        getExtPacker: function(t) {
            var e = this.extPackers || (this.extPackers = {})
              , n = t.constructor
              , i = n && n.name && e[n.name];
            if (i)
                return i;
            for (var r, s = this.extEncoderList || (this.extEncoderList = []), a = s.length, o = 0; o < a; o++)
                if (r = s[o],
                n === r[0])
                    return r[1]
        },
        init: o
    }),
    e.preset = o.call(a.preset)
}
, function(t, e, n) {
    e.ExtBuffer = function t(e, n) {
        return this instanceof t ? (this.buffer = i.from(e),
        void (this.type = n)) : new t(e,n)
    }
    ;
    var i = n(3)
}
, function(t, e) {
    e.read = function(t, e, n, i, r) {
        var s, a, o = 8 * r - i - 1, c = (1 << o) - 1, l = c >> 1, p = -7, h = n ? r - 1 : 0, u = n ? -1 : 1, f = t[e + h];
        for (h += u,
        s = f & (1 << -p) - 1,
        f >>= -p,
        p += o; 0 < p; s = 256 * s + t[e + h],
        h += u,
        p -= 8)
            ;
        for (a = s & (1 << -p) - 1,
        s >>= -p,
        p += i; 0 < p; a = 256 * a + t[e + h],
        h += u,
        p -= 8)
            ;
        if (0 === s)
            s = 1 - l;
        else {
            if (s === c)
                return a ? NaN : 1 / 0 * (f ? -1 : 1);
            a += Math.pow(2, i),
            s -= l
        }
        return (f ? -1 : 1) * a * Math.pow(2, s - i)
    }
    ,
    e.write = function(t, e, n, i, r, s) {
        var a, o, c, l = 8 * s - r - 1, p = (1 << l) - 1, h = p >> 1, u = 23 === r ? Math.pow(2, -24) - Math.pow(2, -77) : 0, f = i ? 0 : s - 1, d = i ? 1 : -1, m = 0 > e || 0 === e && 0 > 1 / e ? 1 : 0;
        for (e = Math.abs(e),
        isNaN(e) || e === 1 / 0 ? (o = isNaN(e) ? 1 : 0,
        a = p) : (a = Math.floor(Math.log(e) / Math.LN2),
        1 > e * (c = Math.pow(2, -a)) && (a--,
        c *= 2),
        2 <= (e += 1 <= a + h ? u / c : u * Math.pow(2, 1 - h)) * c && (a++,
        c /= 2),
        a + h >= p ? (o = 0,
        a = p) : 1 <= a + h ? (o = (e * c - 1) * Math.pow(2, r),
        a += h) : (o = e * Math.pow(2, h - 1) * Math.pow(2, r),
        a = 0)); 8 <= r; t[n + f] = 255 & o,
        f += d,
        o /= 256,
        r -= 8)
            ;
        for (a = a << r | o,
        l += r; 0 < l; t[n + f] = 255 & a,
        f += d,
        a /= 256,
        l -= 8)
            ;
        t[n + f - d] |= 128 * m
    }
}
, function(t, e, n) {
    var i, r = n(46);
    e.copy = l,
    e.slice = p,
    e.toString = function() {
        return (!o && s.isBuffer(this) ? this.toString : r.toString).apply(this, arguments)
    }
    ,
    e.write = (i = "write",
    function() {
        var t = this[i] || r[i];
        return t.apply(this, arguments)
    }
    );
    var s = n(3)
      , a = s.global
      , o = s.hasBuffer && "TYPED_ARRAY_SUPPORT"in a
      , c = o && !a.TYPED_ARRAY_SUPPORT;
    function l(t, e, n, i) {
        var a = s.isBuffer(this)
          , o = s.isBuffer(t);
        if (a && o)
            return this.copy(t, e, n, i);
        if (!c && !a && !o && s.isView(this) && s.isView(t)) {
            var l = n || null != i ? p.call(this, n, i) : this;
            return t.set(l, e),
            l.length
        }
        return r.copy.call(this, t, e, n, i)
    }
    function p(t, e) {
        var n = this.slice || !c && this.subarray;
        if (n)
            return n.call(this, t, e);
        var i = s.alloc.call(this, e - t);
        return l.call(this, i, 0, t, e),
        i
    }
}
, function(t, e, n) {
    (function(t) {
        !function(e) {
            function n(t, n, y) {
                function b(t, e, n, i) {
                    return this instanceof b ? function(t, e, n, i, r) {
                        if (m && g && (e instanceof g && (e = new m(e)),
                        i instanceof g && (i = new m(i))),
                        !(e || n || i || f))
                            return void (t.buffer = c(v, 0));
                        if (!a(e, n)) {
                            var s = f || Array;
                            r = n,
                            i = e,
                            n = 0,
                            e = new s(8)
                        }
                        t.buffer = e,
                        t.offset = n |= 0,
                        void 0 === i || ("string" == typeof i ? function(t, e, n, i) {
                            var r = 0
                              , s = n.length
                              , a = 0
                              , o = 0;
                            "-" === n[0] && r++;
                            for (var c, l = r; r < s && 0 <= (c = parseInt(n[r++], i)); )
                                o = o * i + c,
                                a = a * i + Math.floor(o / 4294967296),
                                o %= 4294967296;
                            l && (a = ~a,
                            o ? o = 4294967296 - o : a++),
                            x(t, e + _, a),
                            x(t, e + S, o)
                        }(e, n, i, r || 10) : a(i, r) ? o(e, n, i, r) : "number" == typeof r ? (x(e, n + _, i),
                        x(e, n + S, r)) : 0 < i ? L(e, n, i) : 0 > i ? P(e, n, i) : o(e, n, v, 0))
                    }(this, t, e, n, i) : new b(t,e,n,i)
                }
                function w() {
                    var t = this.buffer
                      , e = this.offset
                      , n = M(t, e + _)
                      , i = M(t, e + S);
                    return y || (n |= 0),
                    n ? 4294967296 * n + i : i
                }
                function x(t, e, n) {
                    t[e + A] = 255 & n,
                    n >>= 8,
                    t[e + k] = 255 & n,
                    n >>= 8,
                    t[e + E] = 255 & n,
                    n >>= 8,
                    t[e + T] = 255 & n
                }
                function M(t, e) {
                    return 16777216 * t[e + T] + (t[e + E] << 16) + (t[e + k] << 8) + t[e + A]
                }
                var _ = n ? 0 : 4
                  , S = n ? 4 : 0
                  , T = n ? 0 : 3
                  , E = n ? 1 : 2
                  , k = n ? 2 : 1
                  , A = n ? 3 : 0
                  , L = n ? l : h
                  , P = n ? p : u
                  , C = b.prototype
                  , R = "is" + t
                  , I = "_" + R;
                return C.buffer = void 0,
                C.offset = 0,
                C[I] = !0,
                C.toNumber = w,
                C.toString = function(t) {
                    var e = this.buffer
                      , n = this.offset
                      , i = M(e, n + _)
                      , r = M(e, n + S)
                      , s = ""
                      , a = !y && 2147483648 & i;
                    for (a && (i = ~i,
                    r = 4294967296 - r),
                    t = t || 10; ; ) {
                        var o = i % t * 4294967296 + r;
                        if (i = Math.floor(i / t),
                        r = Math.floor(o / t),
                        s = (o % t).toString(t) + s,
                        !i && !r)
                            break
                    }
                    return a && (s = "-" + s),
                    s
                }
                ,
                C.toJSON = w,
                C.toArray = i,
                d && (C.toBuffer = r),
                m && (C.toArrayBuffer = s),
                b[R] = function(t) {
                    return !(!t || !t[I])
                }
                ,
                e[t] = b,
                b
            }
            function i(t) {
                var e = this.buffer
                  , n = this.offset;
                return f = null,
                !1 !== t && 0 === n && 8 === e.length && y(e) ? e : c(e, n)
            }
            function r(e) {
                var n = this.buffer
                  , i = this.offset;
                if (f = d,
                !1 !== e && 0 === i && 8 === n.length && t.isBuffer(n))
                    return n;
                var r = new d(8);
                return o(r, 0, n, i),
                r
            }
            function s(t) {
                var e = this.buffer
                  , n = this.offset
                  , i = e.buffer;
                if (f = m,
                !1 !== t && 0 === n && i instanceof g && 8 === i.byteLength)
                    return i;
                var r = new m(8);
                return o(r, 0, e, n),
                r.buffer
            }
            function a(t, e) {
                var n = t && t.length;
                return e |= 0,
                n && e + 8 <= n && "string" != typeof t[e]
            }
            function o(t, e, n, i) {
                e |= 0,
                i |= 0;
                for (var r = 0; 8 > r; r++)
                    t[e++] = 255 & n[i++]
            }
            function c(t, e) {
                return Array.prototype.slice.call(t, e, e + 8)
            }
            function l(t, e, n) {
                for (var i = e + 8; i > e; )
                    t[--i] = 255 & n,
                    n /= 256
            }
            function p(t, e, n) {
                var i = e + 8;
                for (n++; i > e; )
                    t[--i] = 255 ^ 255 & -n,
                    n /= 256
            }
            function h(t, e, n) {
                for (var i = e + 8; e < i; )
                    t[e++] = 255 & n,
                    n /= 256
            }
            function u(t, e, n) {
                var i = e + 8;
                for (n++; e < i; )
                    t[e++] = 255 ^ 255 & -n,
                    n /= 256
            }
            var f, d = void 0 !== t && t, m = "undefined" != typeof Uint8Array && Uint8Array, g = "undefined" != typeof ArrayBuffer && ArrayBuffer, v = [0, 0, 0, 0, 0, 0, 0, 0], y = Array.isArray || function(t) {
                return !!t && "[object Array]" == Object.prototype.toString.call(t)
            }
            ;
            n("Uint64BE", !0, !0),
            n("Int64BE", !0, !1),
            n("Uint64LE", !1, !0),
            n("Int64LE", !1, !1)
        }("string" != typeof e.nodeName ? e : this || {})
    }
    ).call(this, n(27).Buffer)
}
, function(t, e, n) {
    var i = n(16).ExtBuffer
      , r = n(50)
      , s = n(32).readUint8
      , a = n(51)
      , o = n(12);
    function c() {
        var t = this.options;
        return this.decode = function(t) {
            var e = a.getReadToken(t);
            return function(t) {
                var n = s(t)
                  , i = e[n];
                if (!i)
                    throw new Error("Invalid type: " + (n ? "0x" + n.toString(16) : n));
                return i(t)
            }
        }(t),
        t && t.preset && r.setExtUnpackers(this),
        this
    }
    o.install({
        addExtUnpacker: function(t, e) {
            (this.extUnpackers || (this.extUnpackers = []))[t] = o.filter(e)
        },
        getExtUnpacker: function(t) {
            return (this.extUnpackers || (this.extUnpackers = []))[t] || function(e) {
                return new i(e,t)
            }
        },
        init: c
    }),
    e.preset = c.call(o.preset)
}
, function(t, e) {
    var n = function() {
        return this
    }();
    try {
        n = n || new Function("return this")()
    } catch (t) {
        "object" == typeof window && (n = window)
    }
    t.exports = n
}
, function(t, e) {
    t.exports = [{
        name: "Sniper Rifle",
        src: "weapon_1",
        icon: "icon_1",
        sound: "weapon_1",
        animWhileAim: !0,
        trail: !0,
        flap: {
            src: "flap_0",
            rot: 2.1,
            scl: 1,
            zOff: .43,
            xOff: .17,
            yOff: .53
        },
        noAo: !0,
        nAuto: !0,
        type: 0,
        scope: !0,
        swapTime: 300,
        aimSpeed: 120,
        spdMlt: .95,
        ammo: 3,
        reload: 1500,
        dmg: 100,
        pierce: .2,
        range: 1e3,
        dropStart: 230,
        dmgDrop: 30,
        scale: .00115608717587935,
        leftHoldY: -.7,
        rightHoldY: -.75,
        leftHoldZ: 2.4,
        rightHoldZ: .4,
        xOff: .8,
        yOff: -.68,
        zOff: -1.8,
        xOrg: 0,
        yOrg: -.55,
        zOrg: -.8,
        cLean: .2,
        cRot: .2,
        cDrop: .1,
        inspectR: .2,
        inspectM: .1,
        muzOff: 8,
        muzMlt: 1.6,
        rate: 900,
        spread: 260,
        zoom: 2.7,
        leanMlt: 1.5,
        recoil: .009,
        recoilR: .02,
        recover: .993,
        recoverY: .997,
        recoverF: .975,
        recoilYM: .35,
        recoilZ: 1.4,
        recoilAnim: {
            time: 280,
            aimTime: 500,
            recoilTweenY: .2
        },
        jumpYM: .15,
        rumble: .9,
        rumbleDur: 500
    }, {
        name: "Assault Rifle",
        src: "weapon_2",
        icon: "icon_2",
        sound: "weapon_2",
        noAo: !0,
        attach: 0,
        attachYOff: -.1,
        attachZOff: -.8,
        zRot: 1,
        type: 0,
        swapTime: 300,
        aimSpeed: 130,
        spdMlt: .95,
        ammo: 30,
        reload: 1200,
        dmg: 24,
        pierce: 1,
        range: 700,
        dmgDrop: 5,
        scale: .00095745145728643,
        leftHoldY: -.45,
        rightHoldY: -.6,
        leftHoldZ: .65,
        rightHoldZ: -1.3,
        xOff: 1,
        yOff: -.7,
        yRot: .0018,
        zOff: -3.6,
        xOrg: 0,
        yOrg: -.625,
        zOrg: -2.3,
        cLean: .2,
        cRot: .2,
        cDrop: .1,
        inspectR: .1,
        inspectM: 1.5,
        caseZOff: -1.7,
        caseYOff: -.2,
        muzOff: 5.1,
        muzOffY: -.05,
        muzMlt: 1.4,
        rate: 110,
        spread: 100,
        minSpread: 5,
        zoom: 1.6,
        leanMlt: 1.5,
        recoil: .003,
        recoilR: .02,
        recover: .978,
        recoverY: .995,
        recoverF: .975,
        jYMlt: .9,
        recoilYM: .32,
        recoilZ: 5,
        recoilZM: -.05,
        aimRecMlt: .8,
        recoilAnim: {
            time: 300,
            recoilTweenY: .05
        },
        jumpYM: .6,
        rumble: .5
    }, {
        name: "Pistol",
        src: "weapon_3",
        icon: "icon_3",
        sound: "weapon_3",
        secondary: !0,
        noAo: !0,
        transp: !0,
        nAuto: !0,
        kill: ["", 75],
        type: 1,
        shine: 30,
        swapTime: 350,
        aimSpeed: 120,
        spdMlt: 1.05,
        ammo: 10,
        reload: 700,
        dmg: 20,
        range: 700,
        dmgDrop: 10,
        scale: .0003158947055276376,
        leftHoldY: -.9,
        rightHoldY: -.62,
        leftHoldZ: -.55,
        rightHoldZ: -.5,
        xOff: .7,
        yOff: -.75,
        zOff: -4.5,
        xOrg: 0,
        yRot: -.005,
        yOrg: -.23,
        zOrg: -4.25,
        jYMlt: .1,
        cLean: .3,
        cRot: .3,
        caseZOff: .2,
        caseYOff: 0,
        inspectR: .3,
        inspectM: .8,
        muzOff: 1.5,
        muzOffY: 0,
        muzMlt: .95,
        rate: 150,
        spread: 90,
        zoom: 1.4,
        leanMlt: 1,
        recoil: .006,
        recoilR: .01,
        recover: .98,
        recoverY: .99,
        recoverF: .98,
        recoilYM: .2,
        aimRecMlt: .4,
        recoilZ: 3.6,
        recoilZM: -.4,
        recoilAnim: {
            time: 200,
            recoilTweenY: .2
        },
        rumble: .4
    }, {
        name: "Submachine Gun",
        src: "weapon_4",
        icon: "icon_4",
        sound: "weapon_4",
        attach: 0,
        attachYOff: -.09,
        attachZOff: -1.1,
        zRot: .75,
        noAo: !0,
        type: 0,
        swapTime: 300,
        aimSpeed: 120,
        spdMlt: 1.04,
        ammo: 24,
        reload: 1200,
        dmg: 18,
        pierce: 1,
        range: 700,
        dmgDrop: 12,
        scale: .000574897587939697,
        leftHoldY: -.4,
        leftHoldX: -.1,
        rightHoldY: -.5,
        leftHoldZ: 1.1,
        rightHoldZ: -.95,
        xOff: .85,
        yOff: -.86,
        zOff: -3,
        xOrg: 0,
        yOrg: -.59,
        zOrg: -2.5,
        cRot: .18,
        cLean: .16,
        inspectR: .2,
        inspectM: 1.2,
        caseYOff: -.15,
        caseZOff: -.4,
        muzOff: 2.15,
        muzOffY: .1,
        rate: 90,
        spread: 90,
        minSpread: 5,
        zoom: 1.65,
        jYMlt: .8,
        leanMlt: 1,
        recoil: .0034,
        recoilY: .77,
        recoilR: .02,
        recover: .975,
        recoverY: .996,
        recoverF: .975,
        recoilZ: 3.2,
        recoilZM: -.1,
        aimRecMlt: .7,
        recoilAnim: {
            time: 200,
            recoilTweenYM: .05,
            recoilTweenY: .06
        },
        expScale: .8,
        rumble: .4
    }, {
        name: "Revolver",
        src: "weapon_5",
        icon: "icon_5",
        sound: "weapon_5",
        nAuto: !0,
        nCase: !0,
        transp: !0,
        kill: ["", 50],
        type: 0,
        swapTime: 200,
        aimSpeed: 120,
        spdMlt: 1.04,
        ammo: 6,
        reload: 900,
        dmg: 66,
        pierce: .85,
        dmgDrop: 10,
        scale: 1.3,
        leftHoldY: -1.1,
        rightHoldY: -.8,
        leftHoldZ: -.5,
        rightHoldZ: -.5,
        xOff: .7,
        yOff: -.7,
        zOff: -4.1,
        xOrg: 0,
        yOrg: -.31,
        zOrg: -3.8,
        jYMlt: .5,
        cLean: .5,
        cRot: .4,
        cDrop: .1,
        inspectR: .1,
        inspectM: .3,
        muzOff: 2.75,
        muzOffY: .2,
        muzMlt: .95,
        range: 700,
        rate: 390,
        spread: 100,
        zoom: 1.4,
        leanMlt: 1.6,
        recoil: .013,
        recoilR: .035,
        recover: .982,
        recoverY: .992,
        recoverF: .98,
        recoilYM: .2,
        aimRecMlt: .6,
        recoilZM: -1.4,
        recoilZ: 2,
        recoilAnim: {
            time: 300,
            recoilTweenY: .4
        },
        expScale: .9,
        rumble: .7
    }, {
        name: "Shotgun",
        src: "weapon_6",
        icon: "icon_6",
        sound: "weapon_6",
        noAo: !0,
        nAuto: !0,
        nCase: !0,
        transp: !0,
        nRing: !0,
        shine: 35,
        type: 0,
        physRang: 35,
        physPow: .085,
        swapTime: 300,
        aimSpeed: 120,
        spdMlt: 1,
        ammo: 2,
        shots: 5,
        reload: 1100,
        dmg: 50,
        dmgDrop: 50,
        scale: .00082934281407035,
        rightHoldX: .1,
        leftHoldY: -.5,
        rightHoldY: -.7,
        leftHoldZ: .4,
        rightHoldZ: -1.5,
        xOff: .95,
        yOff: -.65,
        zOff: -3.8,
        xOrg: 0,
        yOrg: -.3,
        zOrg: -2.8,
        cLean: .2,
        cRot: .2,
        cDrop: .1,
        jYMlt: .2,
        inspectR: .1,
        inspectM: 1.9,
        muzOff: 6,
        muzMlt: 1.8,
        range: 240,
        rate: 400,
        innac: 110,
        spread: 120,
        minSpread: 20,
        zoom: 1.25,
        leanMlt: 1.6,
        recoil: .016,
        recoilR: .015,
        recover: .99,
        recoverF: .97,
        recoilZ: 2,
        recoilZM: .2,
        aimRecMlt: .5,
        recoilYM: .6,
        recoilAnim: {
            time: 340,
            recoilTweenY: .2
        },
        jumpYM: .5,
        rumble: .8
    }, {
        name: "Light Machine Gun",
        src: "weapon_7",
        icon: "icon_7",
        sound: "weapon_7",
        type: 0,
        attach: 0,
        attachYOff: -.085,
        attachZOff: -.7,
        zRot: .75,
        noAo: !0,
        swapTime: 800,
        aimSpeed: 200,
        spdMlt: .79,
        ammo: 60,
        reload: 3500,
        dmg: 20,
        pierce: 1,
        range: 700,
        dmgDrop: 10,
        jYMlt: .8,
        scale: .0008856008924623108,
        leftHoldY: -.85,
        leftHoldX: .4,
        rightHoldY: -.75,
        leftHoldZ: 1.1,
        rightHoldZ: -.2,
        yRot: -.01,
        xOff: .95,
        yOff: -.75,
        zOff: -2.8,
        xOrg: 0,
        yOrg: -.6,
        zOrg: -1.8,
        cLean: .1,
        cRot: .1,
        cDrop: .1,
        inspectR: .2,
        inspectM: .6,
        caseInd: 2,
        caseZOff: -.5,
        caseYOff: -.1,
        muzOff: 5.5,
        muzOffY: -.14,
        muzMlt: 1.7,
        rate: 120,
        spread: 300,
        minSpread: 10,
        zoom: 1.3,
        leanMlt: 1.6,
        recoil: .0032,
        recoilR: .014,
        recover: .98,
        recoverY: .9975,
        recoverF: .975,
        recoilZ: 3.8,
        recoilYM: .25,
        recoilZ: 3,
        recoilZM: -.1,
        aimRecMlt: .5,
        recoilAnim: {
            time: 200,
            recoilTweenY: .03
        },
        jumpYM: .5,
        expScale: .85,
        rumble: .65
    }, {
        name: "Semi Auto",
        src: "weapon_8",
        icon: "icon_8",
        sound: "weapon_8",
        attach: 0,
        attachYOff: -.08,
        attachZOff: -1.55,
        nAuto: !0,
        zRot: .7,
        type: 0,
        noAo: !0,
        swapTime: 400,
        aimSpeed: 120,
        spdMlt: 1,
        ammo: 8,
        reload: 1500,
        dmg: 34,
        pierce: .2,
        range: 1e3,
        dmgDrop: 0,
        scale: .00093686221105528,
        leftHoldY: -.5,
        rightHoldY: -.45,
        leftHoldZ: .4,
        rightHoldZ: -1.85,
        jYMlt: .9,
        xOff: .8,
        yOff: -.55,
        zOff: -3.5,
        xOrg: 0,
        yOrg: -.395,
        yRot: -.005,
        zOrg: -3.4,
        cLean: .2,
        cRot: .2,
        cDrop: .1,
        inspectR: .2,
        inspectM: 1.4,
        muzOff: 4,
        muzOffY: -.05,
        muzMlt: 1.1,
        rate: 120,
        spread: 250,
        caseZOff: -1.3,
        zoom: 2.1,
        recoil: .01,
        recoilR: .012,
        recover: .98,
        recoilY: .36,
        recoverY: .994,
        recoverF: .975,
        recoilYM: .6,
        recoilZ: 2,
        recoilZM: .2,
        aimRecMlt: .8,
        recoilAnim: {
            time: 250,
            recoilTweenY: .11
        },
        jumpYM: .5,
        rumble: .75
    }, {
        name: "Rocket Launcher",
        src: "weapon_9",
        icon: "icon_9",
        sound: "weapon_9",
        nInsp: !0,
        nSkill: !0,
        nAuto: !0,
        nCase: !0,
        nRing: !0,
        noAo: !0,
        projectile: 0,
        type: 0,
        swapTime: 600,
        aimSpeed: 200,
        spdMlt: .9,
        ammo: 1,
        reload: 1600,
        scale: .00076263407035176,
        leftHoldX: -.1,
        leftHoldY: -.36,
        rightHoldY: -.3,
        leftHoldZ: 1.2,
        rightHoldX: -.15,
        rightHoldZ: -.2,
        jYMlt: .4,
        xOff: .95,
        yOff: -.56,
        zOff: -2.6,
        xOrg: 0,
        yOrg: -.945,
        zOrg: -3,
        zRot: .9,
        cLean: .2,
        cRot: .2,
        cDrop: .1,
        muzOff: 5,
        muzOffY: 0,
        muzMlt: 1.5,
        rate: 1,
        spread: 120,
        minSpread: 15,
        zoom: 1.5,
        leanMlt: 1.4,
        landBob: .8,
        recoil: .008,
        recoilR: .012,
        recover: .99,
        recoverY: .998,
        recoverF: .975,
        recoilZ: 4,
        recoilZM: -.5,
        aimRecMlt: .9,
        recoilAnim: {
            time: 400,
            recoilTweenY: .25
        },
        jumpYM: .3,
        expScale: .7,
        rumble: 1,
        rumbleDur: 750
    }, {
        name: "Akimbo Uzi",
        src: "weapon_10",
        icon: "icon_10",
        sound: "weapon_10",
        nInsp: !0,
        noAim: !0,
        akimbo: !0,
        type: 0,
        swapTime: 300,
        aimSpeed: 120,
        spdMlt: 1.04,
        ammo: 18,
        reload: 1200,
        dmg: 18,
        pierce: 1,
        range: 700,
        dmgDrop: 12,
        scale: .9,
        rightHoldY: -.55,
        leftHoldZ: .3,
        leftHoldX: -.25,
        leftHoldY: -.55,
        rightHoldZ: .3,
        rightHoldX: -.25,
        holdW: 1.3,
        xOff: 1.5,
        yOff: -.95,
        zOff: -3.3,
        xOrg: 0,
        yOrg: -.62,
        zOrg: -2.5,
        zLnM: .4,
        cLean: .1,
        cRot: .1,
        cDrop: .2,
        caseYOff: -.15,
        caseZOff: -.4,
        muzOff: 3.6,
        rate: 60,
        spread: 40,
        spreadInc: 1.5,
        minSpread: 10,
        zoom: 1.5,
        leanMlt: .6,
        recoil: .0034,
        recoilR: .015,
        recover: .978,
        recoverY: .996,
        recoverF: .975,
        recoilZ: 5,
        recoilYM: .6,
        recoilAnim: {
            recoilTweenY: .01
        },
        expScale: .7,
        rumble: .4
    }, {
        name: "Desert Eagle",
        src: "weapon_11",
        icon: "icon_11",
        sound: "weapon_11",
        secondary: !0,
        minRec: 15,
        nAuto: !0,
        noAo: !0,
        transp: !0,
        kill: ["", 50],
        type: 1,
        swapTime: 200,
        aimSpeed: 120,
        spdMlt: 1,
        ammo: 6,
        reload: 1e3,
        dmg: 50,
        pierce: .85,
        dmgDrop: 10,
        scale: .94,
        leftHoldY: -.9,
        rightHoldY: -.7,
        leftHoldZ: -.5,
        rightHoldZ: -.5,
        holdW: .95,
        xOff: 1.3,
        yOff: -.85,
        zOff: -4.1,
        xOrg: 0,
        yOrg: -.195,
        zOrg: -3.8,
        cLean: .5,
        cRot: .8,
        cDrop: .1,
        inspectR: .1,
        inspectM: .9,
        muzOff: 2,
        muzMlt: 1.1,
        range: 700,
        rate: 400,
        spread: 150,
        jYMlt: .5,
        zoom: 1.4,
        leanMlt: 1.6,
        recoil: .01,
        recoilR: .01,
        recover: .985,
        recoverY: .996,
        recoverF: .98,
        recoilYM: .4,
        aimRecMlt: .7,
        recoilZ: 2.5,
        recoilZM: -.4,
        recoilAnim: {
            time: 350,
            recoilTweenY: .4
        },
        rumble: .8
    }, {
        name: "Alien Blaster",
        src: "weapon_13",
        icon: "icon_13",
        sound: "weapon_13",
        secondary: !0,
        nRing: !0,
        nAuto: !0,
        transp: !0,
        nCase: !0,
        minRec: 50,
        kill: ["", 50],
        type: 1,
        swapTime: 200,
        aimSpeed: 120,
        spdMlt: 1,
        ammo: 4,
        reload: 1500,
        dmg: 50,
        pierce: .85,
        dmgDrop: 10,
        scale: 1.1,
        leftHoldY: -1,
        rightHoldY: -.65,
        leftHoldZ: -.2,
        rightHoldZ: -.2,
        xOff: 1.3,
        yOff: -.83,
        zOff: -4.1,
        xOrg: 0,
        yRot: -.01,
        yOrg: -.53,
        zOrg: -3.8,
        cLean: .2,
        cRot: .2,
        cDrop: 0,
        inspectR: .1,
        inspectM: .8,
        holdW: .7,
        muzOff: 2.2,
        muzOffY: .1,
        muzID: 3,
        muzMlt: 1.1,
        jYMlt: .8,
        range: 700,
        rate: 150,
        spread: 150,
        zoom: 1.4,
        leanMlt: 1.6,
        recoil: .006,
        recoilR: .01,
        recover: .98,
        recoverY: .99,
        recoverF: .98,
        recoilYM: .2,
        recoilZ: 2,
        aimRecMlt: .6,
        recoilAnim: {
            time: 200,
            recoilTweenY: .3
        },
        rumble: .4
    }, {
        name: "Hands",
        melee: !0,
        nInsp: !0,
        noSkins: !0,
        holdW: .9,
        sounds: ["swish_0", "swish_1"],
        noAim: !0,
        anim: function(t, e) {
            t.handAnimInd = -1 * (t.handAnimInd || 1);
            var n = (1 == t.handAnimInd ? "l" : "r") + "HndTween";
            t[n] && t[n].stop(),
            t[n + "A"] = t[n + "A"] || 0,
            t[n] = new e.Tween(t).to({
                [n + "A"]: 2.4
            }, 30).easing(e.Easing.Linear.None).onComplete(function() {
                t[n] = new e.Tween(t).to({
                    [n + "A"]: 0
                }, 200).easing(e.Easing.Linear.None).delay(100).start()
            }).start()
        },
        type: 1,
        swapTime: 350,
        aimSpeed: 120,
        rate: 250,
        dmg: 50,
        dmgDrop: 0,
        range: 15,
        spdMlt: 1.1,
        spread: 100,
        leftHoldY: -.82,
        leftHoldX: 1.3,
        rightHoldX: -1.3,
        rightHoldY: -.82,
        leftHoldZ: -.5,
        rightHoldZ: -.5,
        xOff: 0,
        yOff: -.8,
        zOff: -3,
        xOrg: 0,
        yOrg: 0,
        zOrg: 0,
        zoom: 1.5,
        leanMlt: 1,
        recoil: .006,
        recoilR: .01,
        recover: .98,
        recoverF: .98,
        rumble: 1
    }, {
        name: "Crossbow",
        src: "weapon_17",
        icon: "icon_17",
        sound: "weapon_17",
        noSkins: !0,
        nInsp: !0,
        nRing: !0,
        nAuto: !0,
        noAo: !0,
        nCase: !0,
        nMuz: !0,
        attach: 0,
        attachYOff: -.1,
        attachZOff: .65,
        kill: ["", 100],
        type: 0,
        projectile: 1,
        swapTime: 200,
        aimSpeed: 120,
        spdMlt: 1,
        ammo: 1,
        reload: 1e3,
        dmg: 100,
        pierce: 0,
        dmgDrop: 0,
        scale: .0007303348040201011,
        leftHoldY: -.33,
        rightHoldY: -.28,
        leftHoldZ: 2.2,
        leftHoldX: 0,
        rightHoldZ: .9,
        xOff: 1.3,
        yOff: -.95,
        zOff: -1.9,
        xOrg: 0,
        yOrg: -.72,
        zOrg: -1,
        cLean: .1,
        cRot: .1,
        zRot: .9,
        cDrop: .2,
        holdW: .5,
        muzOff: 2.2,
        muzOffY: .1,
        muzID: 3,
        muzMlt: 1.1,
        jYMlt: .95,
        range: 700,
        rate: 150,
        spread: 300,
        zoom: 1.4,
        leanMlt: .3,
        recoil: .007,
        recoilR: .01,
        recover: .985,
        recoverY: .996,
        recoverF: .98,
        recoilZ: 4,
        recoilAnim: {
            time: 300,
            recoilTweenY: .1
        },
        rumble: .5
    }],
    t.exports.findWeaponBySrc = function(e) {
        for (var n = 0; n < t.exports.length; ++n)
            if (t.exports[n].src == "weapon_" + e)
                return t.exports[n];
        return null
    }
}
, function(t, e, n) {
    var i = n(4);
    const r = n(7);
    n(8);
    var s = {};
    t.exports.getColor = function(t, e) {
        var n = t + "-" + (e || "")
          , r = s[n];
        return r || (r = new i.Color(t),
        e && r.multiplyScalar(e),
        s[n] = r),
        r
    }
    ,
    t.exports.colorize = function(e, n, i) {
        n = i || t.exports.getColor(n);
        for (var r = 0; r < e.faces.length; ++r)
            e.faces[r].vertexColors[0] = n,
            e.faces[r].vertexColors[1] = n,
            e.faces[r].vertexColors[2] = n
    }
    ;
    var a, o = function(t, e, n, r) {
        for (var s, a = new i.Vector2(e,n).multiplyScalar(r || 1), o = 0; o < t.faceVertexUvs.length; o++) {
            s = t.faceVertexUvs[o];
            for (var c = 0; c < s.length; c++)
                for (var l, p = 0; 3 > p; p++)
                    (l = s[c][p].multiply(a)).x = .5 + l.x - a.x / 2
        }
    }, c = function(t, e, n, i, r, s) {
        return t >= n - r && t <= n + r && e >= i - s && e <= i + s
    }, l = [], p = ["a", "b", "c", "d"];
    t.exports.generatePlane = function(e, n, s, h, u, f) {
        e *= s.ratio || 1;
        var d = (s.scale ? e + "_" + n + "_" : "") + (s.scale || "") + (s.tilesX || "") + (s.tilesZ || "") + (s.noise ? h + "_" + u + "_" + f : "") + (null == s.colr ? "" : s.colr) + (s.dark || "");
        if (!(a = l[d])) {
            if (a = new i.PlaneGeometry(1,1,s.tilesX || 1,s.tilesZ || 1),
            s.noise) {
                for (var m = {}, g = s.margin || 0, v = 0; v < a.vertices.length; ++v) {
                    var y = a.vertices[v].x
                      , b = a.vertices[v].y;
                    if (!s.pinEdges || -.5 != y && .5 != y && -.5 != b && .5 != b)
                        if (s.objects) {
                            for (var w = 0; w < s.objects.length; ++w)
                                if (s.objects[w].y - s.objects[w].height <= u + .1 && s.objects[w].y + s.objects[w].height > u + s.noise && c(f + -b * e * 2, h + y * n * 2, s.objects[w].z, s.objects[w].x, s.objects[w].length + g, s.objects[w].width + g)) {
                                    a.vertices[v].z = Math.random() * s.noise + 1,
                                    m[v] = t.exports.getColor(s.colr, .6);
                                    break
                                }
                        } else
                            a.vertices[v].z = Math.random() * s.noise;
                    m[v] || (m[v] = t.exports.getColor(s.colr))
                }
                for (v = 0; v < a.faces.length; v++) {
                    for (var x = a.faces[v], M = 0, _ = 0; 3 > _; _++)
                        x.vertexColors[_] = m[x[p[_]]],
                        0 >= a.vertices[x[p[_]]].z && M++;
                    3 <= M && delete a.faces[v]
                }
                a.faces = a.faces.filter(function(t) {
                    return t
                }),
                a.elementsNeedUpdate = !0
            } else
                t.exports.colorize(a, null, t.exports.getColor(s.colr || 16777215, s.dark || 1));
            s.scale && o(a, n / r.worldUV, e / r.worldUV, s.scale),
            a.computeVertexNormals(),
            l[d] = a
        }
        return a
    }
    ;
    var h = [];
    t.exports.generateCube = function(e, n, s, c, l) {
        e = e || [1, 1, 1, 1, 1, 1],
        l.flipp = (n > s || c > s) && "floor_0" == l.src,
        l.flippW = n > c && "floor_0" == l.src;
        for (var p = (l.scale ? n + "_" + s + "_" + c + "_" : "") + (null == l.colr ? "" : l.colr) + (l.scale || "") + (l.flippW ? "flw" : "fnw") + (l.flipp ? "fl" : "fn") + (l.amb || "") + (l.fAmb || "") + (l.useScale || ""), u = 0; u < e.length; ++u)
            p += "_" + e[u];
        if (!(a = h[p])) {
            l.colr = null == l.colr ? 16777215 : l.colr;
            var f = t.exports.getColor(l.colr)
              , d = l.amb ? t.exports.getColor(l.colr, l.amb) : f;
            if (l.fAmb) {
                var m = f;
                f = d,
                d = m
            }
            a = new i.Geometry;
            var g, v = [];
            e[0] && ((g = new i.PlaneGeometry(1,1)).rotateY(Math.PI / 2),
            l.flipp && g.rotateX(Math.PI / 2),
            g.translate(.5, .5, 0),
            g.faces[0].vertexColors = [f, d, f],
            g.faces[1].vertexColors = [d, d, f],
            l.scale && o(g, (l.flipp ? s : c) / r.worldUV, (l.flipp ? c : s) / r.worldUV, l.scale),
            v.push(g)),
            e[1] && ((g = new i.PlaneGeometry(1,1)).rotateY(-Math.PI / 2),
            l.flipp && g.rotateX(Math.PI / 2),
            g.translate(-.5, .5, 0),
            g.faces[0].vertexColors = [f, d, f],
            g.faces[1].vertexColors = [d, d, f],
            l.scale && o(g, (l.flipp ? s : c) / r.worldUV, (l.flipp ? c : s) / r.worldUV, l.scale),
            v.push(g)),
            e[2] && ((g = new i.PlaneGeometry(1,1)).rotateX(-Math.PI / 2),
            l.flippW && g.rotateY(Math.PI / 2),
            g.translate(0, 1, 0),
            g.faces[0].vertexColors = [f, f, f],
            g.faces[1].vertexColors = [f, f, f],
            l.scale && o(g, (l.flippW ? c : n) / r.worldUV, (l.flippW ? n : c) / r.worldUV, l.scale),
            v.push(g)),
            e[3] && ((g = new i.PlaneGeometry(1,1)).rotateX(Math.PI / 2),
            l.flippW && g.rotateY(Math.PI / 2),
            g.translate(0, 0, 0),
            g.faces[0].vertexColors = [d, d, d],
            g.faces[1].vertexColors = [d, d, d],
            l.scale && o(g, (l.flippW ? c : n) / r.worldUV, (l.flippW ? n : c) / r.worldUV, l.scale),
            v.push(g)),
            e[4] && (g = new i.PlaneGeometry(1,1),
            l.flipp && g.rotateZ(Math.PI / 2),
            g.translate(0, .5, .5),
            g.faces[0].vertexColors = [f, d, f],
            g.faces[1].vertexColors = [d, d, f],
            l.scale && o(g, (l.flipp ? s : n) / r.worldUV, (l.flipp ? n : s) / r.worldUV, l.scale),
            v.push(g)),
            e[5] && ((g = new i.PlaneGeometry(1,1)).rotateY(Math.PI),
            l.flipp && g.rotateZ(Math.PI / 2),
            g.translate(0, .5, -.5),
            g.faces[0].vertexColors = [f, d, f],
            g.faces[1].vertexColors = [d, d, f],
            l.scale && o(g, (l.flipp ? s : n) / r.worldUV, (l.flipp ? n : s) / r.worldUV, l.scale),
            v.push(g));
            for (u = 0; u < v.length; u++)
                a.merge(v[u], new i.Matrix4);
            l && l.useScale && (a.scale(n, s, c),
            a.translate(0, -s / 2, 0)),
            h[p] = a
        }
        return a
    }
}
, function(t, e, n) {
    n.d(e, "a", function() {
        return o
    });
    var i = n(2)
      , r = Object(i.e)()
      , s = "Sentry Logger "
      , a = function() {
        function t() {
            this._enabled = !1
        }
        return t.prototype.disable = function() {
            this._enabled = !1
        }
        ,
        t.prototype.enable = function() {
            this._enabled = !0
        }
        ,
        t.prototype.log = function() {
            for (var t = [], e = 0; e < arguments.length; e++)
                t[e] = arguments[e];
            this._enabled && Object(i.b)(function() {
                r.console.log(s + "[Log]: " + t.join(" "))
            })
        }
        ,
        t.prototype.warn = function() {
            for (var t = [], e = 0; e < arguments.length; e++)
                t[e] = arguments[e];
            this._enabled && Object(i.b)(function() {
                r.console.warn(s + "[Warn]: " + t.join(" "))
            })
        }
        ,
        t.prototype.error = function() {
            for (var t = [], e = 0; e < arguments.length; e++)
                t[e] = arguments[e];
            this._enabled && Object(i.b)(function() {
                r.console.error(s + "[Error]: " + t.join(" "))
            })
        }
        ,
        t
    }();
    r.__SENTRY__ = r.__SENTRY__ || {};
    var o = r.__SENTRY__.logger || (r.__SENTRY__.logger = new a)
}
, function(t, e, n) {
    e.encode = function(t, e) {
        var n = new i(e);
        return n.write(t),
        n.read()
    }
    ;
    var i = n(26).EncodeBuffer
}
, function(t, e, n) {
    e.EncodeBuffer = r;
    var i = n(15).preset;
    function r(t) {
        if (!(this instanceof r))
            return new r(t);
        if (t && (this.options = t,
        t.codec)) {
            var e = this.codec = t.codec;
            e.bufferish && (this.bufferish = e.bufferish)
        }
    }
    n(29).FlexEncoder.mixin(r.prototype),
    r.prototype.codec = i,
    r.prototype.write = function(t) {
        this.codec.encode(this, t)
    }
}
, function(t, e, n) {
    (function(t) {
        /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
        var i = n(42)
          , r = n(17)
          , s = n(11);
        function a() {
            return c.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823
        }
        function o(t, e) {
            if (a() < e)
                throw new RangeError("Invalid typed array length");
            return c.TYPED_ARRAY_SUPPORT ? (t = new Uint8Array(e)).__proto__ = c.prototype : (null === t && (t = new c(e)),
            t.length = e),
            t
        }
        function c(t, e, n) {
            if (!(c.TYPED_ARRAY_SUPPORT || this instanceof c))
                return new c(t,e,n);
            if ("number" == typeof t) {
                if ("string" == typeof e)
                    throw new Error("If encoding is specified then the first argument must be a string");
                return h(this, t)
            }
            return l(this, t, e, n)
        }
        function l(t, e, n, i) {
            if ("number" == typeof e)
                throw new TypeError('"value" argument must not be a number');
            return "undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer ? function(t, e, n, i) {
                if (e.byteLength,
                0 > n || e.byteLength < n)
                    throw new RangeError("'offset' is out of bounds");
                if (e.byteLength < n + (i || 0))
                    throw new RangeError("'length' is out of bounds");
                return e = void 0 === n && void 0 === i ? new Uint8Array(e) : void 0 === i ? new Uint8Array(e,n) : new Uint8Array(e,n,i),
                c.TYPED_ARRAY_SUPPORT ? (t = e).__proto__ = c.prototype : t = u(t, e),
                t
            }(t, e, n, i) : "string" == typeof e ? function(t, e, n) {
                if (("string" != typeof n || "" === n) && (n = "utf8"),
                !c.isEncoding(n))
                    throw new TypeError('"encoding" must be a valid string encoding');
                var i = 0 | d(e, n)
                  , r = (t = o(t, i)).write(e, n);
                return r !== i && (t = t.slice(0, r)),
                t
            }(t, e, n) : function(t, e) {
                if (c.isBuffer(e)) {
                    var n = 0 | f(e.length);
                    return 0 === (t = o(t, n)).length ? t : (e.copy(t, 0, 0, n),
                    t)
                }
                if (e) {
                    if ("undefined" != typeof ArrayBuffer && e.buffer instanceof ArrayBuffer || "length"in e)
                        return "number" != typeof e.length || function(t) {
                            return t != t
                        }(e.length) ? o(t, 0) : u(t, e);
                    if ("Buffer" === e.type && s(e.data))
                        return u(t, e.data)
                }
                throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")
            }(t, e)
        }
        function p(t) {
            if ("number" != typeof t)
                throw new TypeError('"size" argument must be a number');
            if (0 > t)
                throw new RangeError('"size" argument must not be negative')
        }
        function h(t, e) {
            if (p(e),
            t = o(t, 0 > e ? 0 : 0 | f(e)),
            !c.TYPED_ARRAY_SUPPORT)
                for (var n = 0; n < e; ++n)
                    t[n] = 0;
            return t
        }
        function u(t, e) {
            var n = 0 > e.length ? 0 : 0 | f(e.length);
            t = o(t, n);
            for (var i = 0; i < n; i += 1)
                t[i] = 255 & e[i];
            return t
        }
        function f(t) {
            if (t >= a())
                throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + a().toString(16) + " bytes");
            return 0 | t
        }
        function d(t, e) {
            if (c.isBuffer(t))
                return t.length;
            if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(t) || t instanceof ArrayBuffer))
                return t.byteLength;
            "string" != typeof t && (t = "" + t);
            var n = t.length;
            if (0 === n)
                return 0;
            for (var i = !1; ; )
                switch (e) {
                case "ascii":
                case "latin1":
                case "binary":
                    return n;
                case "utf8":
                case "utf-8":
                case void 0:
                    return U(t).length;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return 2 * n;
                case "hex":
                    return n >>> 1;
                case "base64":
                    return F(t).length;
                default:
                    if (i)
                        return U(t).length;
                    e = ("" + e).toLowerCase(),
                    i = !0
                }
        }
        function m(t, e, n) {
            var i = t[e];
            t[e] = t[n],
            t[n] = i
        }
        function g(t, e, n, i, r) {
            if (0 === t.length)
                return -1;
            if ("string" == typeof n ? (i = n,
            n = 0) : 2147483647 < n ? n = 2147483647 : -2147483648 > n && (n = -2147483648),
            n = +n,
            isNaN(n) && (n = r ? 0 : t.length - 1),
            0 > n && (n = t.length + n),
            n >= t.length) {
                if (r)
                    return -1;
                n = t.length - 1
            } else if (0 > n) {
                if (!r)
                    return -1;
                n = 0
            }
            if ("string" == typeof e && (e = c.from(e, i)),
            c.isBuffer(e))
                return 0 === e.length ? -1 : v(t, e, n, i, r);
            if ("number" == typeof e)
                return e &= 255,
                c.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? r ? Uint8Array.prototype.indexOf.call(t, e, n) : Uint8Array.prototype.lastIndexOf.call(t, e, n) : v(t, [e], n, i, r);
            throw new TypeError("val must be string, number or Buffer")
        }
        function v(t, e, n, i, r) {
            function s(t, e) {
                return 1 === o ? t[e] : t.readUInt16BE(e * o)
            }
            var a, o = 1, c = t.length, l = e.length;
            if (void 0 !== i && ("ucs2" === (i = (i + "").toLowerCase()) || "ucs-2" === i || "utf16le" === i || "utf-16le" === i)) {
                if (2 > t.length || 2 > e.length)
                    return -1;
                o = 2,
                c /= 2,
                l /= 2,
                n /= 2
            }
            if (r) {
                var p = -1;
                for (a = n; a < c; a++)
                    if (s(t, a) !== s(e, -1 === p ? 0 : a - p))
                        -1 !== p && (a -= a - p),
                        p = -1;
                    else if (-1 === p && (p = a),
                    a - p + 1 === l)
                        return p * o
            } else
                for (n + l > c && (n = c - l),
                a = n; 0 <= a; a--) {
                    for (var h = !0, u = 0; u < l; u++)
                        if (s(t, a + u) !== s(e, u)) {
                            h = !1;
                            break
                        }
                    if (h)
                        return a
                }
            return -1
        }
        function y(t, e, n, i) {
            n = +n || 0;
            var r = t.length - n;
            i ? (i = +i) > r && (i = r) : i = r;
            var s = e.length;
            if (0 != s % 2)
                throw new TypeError("Invalid hex string");
            i > s / 2 && (i = s / 2);
            for (var a, o = 0; o < i; ++o) {
                if (a = parseInt(e.substr(2 * o, 2), 16),
                isNaN(a))
                    return o;
                t[n + o] = a
            }
            return o
        }
        function b(t, e, n, i) {
            return H(U(e, t.length - n), t, n, i)
        }
        function w(t, e, n, i) {
            return H(function(t) {
                for (var e = [], n = 0; n < t.length; ++n)
                    e.push(255 & t.charCodeAt(n));
                return e
            }(e), t, n, i)
        }
        function x(t, e, n, i) {
            return w(t, e, n, i)
        }
        function M(t, e, n, i) {
            return H(F(e), t, n, i)
        }
        function _(t, e, n, i) {
            return H(function(t, e) {
                for (var n, i, r, s = [], a = 0; a < t.length && !(0 > (e -= 2)); ++a)
                    n = t.charCodeAt(a),
                    i = n >> 8,
                    r = n % 256,
                    s.push(r),
                    s.push(i);
                return s
            }(e, t.length - n), t, n, i)
        }
        function S(t, e, n) {
            return 0 === e && n === t.length ? i.fromByteArray(t) : i.fromByteArray(t.slice(e, n))
        }
        function T(t, e, n) {
            n = Math.min(t.length, n);
            for (var i = [], r = e; r < n; ) {
                var s, a, o, c, l = t[r], p = null, h = 239 < l ? 4 : 223 < l ? 3 : 191 < l ? 2 : 1;
                if (r + h <= n)
                    1 === h ? 128 > l && (p = l) : 2 === h ? 128 == (192 & (s = t[r + 1])) && (127 < (c = (31 & l) << 6 | 63 & s) && (p = c)) : 3 === h ? (s = t[r + 1],
                    a = t[r + 2],
                    128 == (192 & s) && 128 == (192 & a) && (2047 < (c = (15 & l) << 12 | (63 & s) << 6 | 63 & a) && (55296 > c || 57343 < c) && (p = c))) : 4 === h && (s = t[r + 1],
                    a = t[r + 2],
                    o = t[r + 3],
                    128 == (192 & s) && 128 == (192 & a) && 128 == (192 & o) && (65535 < (c = (15 & l) << 18 | (63 & s) << 12 | (63 & a) << 6 | 63 & o) && 1114112 > c && (p = c)));
                null === p ? (p = 65533,
                h = 1) : 65535 < p && (p -= 65536,
                i.push(55296 | 1023 & p >>> 10),
                p = 56320 | 1023 & p),
                i.push(p),
                r += h
            }
            return function(t) {
                var e = t.length;
                if (e <= E)
                    return String.fromCharCode.apply(String, t);
                for (var n = "", i = 0; i < e; )
                    n += String.fromCharCode.apply(String, t.slice(i, i += E));
                return n
            }(i)
        }
        e.Buffer = c,
        e.SlowBuffer = function(t) {
            return +t != t && (t = 0),
            c.alloc(+t)
        }
        ,
        e.INSPECT_MAX_BYTES = 50,
        c.TYPED_ARRAY_SUPPORT = void 0 === t.TYPED_ARRAY_SUPPORT ? function() {
            try {
                var t = new Uint8Array(1);
                return t.__proto__ = {
                    __proto__: Uint8Array.prototype,
                    foo: function() {
                        return 42
                    }
                },
                42 === t.foo() && "function" == typeof t.subarray && 0 === t.subarray(1, 1).byteLength
            } catch (t) {
                return !1
            }
        }() : t.TYPED_ARRAY_SUPPORT,
        e.kMaxLength = a(),
        c.poolSize = 8192,
        c._augment = function(t) {
            return t.__proto__ = c.prototype,
            t
        }
        ,
        c.from = function(t, e, n) {
            return l(null, t, e, n)
        }
        ,
        c.TYPED_ARRAY_SUPPORT && (c.prototype.__proto__ = Uint8Array.prototype,
        c.__proto__ = Uint8Array,
        "undefined" != typeof Symbol && Symbol.species && c[Symbol.species] === c && Object.defineProperty(c, Symbol.species, {
            value: null,
            configurable: !0
        })),
        c.alloc = function(t, e, n) {
            return function(t, e, n, i) {
                return p(e),
                0 >= e ? o(t, e) : void 0 === n ? o(t, e) : "string" == typeof i ? o(t, e).fill(n, i) : o(t, e).fill(n)
            }(null, t, e, n)
        }
        ,
        c.allocUnsafe = function(t) {
            return h(null, t)
        }
        ,
        c.allocUnsafeSlow = function(t) {
            return h(null, t)
        }
        ,
        c.isBuffer = function(t) {
            return !(null == t || !t._isBuffer)
        }
        ,
        c.compare = function(t, e) {
            if (!c.isBuffer(t) || !c.isBuffer(e))
                throw new TypeError("Arguments must be Buffers");
            if (t === e)
                return 0;
            for (var n = t.length, i = e.length, r = 0, s = Math.min(n, i); r < s; ++r)
                if (t[r] !== e[r]) {
                    n = t[r],
                    i = e[r];
                    break
                }
            return n < i ? -1 : i < n ? 1 : 0
        }
        ,
        c.isEncoding = function(t) {
            switch ((t + "").toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
                return !0;
            default:
                return !1
            }
        }
        ,
        c.concat = function(t, e) {
            if (!s(t))
                throw new TypeError('"list" argument must be an Array of Buffers');
            if (0 === t.length)
                return c.alloc(0);
            var n;
            if (void 0 === e)
                for (e = 0,
                n = 0; n < t.length; ++n)
                    e += t[n].length;
            var i = c.allocUnsafe(e)
              , r = 0;
            for (n = 0; n < t.length; ++n) {
                var a = t[n];
                if (!c.isBuffer(a))
                    throw new TypeError('"list" argument must be an Array of Buffers');
                a.copy(i, r),
                r += a.length
            }
            return i
        }
        ,
        c.byteLength = d,
        c.prototype._isBuffer = !0,
        c.prototype.swap16 = function() {
            var t = this.length;
            if (0 != t % 2)
                throw new RangeError("Buffer size must be a multiple of 16-bits");
            for (var e = 0; e < t; e += 2)
                m(this, e, e + 1);
            return this
        }
        ,
        c.prototype.swap32 = function() {
            var t = this.length;
            if (0 != t % 4)
                throw new RangeError("Buffer size must be a multiple of 32-bits");
            for (var e = 0; e < t; e += 4)
                m(this, e, e + 3),
                m(this, e + 1, e + 2);
            return this
        }
        ,
        c.prototype.swap64 = function() {
            var t = this.length;
            if (0 != t % 8)
                throw new RangeError("Buffer size must be a multiple of 64-bits");
            for (var e = 0; e < t; e += 8)
                m(this, e, e + 7),
                m(this, e + 1, e + 6),
                m(this, e + 2, e + 5),
                m(this, e + 3, e + 4);
            return this
        }
        ,
        c.prototype.toString = function() {
            var t = 0 | this.length;
            return 0 == t ? "" : 0 === arguments.length ? T(this, 0, t) : function(t, e, n) {
                var i = !1;
                if ((void 0 === e || 0 > e) && (e = 0),
                e > this.length)
                    return "";
                if ((void 0 === n || n > this.length) && (n = this.length),
                0 >= n)
                    return "";
                if ((n >>>= 0) <= (e >>>= 0))
                    return "";
                for (t || (t = "utf8"); ; )
                    switch (t) {
                    case "hex":
                        return L(this, e, n);
                    case "utf8":
                    case "utf-8":
                        return T(this, e, n);
                    case "ascii":
                        return k(this, e, n);
                    case "latin1":
                    case "binary":
                        return A(this, e, n);
                    case "base64":
                        return S(this, e, n);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return P(this, e, n);
                    default:
                        if (i)
                            throw new TypeError("Unknown encoding: " + t);
                        t = (t + "").toLowerCase(),
                        i = !0
                    }
            }
            .apply(this, arguments)
        }
        ,
        c.prototype.equals = function(t) {
            if (!c.isBuffer(t))
                throw new TypeError("Argument must be a Buffer");
            return this === t || 0 === c.compare(this, t)
        }
        ,
        c.prototype.inspect = function() {
            var t = ""
              , n = e.INSPECT_MAX_BYTES;
            return 0 < this.length && (t = this.toString("hex", 0, n).match(/.{2}/g).join(" "),
            this.length > n && (t += " ... ")),
            "<Buffer " + t + ">"
        }
        ,
        c.prototype.compare = function(t, e, n, i, r) {
            if (!c.isBuffer(t))
                throw new TypeError("Argument must be a Buffer");
            if (void 0 === e && (e = 0),
            void 0 === n && (n = t ? t.length : 0),
            void 0 === i && (i = 0),
            void 0 === r && (r = this.length),
            0 > e || n > t.length || 0 > i || r > this.length)
                throw new RangeError("out of range index");
            if (i >= r && e >= n)
                return 0;
            if (i >= r)
                return -1;
            if (e >= n)
                return 1;
            if (this === t)
                return 0;
            for (var s = (r >>>= 0) - (i >>>= 0), a = (n >>>= 0) - (e >>>= 0), o = Math.min(s, a), l = this.slice(i, r), p = t.slice(e, n), h = 0; h < o; ++h)
                if (l[h] !== p[h]) {
                    s = l[h],
                    a = p[h];
                    break
                }
            return s < a ? -1 : a < s ? 1 : 0
        }
        ,
        c.prototype.includes = function(t, e, n) {
            return -1 !== this.indexOf(t, e, n)
        }
        ,
        c.prototype.indexOf = function(t, e, n) {
            return g(this, t, e, n, !0)
        }
        ,
        c.prototype.lastIndexOf = function(t, e, n) {
            return g(this, t, e, n, !1)
        }
        ,
        c.prototype.write = function(t, e, n, i) {
            if (void 0 === e)
                i = "utf8",
                n = this.length,
                e = 0;
            else if (void 0 === n && "string" == typeof e)
                i = e,
                n = this.length,
                e = 0;
            else {
                if (!isFinite(e))
                    throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                e |= 0,
                isFinite(n) ? (n |= 0,
                void 0 === i && (i = "utf8")) : (i = n,
                n = void 0)
            }
            var r = this.length - e;
            if ((void 0 === n || n > r) && (n = r),
            0 < t.length && (0 > n || 0 > e) || e > this.length)
                throw new RangeError("Attempt to write outside buffer bounds");
            i || (i = "utf8");
            for (var s = !1; ; )
                switch (i) {
                case "hex":
                    return y(this, t, e, n);
                case "utf8":
                case "utf-8":
                    return b(this, t, e, n);
                case "ascii":
                    return w(this, t, e, n);
                case "latin1":
                case "binary":
                    return x(this, t, e, n);
                case "base64":
                    return M(this, t, e, n);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return _(this, t, e, n);
                default:
                    if (s)
                        throw new TypeError("Unknown encoding: " + i);
                    i = ("" + i).toLowerCase(),
                    s = !0
                }
        }
        ,
        c.prototype.toJSON = function() {
            return {
                type: "Buffer",
                data: Array.prototype.slice.call(this._arr || this, 0)
            }
        }
        ;
        var E = 4096;
        function k(t, e, n) {
            var i = "";
            n = Math.min(t.length, n);
            for (var r = e; r < n; ++r)
                i += String.fromCharCode(127 & t[r]);
            return i
        }
        function A(t, e, n) {
            var i = "";
            n = Math.min(t.length, n);
            for (var r = e; r < n; ++r)
                i += String.fromCharCode(t[r]);
            return i
        }
        function L(t, e, n) {
            var i = t.length;
            (!e || 0 > e) && (e = 0),
            (!n || 0 > n || n > i) && (n = i);
            for (var r = "", s = e; s < n; ++s)
                r += j(t[s]);
            return r
        }
        function P(t, e, n) {
            for (var i = t.slice(e, n), r = "", s = 0; s < i.length; s += 2)
                r += String.fromCharCode(i[s] + 256 * i[s + 1]);
            return r
        }
        function C(t, e, n) {
            if (0 != t % 1 || 0 > t)
                throw new RangeError("offset is not uint");
            if (t + e > n)
                throw new RangeError("Trying to access beyond buffer length")
        }
        function R(t, e, n, i, r, s) {
            if (!c.isBuffer(t))
                throw new TypeError('"buffer" argument must be a Buffer instance');
            if (e > r || e < s)
                throw new RangeError('"value" argument is out of bounds');
            if (n + i > t.length)
                throw new RangeError("Index out of range")
        }
        function I(t, e, n, i) {
            0 > e && (e = 65535 + e + 1);
            for (var r = 0, s = Math.min(t.length - n, 2); r < s; ++r)
                t[n + r] = (e & 255 << 8 * (i ? r : 1 - r)) >>> 8 * (i ? r : 1 - r)
        }
        function O(t, e, n, i) {
            0 > e && (e = 4294967295 + e + 1);
            for (var r = 0, s = Math.min(t.length - n, 4); r < s; ++r)
                t[n + r] = 255 & e >>> 8 * (i ? r : 3 - r)
        }
        function D(t, e, n, i) {
            if (n + i > t.length)
                throw new RangeError("Index out of range");
            if (0 > n)
                throw new RangeError("Index out of range")
        }
        function z(t, e, n, i, s) {
            return s || D(t, 0, n, 4),
            r.write(t, e, n, i, 23, 4),
            n + 4
        }
        function B(t, e, n, i, s) {
            return s || D(t, 0, n, 8),
            r.write(t, e, n, i, 52, 8),
            n + 8
        }
        c.prototype.slice = function(t, e) {
            var n, i = this.length;
            if (0 > (t = ~~t) ? 0 > (t += i) && (t = 0) : t > i && (t = i),
            0 > (e = void 0 === e ? i : ~~e) ? 0 > (e += i) && (e = 0) : e > i && (e = i),
            e < t && (e = t),
            c.TYPED_ARRAY_SUPPORT)
                (n = this.subarray(t, e)).__proto__ = c.prototype;
            else {
                var r = e - t;
                n = new c(r,void 0);
                for (var s = 0; s < r; ++s)
                    n[s] = this[s + t]
            }
            return n
        }
        ,
        c.prototype.readUIntLE = function(t, e, n) {
            t |= 0,
            e |= 0,
            n || C(t, e, this.length);
            for (var i = this[t], r = 1, s = 0; ++s < e && (r *= 256); )
                i += this[t + s] * r;
            return i
        }
        ,
        c.prototype.readUIntBE = function(t, e, n) {
            t |= 0,
            e |= 0,
            n || C(t, e, this.length);
            for (var i = this[t + --e], r = 1; 0 < e && (r *= 256); )
                i += this[t + --e] * r;
            return i
        }
        ,
        c.prototype.readUInt8 = function(t, e) {
            return e || C(t, 1, this.length),
            this[t]
        }
        ,
        c.prototype.readUInt16LE = function(t, e) {
            return e || C(t, 2, this.length),
            this[t] | this[t + 1] << 8
        }
        ,
        c.prototype.readUInt16BE = function(t, e) {
            return e || C(t, 2, this.length),
            this[t] << 8 | this[t + 1]
        }
        ,
        c.prototype.readUInt32LE = function(t, e) {
            return e || C(t, 4, this.length),
            (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3]
        }
        ,
        c.prototype.readUInt32BE = function(t, e) {
            return e || C(t, 4, this.length),
            16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3])
        }
        ,
        c.prototype.readIntLE = function(t, e, n) {
            t |= 0,
            e |= 0,
            n || C(t, e, this.length);
            for (var i = this[t], r = 1, s = 0; ++s < e && (r *= 256); )
                i += this[t + s] * r;
            return i >= (r *= 128) && (i -= Math.pow(2, 8 * e)),
            i
        }
        ,
        c.prototype.readIntBE = function(t, e, n) {
            t |= 0,
            e |= 0,
            n || C(t, e, this.length);
            for (var i = e, r = 1, s = this[t + --i]; 0 < i && (r *= 256); )
                s += this[t + --i] * r;
            return s >= (r *= 128) && (s -= Math.pow(2, 8 * e)),
            s
        }
        ,
        c.prototype.readInt8 = function(t, e) {
            return e || C(t, 1, this.length),
            128 & this[t] ? -1 * (255 - this[t] + 1) : this[t]
        }
        ,
        c.prototype.readInt16LE = function(t, e) {
            e || C(t, 2, this.length);
            var n = this[t] | this[t + 1] << 8;
            return 32768 & n ? 4294901760 | n : n
        }
        ,
        c.prototype.readInt16BE = function(t, e) {
            e || C(t, 2, this.length);
            var n = this[t + 1] | this[t] << 8;
            return 32768 & n ? 4294901760 | n : n
        }
        ,
        c.prototype.readInt32LE = function(t, e) {
            return e || C(t, 4, this.length),
            this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24
        }
        ,
        c.prototype.readInt32BE = function(t, e) {
            return e || C(t, 4, this.length),
            this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]
        }
        ,
        c.prototype.readFloatLE = function(t, e) {
            return e || C(t, 4, this.length),
            r.read(this, t, !0, 23, 4)
        }
        ,
        c.prototype.readFloatBE = function(t, e) {
            return e || C(t, 4, this.length),
            r.read(this, t, !1, 23, 4)
        }
        ,
        c.prototype.readDoubleLE = function(t, e) {
            return e || C(t, 8, this.length),
            r.read(this, t, !0, 52, 8)
        }
        ,
        c.prototype.readDoubleBE = function(t, e) {
            return e || C(t, 8, this.length),
            r.read(this, t, !1, 52, 8)
        }
        ,
        c.prototype.writeUIntLE = function(t, e, n, i) {
            (t = +t,
            e |= 0,
            n |= 0,
            i) || R(this, t, e, n, Math.pow(2, 8 * n) - 1, 0);
            var r = 1
              , s = 0;
            for (this[e] = 255 & t; ++s < n && (r *= 256); )
                this[e + s] = 255 & t / r;
            return e + n
        }
        ,
        c.prototype.writeUIntBE = function(t, e, n, i) {
            (t = +t,
            e |= 0,
            n |= 0,
            i) || R(this, t, e, n, Math.pow(2, 8 * n) - 1, 0);
            var r = n - 1
              , s = 1;
            for (this[e + r] = 255 & t; 0 <= --r && (s *= 256); )
                this[e + r] = 255 & t / s;
            return e + n
        }
        ,
        c.prototype.writeUInt8 = function(t, e, n) {
            return t = +t,
            e |= 0,
            n || R(this, t, e, 1, 255, 0),
            c.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)),
            this[e] = 255 & t,
            e + 1
        }
        ,
        c.prototype.writeUInt16LE = function(t, e, n) {
            return t = +t,
            e |= 0,
            n || R(this, t, e, 2, 65535, 0),
            c.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t,
            this[e + 1] = t >>> 8) : I(this, t, e, !0),
            e + 2
        }
        ,
        c.prototype.writeUInt16BE = function(t, e, n) {
            return t = +t,
            e |= 0,
            n || R(this, t, e, 2, 65535, 0),
            c.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 8,
            this[e + 1] = 255 & t) : I(this, t, e, !1),
            e + 2
        }
        ,
        c.prototype.writeUInt32LE = function(t, e, n) {
            return t = +t,
            e |= 0,
            n || R(this, t, e, 4, 4294967295, 0),
            c.TYPED_ARRAY_SUPPORT ? (this[e + 3] = t >>> 24,
            this[e + 2] = t >>> 16,
            this[e + 1] = t >>> 8,
            this[e] = 255 & t) : O(this, t, e, !0),
            e + 4
        }
        ,
        c.prototype.writeUInt32BE = function(t, e, n) {
            return t = +t,
            e |= 0,
            n || R(this, t, e, 4, 4294967295, 0),
            c.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 24,
            this[e + 1] = t >>> 16,
            this[e + 2] = t >>> 8,
            this[e + 3] = 255 & t) : O(this, t, e, !1),
            e + 4
        }
        ,
        c.prototype.writeIntLE = function(t, e, n, i) {
            if (t = +t,
            e |= 0,
            !i) {
                var r = Math.pow(2, 8 * n - 1);
                R(this, t, e, n, r - 1, -r)
            }
            var s = 0
              , a = 1
              , o = 0;
            for (this[e] = 255 & t; ++s < n && (a *= 256); )
                0 > t && 0 === o && 0 !== this[e + s - 1] && (o = 1),
                this[e + s] = 255 & (t / a >> 0) - o;
            return e + n
        }
        ,
        c.prototype.writeIntBE = function(t, e, n, i) {
            if (t = +t,
            e |= 0,
            !i) {
                var r = Math.pow(2, 8 * n - 1);
                R(this, t, e, n, r - 1, -r)
            }
            var s = n - 1
              , a = 1
              , o = 0;
            for (this[e + s] = 255 & t; 0 <= --s && (a *= 256); )
                0 > t && 0 === o && 0 !== this[e + s + 1] && (o = 1),
                this[e + s] = 255 & (t / a >> 0) - o;
            return e + n
        }
        ,
        c.prototype.writeInt8 = function(t, e, n) {
            return t = +t,
            e |= 0,
            n || R(this, t, e, 1, 127, -128),
            c.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)),
            0 > t && (t = 255 + t + 1),
            this[e] = 255 & t,
            e + 1
        }
        ,
        c.prototype.writeInt16LE = function(t, e, n) {
            return t = +t,
            e |= 0,
            n || R(this, t, e, 2, 32767, -32768),
            c.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t,
            this[e + 1] = t >>> 8) : I(this, t, e, !0),
            e + 2
        }
        ,
        c.prototype.writeInt16BE = function(t, e, n) {
            return t = +t,
            e |= 0,
            n || R(this, t, e, 2, 32767, -32768),
            c.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 8,
            this[e + 1] = 255 & t) : I(this, t, e, !1),
            e + 2
        }
        ,
        c.prototype.writeInt32LE = function(t, e, n) {
            return t = +t,
            e |= 0,
            n || R(this, t, e, 4, 2147483647, -2147483648),
            c.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t,
            this[e + 1] = t >>> 8,
            this[e + 2] = t >>> 16,
            this[e + 3] = t >>> 24) : O(this, t, e, !0),
            e + 4
        }
        ,
        c.prototype.writeInt32BE = function(t, e, n) {
            return t = +t,
            e |= 0,
            n || R(this, t, e, 4, 2147483647, -2147483648),
            0 > t && (t = 4294967295 + t + 1),
            c.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 24,
            this[e + 1] = t >>> 16,
            this[e + 2] = t >>> 8,
            this[e + 3] = 255 & t) : O(this, t, e, !1),
            e + 4
        }
        ,
        c.prototype.writeFloatLE = function(t, e, n) {
            return z(this, t, e, !0, n)
        }
        ,
        c.prototype.writeFloatBE = function(t, e, n) {
            return z(this, t, e, !1, n)
        }
        ,
        c.prototype.writeDoubleLE = function(t, e, n) {
            return B(this, t, e, !0, n)
        }
        ,
        c.prototype.writeDoubleBE = function(t, e, n) {
            return B(this, t, e, !1, n)
        }
        ,
        c.prototype.copy = function(t, e, n, i) {
            if (n || (n = 0),
            i || 0 === i || (i = this.length),
            e >= t.length && (e = t.length),
            e || (e = 0),
            0 < i && i < n && (i = n),
            i === n)
                return 0;
            if (0 === t.length || 0 === this.length)
                return 0;
            if (0 > e)
                throw new RangeError("targetStart out of bounds");
            if (0 > n || n >= this.length)
                throw new RangeError("sourceStart out of bounds");
            if (0 > i)
                throw new RangeError("sourceEnd out of bounds");
            i > this.length && (i = this.length),
            t.length - e < i - n && (i = t.length - e + n);
            var r, s = i - n;
            if (this === t && n < e && e < i)
                for (r = s - 1; 0 <= r; --r)
                    t[r + e] = this[r + n];
            else if (1e3 > s || !c.TYPED_ARRAY_SUPPORT)
                for (r = 0; r < s; ++r)
                    t[r + e] = this[r + n];
            else
                Uint8Array.prototype.set.call(t, this.subarray(n, n + s), e);
            return s
        }
        ,
        c.prototype.fill = function(t, e, n, i) {
            if ("string" == typeof t) {
                if ("string" == typeof e ? (i = e,
                e = 0,
                n = this.length) : "string" == typeof n && (i = n,
                n = this.length),
                1 === t.length) {
                    var r = t.charCodeAt(0);
                    256 > r && (t = r)
                }
                if (void 0 !== i && "string" != typeof i)
                    throw new TypeError("encoding must be a string");
                if ("string" == typeof i && !c.isEncoding(i))
                    throw new TypeError("Unknown encoding: " + i)
            } else
                "number" == typeof t && (t &= 255);
            if (0 > e || this.length < e || this.length < n)
                throw new RangeError("Out of range index");
            if (n <= e)
                return this;
            var s;
            if (e >>>= 0,
            n = void 0 === n ? this.length : n >>> 0,
            t || (t = 0),
            "number" == typeof t)
                for (s = e; s < n; ++s)
                    this[s] = t;
            else {
                var a = c.isBuffer(t) ? t : U(new c(t,i).toString())
                  , o = a.length;
                for (s = 0; s < n - e; ++s)
                    this[s + e] = a[s % o]
            }
            return this
        }
        ;
        var N = /[^+\/0-9A-Za-z-_]/g;
        function j(t) {
            return 16 > t ? "0" + t.toString(16) : t.toString(16)
        }
        function U(t, e) {
            e = e || 1 / 0;
            for (var n, i = t.length, r = null, s = [], a = 0; a < i; ++a) {
                if (55295 < (n = t.charCodeAt(a)) && 57344 > n) {
                    if (!r) {
                        if (56319 < n) {
                            -1 < (e -= 3) && s.push(239, 191, 189);
                            continue
                        }
                        if (a + 1 === i) {
                            -1 < (e -= 3) && s.push(239, 191, 189);
                            continue
                        }
                        r = n;
                        continue
                    }
                    if (56320 > n) {
                        -1 < (e -= 3) && s.push(239, 191, 189),
                        r = n;
                        continue
                    }
                    n = 65536 + (r - 55296 << 10 | n - 56320)
                } else
                    r && -1 < (e -= 3) && s.push(239, 191, 189);
                if (r = null,
                128 > n) {
                    if (0 > (e -= 1))
                        break;
                    s.push(n)
                } else if (2048 > n) {
                    if (0 > (e -= 2))
                        break;
                    s.push(192 | n >> 6, 128 | 63 & n)
                } else if (65536 > n) {
                    if (0 > (e -= 3))
                        break;
                    s.push(224 | n >> 12, 128 | 63 & n >> 6, 128 | 63 & n)
                } else {
                    if (!(1114112 > n))
                        throw new Error("Invalid code point");
                    if (0 > (e -= 4))
                        break;
                    s.push(240 | n >> 18, 128 | 63 & n >> 12, 128 | 63 & n >> 6, 128 | 63 & n)
                }
            }
            return s
        }
        function F(t) {
            return i.toByteArray(function(t) {
                if (2 > (t = function(t) {
                    return t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "")
                }(t).replace(N, "")).length)
                    return "";
                for (; 0 != t.length % 4; )
                    t += "=";
                return t
            }(t))
        }
        function H(t, e, n, i) {
            for (var r = 0; r < i && !(r + n >= e.length || r >= t.length); ++r)
                e[r + n] = t[r];
            return r
        }
    }
    ).call(this, n(21))
}
, function(t, e) {
    for (var n = e.uint8 = Array(256), i = 0; 255 >= i; i++)
        n[i] = r(i);
    function r(t) {
        return function(e) {
            var n = e.reserve(1);
            e.buffer[n] = t
        }
    }
}
, function(t, e, n) {
    e.FlexDecoder = o,
    e.FlexEncoder = c;
    var i = n(3)
      , r = 2048
      , s = 65536
      , a = "BUFFER_SHORTAGE";
    function o() {
        if (!(this instanceof o))
            return new o
    }
    function c() {
        if (!(this instanceof c))
            return new c
    }
    function l() {
        throw new Error("method not implemented: write()")
    }
    function p() {
        throw new Error("method not implemented: fetch()")
    }
    function h() {
        return this.buffers && this.buffers.length ? (this.flush(),
        this.pull()) : this.fetch()
    }
    function u(t) {
        (this.buffers || (this.buffers = [])).push(t)
    }
    function f() {
        return (this.buffers || (this.buffers = [])).shift()
    }
    function d(t) {
        return function(e) {
            for (var n in t)
                e[n] = t[n];
            return e
        }
    }
    o.mixin = d({
        bufferish: i,
        write: function(t) {
            var e = this.offset ? i.prototype.slice.call(this.buffer, this.offset) : this.buffer;
            this.buffer = e ? t ? this.bufferish.concat([e, t]) : e : t,
            this.offset = 0
        },
        fetch: p,
        flush: function() {
            for (; this.offset < this.buffer.length; ) {
                var t, e = this.offset;
                try {
                    t = this.fetch()
                } catch (t) {
                    if (t && t.message != a)
                        throw t;
                    this.offset = e;
                    break
                }
                this.push(t)
            }
        },
        push: u,
        pull: f,
        read: h,
        reserve: function(t) {
            var e = this.offset
              , n = e + t;
            if (n > this.buffer.length)
                throw new Error(a);
            return this.offset = n,
            e
        },
        offset: 0
    }),
    o.mixin(o.prototype),
    c.mixin = d({
        bufferish: i,
        write: l,
        fetch: function() {
            var t = this.start;
            if (t < this.offset) {
                var e = this.start = this.offset;
                return i.prototype.slice.call(this.buffer, t, e)
            }
        },
        flush: function() {
            for (; this.start < this.offset; ) {
                var t = this.fetch();
                t && this.push(t)
            }
        },
        push: u,
        pull: function() {
            var t = this.buffers || (this.buffers = [])
              , e = 1 < t.length ? this.bufferish.concat(t) : t[0];
            return t.length = 0,
            e
        },
        read: h,
        reserve: function(t) {
            var e = 0 | t;
            if (this.buffer) {
                var n = this.buffer.length
                  , i = 0 | this.offset
                  , r = i + e;
                if (r < n)
                    return this.offset = r,
                    i;
                this.flush(),
                t = Math.max(t, Math.min(2 * n, this.maxBufferSize))
            }
            return t = Math.max(t, this.minBufferSize),
            this.buffer = this.bufferish.alloc(t),
            this.start = 0,
            this.offset = e,
            0
        },
        send: function(t) {
            var e = t.length;
            if (e > this.minBufferSize)
                this.flush(),
                this.push(t);
            else {
                var n = this.reserve(e);
                i.prototype.copy.call(t, this.buffer, n)
            }
        },
        maxBufferSize: s,
        minBufferSize: r,
        offset: 0,
        start: 0
    }),
    c.mixin(c.prototype)
}
, function(t, e, n) {
    e.decode = function(t, e) {
        var n = new i(e);
        return n.write(t),
        n.read()
    }
    ;
    var i = n(31).DecodeBuffer
}
, function(t, e, n) {
    e.DecodeBuffer = r;
    var i = n(20).preset;
    function r(t) {
        if (!(this instanceof r))
            return new r(t);
        if (t && (this.options = t,
        t.codec)) {
            var e = this.codec = t.codec;
            e.bufferish && (this.bufferish = e.bufferish)
        }
    }
    n(29).FlexDecoder.mixin(r.prototype),
    r.prototype.codec = i,
    r.prototype.fetch = function() {
        return this.codec.decode(this)
    }
}
, function(t, e, n) {
    var i = n(17)
      , r = n(19)
      , s = r.Uint64BE
      , a = r.Int64BE;
    e.getReadFormat = function(t) {
        var e = o.hasArrayBuffer && t && t.binarraybuffer
          , n = t && t.int64;
        return {
            map: l && t && t.usemap ? u : h,
            array: f,
            str: d,
            bin: e ? g : m,
            ext: v,
            uint8: y,
            uint16: w,
            uint32: M,
            uint64: S(8, n ? k : T),
            int8: b,
            int16: x,
            int32: _,
            int64: S(8, n ? A : E),
            float32: S(4, L),
            float64: S(8, P)
        }
    }
    ,
    e.readUint8 = y;
    var o = n(3)
      , c = n(18)
      , l = "undefined" != typeof Map
      , p = !0;
    function h(t, e) {
        var n, i = {}, r = Array(e), s = Array(e), a = t.codec.decode;
        for (n = 0; n < e; n++)
            r[n] = a(t),
            s[n] = a(t);
        for (n = 0; n < e; n++)
            i[r[n]] = s[n];
        return i
    }
    function u(t, e) {
        var n, i = new Map, r = Array(e), s = Array(e), a = t.codec.decode;
        for (n = 0; n < e; n++)
            r[n] = a(t),
            s[n] = a(t);
        for (n = 0; n < e; n++)
            i.set(r[n], s[n]);
        return i
    }
    function f(t, e) {
        for (var n = Array(e), i = t.codec.decode, r = 0; r < e; r++)
            n[r] = i(t);
        return n
    }
    function d(t, e) {
        var n = t.reserve(e);
        return c.toString.call(t.buffer, "utf-8", n, n + e)
    }
    function m(t, e) {
        var n = t.reserve(e)
          , i = c.slice.call(t.buffer, n, n + e);
        return o.from(i)
    }
    function g(t, e) {
        var n = t.reserve(e)
          , i = c.slice.call(t.buffer, n, n + e);
        return o.Uint8Array.from(i).buffer
    }
    function v(t, e) {
        var n = t.reserve(e + 1)
          , i = t.buffer[n++]
          , r = n + e
          , s = t.codec.getExtUnpacker(i);
        if (!s)
            throw new Error("Invalid ext type: " + (i ? "0x" + i.toString(16) : i));
        return s(c.slice.call(t.buffer, n, r))
    }
    function y(t) {
        var e = t.reserve(1);
        return t.buffer[e]
    }
    function b(t) {
        var e = t.reserve(1)
          , n = t.buffer[e];
        return 128 & n ? n - 256 : n
    }
    function w(t) {
        var e = t.reserve(2)
          , n = t.buffer;
        return n[e++] << 8 | n[e]
    }
    function x(t) {
        var e = t.reserve(2)
          , n = t.buffer
          , i = n[e++] << 8 | n[e];
        return 32768 & i ? i - 65536 : i
    }
    function M(t) {
        var e = t.reserve(4)
          , n = t.buffer;
        return 16777216 * n[e++] + (n[e++] << 16) + (n[e++] << 8) + n[e]
    }
    function _(t) {
        var e = t.reserve(4)
          , n = t.buffer;
        return n[e++] << 24 | n[e++] << 16 | n[e++] << 8 | n[e]
    }
    function S(t, e) {
        return function(n) {
            var i = n.reserve(t);
            return e.call(n.buffer, i, p)
        }
    }
    function T(t) {
        return new s(this,t).toNumber()
    }
    function E(t) {
        return new a(this,t).toNumber()
    }
    function k(t) {
        return new s(this,t)
    }
    function A(t) {
        return new a(this,t)
    }
    function L(t) {
        return i.read(this, t, !1, 23, 4)
    }
    function P(t) {
        return i.read(this, t, !1, 52, 8)
    }
}
, function(t, e, n) {
    !function(e) {
        function n(t) {
            for (var e in s)
                t[e] = s[e];
            return t
        }
        function i(t, e) {
            var n, s = this;
            if (arguments.length) {
                if (e) {
                    if (n = r(s, t, !0)) {
                        if (!(n = n.filter(function(t) {
                            return t !== e && t.originalListener !== e
                        })).length)
                            return i.call(s, t);
                        s.listeners[t] = n
                    }
                } else if ((n = s.listeners) && (delete n[t],
                !Object.keys(n).length))
                    return i.call(s)
            } else
                delete s.listeners;
            return s
        }
        function r(t, e, n) {
            if (!n || t.listeners) {
                var i = t.listeners || (t.listeners = {});
                return i[e] || (i[e] = [])
            }
        }
        t.exports = e;
        var s = {
            on: function(t, e) {
                return r(this, t).push(e),
                this
            },
            once: function(t, e) {
                function n() {
                    i.call(s, t, n),
                    e.apply(this, arguments)
                }
                var s = this;
                return n.originalListener = e,
                r(s, t).push(n),
                s
            },
            off: i,
            emit: function(t, e) {
                var n = this
                  , i = r(n, t, !0);
                if (!i)
                    return !1;
                var s = arguments.length;
                if (1 === s)
                    i.forEach(function(t) {
                        t.call(n)
                    });
                else if (2 === s)
                    i.forEach(function(t) {
                        t.call(n, e)
                    });
                else {
                    var a = Array.prototype.slice.call(arguments, 1);
                    i.forEach(function(t) {
                        t.apply(n, a)
                    })
                }
                return !!i.length
            }
        };
        n(e.prototype),
        e.mixin = n
    }(/**
 * event-lite.js - Light-weight EventEmitter (less than 1KB when gzipped)
 *
 * @copyright Yusuke Kawasaki
 * @license MIT
 * @constructor
 * @see https://github.com/kawanet/event-lite
 * @see http://kawanet.github.io/event-lite/EventLite.html
 * @example
 * var EventLite = require("event-lite");
 *
 * function MyClass() {...}             // your class
 *
 * EventLite.mixin(MyClass.prototype);  // import event methods
 *
 * var obj = new MyClass();
 * obj.on("foo", function() {...});     // add event listener
 * obj.once("bar", function() {...});   // add one-time event listener
 * obj.emit("foo");                     // dispatch event
 * obj.emit("bar");                     // dispatch another event
 * obj.off("foo");                      // remove event listener
 */
    function t() {
        if (!(this instanceof t))
            return new t
    })
}
, function(t, e, n) {
    var i = n(96)
      , r = n(132)
      , s = Object.prototype.toString;
    function a(t) {
        return "[object Array]" === s.call(t)
    }
    function o(t) {
        return null !== t && "object" == typeof t
    }
    function c(t) {
        return "[object Function]" === s.call(t)
    }
    function l(t, e) {
        if (null != t)
            if ("object" != typeof t && (t = [t]),
            a(t))
                for (var n = 0, i = t.length; n < i; n++)
                    e.call(null, t[n], n, t);
            else
                for (var r in t)
                    Object.prototype.hasOwnProperty.call(t, r) && e.call(null, t[r], r, t)
    }
    t.exports = {
        isArray: a,
        isArrayBuffer: function(t) {
            return "[object ArrayBuffer]" === s.call(t)
        },
        isBuffer: r,
        isFormData: function(t) {
            return "undefined" != typeof FormData && t instanceof FormData
        },
        isArrayBufferView: function(t) {
            return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(t) : t && t.buffer && t.buffer instanceof ArrayBuffer
        },
        isString: function(t) {
            return "string" == typeof t
        },
        isNumber: function(t) {
            return "number" == typeof t
        },
        isObject: o,
        isUndefined: function(t) {
            return void 0 === t
        },
        isDate: function(t) {
            return "[object Date]" === s.call(t)
        },
        isFile: function(t) {
            return "[object File]" === s.call(t)
        },
        isBlob: function(t) {
            return "[object Blob]" === s.call(t)
        },
        isFunction: c,
        isStream: function(t) {
            return o(t) && c(t.pipe)
        },
        isURLSearchParams: function(t) {
            return "undefined" != typeof URLSearchParams && t instanceof URLSearchParams
        },
        isStandardBrowserEnv: function() {
            return ("undefined" == typeof navigator || "ReactNative" !== navigator.product && "NativeScript" !== navigator.product && "NS" !== navigator.product) && "undefined" != typeof window && "undefined" != typeof document
        },
        forEach: l,
        merge: function t() {
            function e(e, i) {
                n[i] = "object" == typeof n[i] && "object" == typeof e ? t(n[i], e) : e
            }
            for (var n = {}, i = 0, r = arguments.length; i < r; i++)
                l(arguments[i], e);
            return n
        },
        deepMerge: function t() {
            function e(e, i) {
                n[i] = "object" == typeof n[i] && "object" == typeof e ? t(n[i], e) : "object" == typeof e ? t({}, e) : e
            }
            for (var n = {}, i = 0, r = arguments.length; i < r; i++)
                l(arguments[i], e);
            return n
        },
        extend: function(t, e, n) {
            return l(e, function(e, r) {
                t[r] = n && "function" == typeof e ? i(e, n) : e
            }),
            t
        },
        trim: function(t) {
            return t.replace(/^\s*/, "").replace(/\s*$/, "")
        }
    }
}
, function(t) {
    t.exports = "74HiC"
}
, function(t, e, n) {
    var i = n(90)
      , r = n(111)
      , s = Object.prototype.toString;
    function a(t) {
        return "[object Array]" === s.call(t)
    }
    function o(t) {
        return null !== t && "object" == typeof t
    }
    function c(t) {
        return "[object Function]" === s.call(t)
    }
    function l(t, e) {
        if (null != t)
            if ("object" != typeof t && (t = [t]),
            a(t))
                for (var n = 0, i = t.length; n < i; n++)
                    e.call(null, t[n], n, t);
            else
                for (var r in t)
                    Object.prototype.hasOwnProperty.call(t, r) && e.call(null, t[r], r, t)
    }
    t.exports = {
        isArray: a,
        isArrayBuffer: function(t) {
            return "[object ArrayBuffer]" === s.call(t)
        },
        isBuffer: r,
        isFormData: function(t) {
            return "undefined" != typeof FormData && t instanceof FormData
        },
        isArrayBufferView: function(t) {
            return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(t) : t && t.buffer && t.buffer instanceof ArrayBuffer
        },
        isString: function(t) {
            return "string" == typeof t
        },
        isNumber: function(t) {
            return "number" == typeof t
        },
        isObject: o,
        isUndefined: function(t) {
            return void 0 === t
        },
        isDate: function(t) {
            return "[object Date]" === s.call(t)
        },
        isFile: function(t) {
            return "[object File]" === s.call(t)
        },
        isBlob: function(t) {
            return "[object Blob]" === s.call(t)
        },
        isFunction: c,
        isStream: function(t) {
            return o(t) && c(t.pipe)
        },
        isURLSearchParams: function(t) {
            return "undefined" != typeof URLSearchParams && t instanceof URLSearchParams
        },
        isStandardBrowserEnv: function() {
            return ("undefined" == typeof navigator || "ReactNative" !== navigator.product) && "undefined" != typeof window && "undefined" != typeof document
        },
        forEach: l,
        merge: function t() {
            function e(e, i) {
                n[i] = "object" == typeof n[i] && "object" == typeof e ? t(n[i], e) : e
            }
            for (var n = {}, i = 0, r = arguments.length; i < r; i++)
                l(arguments[i], e);
            return n
        },
        extend: function(t, e, n) {
            return l(e, function(e, r) {
                t[r] = n && "function" == typeof e ? i(e, n) : e
            }),
            t
        },
        trim: function(t) {
            return t.replace(/^\s*/, "").replace(/\s*$/, "")
        }
    }
}
, function(t, e, n) {
    let i = n(4);
    const r = n(7)
      , s = n(23)
      , a = n(8)
      , o = n(22);
    let c = new i.TextureLoader
      , l = new i.LoadingManager
      , p = new i.OBJLoader(l);
    function h(t, e, n, r, s=0, o=0, l=0, h=null) {
        return new Promise(u=>{
            p.load(a.versionifyUrl(e), e=>{
                let p;
                n && (p = c.load(a.versionifyUrl(n), t=>{
                    t.wrapS = i.RepeatWrapping,
                    t.wrapT = i.RepeatWrapping,
                    t.repeat.set(1, 1),
                    t.minFilter = i.NearestFilter,
                    t.magFilter = i.NearestFilter,
                    t.needsUpdate = !0
                }
                ));
                let f = new i.StrippedLambertMaterial({
                    map: p
                })
                  , d = new i.Geometry;
                e.traverse(t=>{
                    t instanceof i.Mesh && (t.geometry.isBufferGeometry ? (d.fromBufferGeometry(t.geometry),
                    d.computeFlatVertexNormals(),
                    t.geometry.fromGeometry(d)) : t.geometry.computeFlatVertexNormals(),
                    t.material = f)
                }
                ),
                e.scale.setScalar(r || 1),
                e.position.y += s,
                e.rotateX(o || 0),
                e.rotateY(l || 0),
                h ? (t[h] && (t.remove(t[h]),
                t[h] = null),
                t[h] = e,
                t.add(t[h])) : t.add(e),
                u(e)
            }
            )
        }
        )
    }
    new i.BoxBufferGeometry(1,1,1);
    new i.PlaneBufferGeometry(1,1).rotateX(-Math.PI / 2);
    new i.StrippedLambertMaterial({
        color: 65280
    }),
    new i.StrippedLambertMaterial({
        color: 5592405
    });
    function u(t, e, n, r) {
        var a = s.generateCube([1, 1, 1, 1, 1, 1], t, e, n, {
            scale: 1,
            amb: r,
            useScale: !0
        });
        return a = (new i.BufferGeometry).fromGeometry(a)
    }
    let f = (t,e,n,r,a,o,c,l,p,h)=>{
        (c = c || {}).premultipliedAlpha = !0;
        var u = new i.Mesh(s.generatePlane(o, a, c, e, n, r));
        u.position.set(e, n, r),
        u.rotateY(l || 0),
        u.rotateX((p || 0) - Math.PI / 2),
        u.rotateZ(h || 0),
        u.scale.set(2 * a, 2 * o, 1),
        u.updateMatrix(),
        t.merge(u.geometry, u.matrix)
    }
      , d = (t,e,n,r,a,o,c,l,p)=>{
        p = p || {};
        var h = new i.Mesh(s.generateCube(l, a, o, c, p));
        return h.position.set(e, n, r),
        h.rotation.set(p.yR || 0, p.xR || 0, p.zR || 0),
        h.scale.set(a, o, c),
        t instanceof i.Geometry ? (h.updateMatrix(),
        t.merge(h.geometry, h.matrix)) : t.add(h),
        h
    }
    ;
    t.exports.prefabs = {
        CRATE: {
            dontRound: !0,
            gen: t=>h(t, "models/crate_0.obj", "textures/crate_0.png", r.crateScale),
            dummy: !1,
            castShadow: !0,
            receiveShadow: !0
        },
        STACK: {
            dontRound: !0,
            gen: t=>h(t, "models/stack_0.obj", "textures/stack_0.png", r.crateScale),
            dummy: !1,
            castShadow: !0,
            receiveShadow: !0
        },
        BARREL: {
            dontRound: !0,
            gen: t=>h(t, "models/barrel_0.obj", "textures/barrel_0.png", r.barrelScale),
            castShadow: !0,
            receiveShadow: !0
        },
        ACIDBARREL: {
            dontRound: !0,
            emiss: !0,
            gen: t=>h(t, "models/acidbarrel_0.obj", "textures/acidbarrel_0.png", r.acidbarrelScale),
            castShadow: !0,
            receiveShadow: !0
        },
        TREE: {
            dontRound: !0,
            complex: !0,
            gen: t=>h(t, "models/tree_0.obj", "textures/tree_0.png", r.treeScale),
            castShadow: !0,
            receiveShadow: !0
        },
        CONE: {
            dontRound: !0,
            complex: !0,
            gen: t=>h(t, "models/cone_0.obj", "textures/cone_0.png", r.coneScale),
            castShadow: !0,
            receiveShadow: !0
        },
        CONTAINER: {
            dontRound: !0,
            gen: t=>h(t, "models/container_0.obj", "textures/container_0.png", r.containerScale),
            castShadow: !0,
            receiveShadow: !0
        },
        CONTAINERR: {
            dontRound: !0,
            gen: t=>h(t, "models/containerr_0.obj", "textures/containerr_0.png", r.containerScale),
            castShadow: !0,
            receiveShadow: !0
        },
        DOOR: {
            dontRound: !0,
            gen: t=>h(t, "models/door_0.obj", "textures/door_0.png", r.doorScale),
            castShadow: !0,
            receiveShadow: !0
        },
        WINDOW: {
            dontRound: !0,
            gen: t=>h(t, "models/window_0.obj", "textures/window_0.png", r.windowScale),
            castShadow: !0,
            transparent: !0,
            receiveShadow: !0
        },
        GRASS: {
            complex: !0,
            doubleSide: !0,
            transparent: !0,
            gen: t=>h(t, "models/grass_0.obj", "textures/grass_0.png", r.grassScale),
            receiveShadow: !0
        },
        WEAPON_PICKUP: {
            defaultSize: [r.pickupZoneX, r.pickupZoneH, r.pickupZoneZ],
            scalable: !1,
            tool: !0,
            scaleWithSize: !1,
            lineCol: 3595263,
            noTexture: !0,
            texturable: !1,
            opacity: .1,
            genGeo: async(t,e)=>(function(t, e) {
                let n = s.generateCube([1, 1, 1, 1, 1, 1], ...t.size, {
                    scale: 1,
                    amb: e,
                    useScale: !0
                });
                return n = (new i.BufferGeometry).fromGeometry(n),
                h(t, "models/weapons/" + o[t.weaponId].src + ".obj", "textures/weapons/" + o[t.weaponId].src + ".png", o[t.weaponId].scale, -.5, -1.6, 0, "wepMesh"),
                n
            }
            )(t, e),
            stepSrc: "a"
        },
        VEHICLE: {
            dontRound: !0,
            complex: !0,
            emiss: !0,
            gen: t=>h(t, "models/vehicle_0.obj", "textures/vehicle_0.png", r.vehicleScale),
            castShadow: !0,
            receiveShadow: !0
        },
        LADDER: {
            defaultSize: [2, 10, 4],
            scalable: !0,
            scaleWithSize: !1,
            editColor: !0,
            hideBoundingBox: !1,
            texturable: !0,
            genGeo: async t=>(function(t, e, n, s) {
                var o = new i.Geometry;
                s = s * Math.PI / 2;
                let c = {
                    x: 0 + r.ladderScale * Math.cos(s),
                    z: 0 + r.ladderScale * Math.sin(s),
                    y: 0 - e / 2
                };
                d(o, c.x + r.ladderWidth * Math.sin(s), c.y, c.z + r.ladderWidth * Math.cos(s), 2 * r.ladderScale, e + 2, 2 * r.ladderScale, [1, 1, 1, 1, 1, 1], {
                    scale: .02
                }),
                d(o, c.x - r.ladderWidth * Math.sin(s), c.y, c.z - r.ladderWidth * Math.cos(s), 2 * r.ladderScale, e + 2, 2 * r.ladderScale, [1, 1, 1, 1, 1, 1], {
                    scale: .02
                });
                for (var l = Math.floor(e / 6), p = 0; p < l; ++p)
                    f(o, c.x, c.y + 6 * (p + 1) + a.randFloat(-1, 1), c.z, r.ladderWidth, r.ladderScale, {
                        scale: .02
                    }, -s + Math.PI / 2, Math.PI / 2, a.randFloat(-.1, .1));
                return o
            }
            )(...t.size, t.direction),
            customDirection: !0,
            stepSrc: "a",
            dummy: !1,
            castShadow: !0,
            receiveShadow: !0
        },
        CUBE: {
            canTrigger: !0,
            defaultSize: [10, 10, 10],
            hasHealth: !0,
            scalable: !0,
            editAmb: !0,
            scaleWithSize: !1,
            editColor: !0,
            editEmissive: !0,
            editOpac: !0,
            hideBoundingBox: !1,
            editPen: !0,
            texturable: !0,
            genGeo: async(t,e)=>u(...t.size, e),
            stepSrc: "a",
            dummy: !1,
            castShadow: !0,
            receiveShadow: !0,
            hasBorder: !0
        },
        RAMP: {
            defaultSize: [10, 5, 10],
            scalable: !0,
            scaleWithSize: !1,
            hideBoundingBox: !1,
            boostable: !0,
            editColor: !0,
            texturable: !0,
            genGeo: async t=>(function(t, e, n, r, a, o, c) {
                var l = new i.Geometry;
                e = 0 - a / 2;
                var p = 0 != (c = c * Math.PI / 2) && c != Math.PI;
                return ((t,e,n,r,a,o,c,p,h)=>{
                    p = p || {};
                    var u = new i.Mesh(s.generatePlane(2 * o, r, p));
                    u.position.set(t, e + a / 2, n),
                    o *= 2;
                    var f = Math.sqrt(a * a + o * o);
                    u.scale.set(r, f, 2),
                    u.rotateY(-Math.PI / 2 - c),
                    u.rotateX(Math.asin(a / f) - Math.PI / 2),
                    u.rotateZ(h || 0),
                    u.updateMatrix(),
                    l.merge(u.geometry, u.matrix)
                }
                )(t, e, n, p ? r : o, a, (p ? o : r) / 2, c, {
                    scale: 1
                }),
                l
            }
            )(0, 0, 0, ...t.size, t.direction),
            shootable: !0,
            customDirection: !0,
            stepSrc: "a",
            dummy: !1,
            castShadow: !0,
            receiveShadow: !0,
            doubleSide: !0
        },
        PLANE: {
            defaultSize: [4, .01, 4],
            dontRound: !0,
            scalable: !0,
            canTerrain: !0,
            edgeNoise: !0,
            scaleWithSize: !0,
            editColor: !0,
            editPen: !0,
            editEmissive: !0,
            editOpac: !0,
            hideBoundingBox: !1,
            texturable: !0,
            genGeo: async t=>(function(t, e) {
                let n = new i.PlaneGeometry(t,e);
                return n.rotateX(-Math.PI / 2),
                n
            }
            )(t.size[0], t.size[2]),
            stepSrc: "a",
            dummy: !1,
            castShadow: !0,
            receiveShadow: !0,
            doubleSide: !0
        },
        OBJECTIVE: {
            defaultSize: [50, 50, 50],
            scalable: !0,
            noTexture: !0,
            opacity: .2,
            lineCol: 13107455,
            tool: !0,
            genGeo: async(t,e)=>u(...t.size, e),
            stepSrc: "a"
        },
        PARTICLES: {
            defaultSize: [20, 20, 20],
            hasParticles: !0,
            scalable: !0,
            noTexture: !0,
            opacity: .3,
            lineCol: 3080191,
            tool: !0,
            genGeo: async(t,e)=>u(...t.size, e),
            stepSrc: "a"
        },
        BILLBOARD: {
            defaultSize: [40, .01, 10],
            lineCol: 16776960,
            dontRound: !0,
            scalable: !0,
            canTerrain: !0,
            scaleWithSize: !0,
            hideBoundingBox: !1,
            genGeo: async t=>(function(t, e, n, r, s, a) {
                var o = new i.Geometry;
                return f(o, t, e, n, r / 2, a / 2),
                o
            }
            )(0, 0, 0, ...t.size),
            stepSrc: "a",
            dummy: !1,
            castShadow: !0,
            receiveShadow: !0,
            doubleSide: !0
        },
        SCORE_ZONE: {
            customScore: !0,
            defaultSize: [10, 10, 10],
            scalable: !0,
            noTexture: !0,
            opacity: .3,
            lineCol: 16776960,
            tool: !0,
            genGeo: async(t,e)=>u(...t.size, e),
            stepSrc: "a"
        },
        DEATH_ZONE: {
            defaultSize: [10, 10, 10],
            scalable: !0,
            noTexture: !0,
            opacity: .3,
            lineCol: 16711680,
            tool: !0,
            genGeo: async(t,e)=>u(...t.size, e),
            stepSrc: "a"
        },
        SPAWN_POINT: {
            scalable: !1,
            alwaysSee: !0,
            tool: !0,
            scaleWithSize: !1,
            teamable: !0,
            noTexture: !0,
            opacity: 1e-5,
            stepSrc: "a",
            customDirection: !0,
            dontRound: !0,
            genGeo: async(t,e)=>(function(t, e) {
                h(t, "models/spawn_0.obj", "textures/spawn_0.png", 1, -5.5, 0, -((t.direction || 0) + 1) * Math.PI / 2, "spwnMesh");
                let n = s.generateCube([1, 1, 1, 1, 1, 1], 7, 11, 7, {
                    scale: 1,
                    amb: e,
                    transparent: !0,
                    useScale: !0,
                    depthWrite: !1,
                    side: 2
                });
                return n = (new i.BufferGeometry).fromGeometry(n)
            }
            )(t, e),
            dummy: !1,
            castShadow: !1,
            receiveShadow: !1
        },
        CHECK_POINT: {
            defaultSize: [10, 10, 10],
            scalable: !0,
            noTexture: !0,
            opacity: .3,
            lineCol: 252613,
            tool: !0,
            customDirection: !0,
            genGeo: async(t,e)=>u(...t.size, e),
            stepSrc: "a"
        },
        CAMERA_POSITION: {
            defaultSize: [2, 2, 2],
            scalable: !1,
            alwaysSee: !0,
            tool: !0,
            scaleWithSize: !1,
            hideBoundingBox: !0,
            editorGen: t=>(function(t, e, n) {
                let r = (new i.TextureLoader).load(a.versionifyUrl(e));
                r.magFilter = i.NearestFilter;
                let s = new i.SpriteMaterial({
                    map: r,
                    color: 16777215
                })
                  , o = new i.Sprite(s);
                n && o.scale.set(n, n, 1),
                t.add(o)
            }
            )(t, "img/crosshair.png", 5),
            stepSrc: "a",
            dummy: !1,
            castShadow: !1,
            receiveShadow: !1
        },
        FLAG: {
            defaultSize: [r.flagZoneS, r.flagZoneH, r.flagZoneS],
            scalable: !1,
            tool: !0,
            scaleWithSize: !1,
            lineCol: 13107455,
            teamable: !0,
            noDefault: !0,
            genGeo: async(t,e)=>(function(t, e) {
                h(t, "models/crystal_0.obj", "textures/crystal_0.png", r.flagScale, r.flagOff / 2);
                var n = s.generateCube([1, 1, 0, 0, 1, 1], ...t.size, {
                    scale: 1,
                    amb: e,
                    useScale: !0,
                    transparent: !0,
                    depthWrite: !1,
                    side: 2
                });
                return n = (new i.BufferGeometry).fromGeometry(n)
            }
            )(t, e),
            stepSrc: "a",
            dummy: !1,
            castShadow: !1,
            receiveShadow: !1
        },
        WATER: {
            movingTexture: !0,
            defaultSize: [10, 10, 10],
            scalable: !0,
            forceCollision: !0,
            editAmb: !0,
            scaleWithSize: !1,
            editColor: !0,
            editEmissive: !0,
            editOpac: !0,
            hideBoundingBox: !1,
            genGeo: async(t,e)=>u(...t.size, e),
            stepSrc: "a",
            dummy: !1,
            castShadow: !0,
            receiveShadow: !0
        },
        PLACEHOLDER: {
            defaultSize: [10, 10, 10],
            scalable: !0,
            noTexture: !0,
            noExport: !0,
            tool: !0,
            opacity: .1,
            lineCol: 0,
            genGeo: async(t,e)=>u(...t.size, e),
            stepSrc: "a"
        }
    },
    t.exports.texturePrefabs = {
        WALL: {
            src: "wall_0",
            filter: i.NearestFilter
        },
        DIRT: {
            src: "dirt_0",
            filter: i.NearestFilter
        },
        FLOOR: {
            src: "floor_0",
            filter: i.NearestFilter
        },
        GRID: {
            src: "grid_0",
            filter: i.NearestFilter
        },
        GREY: {
            src: "grey_0",
            filter: i.NearestFilter
        },
        DEFAULT: {
            src: "default",
            filter: i.NearestFilter
        },
        ROOF: {
            src: "roof_0",
            filter: i.NearestFilter
        },
        FLAG: {
            src: "flag_0",
            filter: i.NearestFilter
        },
        CHECK: {
            src: "check_0",
            filter: i.NearestFilter
        },
        GRASS: {
            src: "grass_1",
            filter: i.NearestFilter
        },
        LINES: {
            src: "lines_0",
            filter: i.NearestFilter
        },
        BRICK: {
            src: "brick_0",
            filter: i.NearestFilter
        },
        LINK: {
            src: "link_0",
            trans: !0,
            filter: i.NearestFilter
        }
    };
    let m = t=>({
        src: t,
        filter: i.NearestFilter
    });
    t.exports.loadTexturePrefab = function(e, n=null) {
        let s = "BILLBOARD" == n.objType ? m("pubs/b_" + (n.poster || a.randInt(1, r.billboardCnt))) : t.exports.texturePrefabs[e];
        return "default" == (s = "FLAG" == n.objType ? m("zone_r") : s).src ? void 0 : c.load(a.versionifyUrl("textures/" + s.src + ".png"), t=>{
            t.wrapS = i.RepeatWrapping,
            t.wrapT = i.RepeatWrapping,
            t.minFilter = s.filter,
            t.magFilter = s.filter,
            t.needsUpdate = !0
        }
        )
    }
}
, function(t, e, n) {
    n.d(e, "a", function() {
        return i
    });
    var i = function() {
        function t() {
            this._hasWeakSet = "function" == typeof WeakSet,
            this._inner = this._hasWeakSet ? new WeakSet : []
        }
        return t.prototype.memoize = function(t) {
            if (this._hasWeakSet)
                return !!this._inner.has(t) || (this._inner.add(t),
                !1);
            for (var e = 0; e < this._inner.length; e++)
                if (this._inner[e] === t)
                    return !0;
            return this._inner.push(t),
            !1
        }
        ,
        t.prototype.unmemoize = function(t) {
            if (this._hasWeakSet)
                this._inner.delete(t);
            else
                for (var e = 0; e < this._inner.length; e++)
                    if (this._inner[e] === t) {
                        this._inner.splice(e, 1);
                        break
                    }
        }
        ,
        t
    }()
}
, function(t, e, n) {
    const i = n(7)
      , r = n(58)
      , s = n(59)
      , a = n(22);
    var o = [{
        id: "ffa",
        name: "Free for All",
        alias: "ffa"
    }, {
        id: "tdm",
        name: "Team Deathmatch",
        endStats: ["sid", "name", "score", "kills", "deaths", "assists", "reward"],
        alias: "tdm",
        teams: !0
    }, {
        id: "point",
        name: "Hardpoint",
        alias: "point",
        endStats: ["sid", "name", "score", "kills", "deaths", "assists", "reward"],
        objective: !0,
        teams: !0,
        gameStart: function(t) {
            t.activeObjective = -1,
            t.nextObjective()
        }
    }, {
        id: "ctf",
        name: "Capture the Flag",
        alias: "ctf",
        endStats: ["sid", "name", "score", "kills", "deaths", "caps", "reward"],
        onKill: function(t, e) {
            t.dropFlag(e.flag)
        },
        flags: !0,
        teams: !0,
        noScoreC: !0
    }, {
        id: "bhop",
        name: "Parkour",
        endStats: ["sid", "name", "score", "deaths"],
        alias: "bhop",
        noKick: !0,
        friendly: !0
    }, {
        id: "hide",
        name: "Hide & Seek",
        alias: "hide",
        endStats: ["sid", "name", "score", "found", "reward"],
        winCondition: function(t) {
            for (var e = 0, n = 0; n < t.players.list.length; ++n)
                t.players.list[n].active && "hide" == t.players.list[n].team && e++;
            return 0 < e ? "hide" : "seek"
        },
        condition: function(t) {
            for (var e = 0, n = 0; n < t.players.list.length; ++n)
                t.players.list[n].active && "hide" == t.players.list[n].team && e++;
            return 0 < e
        },
        minPlayers: 2,
        waitTimers: [{
            time: 1e4,
            msg: "picking seeker in ",
            trigger: function(t) {
                t.pickSeeker()
            }
        }, {
            time: 45e3,
            msg: "releasing seeker in ",
            trigger: function(t) {
                t.releaseSeeker()
            }
        }],
        spdMlt: {
            hide: .8
        },
        killConv: !0,
        noKick: !0,
        showTeam: !0,
        startTeam: "hide",
        convTeam: "seek",
        convWord: "found",
        noWeap: !0,
        friendly: !0,
        hideNames: !0
    }, {
        id: "infect",
        name: "Infected",
        alias: "infect",
        endStats: ["sid", "name", "score", "kills", "infected", "reward"],
        winCondition: function(t) {
            for (var e = 0, n = 0; n < t.players.list.length; ++n)
                t.players.list[n].active && "surv" == t.players.list[n].team && e++;
            return 0 < e ? "surv" : "inf"
        },
        condition: function(t) {
            for (var e = 0, n = 0; n < t.players.list.length; ++n)
                t.players.list[n].active && "surv" == t.players.list[n].team && e++;
            return 0 < e
        },
        minPlayers: 2,
        waitTimers: [{
            time: 2e4,
            msg: "infection in ",
            trigger: function(t) {
                t.infectRandom()
            }
        }],
        teamClass: {
            inf: 9
        },
        spdMlt: {
            inf: 1.15
        },
        killConv: !0,
        noKick: !0,
        startTeam: "surv",
        convWord: "infected",
        convTeam: "inf"
    }, {
        id: "race",
        name: "Race",
        alias: "race",
        endStats: ["sid", "name", "score", "time"],
        gameTime: 0,
        showMS: !0,
        timed: !0,
        endSort: function(t, e) {
            return t.score === e.score && t.gameTimer && e.gameTimer ? t.gameTimer - e.gameTimer : e.score - t.score
        },
        gameStart: function(t) {
            t.lockMove = !0,
            t.targetScore = 0;
            for (var e = 0; e < t.map.manager.objects.length; ++e)
                t.map.manager.objects[e].score && (t.targetScore += t.map.manager.objects[e].scoreP)
        },
        condition: function(t) {
            for (var e = 0; e < t.players.list.length; ++e)
                t.players.list[e].score >= t.targetScore && !t.players.list[e].timer && (t.players.list[e].timer = t.lastTimer,
                t.players.list[e].gameTimer = t.gameTimer,
                t.waitTimers || (t.waitTimers = [{
                    time: 1e4,
                    contTime: !0,
                    msg: "race ends in ",
                    trigger: function(t) {
                        t.gameTimer = "skip"
                    }
                }]));
            return !0
        },
        waitTimers: [{
            time: 15e3,
            msg: "race starting in ",
            trigger: function(t) {
                t.lockMove = !1
            }
        }],
        noWeap: !0,
        friendly: !0
    }, {
        id: "lms",
        name: "Last Man Standing",
        alias: "lms",
        endStats: ["sid", "name", "score", "kills", "deaths", "assists"],
        noRegen: !0,
        noKick: !0,
        teams: !0,
        lives: 1,
        winCondition: function(t) {
            for (var e = 0, n = 0, i = 0; i < t.players.list.length; ++i)
                0 < t.players.list[i].lives && (1 == t.players.list[i].team ? e++ : n++);
            return e > n ? 1 : 2
        },
        gameTime: 3e5,
        waitTimers: [{
            time: 2e4,
            msg: "match begins in "
        }]
    }, {
        id: "simon",
        name: "Simon Says",
        alias: "simon",
        endStats: ["sid", "name", "score", "reward"],
        condition: function(t) {
            for (var e = 0, n = 0; n < t.players.list.length; ++n)
                t.players.list[n].active && "foll" == t.players.list[n].team && e++;
            return 0 < e
        },
        minPlayers: 3,
        waitTimers: [{
            time: 1e4,
            msg: "starts in ",
            trigger: function(t) {
                t.pickSimon()
            }
        }],
        noKick: !0,
        startTeam: "foll"
    }, {
        id: "gun",
        name: "Gun Game",
        alias: "gun",
        endStats: ["sid", "name", "weapon", "kills", "deaths"],
        winCondition: function(t) {
            for (var e = 0; e < t.players.list.length; ++e)
                if (t.players.list[e].killList.length >= t.mode.weaponOrder.length)
                    return t.players.list[e];
            return null
        },
        condition: function(t) {
            for (var e = 0; e < t.players.list.length; ++e)
                if (t.players.list[e].killList.length >= t.mode.weaponOrder.length)
                    return !1;
            return !0
        },
        onKill: function(t, e, n) {
            n && n != e ? t.increaseWeapon(n) : t.decreaseWeapon(e)
        },
        killRes: function(t) {
            return [t ? t.killList[t.killList.length - 1] : -1, t ? 1 : -1]
        },
        startingLoadout: [2],
        keepLoadout: !0,
        noKillRewards: !0,
        noReward: !0,
        noAssists: !0,
        noStreaks: !0,
        minPlayers: 2,
        noWeap: !0,
        weaponOrder: [2, 10, 4, 11, 5, 3, 9, 1, 6, 0, 7, 8, 13, 12]
    }]
      , c = [0, 1, 2, 3];
    t.exports.modes = o;
    for (var l = [{
        name: "Burg",
        ambInd: 1,
        modURL: "",
        terrainSeed: "",
        terrainWidth: 2048,
        terrainHeight: 2048,
        terrainMntMlt: 1,
        terrainMntCol: "#a0a0a0",
        terrainGrsCol: "#4a6904",
        terrainDrtCol: "#8c6835",
        skyDome: !1,
        skyDomeCol0: "#ffffff",
        skyDomeCol1: "#7196a2",
        skyDomeCol2: "#184452",
        zone: !1,
        zoneSize: 500,
        zoneSpeed: 1,
        zoneCol0: "#c542d9",
        zoneCol1: "#c542d9",
        zoneCol2: "#c542d9",
        sizeMlt: 2,
        shadowR: 1024,
        ambient: 8220268,
        light: 16771304,
        sky: 14141126,
        fog: 13812161,
        fogD: 918.7540927106669,
        dthY: -100,
        camPos: [11, 33, -217],
        spawns: [[-80, 18, 35, 0], [177, 0, -188, 0], [215, 10, -504, 0, 1], [-169, 2, -514, 0, 2], [-328, 0, -255, 0], [-154, 0, -134, 0, 1], [-125, -28, -341, 0], [32, -28, -509, 0, 1], [331, 0, -227, 0, 2], [102, 0, -365, 0]],
        ambO: .7,
        ambS: 5,
        modes: [0, 1],
        shadScale: 170,
        objects: [{
            p: [-96, 16, 41],
            s: [288, 2, 62],
            t: 1
        }, {
            p: [73, 0, 33],
            s: [50, 18, 46],
            i: 9,
            t: 1,
            d: 2
        }, {
            p: [28, 0, 8],
            s: [152, 24, 4]
        }, {
            p: [0, -2, -71],
            s: [516, 2, 252],
            t: 1
        }, {
            p: [-76, 0, -48],
            s: [56, 74, 122],
            bo: 1
        }, {
            p: [37, 0, -68],
            s: [110, 54, 80],
            bo: 1
        }, {
            p: [-112, 0, 74],
            s: [126, 76, 38],
            bo: 1
        }, {
            p: [90, 0, 77],
            s: [158, 76, 44],
            bo: 1
        }, {
            p: [-136, 16, -16],
            s: [64, 2, 52],
            t: 1
        }, {
            p: [-136, 0, -44],
            s: [64, 24, 4]
        }, {
            p: [-170, 0, -18],
            s: [4, 24, 56]
        }, {
            p: [-234, 0, -27],
            s: [32, 60, 97],
            bo: 1
        }, {
            p: [-258, 18, 41],
            s: [47, 32, 44],
            c: 13619151,
            bo: 1
        }, {
            p: [-218, 13, 74],
            s: [88, 38, 54],
            bo: 1
        }, {
            p: [185, 0, -9],
            s: [16, 67, 84],
            bo: 1
        }, {
            p: [180, 0, 45],
            s: [60, 92, 44],
            c: 11842740,
            bo: 1
        }, {
            p: [213, 0, -61],
            s: [94, 92, 60],
            c: 11645361,
            bo: 1
        }, {
            p: [96, 0, -175],
            s: [110, 44, 44],
            bo: 1
        }, {
            p: [-85, 0, -140],
            s: [56, 84, 112],
            bo: 1
        }, {
            p: [126, -4, -300],
            s: [228, 4, 206],
            t: 1
        }, {
            p: [-82, -28, -252],
            s: [60, 94, 138],
            bo: 1
        }, {
            p: [9, -28, -274],
            s: [6, 34, 168]
        }, {
            p: [49, -28, -385],
            s: [96, 104, 68],
            bo: 1
        }, {
            p: [-23, -28, -252],
            s: [58, 28, 110],
            i: 9,
            t: 1,
            d: 1
        }, {
            p: [59, -32, -452],
            s: [218, 4, 138],
            t: 1
        }, {
            p: [-108, -28, -377],
            s: [130, 88, 42],
            bo: 1
        }, {
            p: [-21, 6, -377],
            s: [44, 38, 20],
            bo: 1
        }, {
            p: [-243, 0, -105],
            s: [21, 50, 96],
            c: 12302777,
            bo: 1
        }, {
            p: [190, 0, -346],
            s: [117, 58, 118],
            bo: 1
        }, {
            p: [-195, 0, -17],
            s: [46, 18, 54],
            i: 9,
            t: 1,
            d: 1
        }, {
            p: [-134, 0, -191],
            s: [90, 77, 76],
            bo: 1
        }, {
            p: [-278, 0, -191],
            s: [130, 77, 76],
            bo: 1
        }, {
            p: [-227, -2, -254],
            s: [232, 2, 50],
            t: 1
        }, {
            p: [-210, -28, -323],
            s: [132, 90, 66],
            bo: 1
        }, {
            p: [-128, -28, -300],
            s: [32, 28, 42],
            i: 9,
            t: 1,
            d: 1
        }, {
            p: [-233, -2, -419],
            s: [172, 2, 280],
            t: 1
        }, {
            p: [-326, -22, -321],
            s: [34, 84, 88],
            bo: 1
        }, {
            p: [-370, -2, -253],
            s: [55, 155, 58],
            bo: 1
        }, {
            p: [-158, -28, -274],
            s: [28, 90, 32],
            bo: 1
        }, {
            p: [-263, -20, -322],
            s: [30, 94, 94],
            bo: 1
        }, {
            p: [-330, -23, -394],
            s: [22, 81, 210],
            bo: 1
        }, {
            p: [-88, -28, -429],
            s: [78, 28, 62],
            i: 9,
            t: 1,
            d: 2
        }, {
            p: [-103, -22, -497],
            s: [49, 84, 86],
            bo: 1
        }, {
            p: [-137, -2, -463],
            s: [20, 2, 130],
            t: 1
        }, {
            p: [-164, 0, -547],
            s: [98, 86, 40],
            bo: 1
        }, {
            p: [-283, 0, -506],
            s: [72, 10, 86],
            t: 1
        }, {
            p: [-261, 0, -452],
            s: [28, 10, 22],
            t: 1
        }, {
            p: [-298, 0, -450],
            s: [42, 10, 26],
            i: 9,
            t: 1,
            d: 3
        }, {
            p: [-347, 0, -535],
            s: [72, 72, 76],
            bo: 1
        }, {
            p: [-262, 0, -567],
            s: [98, 52, 40],
            bo: 1
        }, {
            p: [-319, 0, -587],
            s: [48, 139, 54],
            c: 11645361
        }, {
            p: [-1, -28, -377],
            s: [4, 34, 20],
            bo: 1
        }, {
            p: [-41, -28, -377],
            s: [4, 34, 20],
            bo: 1
        }, {
            p: [-63, -28, -506],
            s: [52, 118, 92],
            bo: 1
        }, {
            p: [85, -28, -498],
            s: [32, 112, 88],
            bo: 1
        }, {
            p: [173, 8, -503],
            s: [148, 2, 84],
            t: 1
        }, {
            p: [39, -29, -544],
            s: [218, 94, 46],
            bo: 1
        }, {
            p: [182, 10, -540],
            s: [72, 87, 60],
            bo: 1
        }, {
            p: [292, -4, -329],
            s: [104, 4, 264],
            t: 1
        }, {
            p: [280, 0, -485],
            s: [58, 10, 48],
            i: 9,
            t: 1,
            d: 3
        }, {
            p: [278, 8, -527],
            s: [62, 2, 36],
            t: 1
        }, {
            p: [264, 9, -558],
            s: [94, 36, 26],
            bo: 1
        }, {
            p: [331, -23, -552],
            s: [54, 135, 110],
            c: "#aaaaaa",
            bo: 1
        }, {
            p: [332, 0, -499],
            s: [48, 55, 110],
            bo: 1
        }, {
            p: [342, 1, -411],
            s: [20, 31, 110],
            bo: 1
        }, {
            p: [336, 0, -303],
            s: [54, 61, 110],
            bo: 1
        }, {
            p: [127, -28, -425],
            s: [64, 35, 4]
        }, {
            p: [196, -28, -461],
            s: [110, 44, 4]
        }, {
            p: [249, 0, -486],
            s: [4, 16, 46]
        }, {
            p: [204, -28, -440],
            s: [72, 28, 38],
            i: 9,
            t: 1
        }, {
            p: [156, 0, -188],
            s: [32, 70, 82],
            bo: 1
        }, {
            p: [228, 0, -188],
            s: [32, 86, 82],
            bo: 1
        }, {
            p: [367, 0, -146],
            s: [58, 50, 118],
            c: "#a2a2a2",
            bo: 1
        }, {
            p: [335, 81, -62],
            s: [60, 58, 60]
        }, {
            p: [348, 0, -227],
            s: [8, 44, 52],
            bo: 1
        }, {
            p: [393, 0, -420],
            s: [88, 64, 197]
        }, {
            p: [396, 0, -196],
            s: [58, 81, 186]
        }, {
            p: [-356, 0, -369],
            s: [42, 98, 50]
        }, {
            p: [-264, 0, -84],
            s: [42, 124, 50],
            c: 11316396
        }, {
            p: [1, 0, 0],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-42, 0, -79],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-42, 12, -79],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-42, 0, -67],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [0, -28, -325],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [0, -28, -337],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [0, -16, -333],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-76, -28, -327],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-76, -16, -327],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [237, 10, -473],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [224, 10, -520],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [155, 10, -504],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [167, 10, -504],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [163, 22, -504],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [214, 10, -466],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [312, 0, -399],
            s: [2, 2, 92]
        }, {
            p: [318, 0, -242],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [227, 0, -281],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [215, 0, -281],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [224, 12, -281],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-59, 18, 19],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-110, 18, -36],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-110, 0, -52],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-122, 0, -52],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-165, 18, -39],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-215, 18, 13],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-154, 0, -252],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-313, 0, -235],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-133, 0, -469],
            s: [12, 12, 12],
            i: 8
        }, {
            p: [-190, 0, -485],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [206, 0, -207],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [206, 0, -195],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [98, 0, -61],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [98, 0, -73],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [95, 0, -52],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [133, 0, -150],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [192, 34, -188],
            s: [40, 24, 82],
            bo: 1
        }, {
            p: [128, -4, -415],
            s: [68, 12, 20],
            t: 1
        }, {
            p: [93, -28, -422],
            s: [4, 42, 10]
        }, {
            p: [337, -4, -150],
            s: [22, 4, 94],
            t: 1
        }, {
            p: [-11, -28, -384],
            s: [20, 34, 2],
            pe: 1,
            t: 2,
            bo: 1
        }, {
            p: [-32, -28, -370],
            s: [18, 34, 2],
            pe: 1,
            t: 2,
            bo: 1
        }, {
            p: [173, 0, -233],
            s: [2, 34, 24],
            pe: 1,
            t: 2
        }, {
            p: [202, 0, -226],
            s: [20, 34, 2],
            pe: 1,
            t: 2,
            bo: 1
        }, {
            p: [182, 0, -150],
            s: [20, 34, 2],
            pe: 1,
            t: 2,
            bo: 1
        }, {
            p: [211, 0, -162],
            s: [2, 34, 24],
            t: 2,
            bo: 1
        }, {
            p: [20, -28, -438],
            s: [28, 76, 40],
            bo: 1
        }, {
            p: [114, 0, -388],
            s: [36, 8, 34],
            i: 9,
            t: 1,
            d: 3
        }, {
            p: [-337, 139, -563],
            s: [12, 4, 6],
            l: 1,
            c: 11184810
        }, {
            p: [-299, 139, -566],
            s: [8, 4, 12],
            l: 1,
            c: 11644847
        }, {
            p: [-297, 139, -586],
            s: [4, 4, 12],
            l: 1,
            c: 11842740
        }, {
            p: [-300, 139, -608],
            s: [10, 4, 12],
            l: 1,
            c: 10855845
        }, {
            p: [-316, 139, -563],
            s: [12, 2, 6],
            l: 1,
            c: 11184810
        }, {
            p: [-206, 86, -535],
            s: [14, 4, 16],
            l: 1
        }, {
            p: [-126, 86, -535],
            s: [22, 4, 16],
            l: 1
        }, {
            p: [-165, 86, -530],
            s: [22, 4, 6],
            l: 1
        }, {
            p: [-209, 86, -560],
            s: [8, 4, 14],
            l: 1
        }, {
            p: [-230, 52, -550],
            s: [24, 2, 6],
            l: 1
        }, {
            p: [-264, 52, -550],
            s: [18, 2, 6],
            l: 1
        }, {
            p: [-295, 52, -550],
            s: [14, 4, 6],
            l: 1
        }, {
            p: [-316, 70, -502],
            s: [6, 12, 6],
            l: 1,
            t: 2
        }, {
            p: [-378, 73, -502],
            s: [6, 8, 6],
            l: 1,
            t: 2
        }, {
            p: [-318, 72, -504],
            s: [14, 4, 14],
            l: 1
        }, {
            p: [-378, 72, -504],
            s: [10, 2, 14],
            l: 1
        }, {
            p: [-358, 72, -499],
            s: [14, 2, 4],
            l: 1
        }, {
            p: [-314, 72, -536],
            s: [6, 4, 16],
            l: 1
        }, {
            p: [-321, 58, -480],
            s: [4, 2, 24],
            l: 1
        }, {
            p: [-321, 58, -384],
            s: [4, 4, 16],
            l: 1
        }, {
            p: [-321, 58, -413],
            s: [4, 3, 21],
            l: 1
        }, {
            p: [-321, 58, -446],
            s: [4, 3, 19],
            l: 1
        }, {
            p: [-53, 60, -392],
            s: [20, 6, 12],
            l: 1
        }, {
            p: [-166, 60, -364],
            s: [14, 4, 16],
            l: 1
        }, {
            p: [233, 45, -548],
            s: [12, 2, 6],
            l: 1
        }, {
            p: [262, 45, -548],
            s: [11, 2, 6],
            l: 1,
            c: 13290186
        }, {
            p: [288, 45, -548],
            s: [16, 2, 6],
            l: 1
        }, {
            p: [-82, 90, -466],
            s: [14, 4, 12],
            l: 1
        }, {
            p: [-43, 90, -467],
            s: [12, 4, 14],
            l: 1
        }, {
            p: [-44, 90, -519],
            s: [14, 6, 30],
            l: 1
        }, {
            p: [-60, 90, -463],
            s: [14, 2, 6],
            l: 1
        }, {
            p: [-39, 90, -490],
            s: [4, 2, 16],
            l: 1
        }, {
            p: [-84, 90, -524],
            s: [10, 3, 26],
            l: 1
        }, {
            p: [-87, 90, -492],
            s: [4, 2, 10],
            l: 1
        }, {
            p: [-63, 71, -450],
            s: [4, 4, 20],
            t: 2,
            bo: 1
        }, {
            p: [-122, 55, -459],
            s: [6, 16, 6],
            t: 2
        }, {
            p: [-124, 62, -507],
            s: [6, 3, 16],
            l: 1,
            c: 14474460
        }, {
            p: [-124, 62, -476],
            s: [6, 2, 14],
            l: 1,
            c: 14935011
        }, {
            p: [-88, 62, -457],
            s: [18, 3, 6],
            l: 1
        }, {
            p: [-116, 60, -396],
            s: [26, 4, 4],
            l: 1
        }, {
            p: [-164, 60, -392],
            s: [18, 6, 12],
            l: 1
        }, {
            p: [-82, 60, -396],
            s: [14, 3, 4],
            l: 1
        }, {
            p: [85, 66, -447],
            s: [4, 4, 16],
            t: 2,
            bo: 1
        }, {
            p: [-31, 44, -377],
            s: [9, 4, 20],
            bo: 1
        }, {
            p: [-14, 44, -377],
            s: [10, 2, 20],
            bo: 1
        }, {
            p: [-341, 98, -387],
            s: [12, 4, 14],
            l: 1
        }, {
            p: [-341, 98, -350],
            s: [12, 6, 12],
            l: 1
        }, {
            p: [-338, 98, -369],
            s: [6, 2, 12],
            l: 1
        }, {
            p: [-371, 98, -389],
            s: [12, 4, 10],
            l: 1
        }, {
            p: [-356, 98, -392],
            s: [8, 2, 4],
            l: 1
        }, {
            p: [53, 65, -523],
            s: [18, 4, 4],
            l: 1
        }, {
            p: [135, 65, -523],
            s: [12, 4, 4],
            l: 1
        }, {
            p: [114, 65, -523],
            s: [12, 4, 4],
            l: 1
        }, {
            p: [211, 97, -517],
            s: [14, 6, 14],
            l: 1
        }, {
            p: [153, 97, -518],
            s: [14, 4, 16],
            l: 1
        }, {
            p: [184, 97, -514],
            s: [12, 2, 8],
            l: 1
        }, {
            p: [215, 97, -539],
            s: [6, 2, 18],
            l: 1
        }, {
            p: [211, 97, -564],
            s: [14, 6, 12],
            l: 1
        }, {
            p: [153, 97, -562],
            s: [14, 6, 16],
            l: 1
        }, {
            p: [149, 97, -539],
            s: [6, 2, 12],
            l: 1
        }, {
            p: [148, 16, -461],
            s: [14, 1, 4]
        }, {
            p: [242, 16, -461],
            s: [18, 2, 4]
        }, {
            p: [249, 16, -497],
            s: [4, 2, 10]
        }, {
            p: [96, 84, -459],
            s: [6, 12, 6],
            l: 1,
            t: 2
        }, {
            p: [74, 84, -459],
            s: [6, 10, 6],
            l: 1,
            t: 2
        }, {
            p: [97, 84, -537],
            s: [6, 20, 6],
            l: 1,
            t: 2
        }, {
            p: [94, 84, -463],
            s: [14, 4, 18],
            l: 1
        }, {
            p: [74, 84, -463],
            s: [10, 4, 18],
            l: 1
        }, {
            p: [76, 84, -533],
            s: [14, 4, 18],
            l: 1
        }, {
            p: [96, 84, -533],
            s: [10, 4, 18],
            l: 1
        }, {
            p: [98, 84, -498],
            s: [6, 4, 20],
            l: 1
        }, {
            p: [72, 84, -498],
            s: [6, 4, 26],
            l: 1
        }, {
            p: [91, 76, -414],
            s: [6, 16, 6],
            l: 1,
            t: 2
        }, {
            p: [85, 76, -410],
            s: [24, 6, 18],
            l: 1
        }, {
            p: [13, 76, -410],
            s: [24, 6, 18],
            l: 1
        }, {
            p: [48, 76, -416],
            s: [20, 4, 6],
            l: 1
        }, {
            p: [12, 76, -358],
            s: [22, 6, 14],
            l: 1
        }, {
            p: [5, 76, -382],
            s: [8, 4, 14],
            l: 1
        }, {
            p: [53, 76, -354],
            s: [22, 4, 6],
            l: 1
        }, {
            p: [85, 76, -360],
            s: [24, 6, 18],
            l: 1
        }, {
            p: [93, 76, -387],
            s: [8, 4, 14],
            l: 1
        }, {
            p: [6, 76, -414],
            s: [6, 20, 6],
            l: 1,
            t: 2
        }, {
            p: [6, 76, -356],
            s: [6, 14, 6],
            l: 1,
            t: 2
        }, {
            p: [334, 32, -432],
            s: [4, 2, 18],
            l: 1
        }, {
            p: [334, 32, -376],
            s: [4, 3, 18],
            l: 1
        }, {
            p: [334, 32, -406],
            s: [4, 2, 22],
            l: 1
        }, {
            p: [147, 58, -402],
            s: [31, 9, 6],
            l: 1
        }, {
            p: [136, 58, -378],
            s: [9, 12, 42],
            l: 1
        }, {
            p: [198, 58, -418],
            s: [10, 4, 6],
            l: 1
        }, {
            p: [245, 58, -375],
            s: [7, 4, 20],
            l: 1
        }, {
            p: [234, 58, -413],
            s: [29, 5, 16],
            l: 1
        }, {
            p: [236, 58, -299],
            s: [25, 4, 24],
            l: 1
        }, {
            p: [245, 58, -341],
            s: [7, 4, 20],
            l: 1
        }, {
            p: [243, 58, -416],
            s: [6, 19, 6],
            t: 2
        }, {
            p: [314, 61, -349],
            s: [10, 4, 18],
            l: 1
        }, {
            p: [333, 61, -356],
            s: [11, 3, 4],
            l: 1
        }, {
            p: [354, 61, -349],
            s: [18, 4, 18],
            l: 1
        }, {
            p: [312, 61, -306],
            s: [6, 4, 28],
            l: 1
        }, {
            p: [316, 61, -259],
            s: [14, 4, 22],
            l: 1
        }, {
            p: [334, 61, -250],
            s: [11, 3, 4],
            l: 1
        }, {
            p: [356, 61, -257],
            s: [14, 3, 18],
            l: 1
        }, {
            p: [285, 58, -88],
            s: [2, 40, 2],
            l: 1,
            t: 2
        }, {
            p: [285, 58, -40],
            s: [2, 40, 2],
            l: 1,
            t: 2
        }, {
            p: [294, 93, -64],
            s: [22, 2, 53],
            t: 2
        }, {
            p: [193, 58, -290],
            s: [24, 4, 6],
            l: 1
        }, {
            p: [136, 58, -332],
            s: [9, 6, 24],
            l: 1
        }, {
            p: [348, 44, -236],
            s: [8, 4, 16],
            l: 1,
            c: 15132390
        }, {
            p: [348, 44, -216],
            s: [8, 2, 8],
            l: 1
        }, {
            p: [352, 64, -379],
            s: [6, 4, 20],
            l: 1
        }, {
            p: [352, 64, -415],
            s: [6, 3, 14],
            l: 1
        }, {
            p: [310, 55, -490],
            s: [4, 4, 14],
            l: 1
        }, {
            p: [315, 55, -451],
            s: [14, 4, 14],
            l: 1
        }, {
            p: [310, 55, -473],
            s: [4, 2, 10],
            l: 1
        }, {
            p: [342, 55, -446],
            s: [14, 4, 4],
            l: 1
        }, {
            p: [307, 112, -576],
            s: [6, 4, 22],
            l: 1,
            c: "#b1b1b1"
        }, {
            p: [335, 139, -89],
            s: [12, 4, 6],
            l: 1
        }, {
            p: [313, 139, -84],
            s: [16, 6, 16],
            l: 1
        }, {
            p: [357, 139, -84],
            s: [16, 6, 16],
            l: 1
        }, {
            p: [313, 139, -40],
            s: [16, 6, 16],
            l: 1
        }, {
            p: [308, 139, -62],
            s: [6, 4, 12],
            l: 1
        }, {
            p: [228, 48, -102],
            s: [10, 2, 14],
            l: 1
        }, {
            p: [-293, 40, -321],
            s: [32, 22, 88],
            bo: 1
        }, {
            p: [-192, 62, -323],
            s: [20, 4, 66],
            l: 1
        }, {
            p: [-328, 62, -361],
            s: [20, 4, 8],
            l: 1
        }, {
            p: [-296, 62, -361],
            s: [20, 4, 8],
            l: 1
        }, {
            p: [-253, 73, -364],
            s: [6, 10, 6],
            l: 1,
            t: 2
        }, {
            p: [-274, 73, -364],
            s: [6, 14, 6],
            l: 1,
            t: 2
        }, {
            p: [-274, 74, -322],
            s: [8, 4, 94],
            l: 1
        }, {
            p: [-252, 74, -283],
            s: [8, 4, 16],
            l: 1
        }, {
            p: [9, 6, -313],
            s: [6, 2, 18]
        }, {
            p: [9, 6, -199],
            s: [6, 2, 18]
        }, {
            p: [9, 6, -252],
            s: [6, 2, 10]
        }, {
            p: [164, 0, -61],
            s: [4, 62, 4],
            t: 2,
            bo: 1
        }, {
            p: [154, 54, -61],
            s: [16, 4, 4],
            t: 2,
            bo: 1
        }, {
            p: [158, 51, -61],
            s: [16, 2, 2],
            l: 1,
            r: [0, 0, -.7],
            t: 2
        }, {
            p: [-263, 0, -273],
            s: [4, 54, 4],
            t: 2,
            bo: 1
        }, {
            p: [-263, 47, -263],
            s: [4, 4, 16],
            t: 2,
            bo: 1
        }, {
            p: [-263, 43, -268],
            s: [2, 2, 16],
            l: 1,
            r: [-.7, 0, 0],
            t: 2
        }, {
            p: [238, 86, -224],
            s: [12, 4, 10],
            l: 1
        }, {
            p: [240, 86, -152],
            s: [8, 4, 10],
            l: 1
        }, {
            p: [217, 86, -222],
            s: [10, 4, 14],
            l: 1
        }, {
            p: [242, 86, -189],
            s: [4, 4, 28],
            l: 1
        }, {
            p: [251, 92, -82],
            s: [18, 6, 18],
            l: 1,
            c: 11184810
        }, {
            p: [176, 92, -84],
            s: [20, 4, 14],
            l: 1,
            c: 11645361
        }, {
            p: [173, 92, -38],
            s: [14, 4, 14],
            l: 1,
            c: 12303291
        }, {
            p: [207, 92, -88],
            s: [20, 4, 6],
            l: 1,
            c: 12171705
        }, {
            p: [168, 92, -61],
            s: [4, 2, 12],
            l: 1,
            c: 10987431
        }, {
            p: [254, 92, -41],
            s: [12, 4, 20],
            l: 1,
            c: 11974326
        }, {
            p: [214, 92, -34],
            s: [24, 4, 6],
            l: 1,
            c: 11513775
        }, {
            p: [145, 70, -158],
            s: [10, 4, 22],
            l: 1
        }, {
            p: [168, 70, -154],
            s: [8, 4, 14],
            l: 1
        }, {
            p: [145, 70, -218],
            s: [10, 4, 22],
            l: 1
        }, {
            p: [168, 70, -222],
            s: [8, 4, 14],
            l: 1
        }, {
            p: [214, 86, -184],
            s: [4, 2, 24],
            l: 1
        }, {
            p: [216, 86, -152],
            s: [8, 4, 10],
            l: 1
        }, {
            p: [179, 67, 0],
            s: [4, 2, 10],
            l: 1
        }, {
            p: [179, 67, 17],
            s: [4, 6, 15],
            l: 1
        }, {
            p: [136, 44, -157],
            s: [4, 38, 4],
            t: 2
        }, {
            p: [45, 44, -157],
            s: [4, 38, 4],
            t: 2
        }, {
            p: [45, 44, -193],
            s: [4, 38, 4],
            t: 2
        }, {
            p: [136, 44, -193],
            s: [4, 42, 4],
            t: 2
        }, {
            p: [91, 58, -175],
            s: [100, 2, 44],
            t: 2,
            bo: 1
        }, {
            p: [127, 44, -155],
            s: [26, 4, 4],
            l: 1
        }, {
            p: [48, 44, -159],
            s: [14, 4, 12],
            l: 1
        }, {
            p: [46, 44, -191],
            s: [10, 4, 12],
            l: 1
        }, {
            p: [90, 44, -155],
            s: [18, 2, 4],
            l: 1
        }, {
            p: [195, 58, -226],
            s: [18, 4, 6],
            l: 1
        }, {
            p: [186, 58, -150],
            s: [18, 4, 6],
            l: 1
        }, {
            p: [-3, 54, -100],
            s: [30, 6, 16],
            l: 1
        }, {
            p: [77, 54, -98],
            s: [30, 6, 20],
            l: 1
        }, {
            p: [79, 54, -35],
            s: [26, 6, 14],
            l: 1
        }, {
            p: [-5, 54, -35],
            s: [26, 6, 14],
            l: 1
        }, {
            p: [89, 54, -66],
            s: [6, 4, 20],
            l: 1
        }, {
            p: [37, 54, -105],
            s: [30, 4, 6],
            l: 1
        }, {
            p: [-15, 54, -66],
            s: [6, 4, 20],
            l: 1
        }, {
            p: [38, 54, -31],
            s: [18, 4, 6],
            l: 1
        }, {
            p: [-53, 60, -364],
            s: [20, 4, 16],
            l: 1
        }, {
            p: [-237, 50, 35],
            s: [5, 2, 10],
            l: 1,
            c: 13158600
        }, {
            p: [164, 92, 31],
            s: [28, 6, 16],
            l: 1,
            c: 11842740
        }, {
            p: [205, 92, 31],
            s: [10, 4, 16],
            l: 1,
            c: 13816530
        }, {
            p: [156, 92, 60],
            s: [12, 6, 14],
            l: 1,
            c: 13158600
        }, {
            p: [-260, 47, 19],
            s: [4, 54, 158]
        }, {
            p: [-197, 47, 97],
            s: [158, 54, 4]
        }, {
            p: [-178, 13, 51],
            s: [4, 74, 4],
            t: 2
        }, {
            p: [-254, 13, 51],
            s: [4, 74, 4],
            t: 2
        }, {
            p: [-216, 80, 72],
            s: [84, 2, 50],
            t: 2
        }, {
            p: [-55, 74, 2],
            s: [14, 6, 22],
            l: 1
        }, {
            p: [-97, 74, 1],
            s: [14, 6, 24],
            l: 1
        }, {
            p: [-102, 74, -42],
            s: [4, 4, 24],
            l: 1
        }, {
            p: [-102, 74, -75],
            s: [4, 4, 14],
            l: 1
        }, {
            p: [-77, 74, 11],
            s: [14, 4, 4],
            l: 1
        }, {
            p: [-50, 74, -45],
            s: [4, 4, 24],
            l: 1
        }, {
            p: [-54, 74, -97],
            s: [12, 4, 24],
            l: 1
        }, {
            p: [-236, 50, -131],
            s: [7, 4, 24],
            l: 1,
            c: 13158086
        }, {
            p: [-236, 50, -96],
            s: [7, 4, 22],
            l: 1,
            c: 11974326
        }, {
            p: [-221, 60, 14],
            s: [6, 2, 15],
            l: 1
        }, {
            p: [-244, 60, 13],
            s: [12, 2, 17],
            l: 1
        }, {
            p: [-224, 60, -61],
            s: [12, 2, 29],
            l: 1
        }, {
            p: [-220, 60, -17],
            s: [4, 2, 8],
            l: 1
        }, {
            p: [-251, 124, -64],
            s: [16, 4, 10],
            l: 1,
            c: 12171191
        }, {
            p: [-279, 124, -66],
            s: [12, 4, 14],
            l: 1,
            c: 12829635
        }, {
            p: [-278, 124, -105],
            s: [14, 3, 8],
            l: 1
        }, {
            p: [-109, 60, -359],
            s: [34, 4, 6],
            l: 1
        }, {
            p: [-130, 77, -156],
            s: [14, 3, 6],
            l: 1
        }, {
            p: [357, 139, -40],
            s: [16, 6, 16],
            l: 1
        }, {
            p: [-296, 62, -281],
            s: [20, 4, 8],
            l: 1
        }, {
            p: [-323, 62, -281],
            s: [14, 4, 8],
            l: 1
        }, {
            p: [9, 0, -180],
            s: [4, 54, 4],
            t: 2,
            bo: 1
        }, {
            p: [9, 44, -175],
            s: [2, 2, 12],
            l: 1,
            r: [-.7, 0, 0],
            t: 2
        }, {
            p: [-106, 84, -96],
            s: [14, 6, 24],
            l: 1
        }, {
            p: [-110, 84, -137],
            s: [6, 4, 24],
            l: 1
        }, {
            p: [-64, 84, -96],
            s: [14, 6, 24],
            l: 1
        }, {
            p: [-64, 84, -184],
            s: [14, 6, 24],
            l: 1
        }, {
            p: [-60, 84, -137],
            s: [6, 4, 16],
            l: 1
        }, {
            p: [-182, 51, 55],
            s: [16, 4, 16],
            l: 1
        }, {
            p: [-250, 51, 50],
            s: [16, 4, 6],
            l: 1
        }, {
            p: [-212, 51, 50],
            s: [16, 2, 6],
            l: 1
        }, {
            p: [-252, 51, 60],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [343, 32, -364],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [243, 56, -292],
            s: [6, 28, 6],
            t: 2
        }, {
            p: [10, 24, 8],
            s: [18, 2, 4]
        }, {
            p: [82, 24, 8],
            s: [20, 2, 4]
        }, {
            p: [-35, 24, 8],
            s: [9, 1, 4]
        }, {
            p: [-129, 24, -44],
            s: [16, 2, 4]
        }, {
            p: [-164, 24, -44],
            s: [16, 2, 4]
        }, {
            p: [-170, 24, -31],
            s: [4, 2, 22]
        }, {
            p: [-170, 24, 4],
            s: [4, 2, 12]
        }, {
            p: [-227, 62, -323],
            s: [20, 4, 66],
            l: 1
        }, {
            p: [-108, 83, -89],
            s: [6, 26, 6],
            t: 2
        }, {
            p: [-250, 44, -124],
            s: [4, 41, 4],
            t: 2
        }, {
            p: [-280, 44, -124],
            s: [4, 40, 4],
            t: 2
        }, {
            p: [-265, 74, -117],
            s: [38, 2, 22],
            t: 2
        }, {
            p: [-57, 66, -201],
            s: [10, 6, 36],
            l: 1
        }, {
            p: [-57, 66, -260],
            s: [10, 4, 26],
            l: 1
        }, {
            p: [-61, 66, -308],
            s: [18, 4, 26],
            l: 1
        }, {
            p: [-103, 66, -308],
            s: [18, 4, 26],
            l: 1
        }, {
            p: [-107, 66, -251],
            s: [10, 4, 22],
            l: 1
        }, {
            p: [-168, 62, -268],
            s: [8, 2, 20],
            l: 1
        }, {
            p: [-150, 62, -268],
            s: [12, 4, 20],
            l: 1
        }, {
            p: [-148, 62, -304],
            s: [8, 4, 20],
            l: 1
        }, {
            p: [-148, 62, -342],
            s: [8, 4, 28],
            l: 1
        }, {
            p: [335, 100, -92],
            s: [6, 20, 2],
            l: 1,
            c: 0
        }, {
            p: [196, 51, -91],
            s: [6, 20, 2],
            l: 1,
            c: 0
        }, {
            p: [-243, 94, -84],
            s: [2, 16, 6],
            l: 1,
            c: 0
        }, {
            p: [-295, 112, -587],
            s: [2, 14, 6],
            l: 1,
            c: 0
        }, {
            p: [-319, 112, -560],
            s: [5, 14, 2],
            l: 1,
            c: 0
        }, {
            p: [305, 100, -62],
            s: [2, 20, 6],
            l: 1,
            c: 0
        }, {
            p: [304, 78, -518],
            s: [2, 14, 6],
            l: 1,
            c: 0
        }, {
            p: [203, 70, -510],
            s: [5, 14, 2],
            l: 1,
            c: 0
        }, {
            p: [183, 70, -510],
            s: [5, 14, 2],
            l: 1,
            c: 0
        }, {
            p: [162, 70, -510],
            s: [5, 14, 2],
            l: 1,
            c: 0
        }, {
            p: [38, 18, 52],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [300, 49, -301],
            s: [18, 4, 4],
            t: 2,
            bo: 1
        }, {
            p: [-210, 0, -155],
            s: [4, 1, 6],
            l: 1
        }, {
            p: [-177, 0, -258],
            s: [4, 2, 6],
            l: 1
        }, {
            p: [-271, 0, -270],
            s: [6, 2, 4],
            l: 1
        }, {
            p: [-242, 0, -431],
            s: [8, 2, 4],
            l: 1
        }, {
            p: [-174, 0, -403],
            s: [4, 1, 4],
            l: 1
        }, {
            p: [-154, -1, -404],
            s: [8, 2, 8],
            l: 1
        }, {
            p: [-5, -28, -393],
            s: [6, 2, 4],
            l: 1
        }, {
            p: [307, 0, -439],
            s: [4, 1, 6],
            l: 1
        }, {
            p: [338, 0, -212],
            s: [4, 2, 8],
            l: 1
        }, {
            p: [305, 0, -254],
            s: [4, 2, 6],
            l: 1
        }, {
            p: [223, 0, -232],
            s: [8, 2, 4],
            l: 1
        }, {
            p: [203, 0, -284],
            s: [8, 2, 4],
            c: 11316396
        }, {
            p: [101, 0, -355],
            s: [4, 2, 8],
            l: 1
        }, {
            p: [15, 0, -345],
            s: [4, 2, 8],
            l: 1
        }, {
            p: [15, 0, -211],
            s: [4, 2, 8]
        }, {
            p: [-50, 0, -175],
            s: [6, 2, 8],
            l: 1
        }, {
            p: [97, 0, -87],
            s: [6, 2, 8],
            l: 1
        }, {
            p: [94, 0, 0],
            s: [10, 2, 4],
            l: 1
        }, {
            p: [-43, 0, -1],
            s: [6, 2, 8],
            l: 1
        }, {
            p: [-11, 18, 15],
            s: [10, 2, 4],
            l: 1
        }, {
            p: [-154, 18, -38],
            s: [6, 1, 3],
            l: 1
        }, {
            p: [-108, 18, -7],
            s: [4, 2, 10],
            l: 1
        }, {
            p: [-136, 0, -52],
            s: [8, 2, 6],
            l: 1
        }, {
            p: [162, 0, -52],
            s: [3, 2, 5],
            l: 1
        }, {
            p: [46, 0, -149],
            s: [6, 1, 5],
            l: 1
        }, {
            p: [-306, 0, -349],
            s: [4, 1, 7],
            l: 1
        }, {
            p: [-332, 0, -270],
            s: [4, 2, 8],
            l: 1
        }, {
            p: [-59, -28, -325],
            s: [4, 2, 4]
        }, {
            p: [-141, -28, -351],
            s: [4, 2, 8]
        }, {
            p: [-182, 0, -218],
            s: [4, 2, 8],
            l: 1
        }, {
            p: [-218, 18, 43],
            s: [8, 1, 4],
            l: 1
        }, {
            p: [-40, 18, 52],
            s: [6, 2, 8],
            l: 1
        }, {
            p: [119, 0, -149],
            s: [6, 2, 6],
            l: 1
        }, {
            p: [-196, 0, -524],
            s: [5, 1, 4],
            l: 1
        }, {
            p: [160, 0, -70],
            s: [4, 2, 4],
            l: 1
        }, {
            p: [-52, 0, -163],
            s: [4, 2, 4],
            l: 1
        }, {
            p: [251, 0, -407],
            s: [4, 2, 6],
            l: 1
        }, {
            p: [-5, -28, -408],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [251, 0, -288],
            s: [3, 1, 5],
            l: 1,
            c: 12829635
        }, {
            p: [313, 0, -344],
            s: [3, 1, 4]
        }, {
            p: [321, 0, -364],
            s: [4, 2, 4],
            l: 1
        }, {
            p: [202, 0, -94],
            s: [4, 1, 4]
        }, {
            p: [16, 0, -264],
            s: [4, 1, 6]
        }, {
            p: [37, 0, -307],
            s: [4, 6, 38]
        }, {
            p: [94, 0, -325],
            s: [22, 6, 4]
        }, {
            p: [107, 0, -314],
            s: [4, 6, 26]
        }, {
            p: [37, 6, -316],
            s: [4, 2, 10]
        }, {
            p: [107, 6, -321],
            s: [4, 2, 12]
        }, {
            p: [99, 6, -325],
            s: [12, 4, 4]
        }, {
            p: [76, 0, -325],
            s: [14, 2, 4]
        }, {
            p: [9, 47, -171],
            s: [4, 4, 14],
            t: 2,
            bo: 1
        }, {
            p: [85, -1, -226],
            s: [6, 2, 4],
            l: 1
        }, {
            p: [65, -1, -200],
            s: [6, 2, 4],
            l: 1
        }, {
            p: [-124, 61, -114],
            s: [22, 4, 4],
            t: 2,
            bo: 1
        }, {
            p: [22, 45, -351],
            s: [6, 14, 2],
            l: 1,
            c: 0
        }, {
            p: [51, 45, -351],
            s: [6, 14, 2],
            l: 1,
            c: 0
        }, {
            p: [79, 45, -351],
            s: [6, 14, 2],
            l: 1,
            c: 0
        }, {
            p: [-63, 68, -456],
            s: [2, 2, 14],
            l: 1,
            r: [-.7, 0, 0],
            t: 2
        }, {
            p: [-115, 57, -114],
            s: [14, 2, 2],
            l: 1,
            r: [0, 0, -.7],
            t: 2
        }, {
            p: [91, 77, -175],
            s: [100, 2, 44],
            t: 2,
            bo: 1
        }, {
            p: [107, 10, -469],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [203, -28, -413],
            s: [91, 86, 16],
            bo: 1
        }, {
            p: [165, 58, -413],
            s: [11, 6, 16],
            l: 1
        }, {
            p: [179, 16, -461],
            s: [20, 2, 4]
        }, {
            p: [344, 50, -196],
            s: [12, 3, 18],
            l: 1,
            c: "#b1b1b1"
        }, {
            p: [340, 50, -160],
            s: [4, 2, 18],
            l: 1,
            c: "#b9b9b9"
        }, {
            p: [340, 50, -123],
            s: [4, 4, 22],
            l: 1,
            c: "#b9b9b9"
        }, {
            p: [322, -1, -401],
            s: [20, 2, 96],
            c: 10987431,
            t: 1
        }, {
            p: [144, 58, -294],
            s: [25, 4, 14],
            l: 1
        }, {
            p: [305, 45, -301],
            s: [14, 2, 2],
            l: 1,
            r: [0, 0, -.7],
            t: 2
        }, {
            p: [85, 62, -453],
            s: [2, 2, 14],
            l: 1,
            r: [-.7, 0, 0],
            t: 2
        }, {
            p: [-22, 65, -523],
            s: [18, 4, 4],
            l: 1
        }, {
            p: [16, 65, -523],
            s: [20, 2, 4],
            l: 1
        }, {
            p: [-146, 0, -475],
            s: [8, 26, 2],
            i: 3,
            t: 2,
            d: 1
        }, {
            p: [-210, 0, -276],
            s: [76, 5, 2],
            c: 13158600
        }, {
            p: [-210, 0, -284],
            s: [76, 4, 14],
            l: 1,
            c: 1916250,
            o: .8,
            t: 5
        }, {
            p: [-253, 0, -269],
            s: [4, 2, 6],
            l: 1
        }, {
            p: [-175, 0, -270],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-302, 0, -232],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-128, 0, -115],
            s: [6, 2, 66],
            t: 2
        }, {
            p: [-121, 0, -114],
            s: [6, 2, 66],
            c: 13290186,
            t: 2
        }, {
            p: [-132, 2, -113],
            s: [6, 2, 66],
            t: 2
        }, {
            p: [-125, 2, -114],
            s: [6, 2, 66],
            t: 2
        }, {
            p: [-128, 4, -112],
            s: [6, 2, 66],
            c: 12632256,
            t: 2
        }, {
            p: [-135, 0, -112],
            s: [6, 2, 66],
            c: 12303291,
            t: 2
        }, {
            p: [-132, 38, -114],
            s: [1, 25, 1],
            l: 1,
            c: 11645361,
            t: 2
        }, {
            p: [-196, 46, -191],
            s: [34, 31, 76],
            bo: 1
        }, {
            p: [-183, 40, -157],
            s: [2, 6, 2],
            l: 1,
            c: 3421236,
            t: 5
        }, {
            p: [-192, 42, -157],
            s: [2, 6, 2],
            l: 1,
            c: 3421236,
            t: 5
        }, {
            p: [-201, 41, -157],
            s: [2, 6, 2],
            l: 1,
            c: 3421236,
            t: 5
        }, {
            p: [-209, 40, -157],
            s: [2, 6, 2],
            l: 1,
            c: 3421236,
            t: 5
        }, {
            p: [-192, 41, -227],
            s: [2, 6, 2],
            l: 1,
            c: 3421236,
            t: 5
        }, {
            p: [-183, 40, -227],
            s: [2, 6, 2],
            l: 1,
            c: 3421236,
            t: 5
        }, {
            p: [-201, 42, -227],
            s: [2, 4, 2],
            l: 1,
            c: 3421236,
            t: 5
        }, {
            p: [-209, 40, -227],
            s: [2, 6, 2],
            l: 1,
            c: 3421236,
            t: 5
        }, {
            p: [-442, 0, 157],
            s: [62, 206, 72],
            l: 1
        }, {
            p: [-418, 206, 129],
            s: [14, 6, 16],
            l: 1
        }, {
            p: [-414, 206, 157],
            s: [6, 6, 22],
            l: 1
        }, {
            p: [-414, 206, 186],
            s: [6, 4, 14],
            l: 1
        }, {
            p: [-444, 206, 123],
            s: [20, 6, 4],
            l: 1
        }, {
            p: [-468, 206, 123],
            s: [10, 6, 4],
            l: 1
        }, {
            p: [-442, 163, 121],
            s: [8, 20, 2],
            l: 1,
            c: 0
        }, {
            p: [-178, 13, 93],
            s: [4, 74, 4],
            t: 2
        }, {
            p: [-254, 13, 93],
            s: [4, 74, 4],
            t: 2
        }, {
            p: [-19, 64, 74],
            s: [60, 12, 38],
            bo: 1
        }, {
            p: [123, 76, 57],
            s: [28, 4, 4],
            l: 1
        }, {
            p: [70, 76, 57],
            s: [34, 2, 4],
            l: 1
        }, {
            p: [21, 76, 57],
            s: [26, 4, 4],
            l: 1
        }, {
            p: [-41, 76, 57],
            s: [12, 2, 4],
            l: 1
        }, {
            p: [-75, 76, 57],
            s: [16, 2, 4],
            l: 1
        }, {
            p: [-127, 76, 57],
            s: [26, 4, 4],
            l: 1
        }, {
            p: [-19, 0, 73],
            s: [60, 64, 2],
            t: 2,
            bo: 1
        }, {
            p: [-46, 18, 61],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-13, 32, 71],
            s: [4, 4, 2],
            l: 1,
            c: 3092271,
            t: 5,
            bo: 1
        }, {
            p: [-26, 32, 71],
            s: [4, 4, 2],
            l: 1,
            c: 3092271,
            t: 5,
            bo: 1
        }, {
            p: [19, 63, 48],
            s: [4, 4, 16],
            t: 2,
            bo: 1
        }, {
            p: [-56, 63, 48],
            s: [4, 4, 16],
            t: 2,
            bo: 1
        }, {
            p: [-56, 59, 53],
            s: [2, 2, 12],
            l: 1,
            r: [.87, 0, 0],
            t: 2
        }, {
            p: [19, 59, 53],
            s: [2, 2, 12],
            l: 1,
            r: [.87, 0, 0],
            t: 2
        }, {
            p: [-139, 301, 405],
            s: [110, 66, 86],
            t: 5
        }, {
            p: [-73, 281, 361],
            s: [70, 42, 56],
            t: 5
        }, {
            p: [-527, 412, 373],
            s: [146, 90, 116],
            t: 5
        }, {
            p: [-571, 369, 297],
            s: [118, 72, 94],
            t: 5
        }, {
            p: [673, 319, 120],
            s: [110, 66, 86],
            t: 5
        }, {
            p: [485, 337, 226],
            s: [146, 88, 198],
            t: 5
        }, {
            p: [334, 337, 95],
            s: [58, 30, 97],
            l: 1,
            t: 5
        }, {
            p: [-866, 323, -277],
            s: [146, 90, 196],
            l: 1,
            t: 5
        }, {
            p: [-926, 303, -516],
            s: [122, 76, 160],
            l: 1,
            t: 5
        }, {
            p: [-1998, 360, -35],
            s: [260, 76, 368],
            l: 1,
            t: 5
        }, {
            p: [1593, 397, -140],
            s: [218, 132, 256],
            t: 5
        }, {
            p: [1593, 377, -267],
            s: [118, 72, 92],
            t: 5
        }, {
            p: [-130, 234, -914],
            s: [146, 90, 116],
            t: 5
        }, {
            p: [-46, 204, -952],
            s: [118, 74, 94],
            t: 5
        }, {
            p: [98, 204, -952],
            s: [96, 38, 48],
            l: 1,
            t: 5
        }, {
            p: [735, 363, -1249],
            s: [224, 104, 178],
            t: 5
        }, {
            p: [186, 263, 500],
            s: [104, 58, 112],
            l: 1,
            t: 5
        }, {
            p: [81, 263, 500],
            s: [48, 28, 52],
            l: 1,
            t: 5
        }, {
            p: [-561, 204, -851],
            s: [118, 74, 94],
            t: 5
        }, {
            p: [-22, -28, -518],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-34, -16, -518],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-31, -28, -515],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [60, -28, -425],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [63, -28, -515],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [63, -28, -503],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [54, -28, -518],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [218, 70, -541],
            s: [2, 14, 6],
            l: 1,
            c: 0
        }, {
            p: [-13, 76, 57],
            s: [10, 4, 4],
            l: 1
        }, {
            p: [-19, 70, 102],
            s: [220, 40, 58],
            c: 12303291,
            bo: 1
        }, {
            p: [89, 110, 108],
            s: [4, 4, 18],
            l: 1,
            c: 13814731
        }, {
            p: [-119, 110, 80],
            s: [20, 4, 14],
            l: 1,
            c: 12303291
        }, {
            p: [36, 110, 75],
            s: [16, 4, 4],
            l: 1,
            c: 12500156
        }, {
            p: [-2, 110, 75],
            s: [24, 2, 4],
            l: 1,
            c: 12631228
        }, {
            p: [-78, 110, 75],
            s: [14, 2, 4],
            l: 1,
            c: 10329501
        }, {
            p: [-44, 110, 75],
            s: [14, 4, 4],
            l: 1,
            c: 12961221
        }, {
            p: [81, 110, 80],
            s: [20, 4, 14],
            l: 1,
            c: 12303291
        }, {
            p: [-127, 110, 108],
            s: [4, 4, 18],
            l: 1,
            c: 11645361
        }, {
            p: [-121, 99, 70],
            s: [4, 4, 8],
            t: 2
        }, {
            p: [82, 99, 70],
            s: [4, 4, 8],
            t: 2
        }, {
            p: [92, 99, 82],
            s: [12, 4, 4],
            t: 2
        }, {
            p: [-131, 99, 82],
            s: [10, 4, 4],
            t: 2
        }, {
            p: [292, 45, -113],
            s: [60, 2, 20],
            t: 2,
            bo: 1
        }, {
            p: [264, 0, -121],
            s: [2, 49, 2],
            t: 2
        }, {
            p: [12, -28, -461],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [138, -28, -456],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [20, 48, -433],
            s: [28, 4, 14],
            l: 1
        }, {
            p: [20, 48, -453],
            s: [28, 2, 10],
            l: 1
        }, {
            p: [161, -28, -424],
            s: [4, 42, 6]
        }, {
            p: [-109, 40, -404],
            s: [4, 4, 14],
            t: 2,
            bo: 1
        }, {
            p: [-109, 37, -400],
            s: [2, 2, 14],
            l: 1,
            r: [.7, 0, 0],
            t: 2
        }, {
            p: [20, 34, -461],
            s: [4, 4, 20],
            t: 2,
            bo: 1
        }, {
            p: [20, 32, -461],
            s: [2, 2, 12],
            l: 1,
            r: [.87, 0, 0],
            t: 2
        }, {
            p: [21, -28, -464],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [21, -16, -464],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-253, 57, -559],
            s: [74, 32, 2],
            c: 6904648,
            t: 5
        }, {
            p: [-286, 52, -562],
            s: [4, 40, 4],
            t: 2
        }, {
            p: [-221, 52, -562],
            s: [4, 40, 4],
            t: 2
        }, {
            p: [260, 51, -568],
            s: [74, 32, 2],
            c: 7363405,
            t: 5
        }, {
            p: [260, 67, -566],
            s: [69, 0, 29],
            i: 11,
            l: 1,
            r: [1.57, 0, 0]
        }, {
            p: [-258, 69, -18],
            s: [2, 26, 62],
            c: 6903619,
            t: 5
        }, {
            p: [-256, 82, -18],
            s: [57, 0, 23],
            i: 11,
            l: 1,
            r: [1.57, 0, 1.57]
        }, {
            p: [72, 0, -277],
            s: [64, 41, 90],
            i: 14,
            l: 1
        }, {
            p: [-283, 10, -505],
            s: [69, 41, 78],
            i: 14,
            l: 1
        }, {
            p: [174, 10, -504],
            s: [142, 41, 78],
            i: 14,
            l: 1
        }, {
            p: [-136, 18, -16],
            s: [59, 41, 49],
            i: 14,
            l: 1
        }, {
            p: [336, 79, -303],
            s: [54, 2, 110],
            t: 2,
            bo: 1
        }, {
            p: [312, 60, -251],
            s: [4, 25, 4],
            t: 2
        }, {
            p: [312, 62, -355],
            s: [4, 25, 4],
            t: 2
        }, {
            p: [360, 61, -355],
            s: [4, 24, 4],
            t: 2
        }, {
            p: [360, 61, -251],
            s: [4, 26, 4],
            t: 2
        }, {
            p: [257, 47, -352],
            s: [18, 4, 4],
            t: 2,
            bo: 1
        }, {
            p: [252, 44, -352],
            s: [14, 2, 2],
            l: 1,
            r: [0, 0, .7],
            t: 2
        }, {
            p: [213, 0, -97],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [210, 56, -292],
            s: [6, 30, 6],
            t: 2
        }, {
            p: [243, 56, -326],
            s: [6, 29, 6],
            t: 2
        }, {
            p: [210, 56, -326],
            s: [6, 26, 6],
            t: 2
        }, {
            p: [227, 77, -309],
            s: [42, 2, 43],
            t: 2,
            bo: 1
        }, {
            p: [137, 56, -292],
            s: [6, 22, 6],
            t: 2
        }, {
            p: [-11, -28, -514],
            s: [6, 2, 4],
            l: 1
        }, {
            p: [277, 10, -540],
            s: [8, 1, 4],
            l: 1
        }, {
            p: [2, -28, -448],
            s: [6, 2, 4],
            l: 1
        }, {
            p: [-147, 62, -261],
            s: [4, 12, 4],
            t: 2
        }, {
            p: [-169, 62, -261],
            s: [4, 15, 4],
            t: 2
        }, {
            p: [-169, 62, -286],
            s: [4, 11, 4],
            t: 2
        }, {
            p: [-147, 62, -287],
            s: [4, 13, 4],
            t: 2
        }, {
            p: [-158, 70, -274],
            s: [28, 1, 32],
            t: 2,
            bo: 1
        }, {
            p: [-118, 61, -197],
            s: [48, 87, 47],
            c: 10987431
        }, {
            p: [-119, 96, -197],
            s: [85, 2, 46],
            t: 2
        }, {
            p: [-159, 72, -218],
            s: [3, 30, 3],
            t: 2
        }, {
            p: [-143, 72, -218],
            s: [3, 28, 3],
            t: 2
        }, {
            p: [-143, 72, -176],
            s: [3, 29, 3],
            t: 2
        }, {
            p: [-159, 72, -176],
            s: [3, 28, 3],
            t: 2
        }, {
            p: [263, 35, -352],
            s: [1, 13, 1],
            l: 1,
            c: 11645361,
            t: 2
        }, {
            p: [-109, 28, -409],
            s: [1, 13, 1],
            l: 1,
            c: 11645361,
            t: 2
        }, {
            p: [-174, 0, -472],
            s: [6, 1, 4],
            l: 1
        }, {
            p: [-147, 18, 52],
            s: [6, 1, 5],
            l: 1
        }, {
            p: [200, 220, -911],
            s: [174, 74, 155],
            t: 5
        }, {
            p: [92, 76, -356],
            s: [6, 17, 6],
            l: 1,
            t: 2
        }, {
            p: [-48, 59, -361],
            s: [6, 14, 6],
            l: 1,
            t: 2
        }, {
            p: [228, 48, -137],
            s: [10, 3, 11],
            l: 1
        }, {
            p: [37, 0, -160],
            s: [8, 13, 4]
        }, {
            p: [29, 0, -160],
            s: [8, 6, 4]
        }, {
            p: [7, 0, -173],
            s: [4, 1, 4],
            l: 1
        }, {
            p: [-79, 66, -218],
            s: [3, 33, 3],
            t: 2
        }, {
            p: [-79, 84, -177],
            s: [3, 17, 3],
            t: 2
        }, {
            p: [-93, 84, -177],
            s: [3, 17, 3],
            t: 2
        }, {
            p: [-93, 66, -218],
            s: [3, 35, 3],
            t: 2
        }, {
            p: [-96, 148, -197],
            s: [4, 3, 11],
            l: 1,
            c: 10987431
        }, {
            p: [-140, 148, -202],
            s: [4, 3, 15],
            l: 1,
            c: 9013641
        }, {
            p: [-137, 148, -178],
            s: [10, 3, 9],
            l: 1,
            c: 11513775
        }, {
            p: [-99, 148, -178],
            s: [10, 3, 9],
            l: 1,
            c: 11973298
        }, {
            p: [-99, 148, -216],
            s: [10, 4, 9],
            l: 1,
            c: 10987431
        }, {
            p: [-117, 148, -218],
            s: [12, 2, 5],
            l: 1,
            c: 11974326
        }, {
            p: [-138, 148, -217],
            s: [8, 3, 7],
            l: 1,
            c: 10197915
        }, {
            p: [-120, 148, -176],
            s: [9, 2, 5],
            l: 1,
            c: 11513775
        }, {
            p: [-118, 117, -197],
            s: [50, 16, 5],
            l: 1,
            c: 0
        }, {
            p: [-118, 117, -197],
            s: [5, 16, 49],
            l: 1,
            c: 0
        }, {
            p: [-43, 43, -298],
            s: [18, 4, 4],
            t: 2,
            bo: 1
        }, {
            p: [-48, 39, -298],
            s: [14, 2, 2],
            l: 1,
            r: [0, 0, .7],
            c: 15132390,
            t: 2
        }, {
            p: [-37, 31, -298],
            s: [1, 13, 1],
            l: 1,
            c: 11645361,
            t: 2
        }, {
            p: [-212, 50, -63],
            s: [14, 4, 4],
            t: 2
        }, {
            p: [-166, 0, -150],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [22, 42, -350],
            s: [9, 3, 3],
            c: 14935011,
            bo: 1
        }, {
            p: [51, 42, -350],
            s: [9, 3, 3],
            bo: 1
        }, {
            p: [79, 42, -350],
            s: [9, 3, 3],
            bo: 1
        }, {
            p: [183, 67, -509],
            s: [9, 3, 3],
            bo: 1
        }, {
            p: [203, 67, -509],
            s: [9, 3, 3],
            bo: 1
        }, {
            p: [162, 67, -509],
            s: [9, 3, 3],
            bo: 1
        }, {
            p: [-54, 0, -115],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [-54, 0, -121],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [8, 18, 69],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [306, 0, -321],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [251, 0, -352],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [-160, 0, -150],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [-154, 0, -150],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [71, 0, -345],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-119, 18, -39],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [-73, 17, 16],
            s: [5, 2, 4],
            l: 1
        }, {
            p: [-116, 0, -233],
            s: [4, 2, 6],
            l: 1
        }, {
            p: [-169, 62, -393],
            s: [6, 12, 6],
            l: 1,
            t: 2
        }, {
            p: [174, 0, -28],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [174, 0, -23],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [176, 0, -16],
            s: [2, 19, 4],
            t: 2
        }, {
            p: [112, 0, -209],
            s: [57, 26, 25],
            i: 17
        }, {
            p: [55, -1, -255],
            s: [6, 3, 4],
            l: 1
        }, {
            p: [56, 0, -249],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [62, 0, -348],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [86, 0, -297],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [86, 0, -292],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [-220, 0, -104],
            s: [57, 26, 25],
            i: 17,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-227, 0, -139],
            s: [12, 12, 12],
            i: 8
        }, {
            p: [78, 0, -203],
            s: [12, 12, 12],
            i: 8
        }, {
            p: [-173, 0, -70],
            s: [4, 1, 4],
            l: 1
        }, {
            p: [169, 0, 17],
            s: [6, 2, 8],
            l: 1
        }, {
            p: [147, 0, 28],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [289, 10, -542],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [295, 10, -542],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [-181, 0, -473],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [-52, 21, -269],
            s: [1, 15, 6],
            l: 1,
            c: 0
        }, {
            p: [-52, 29, -218],
            s: [1, 15, 6],
            l: 1,
            c: 0
        }, {
            p: [-53, 18, -269],
            s: [6, 3, 9],
            l: 1,
            c: 14935011
        }, {
            p: [-53, 26, -218],
            s: [6, 3, 9],
            l: 1,
            c: 14935011
        }, {
            p: [217, 67, -541],
            s: [6, 3, 9],
            c: 14935011,
            bo: 1
        }, {
            p: [304, 76, -518],
            s: [6, 3, 9],
            c: 11645361,
            bo: 1
        }, {
            p: [90, 44, -195],
            s: [16, 2, 4],
            l: 1
        }, {
            p: [127, 44, -195],
            s: [26, 4, 4],
            l: 1
        }, {
            p: [66, 44, -195],
            s: [12, 3, 4],
            l: 1
        }, {
            p: [-317, 0, -415],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [-53, 0, -159],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-54, 0, -169],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, 1.04, -3.14]
        }, {
            p: [36, 0, -165],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.87, 0]
        }, {
            p: [37, 0, -175],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .18, 0]
        }, {
            p: [5, 0, -188],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .18, 0]
        }, {
            p: [-42, 0, -57],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .18, 0]
        }, {
            p: [-9, 0, 2],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .18, 0]
        }, {
            p: [-19, 0, -26],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .18, 0]
        }, {
            p: [21, 0, -346],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.87, 0]
        }, {
            p: [59, 0, -344],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.17, 0]
        }, {
            p: [80, 0, -212],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.17, 0]
        }, {
            p: [29, 0, -346],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.52, 0]
        }, {
            p: [129, 0, -286],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.17, 0]
        }, {
            p: [101, 0, -318],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.17, 0]
        }, {
            p: [59, 0, -243],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.04, 0]
        }, {
            p: [139, 0, -231],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.17, 0]
        }, {
            p: [-42, -28, -355],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .18, 0]
        }, {
            p: [-5, -28, -347],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.52, 0]
        }, {
            p: [-86, -28, -325],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.34, 0]
        }, {
            p: [-260, 0, -269],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-298, 0, -236],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-307, 0, -275],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-182, 0, -271],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .52, 0]
        }, {
            p: [-176, 0, -264],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-217, 0, -136],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.7, 0]
        }, {
            p: [-214, 0, -72],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.7, 0]
        }, {
            p: [-147, 0, -149],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.7, 0]
        }, {
            p: [-109, 0, -62],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.7, 0]
        }, {
            p: [-109, 18, -25],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.7, 0]
        }, {
            p: [-215, 18, 19],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.7, 0]
        }, {
            p: [-230, 18, 43],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .7, 0]
        }, {
            p: [-46, 18, 54],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, 1.22, -3.14]
        }, {
            p: [10, 18, 54],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-48, 18, 16],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .7, 0]
        }, {
            p: [160, 0, -62],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .53, 0]
        }, {
            p: [169, 0, -27],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.86, 0]
        }, {
            p: [162, 0, 20],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.86, 0]
        }, {
            p: [173, 0, 11],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.38, 0]
        }, {
            p: [166, 0, -92],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.34, 0]
        }, {
            p: [126, 0, -150],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.34, 0]
        }, {
            p: [127, 0, -65],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .53, 0]
        }, {
            p: [134, 0, -70],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.52, 0]
        }, {
            p: [128, 0, -77],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -1.23, 3.14]
        }, {
            p: [96, 0, -46],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .53, 0]
        }, {
            p: [130, 0, -71],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [174, 0, 20],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.86, 0]
        }, {
            p: [11, 0, 3],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .53, 0]
        }, {
            p: [206, 0, -218],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.34, 0]
        }, {
            p: [208, 0, -186],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.51, 0]
        }, {
            p: [174, 0, -156],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.51, 0]
        }, {
            p: [101, 0, 2],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .53, 0]
        }, {
            p: [205, 0, -279],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.17, 0]
        }, {
            p: [237, 0, -283],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .88, 0]
        }, {
            p: [309, 0, -245],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .71, 0]
        }, {
            p: [253, 0, -108],
            s: [6, 1, 6],
            l: 1
        }, {
            p: [306, 0, -316],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .71, 0]
        }, {
            p: [274, 0, -350],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.13, -1.41, -3.13]
        }, {
            p: [320, 1, -440],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.71, -3.14]
        }, {
            p: [320, 1, -420],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.86, 0]
        }, {
            p: [319, 1, -430],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.56, 0]
        }, {
            p: [322, 1, -372],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.04, 0]
        }, {
            p: [318, 1, -385],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.39, 0]
        }, {
            p: [326, 1, -389],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.69, 0]
        }, {
            p: [329, 1, -361],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.69, 0]
        }, {
            p: [251, 0, -357],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.71, -3.14]
        }, {
            p: [327, 1, -422],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.39, 0]
        }, {
            p: [318, 1, -395],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.18, 3.14]
        }, {
            p: [326, 1, -434],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-.1, -1.56, -.1]
        }, {
            p: [301, 10, -541],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.71, -3.14]
        }, {
            p: [222, 10, -511],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.71, -3.14]
        }, {
            p: [221, 10, -467],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.71, -3.14]
        }, {
            p: [-40, -28, -362],
            s: [4, 1, 6]
        }, {
            p: [-214, 0, -68],
            s: [2, 1, 2],
            l: 1
        }, {
            p: [-280, 0, -296],
            s: [3, 1, 4],
            l: 1
        }, {
            p: [195, 0, -284],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.69, 0]
        }, {
            p: [305, 0, -307],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .88, 0]
        }, {
            p: [164, -28, -429],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.36, -3.14]
        }, {
            p: [105, -28, -456],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.88, -3.14]
        }, {
            p: [129, -28, -455],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.88, -3.14]
        }, {
            p: [222, 10, -529],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.71, -3.14]
        }, {
            p: [220, 10, -543],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .51, -3.14]
        }, {
            p: [61, -29, -435],
            s: [6, 2, 4],
            l: 1
        }, {
            p: [276, 0, -346],
            s: [2, 1, 3],
            l: 1
        }, {
            p: [134, 0, -77],
            s: [2, 1, 3],
            l: 1
        }, {
            p: [-157, 0, -147],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [-247, 0, -271],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .52, 0]
        }, {
            p: [50, -28, -423],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.88, -3.14]
        }, {
            p: [53, -28, -511],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.71, -3.14]
        }, {
            p: [49, -28, -517],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.51, 0]
        }, {
            p: [-15, -28, -517],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.06, 0]
        }, {
            p: [-21, -28, -512],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.16, 0]
        }, {
            p: [-32, -28, -505],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, 1.56, -3.14]
        }, {
            p: [6, -28, -462],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, 1.21, -3.14]
        }, {
            p: [11, 0, -186],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, 1.04, -3.14]
        }, {
            p: [3, -28, -315],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.52, 0]
        }, {
            p: [-6, -28, -318],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.39, 0]
        }, {
            p: [2, -28, -347],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.22, 0]
        }, {
            p: [-67, -28, -325],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.34, 0]
        }, {
            p: [3, -28, -422],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, 1.21, -3.14]
        }, {
            p: [-187, 0, -477],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.7, 0]
        }, {
            p: [-316, 0, -368],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.7, 0]
        }, {
            p: [-316, 0, -376],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [-315, 0, -410],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.7, -3.14]
        }, {
            p: [-175, 0, -398],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.7, 3.14]
        }, {
            p: [-186, 0, -499],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.7, 3.14]
        }, {
            p: [-245, 0, -360],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.7, 3.14]
        }, {
            p: [-2, -28, -417],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .16, -3.14]
        }, {
            p: [-249, 0, -434],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.7, -3.14]
        }, {
            p: [-194, 0, -476],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.52, 3.14]
        }, {
            p: [133, 0, -224],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.87, 0]
        }, {
            p: [293, 39, -301],
            s: [1, 10, 1],
            l: 1,
            c: 11645361,
            t: 2
        }, {
            p: [-165, 18, -33],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.7, 0]
        }, {
            p: [71, 0, -274],
            s: [57, 26, 25],
            i: 19,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [71, 0, -274],
            s: [25, 2, 57],
            v: 1,
            t: 5
        }, {
            p: [71, 24, -274],
            s: [25, 2, 57],
            v: 1,
            t: 5
        }, {
            p: [59, 2, -274],
            s: [1, 22, 57],
            pe: 1,
            v: 1,
            t: 5
        }, {
            p: [83, 2, -274],
            s: [1, 22, 57],
            pe: 1,
            v: 1,
            t: 5
        }, {
            p: [71, -1, -274],
            s: [22, 2, 54],
            c: 7677719,
            t: 5
        }, {
            p: [-52, -28, -322],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .53, 0]
        }, {
            p: [-48, -28, -315],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.7, 3.14]
        }, {
            p: [87, 0, -287],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.87, 0]
        }, {
            p: [251, 0, -414],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.71, -3.14]
        }, {
            p: [68, 0, -114],
            s: [12, 12, 12],
            i: 8
        }, {
            p: [228, 48, -124],
            s: [10, 2, 6],
            l: 1
        }, {
            p: [223, 0, -143],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.34, 0]
        }, {
            p: [261, 0, -321],
            s: [57, 26, 25],
            i: 19,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [261, 0, -321],
            s: [25, 2, 57],
            v: 1,
            t: 5
        }, {
            p: [261, 24, -321],
            s: [25, 2, 57],
            pe: 1,
            v: 1,
            t: 5
        }, {
            p: [273, 2, -321],
            s: [1, 22, 57],
            pe: 1,
            v: 1,
            t: 5
        }, {
            p: [249, 2, -321],
            s: [1, 22, 55],
            pe: 1,
            t: 5
        }, {
            p: [261, 0, -321],
            s: [23, 1, 54],
            c: 9518129,
            t: 5
        }, {
            p: [275, 0, -291],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.19, -3.14]
        }, {
            p: [-202, 0, -485],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-190, 12, -485],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-187, 0, -494],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-156, 0, -514],
            s: [57, 26, 25],
            i: 19,
            l: 1
        }, {
            p: [-156, 0, -527],
            s: [57, 52, 2],
            c: 1776411,
            t: 5
        }, {
            p: [-153, 0, -514],
            s: [63, 1, 23],
            c: 1776411,
            t: 5
        }, {
            p: [-217, 0, -544],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.52, 3.14]
        }, {
            p: [-187, 0, -524],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.52, 3.14]
        }, {
            p: [-155, 1, -502],
            s: [54, 24, 2],
            v: 1,
            c: 1776411,
            t: 5
        }, {
            p: [-155, 24, -514],
            s: [57, 2, 25],
            pe: 1,
            v: 1,
            c: 1776411,
            t: 5
        }, {
            p: [-245, 0, -453],
            s: [4, 11, 23]
        }, {
            p: [324, -18, -158],
            s: [4, 25, 80]
        }, {
            p: [260, -18, -158],
            s: [4, 25, 80]
        }, {
            p: [292, -14, -175],
            s: [61, 14, 44],
            i: 9,
            c: "#ffffff",
            t: 1,
            d: 3
        }, {
            p: [-305, 10, -521],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-270, 10, -445],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-265, 0, -375],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-165, 0, -404],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-275, 0, -453],
            s: [4, 16, 24]
        }, {
            p: [324, 7, -150],
            s: [4, 2, 22]
        }, {
            p: [324, 7, -182],
            s: [4, 2, 16]
        }, {
            p: [-245, 16, -522],
            s: [4, 2, 12]
        }, {
            p: [-245, 16, -479],
            s: [4, 2, 12]
        }, {
            p: [-245, 0, -507],
            s: [4, 16, 80]
        }, {
            p: [-245, 0, -467],
            s: [5, 17, 5]
        }, {
            p: [-275, 16, -451],
            s: [4, 2, 12]
        }, {
            p: [228, 0, -98],
            s: [10, 48, 18],
            bo: 1
        }, {
            p: [292, -1, -112],
            s: [68, 1, 22],
            t: 1
        }, {
            p: [292, -18, -121],
            s: [60, 19, 6],
            c: "#525252",
            t: 5
        }, {
            p: [228, 20, -109],
            s: [10, 28, 4],
            bo: 1
        }, {
            p: [292, 36, -64],
            s: [50, 2, 80],
            c: "#3e3e3e",
            t: 5,
            bo: 1
        }, {
            p: [292, -3, -73],
            s: [50, 4, 90],
            c: "#525252",
            t: 5
        }, {
            p: [259, 0, -63],
            s: [18, 37, 80],
            bo: 1
        }, {
            p: [380, 0, -63],
            s: [128, 37, 80],
            bo: 1
        }, {
            p: [305, 10, -69],
            s: [66, 22, 2],
            l: 1,
            r: [0, -1.57, 0],
            c: "#2c3f55",
            t: 5
        }, {
            p: [292, 10, -69],
            s: [66, 2, 24],
            l: 1,
            r: [0, -1.57, 0],
            c: 2899797,
            t: 5
        }, {
            p: [292, 32, -69],
            s: [66, 2, 28],
            l: 1,
            r: [0, -1.57, 0],
            c: "#2c3f55",
            t: 5
        }, {
            p: [292, 3, -78],
            s: [4, 4, 27],
            r: [0, -1.57, 0],
            c: 8551805,
            t: 5
        }, {
            p: [303, 1, -78],
            s: [8, 8, 4],
            r: [0, -1.57, 0],
            c: 1447446,
            t: 5
        }, {
            p: [298, 1, -78],
            s: [8, 8, 4],
            r: [0, -1.57, 0],
            c: 1447446,
            t: 5
        }, {
            p: [281, 1, -78],
            s: [8, 8, 4],
            r: [0, -1.57, 0],
            c: 1447446,
            t: 5
        }, {
            p: [286, 1, -78],
            s: [8, 8, 4],
            r: [0, -1.57, 0],
            c: 1447446,
            t: 5
        }, {
            p: [292, 6, -67],
            s: [66, 4, 5],
            l: 1,
            r: [0, -1.57, 0],
            c: 8551805,
            t: 5
        }, {
            p: [292, 6, -101],
            s: [3, 4, 24],
            l: 1,
            r: [0, -1.57, 0],
            c: 8551805,
            t: 5
        }, {
            p: [285, 12, -102],
            s: [2, 20, 12],
            l: 1,
            r: [0, -1.57, 0],
            c: "#6b6b6b",
            t: 5
        }, {
            p: [306, 12, -97],
            s: [12, 20, 2],
            l: 1,
            r: [0, -1.57, 0],
            c: "#6b6b6b",
            t: 5
        }, {
            p: [292, 5, -101],
            s: [4, 1, 27],
            l: 1,
            r: [0, -1.57, 0],
            c: 8551805,
            t: 5
        }, {
            p: [282, 7, -102],
            s: [2, 2, 2],
            l: 1,
            r: [0, -1.57, 0],
            c: 16730880,
            e: 16711680,
            o: .8,
            t: 5
        }, {
            p: [302, 7, -102],
            s: [2, 2, 2],
            l: 1,
            r: [0, -1.57, 0],
            c: "#ff4b00",
            e: 16711680,
            o: .8,
            t: 5
        }, {
            p: [316, 0, -64],
            s: [2, 36, 80],
            c: "#3e3e3e",
            t: 5,
            bo: 1
        }, {
            p: [292, 0, -38],
            s: [46, 36, 1],
            c: 0,
            t: 5
        }, {
            p: [292, 0, -57],
            s: [46, 36, 1],
            c: 0,
            o: .4,
            t: 5
        }, {
            p: [292, 0, -73],
            s: [46, 36, 1],
            c: 0,
            o: .4,
            t: 5
        }, {
            p: [292, 0, -73],
            s: [46, 36, 1],
            c: 0,
            o: .4,
            t: 5
        }, {
            p: [292, -18, -139],
            s: [60, 4, 30],
            c: "#b6b6b6",
            t: 1
        }, {
            p: [292, 0, -103],
            s: [46, 36, 1],
            c: 0,
            o: .4,
            t: 5,
            bo: 1
        }, {
            p: [292, 0, -91],
            s: [46, 36, 1],
            c: 0,
            o: .4,
            t: 5
        }, {
            p: [228, 0, -142],
            s: [10, 48, 14],
            bo: 1
        }, {
            p: [228, 19, -133],
            s: [10, 29, 4],
            bo: 1
        }, {
            p: [228, 26, -121],
            s: [10, 22, 20],
            bo: 1
        }, {
            p: [222, 0, -131],
            s: [7, 1, 4],
            l: 1
        }, {
            p: [-156, 0, -488],
            s: [57, 26, 25],
            i: 17
        }, {
            p: [-265, 10, -443],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [320, 0, -121],
            s: [2, 50, 2],
            t: 2
        }, {
            p: [317, -14, -130],
            s: [4, 1, 4],
            l: 1,
            c: "#c5c5c5"
        }, {
            p: [313, 1, -100],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [315, 1, -119],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-54, 0, -118],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.87, 0]
        }, {
            p: [236, 0, -94],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [236, 0, -144],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.86, 0]
        }, {
            p: [-253, 73, -557],
            s: [69, 0, 28],
            i: 11,
            l: 1,
            r: [1.57, 0, 0]
        }, {
            p: [-250, 10, -544],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [-129, 2, -514],
            s: [1, 24, 23],
            l: 1,
            c: 0,
            o: .7000000000000001,
            t: 5
        }, {
            p: [-122, 58, -524],
            s: [6, 14, 6],
            t: 2
        }, {
            p: [-83, 62, -459],
            s: [6, 16, 6],
            t: 2
        }, {
            p: [-156, 26, -514],
            s: [57, 26, 25],
            i: 17
        }, {
            p: [-136, -28, -350],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .7, 0]
        }, {
            p: [176, 0, -10],
            s: [2, 18, 4],
            c: 14145495,
            t: 2
        }, {
            p: [-56, 0, -128],
            s: [2, 18, 4],
            c: 14145495,
            t: 2
        }, {
            p: [138, 0, -286],
            s: [5, 19, 2],
            t: 2
        }, {
            p: [145, 0, -286],
            s: [5, 18, 2],
            t: 2
        }, {
            p: [26, 0, -350],
            s: [5, 18, 2],
            t: 2
        }, {
            p: [309, 0, -306],
            s: [2, 19, 4],
            t: 2
        }, {
            p: [308, 0, -316],
            s: [2, 19, 4],
            t: 2
        }, {
            p: [-260, 0, -439],
            s: [26, 16, 4]
        }, {
            p: [-269, 10, -452],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .7, -3.14]
        }, {
            p: [-212, 0, -385],
            s: [51, 15, 20],
            i: 7,
            l: 1,
            r: [-3.14, 0, -3.14]
        }, {
            p: [-212, 0, -384],
            s: [49, 8, 16],
            v: 1
        }, {
            p: [-217, 8, -384],
            s: [24, 7, 16],
            v: 1
        }, {
            p: [-155, 0, -412],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.87, 3.14]
        }, {
            p: [-241, 0, -388],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.7, 3.14]
        }, {
            p: [-192, 0, -371],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.7, 3.14]
        }, {
            p: [279, 10, -69],
            s: [66, 22, 2],
            l: 1,
            r: [0, -1.57, 0],
            c: "#2c3f55",
            t: 5
        }, {
            p: [343, 32, -376],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [343, 44, -369],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [183, 88, -4],
            s: [4, 2, 54],
            t: 2
        }, {
            p: [199, 88, -4],
            s: [4, 2, 54],
            t: 2
        }, {
            p: [190, 90, -27],
            s: [26, 1, 4],
            c: 14277081,
            t: 2
        }, {
            p: [190, 90, -20],
            s: [25, 1, 4],
            t: 2
        }, {
            p: [191, 90, -12],
            s: [26, 1, 4],
            c: 13158600,
            t: 2
        }, {
            p: [191, 90, 19],
            s: [26, 1, 4],
            t: 2
        }, {
            p: [190, 90, -5],
            s: [24, 1, 4],
            t: 2
        }, {
            p: [190, 90, 12],
            s: [23, 1, 4],
            t: 2
        }, {
            p: [190, 90, 4],
            s: [23, 1, 4],
            c: 12303291,
            t: 2
        }, {
            p: [170, 87, -87],
            s: [6, 19, 6],
            t: 2
        }, {
            p: [177, 43, -5],
            s: [2, 13, 4],
            l: 1,
            c: 0
        }, {
            p: [318, 1, -403],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.86, 0]
        }, {
            p: [324, 1, -410],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.69, 0]
        }, {
            p: [146, 0, 51],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.86, 0]
        }, {
            p: [18, 28, -520],
            s: [11, 3, 3],
            bo: 1
        }, {
            p: [-17, 31, -520],
            s: [11, 3, 3],
            bo: 1
        }, {
            p: [51, 31, -520],
            s: [11, 3, 3],
            bo: 1
        }, {
            p: [18, 31, -521],
            s: [7, 16, 2],
            l: 1,
            c: 0
        }, {
            p: [51, 34, -521],
            s: [7, 16, 2],
            l: 1,
            c: 0
        }, {
            p: [-17, 34, -521],
            s: [7, 16, 2],
            l: 1,
            c: 0
        }, {
            p: [150, 7, -425],
            s: [18, 7, 4]
        }, {
            p: [100, 7, -425],
            s: [10, 7, 4]
        }, {
            p: [101, 10, -461],
            s: [8, 6, 4]
        }, {
            p: [112, -28, -461],
            s: [58, 36, 4]
        }, {
            p: [123, 4, -443],
            s: [36, 1, 32]
        }, {
            p: [143, 4, -443],
            s: [4, 10, 32]
        }, {
            p: [103, 4, -443],
            s: [4, 10, 32]
        }, {
            p: [143, 14, -435],
            s: [4, 2, 9]
        }, {
            p: [103, 14, -449],
            s: [4, 2, 9]
        }, {
            p: [103, 14, -433],
            s: [4, 2, 9]
        }, {
            p: [123, 8, -443],
            s: [36, 2, 36],
            i: 9,
            t: 1,
            d: 3
        }, {
            p: [152, 14, -425],
            s: [8, 2, 4]
        }, {
            p: [139, 1, -444],
            s: [4, 3, 34],
            t: 2
        }, {
            p: [107, 1, -444],
            s: [4, 3, 34],
            t: 2
        }, {
            p: [139, -1, -455],
            s: [2, 2, 14],
            l: 1,
            r: [-.7, 0, 0],
            c: 13948116,
            t: 2
        }, {
            p: [107, -1, -455],
            s: [2, 2, 14],
            l: 1,
            r: [-.7, 0, 0],
            c: 14277081,
            t: 2
        }, {
            p: [107, -1, -429],
            s: [2, 2, 14],
            l: 1,
            r: [.7, 0, 0],
            c: 15132390,
            t: 2
        }, {
            p: [139, -1, -430],
            s: [2, 2, 14],
            l: 1,
            r: [.7, 0, 0],
            c: 14803425,
            t: 2
        }, {
            p: [154, 8, -408],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.87, 0]
        }, {
            p: [101, 8, -419],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.87, 0]
        }, {
            p: [-241, 0, -453],
            s: [4, 8, 25],
            l: 1
        }, {
            p: [-237, 0, -453],
            s: [4, 5, 25],
            l: 1
        }, {
            p: [-233, 0, -453],
            s: [4, 2, 25]
        }, {
            p: [-236, 0, -453],
            s: [14, 11, 23],
            i: 9,
            v: 1,
            t: 1,
            d: 2
        }, {
            p: [-193, 0, -494],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .53, 3.14]
        }, {
            p: [369, 81, -121],
            s: [4, 3, 17],
            l: 1
        }, {
            p: [-148, 101, 97],
            s: [20, 2, 4],
            l: 1
        }, {
            p: [-238, -1, -586],
            s: [175, 90, 11]
        }, {
            p: [-280, 89, -586],
            s: [22, 4, 11],
            l: 1
        }, {
            p: [-252, 50, 27],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [248, 15, -574],
            s: [129, 75, 11]
        }, {
            p: [223, 90, -574],
            s: [21, 3, 11],
            l: 1
        }, {
            p: [253, 90, -574],
            s: [21, 2, 11],
            l: 1
        }, {
            p: [287, 90, -574],
            s: [17, 4, 11],
            l: 1
        }, {
            p: [-249, 124, -103],
            s: [12, 4, 12],
            l: 1,
            c: 12499642
        }, {
            p: [-246, 124, -84],
            s: [6, 2, 12],
            l: 1,
            c: 14145495
        }, {
            p: [-178, 101, 97],
            s: [13, 2, 4],
            l: 1
        }, {
            p: [-207, 101, 97],
            s: [13, 3, 4],
            l: 1
        }, {
            p: [-237, 101, 97],
            s: [16, 2, 4],
            l: 1
        }, {
            p: [-260, 101, 73],
            s: [4, 2, 17],
            l: 1
        }, {
            p: [-260, 101, 41],
            s: [4, 2, 13],
            l: 1
        }, {
            p: [-260, 101, 12],
            s: [4, 3, 11],
            l: 1
        }, {
            p: [-260, 101, -21],
            s: [4, 2, 23],
            l: 1
        }, {
            p: [-243, 91, -84],
            s: [6, 3, 10],
            c: 12171705
        }, {
            p: [-159, 77, -156],
            s: [14, 4, 6],
            l: 1
        }, {
            p: [-185, 77, -156],
            s: [11, 3, 6],
            l: 1
        }, {
            p: [-220, 77, -158],
            s: [14, 3, 10],
            l: 1
        }, {
            p: [-278, 77, -226],
            s: [23, 4, 6],
            l: 1
        }, {
            p: [-310, 77, -156],
            s: [27, 2, 6],
            l: 1
        }, {
            p: [357, 98, -450],
            s: [16, 3, 16],
            l: 1
        }, {
            p: [352, 98, -487],
            s: [6, 4, 12],
            l: 1
        }, {
            p: [369, 81, -235],
            s: [4, 3, 17],
            l: 1
        }, {
            p: [369, 81, -202],
            s: [4, 2, 11],
            l: 1
        }, {
            p: [369, 81, -165],
            s: [4, 2, 21],
            l: 1
        }, {
            p: [328, 37, -63],
            s: [156, 44, 80],
            bo: 1
        }, {
            p: [347, 81, -101],
            s: [13, 2, 4],
            l: 1
        }, {
            p: [257, 81, -100],
            s: [14, 3, 6],
            l: 1
        }, {
            p: [318, 81, -101],
            s: [16, 3, 4],
            l: 1
        }, {
            p: [285, 81, -101],
            s: [14, 3, 4],
            l: 1
        }, {
            p: [361, 50, -188],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [361, 50, -176],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-242, 89, -586],
            s: [22, 3, 11],
            l: 1
        }, {
            p: [-200, 89, -586],
            s: [18, 4, 11],
            l: 1
        }, {
            p: [-256, 77, -156],
            s: [17, 4, 6],
            l: 1
        }, {
            p: [-234, 77, -226],
            s: [16, 4, 6],
            l: 1
        }, {
            p: [-319, 77, -226],
            s: [20, 3, 6],
            l: 1
        }, {
            p: [-193, 77, -226],
            s: [19, 2, 6],
            l: 1
        }, {
            p: [-151, 77, -226],
            s: [19, 3, 6],
            l: 1
        }, {
            p: [-171, 18, 51],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.7, 0]
        }, {
            p: [-118, 116, -197],
            s: [9, 3, 52],
            c: 11513775
        }, {
            p: [-118, 116, -197],
            s: [52, 3, 9],
            c: 9868950
        }, {
            p: [-143, 0, -49],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -1.05, -3.14]
        }, {
            p: [-348, 153, -230],
            s: [11, 4, 12],
            l: 1
        }, {
            p: [-349, 153, -276],
            s: [13, 4, 12],
            l: 1
        }, {
            p: [-392, 153, -230],
            s: [11, 4, 12],
            l: 1
        }, {
            p: [-390, 153, -276],
            s: [15, 4, 12],
            l: 1
        }, {
            p: [-370, 110, -253],
            s: [72, 2, 76],
            t: 2
        }, {
            p: [-370, 106, -253],
            s: [67, 4, 4],
            t: 2
        }, {
            p: [-370, 106, -235],
            s: [67, 4, 4],
            t: 2
        }, {
            p: [-370, 106, -272],
            s: [67, 4, 4],
            t: 2
        }, {
            p: [-370, 106, -253],
            s: [4, 4, 72],
            t: 2
        }, {
            p: [-354, 106, -253],
            s: [4, 4, 72],
            t: 2
        }, {
            p: [-387, 106, -253],
            s: [4, 4, 72],
            t: 2
        }, {
            p: [-343, 123, -254],
            s: [2, 16, 6],
            l: 1,
            c: 0
        }, {
            p: [-345, 153, -252],
            s: [5, 3, 12],
            l: 1
        }, {
            p: [-368, 153, -226],
            s: [14, 2, 4],
            l: 1
        }, {
            p: [-368, 153, -280],
            s: [11, 3, 4],
            l: 1
        }, {
            p: [-319, 103, -587],
            s: [62, 2, 67],
            c: 12500670,
            t: 2
        }, {
            p: [-319, 100, -587],
            s: [4, 3, 63],
            c: 14802654,
            t: 2
        }, {
            p: [-334, 100, -587],
            s: [4, 3, 63],
            c: 14276053,
            t: 2
        }, {
            p: [-303, 100, -587],
            s: [4, 3, 63],
            c: 14474460,
            t: 2
        }, {
            p: [-319, 100, -587],
            s: [58, 3, 3],
            c: 12829635,
            t: 2
        }, {
            p: [-319, 100, -569],
            s: [58, 3, 3],
            c: 13158600,
            t: 2
        }, {
            p: [-319, 100, -603],
            s: [58, 3, 3],
            c: 13619151,
            t: 2
        }, {
            p: [183, 85, -28],
            s: [2, 2, 11],
            l: 1,
            r: [-.7, 0, 0],
            t: 2
        }, {
            p: [199, 85, -28],
            s: [2, 2, 11],
            l: 1,
            r: [-.7, 0, 0],
            t: 2
        }, {
            p: [199, 85, 20],
            s: [2, 2, 11],
            l: 1,
            r: [.7, 0, 0],
            t: 2
        }, {
            p: [183, 85, 20],
            s: [2, 2, 11],
            l: 1,
            r: [.7, 0, 0],
            t: 2
        }, {
            p: [270, -14, -130],
            s: [12, 12, 12],
            i: 8
        }, {
            p: [-231, 0, -398],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.05, 0]
        }, {
            p: [-202, 0, -397],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.05, 0]
        }, {
            p: [-260, 16, -439],
            s: [12, 2, 4]
        }, {
            p: [-245, 0, -439],
            s: [5, 17, 5]
        }, {
            p: [-275, 0, -439],
            s: [5, 17, 5]
        }, {
            p: [-236, 0, -467],
            s: [14, 13, 3]
        }, {
            p: [-236, 0, -439],
            s: [14, 13, 3]
        }, {
            p: [-239, 0, -472],
            s: [6, 8, 6],
            i: 2,
            r: [-3.14, 0, -3.14]
        }, {
            p: [-229, 0, -439],
            s: [4, 14, 4]
        }, {
            p: [-229, 0, -467],
            s: [4, 14, 4]
        }, {
            p: [-178, 0, -361],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.7, 3.14]
        }, {
            p: [-203, 0, -372],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [.01, -1.39, .01]
        }, {
            p: [-221, 0, -371],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [.01, -1.39, .01]
        }, {
            p: [-232, 1, -372],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.23, .01]
        }, {
            p: [-184, 0, -388],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.52, 0]
        }, {
            p: [-185, 0, -378],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.88, -3.14]
        }, {
            p: [-227, 0, -357],
            s: [4, 19, 2],
            l: 1,
            t: 2
        }, {
            p: [-217, 0, -356],
            s: [4, 19, 2],
            l: 1,
            t: 2
        }, {
            p: [-222, 0, -357],
            s: [4, 14, 2],
            l: 1,
            t: 2
        }, {
            p: [144, -28, -455],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.21, 0]
        }, {
            p: [-239, 0, -479],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.88, 0]
        }, {
            p: [260, 7, -182],
            s: [4, 2, 16]
        }, {
            p: [260, 7, -150],
            s: [4, 2, 22]
        }, {
            p: [335, 139, -35],
            s: [12, 4, 6],
            l: 1
        }, {
            p: [362, 139, -62],
            s: [6, 4, 12],
            l: 1
        }, {
            p: [212, 16, -461],
            s: [20, 2, 4]
        }, {
            p: [143, 14, -450],
            s: [4, 2, 9]
        }, {
            p: [268, 0, -64],
            s: [2, 36, 80],
            c: "#3e3e3e",
            t: 5,
            bo: 1
        }, {
            p: [-69, -32, -345],
            s: [150, 4, 76],
            t: 1
        }, {
            p: [-196, -2, -213],
            s: [34, 2, 32],
            t: 1
        }, {
            p: [-210, 42, -361],
            s: [76, 1, 12],
            t: 2,
            bo: 1
        }, {
            p: [-247, 38, -360],
            s: [2, 2, 12],
            l: 1,
            r: [.7, 0, 0],
            t: 2
        }, {
            p: [-210, 38, -360],
            s: [2, 2, 12],
            l: 1,
            r: [.7, 0, 0],
            t: 2
        }, {
            p: [-174, 38, -360],
            s: [2, 2, 12],
            l: 1,
            r: [.7, 0, 0],
            t: 2
        }, {
            p: [-178, 43, -362],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-184, 43, -360],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-180, 51, -360],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-228, 28, -368],
            s: [1, 13, 1],
            l: 1,
            c: 11645361,
            t: 2
        }, {
            p: [-215, 0, -395],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.05, 0]
        }, {
            p: [-415, 0, -444],
            s: [58, 127, 90],
            c: 10986917
        }, {
            p: [-394, 127, -406],
            s: [16, 3, 14],
            l: 1,
            c: 11645361
        }, {
            p: [-394, 127, -481],
            s: [16, 4, 16],
            l: 1,
            c: 11645361
        }, {
            p: [-394, 127, -444],
            s: [16, 3, 16],
            l: 1,
            c: 11184810
        }, {
            p: [-434, 127, -407],
            s: [20, 3, 16],
            l: 1,
            c: 10855331
        }, {
            p: [-436, 127, -481],
            s: [16, 3, 16],
            l: 1,
            c: 11645361
        }, {
            p: [-210, 41, -368],
            s: [76, 2, 2],
            t: 2,
            bo: 1
        }, {
            p: [-345, 72, -526],
            s: [40, 3, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [-345, 72, -540],
            s: [40, 3, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [-345, 72, -533],
            s: [3, 3, 40],
            c: "#ffffff",
            t: 2
        }, {
            p: [-352, 90, -526],
            s: [40, 3, 3],
            l: 1,
            r: [0, 0, 1.05],
            c: "#ffffff",
            t: 2
        }, {
            p: [-345, 72, -526],
            s: [3, 42, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [-337, 90, -526],
            s: [40, 3, 3],
            l: 1,
            r: [0, 0, -1.05],
            c: "#ffffff",
            t: 2
        }, {
            p: [-337, 90, -540],
            s: [40, 3, 3],
            l: 1,
            r: [0, 0, -1.05],
            c: "#ffffff",
            t: 2
        }, {
            p: [-352, 90, -540],
            s: [40, 3, 3],
            l: 1,
            r: [0, 0, 1.05],
            c: "#ffffff",
            t: 2
        }, {
            p: [-345, 72, -540],
            s: [3, 38, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [-345, 86, -533],
            s: [3, 3, 33],
            c: "#ffffff",
            t: 2
        }, {
            p: [-345, 86, -540],
            s: [21, 3, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [-345, 86, -526],
            s: [21, 3, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [-345, 72, -514],
            s: [3, 17, 3],
            l: 1,
            r: [-.26, 0, 0],
            c: "#ffffff",
            t: 2
        }, {
            p: [-345, 72, -552],
            s: [3, 17, 3],
            l: 1,
            r: [.26, 0, 0],
            c: "#ffffff",
            t: 2
        }, {
            p: [-356, 98, -362],
            s: [40, 3, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [-356, 98, -376],
            s: [40, 3, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [-356, 98, -369],
            s: [3, 3, 40],
            c: "#ffffff",
            t: 2
        }, {
            p: [-363, 116, -362],
            s: [40, 3, 3],
            l: 1,
            r: [0, 0, 1.05],
            c: "#ffffff",
            t: 2
        }, {
            p: [-356, 98, -362],
            s: [3, 42, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [-348, 116, -362],
            s: [40, 3, 3],
            l: 1,
            r: [0, 0, -1.05],
            c: "#ffffff",
            t: 2
        }, {
            p: [-348, 116, -376],
            s: [40, 3, 3],
            l: 1,
            r: [0, 0, -1.05],
            c: "#ffffff",
            t: 2
        }, {
            p: [-363, 116, -376],
            s: [40, 3, 3],
            l: 1,
            r: [0, 0, 1.05],
            c: "#ffffff",
            t: 2
        }, {
            p: [-356, 98, -376],
            s: [3, 42, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [-356, 112, -369],
            s: [3, 3, 33],
            c: "#ffffff",
            t: 2
        }, {
            p: [-356, 112, -376],
            s: [21, 3, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [-356, 112, -362],
            s: [21, 3, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [-356, 140, -369],
            s: [3, 3, 20],
            c: "#ffffff",
            t: 2
        }, {
            p: [-359, 125, -369],
            s: [9, 11, 6],
            c: "#757575"
        }, {
            p: [-346, 151, -369],
            s: [41, 3, 3],
            l: 1,
            r: [0, 0, -2.45],
            c: "#ffffff",
            t: 2
        }, {
            p: [-327, 164, -369],
            s: [5, 2, 2],
            l: 1,
            r: [0, 0, .7],
            c: "#ffffff",
            t: 2
        }, {
            p: [-326, 132, -369],
            s: [1, 34, 1],
            c: "#ffffff",
            t: 2
        }, {
            p: [-326, 129, -369],
            s: [2, 3, 2],
            c: "#343434",
            t: 5
        }, {
            p: [-356, 98, -350],
            s: [3, 17, 3],
            l: 1,
            r: [-.26, 0, 0],
            c: "#ffffff",
            t: 2
        }, {
            p: [-356, 98, -388],
            s: [3, 17, 3],
            l: 1,
            r: [.26, 0, 0],
            c: "#ffffff",
            t: 2
        }, {
            p: [-360, 136, -369],
            s: [5, 3, 6],
            c: "#757575"
        }, {
            p: [-386, 90, -445],
            s: [2, 19, 6],
            l: 1,
            c: 0
        }, {
            p: [-386, 88, -445],
            s: [6, 4, 12],
            c: 11183011
        }, {
            p: [-216, 48, -63],
            s: [8, 2, 2],
            l: 1,
            r: [0, 0, .7],
            t: 2
        }, {
            p: [-207, 34, -63],
            s: [1, 18, 1],
            l: 1,
            c: 11645361,
            t: 2
        }, {
            p: [378, 98, -463],
            s: [40, 3, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [378, 98, -477],
            s: [40, 3, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [378, 98, -470],
            s: [3, 3, 40],
            c: "#ffffff",
            t: 2
        }, {
            p: [371, 116, -463],
            s: [40, 3, 3],
            r: [0, 0, 1.05],
            c: "#ffffff",
            t: 2
        }, {
            p: [378, 98, -463],
            s: [3, 42, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [386, 116, -463],
            s: [40, 3, 3],
            r: [0, 0, -1.05],
            c: "#ffffff",
            t: 2
        }, {
            p: [386, 116, -477],
            s: [40, 3, 3],
            r: [0, 0, -1.05],
            c: "#ffffff",
            t: 2
        }, {
            p: [371, 116, -477],
            s: [40, 3, 3],
            r: [0, 0, 1.05],
            c: "#ffffff",
            t: 2
        }, {
            p: [378, 98, -477],
            s: [3, 42, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [378, 112, -470],
            s: [3, 3, 33],
            c: "#ffffff",
            t: 2
        }, {
            p: [378, 112, -477],
            s: [21, 3, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [378, 112, -463],
            s: [21, 3, 3],
            c: "#ffffff",
            t: 2
        }, {
            p: [378, 140, -470],
            s: [3, 3, 20],
            c: "#ffffff",
            t: 2
        }, {
            p: [383, 125, -470],
            s: [9, 11, 6],
            c: "#757575"
        }, {
            p: [367, 150, -470],
            s: [41, 3, 3],
            l: 1,
            r: [0, 0, -.7],
            c: "#ffffff",
            t: 2
        }, {
            p: [353, 165, -470],
            s: [5, 2, 2],
            l: 1,
            r: [0, 0, 2.45],
            c: "#522505",
            t: 5
        }, {
            p: [351, 131, -470],
            s: [1, 34, 1],
            c: "#522505",
            t: 5
        }, {
            p: [351, 128, -470],
            s: [2, 3, 2],
            c: "#343434",
            t: 5
        }, {
            p: [378, 98, -451],
            s: [3, 17, 3],
            r: [-.26, 0, 0],
            c: "#ffffff",
            t: 2
        }, {
            p: [378, 98, -489],
            s: [3, 17, 3],
            r: [.26, 0, 0],
            c: "#ffffff",
            t: 2
        }, {
            p: [383, 136, -470],
            s: [5, 3, 6],
            c: "#757575"
        }, {
            p: [311, 112, -508],
            s: [14, 4, 22],
            l: 1,
            c: "#b1b1b1"
        }, {
            p: [347, 112, -500],
            s: [22, 3, 6],
            l: 1,
            c: "#b1b1b1"
        }, {
            p: [307, 112, -539],
            s: [6, 3, 18],
            l: 1,
            c: "#b1b1b1"
        }, {
            p: [253, 0, -457],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.04, 0]
        }, {
            p: [219, 0, -106],
            s: [4, 2, 3],
            l: 1
        }, {
            p: [234, 0, -112],
            s: [3, 1, 4],
            l: 1
        }, {
            p: [219, 0, -142],
            s: [3, 1, 4],
            l: 1
        }, {
            p: [313, 58, -449],
            s: [6, 10, 6],
            l: 1,
            t: 2
        }, {
            p: [393, 64, -477],
            s: [88, 34, 70]
        }, {
            p: [385, 98, -444],
            s: [18, 3, 4],
            l: 1
        }, {
            p: [411, 98, -444],
            s: [16, 3, 4],
            l: 1
        }, {
            p: [432, 98, -447],
            s: [10, 3, 10],
            l: 1
        }, {
            p: [388, 89, -435],
            s: [4, 4, 16],
            t: 2
        }, {
            p: [388, 85, -441],
            s: [2, 2, 14],
            l: 1,
            r: [-.7, 0, 0],
            t: 2
        }, {
            p: [282, -14, -128],
            s: [7, 1, 4],
            l: 1,
            c: "#c5c5c5"
        }, {
            p: [179, 67, -24],
            s: [4, 5, 15],
            l: 1
        }, {
            p: [-224, 0, -104],
            s: [31, 24, 54],
            c: 4276545,
            t: 5
        }, {
            p: [-18, 18, 36],
            s: [24, 36, 24],
            i: 23,
            l: 1,
            tm: 0
        }, {
            p: [-276, 10, -518],
            s: [24, 36, 24],
            i: 23,
            l: 1,
            tm: "1"
        }, {
            p: [96, 8, -421],
            s: [2, 6, 4],
            pe: 1,
            v: 1
        }, {
            p: [221, 0, -97],
            s: [4, 12, 12],
            pe: 1,
            v: 1
        }, {
            p: [320, 0, -120],
            s: [4, 7, 4],
            pe: 1,
            v: 1
        }, {
            p: [138, 0, -150],
            s: [4, 8, 6],
            pe: 1,
            v: 1
        }, {
            p: [-156, 26, -514],
            s: [57, 1, 26],
            v: 1,
            bo: 1
        }]
    }, {
        name: "Littletown",
        ambInd: 1,
        modURL: "",
        terrainSeed: "",
        terrainWidth: 2048,
        terrainHeight: 2048,
        terrainMntMlt: 1,
        terrainMntCol: "#a0a0a0",
        terrainGrsCol: "#4a6904",
        terrainDrtCol: "#8c6835",
        skyDome: !1,
        skyDomeCol0: "#3fb1b7",
        skyDomeCol1: "#00cffc",
        skyDomeCol2: "#1faedc",
        zone: !1,
        zoneSize: 500,
        zoneSpeed: 1,
        zoneCol0: "#c542d9",
        zoneCol1: "#c542d9",
        zoneCol2: "#c542d9",
        sizeMlt: 2,
        shadowR: 1024,
        ambient: 8093324,
        light: 5461350,
        sky: 6716054,
        fog: 7832738,
        fogD: 722.1829102596926,
        dthY: -100,
        nAmb: 1,
        camPos: [36, 53, 252],
        spawns: [[424, 0, -102, 0, 2], [-276, 0, 12, 0, 3], [-274, 0, 186, 0, 3], [287, 38, 32, 0, 2], [-156, 38, 33, 0, 3], [-95, 38, -4, 0], [384, 0, 87, 0, 2], [141, 0, 337, 0, 2]],
        ambO: .7,
        ambS: 5,
        objects: [{
            p: [138, 2, 6],
            s: [4, 36, 60],
            c: 12927811,
            t: 5
        }, {
            p: [205, 36, 30],
            s: [62, 2, 108],
            c: 7368816,
            t: 5
        }, {
            p: [238, 38, 45],
            s: [4, 38, 74],
            c: 16767158,
            t: 5
        }, {
            p: [170, 2, 123],
            s: [30, 116, 18],
            c: 7368816,
            t: 11,
            bo: 1
        }, {
            p: [-65, 2, 69],
            s: [4, 30, 10],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [304, 2, -7],
            s: [2, 52, 12],
            i: 3,
            t: 2
        }, {
            p: [138, 38, 3],
            s: [4, 6, 38],
            c: 12927811,
            t: 5
        }, {
            p: [138, 38, 81],
            s: [4, 6, 34],
            c: 12927811,
            t: 5
        }, {
            p: [138, 38, 43],
            s: [4, 46, 42],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [138, 38, 104],
            s: [4, 40, 12],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [138, 38, -20],
            s: [4, 51, 8],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [138, 66, 3],
            s: [4, 21, 38],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [138, 2, 81],
            s: [4, 36, 58],
            c: 12927811,
            t: 5
        }, {
            p: [138, 26, 44],
            s: [4, 12, 16],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [220, 2, 112],
            s: [168, 74, 4],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [205, 2, -26],
            s: [138, 88, 4],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [297, 2, -26],
            s: [14, 88, 4],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [282, 26, -26],
            s: [16, 64, 4],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [302, 38, 16],
            s: [4, 46, 80],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [302, 79, 74],
            s: [4, 3, 4],
            c: 12927811,
            t: 5
        }, {
            p: [302, 62, 64],
            s: [4, 20, 16],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [302, 2, 25],
            s: [4, 36, 98],
            c: 12927811,
            t: 5
        }, {
            p: [302, 2, 100],
            s: [4, 36, 20],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [302, 26, 82],
            s: [4, 12, 16],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [238, 38, -16],
            s: [4, 38, 16],
            c: 16767158,
            t: 5
        }, {
            p: [238, 64, 0],
            s: [4, 12, 16],
            c: 16767158,
            t: 5
        }, {
            p: [176, 34, 98],
            s: [4, 42, 24],
            c: 16767158,
            t: 5
        }, {
            p: [291, 38, 84],
            s: [18, 38, 4],
            c: 16767158,
            t: 5
        }, {
            p: [262, 38, 84],
            s: [8, 38, 4],
            c: 16767158,
            t: 5
        }, {
            p: [274, 62, 84],
            s: [16, 14, 4],
            c: 16767158,
            t: 5
        }, {
            p: [216, 2, 84],
            s: [84, 74, 4],
            c: 16767158,
            t: 5
        }, {
            p: [256, 2, 98],
            s: [4, 36, 24],
            c: 16767158,
            t: 5
        }, {
            p: [238, 2, 67],
            s: [4, 24, 30],
            c: 16767158,
            t: 5
        }, {
            p: [238, 2, -5],
            s: [4, 24, 38],
            c: 16767158,
            t: 5
        }, {
            p: [238, 26, 29],
            s: [4, 12, 107],
            c: 16767158,
            t: 5
        }, {
            p: [157, 36, 43],
            s: [34, 2, 134],
            c: 7368816,
            t: 5
        }, {
            p: [270, 36, 30],
            s: [60, 2, 108],
            c: 7368816,
            t: 5
        }, {
            p: [279, 36, 97],
            s: [42, 2, 26],
            c: 7368816,
            t: 5
        }, {
            p: [220, 0, 43],
            s: [172, 2, 146],
            c: 7368816,
            t: 5
        }, {
            p: [183, 0, -75],
            s: [150, 2, 98],
            c: 7368816,
            t: 5
        }, {
            p: [158, 2, -31],
            s: [4, 30, 6],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [158, 2, -74],
            s: [4, 30, 4],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [158, 2, -117],
            s: [4, 30, 2],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [158, 32, -73],
            s: [4, 12, 90],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [254, 2, -60],
            s: [4, 42, 64],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [254, 2, -113],
            s: [4, 42, 10],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [254, 26, -100],
            s: [4, 18, 16],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [206, 2, -120],
            s: [100, 42, 4],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [158, 2, -96],
            s: [2, 30, 42],
            pe: 1,
            c: "#ffffff",
            t: 10
        }, {
            p: [170, 0, 125],
            s: [34, 2, 18],
            c: 7368816,
            t: 5
        }, {
            p: [260, 0, -100],
            s: [4, 2, 20],
            c: 7368816,
            t: 5
        }, {
            p: [308, 0, 82],
            s: [4, 2, 20],
            c: 7368816,
            t: 5
        }, {
            p: [-41, 0, -24],
            s: [4, 2, 20],
            c: 7368816,
            t: 5
        }, {
            p: [282, 0, -32],
            s: [20, 2, 4],
            c: 7368816,
            t: 5
        }, {
            p: [29, -1, 323],
            s: [106, 2, 845],
            c: 3750201,
            t: 5
        }, {
            p: [-65, 32, 115],
            s: [4, 12, 102],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-65, 2, 115],
            s: [4, 30, 10],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-65, 2, 161],
            s: [4, 30, 10],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-145, 2, 161],
            s: [4, 42, 10],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-145, 2, 102],
            s: [4, 42, 76],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-105, 2, 168],
            s: [84, 42, 4],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-145, 26, 148],
            s: [4, 18, 16],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-65, 2, 139],
            s: [2, 30, 42],
            pe: 1,
            t: 10
        }, {
            p: [-91, 0, 118],
            s: [116, 2, 108],
            c: 7368816,
            t: 5
        }, {
            p: [-113, 0, -16],
            s: [140, 2, 164],
            c: 7368816,
            t: 5
        }, {
            p: [-142, 2, 62],
            s: [30, 74, 4],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-78, 2, 62],
            s: [66, 74, 4],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-113, 2, -94],
            s: [136, 74, 4],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-47, 66, -16],
            s: [4, 10, 152],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-47, 38, -77],
            s: [4, 28, 30],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-47, 38, -3],
            s: [4, 28, 42],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-47, 38, 35],
            s: [4, 6, 34],
            c: 5799880,
            t: 5
        }, {
            p: [-47, 38, -43],
            s: [4, 6, 38],
            c: 5799880,
            t: 5
        }, {
            p: [-47, 38, 56],
            s: [4, 28, 8],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-47, 2, -62],
            s: [4, 36, 60],
            c: 5799880,
            t: 5
        }, {
            p: [-47, 26, -24],
            s: [4, 12, 16],
            c: 5799880,
            t: 5
        }, {
            p: [-177, 2, 62],
            s: [8, 74, 4],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-179, 2, 5],
            s: [4, 74, 110],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-179, 2, -79],
            s: [4, 74, 26],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-119, 26, 62],
            s: [16, 50, 4],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-165, 26, 62],
            s: [16, 50, 4],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-140, 2, -80],
            s: [4, 36, 24],
            c: 16767158,
            t: 5
        }, {
            p: [-105, 2, -66],
            s: [74, 74, 4],
            c: 16767158,
            t: 5
        }, {
            p: [-70, 34, -80],
            s: [4, 42, 24],
            c: 16767158,
            t: 5
        }, {
            p: [-179, 26, -58],
            s: [4, 12, 16],
            c: 5799880,
            t: 5
        }, {
            p: [-58, 36, -16],
            s: [20, 2, 152],
            c: 7368816,
            t: 5
        }, {
            p: [-134, 2, 32],
            s: [4, 28, 56],
            c: 16767158,
            t: 5
        }, {
            p: [-134, 2, -49],
            s: [4, 28, 30],
            c: 16767158,
            t: 5
        }, {
            p: [-134, 30, -2],
            s: [4, 8, 124],
            c: 16767158,
            t: 5
        }, {
            p: [-100, 36, -2],
            s: [64, 2, 124],
            c: 7368816,
            t: 5
        }, {
            p: [-157, 36, -3],
            s: [42, 2, 126],
            c: 7368816,
            t: 5
        }, {
            p: [-160, 36, -79],
            s: [36, 2, 26],
            c: 7368816,
            t: 5
        }, {
            p: [-179, 62, -58],
            s: [4, 14, 16],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [-134, 38, -57],
            s: [4, 38, 14],
            c: 16767158,
            t: 5
        }, {
            p: [-134, 38, 13],
            s: [4, 38, 94],
            c: 16767158,
            t: 5
        }, {
            p: [-134, 60, -42],
            s: [4, 16, 16],
            c: 16767158,
            t: 5
        }, {
            p: [337, -2, 99],
            s: [4, 40, 4],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [306, -2, 99],
            s: [4, 40, 4],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [337, -2, 5],
            s: [4, 40, 4],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [306, -2, 5],
            s: [4, 40, 4],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [322, 34, 52],
            s: [36, 2, 100],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [-199, 34, -47],
            s: [36, 2, 82],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [-214, -1, -9],
            s: [4, 38, 4],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [-214, -1, -85],
            s: [4, 38, 4],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [-183, -1, -85],
            s: [4, 38, 4],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [-183, -1, -9],
            s: [4, 38, 4],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [132, 0, 44],
            s: [4, 2, 20],
            c: 7368816,
            t: 5
        }, {
            p: [-185, 0, -58],
            s: [4, 2, 20],
            c: 7368816,
            t: 5
        }, {
            p: [-151, 0, 148],
            s: [4, 2, 20],
            c: 7368816,
            t: 5
        }, {
            p: [-165, 0, 68],
            s: [18, 2, 4],
            c: 7368816,
            t: 5
        }, {
            p: [-113, 76, -16],
            s: [146, 4, 170],
            c: 5263440,
            t: 5,
            bo: 1
        }, {
            p: [-105, 44, 119],
            s: [94, 4, 112],
            c: 5263440,
            t: 5,
            bo: 1
        }, {
            p: [220, 75, 42],
            s: [165, 4, 137],
            c: 5263440,
            t: 5,
            bo: 1
        }, {
            p: [206, 44, -77],
            s: [108, 4, 98],
            c: 5263440,
            t: 5,
            bo: 1
        }, {
            p: [-79, 2, -105],
            s: [30, 118, 18],
            c: 7368816,
            t: 11,
            bo: 1
        }, {
            p: [-79, 0, -107],
            s: [34, 2, 18],
            c: 7368816,
            t: 5
        }, {
            p: [32, 2, -207],
            s: [124, 74, 150],
            c: 12958048,
            t: 5,
            bo: 1
        }, {
            p: [32, 74, -207],
            s: [136, 4, 162],
            c: 5263440,
            t: 5,
            bo: 1
        }, {
            p: [32, 0, -207],
            s: [128, 2, 154],
            c: 7368816,
            t: 5
        }, {
            p: [94, -1, 159],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [94, -1, 217],
            s: [2, 24, 113],
            pe: 1,
            c: 7692103,
            t: 10,
            bo: 1
        }, {
            p: [246, -1, 159],
            s: [302, 24, 2],
            pe: 1,
            c: 7692103,
            t: 10,
            bo: 1
        }, {
            p: [-37, -1, 235],
            s: [2, 24, 58],
            pe: 1,
            c: 7692103,
            t: 10,
            bo: 1
        }, {
            p: [-37, -1, 205],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [-163, -1, 205],
            s: [254, 24, 2],
            pe: 1,
            c: 7692103,
            t: 10,
            bo: 1
        }, {
            p: [398, -1, 159],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [399, -1, 59],
            s: [2, 24, 206],
            c: 7692103,
            t: 10,
            bo: 1
        }, {
            p: [399, -1, -156],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [260, -1, -157],
            s: [340, 24, 2],
            c: 7692103,
            t: 10,
            bo: 1
        }, {
            p: [-161, -1, -157],
            s: [262, 24, 2],
            c: 7692103,
            t: 10,
            bo: 1
        }, {
            p: [-290, -1, 204],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [-291, -1, 24],
            s: [2, 24, 358],
            c: 7692103,
            t: 10,
            bo: 1
        }, {
            p: [-290, -1, -156],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [-181, 2, 3],
            s: [2, 52, 12],
            i: 3,
            t: 2,
            d: 2
        }, {
            p: [32, 0, -121],
            s: [48, 2, 18],
            c: 7368816,
            t: 5
        }, {
            p: [32, 39, -123],
            s: [46, 3, 19],
            l: 1,
            c: 5263440,
            t: 5
        }, {
            p: [-251, -1, 173],
            s: [2, 24, 63],
            pe: 1,
            c: 7692103,
            t: 10
        }, {
            p: [-267, 0, 73],
            s: [46, 30, 42],
            c: 5799880,
            t: 5
        }, {
            p: [-267, 30, 73],
            s: [54, 2, 50],
            c: 5395026,
            t: 5
        }, {
            p: [343, 0, -138],
            s: [52, 32, 36],
            c: 12927811,
            t: 5
        }, {
            p: [343, 32, -138],
            s: [56, 2, 40],
            c: 5263440,
            t: 5
        }, {
            p: [399, -1, -46],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [416, -1, -45],
            s: [30, 24, 2],
            c: 7692103,
            t: 10,
            bo: 1
        }, {
            p: [431, -1, -46],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [432, -1, -101],
            s: [2, 24, 110],
            c: 7692103,
            t: 10,
            bo: 1
        }, {
            p: [431, -1, -156],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [-250, -1, 16],
            s: [8, 24, 72],
            pe: 1,
            c: 6984507,
            t: 5
        }, {
            p: [-213, -1, -120],
            s: [8, 10, 20],
            pe: 1,
            c: 6984507,
            t: 5
        }, {
            p: [-232, 26, -143],
            s: [58, 2, 32],
            c: 7039851,
            t: 5
        }, {
            p: [-232, 0, -143],
            s: [52, 26, 26],
            c: 5799880,
            t: 5
        }, {
            p: [-233, -1, 86],
            s: [22, 10, 8],
            pe: 1,
            c: 6984507,
            t: 5
        }, {
            p: [313, -1, -134],
            s: [8, 10, 44],
            c: 6984507,
            t: 5
        }, {
            p: [-144, -1, -154],
            s: [124, 10, 5],
            c: 6984507,
            t: 5
        }, {
            p: [435, 0, -16],
            s: [52, 32, 36],
            c: 12927811,
            t: 5
        }, {
            p: [435, 32, -16],
            s: [56, 2, 40],
            c: 5263440,
            t: 5
        }, {
            p: [399, -2, -100],
            s: [8, 20, 56],
            pe: 1,
            c: 6984507,
            t: 5
        }, {
            p: [342, -1, 52],
            s: [6, 10, 104],
            pe: 1,
            c: 6984507,
            t: 5
        }, {
            p: [-251, -1, 205],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [-251, -1, 106],
            s: [2, 24, 25],
            pe: 1,
            c: 7692103,
            t: 10
        }, {
            p: [151, 2, -99],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [340, 0, -114],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [108, 0, 152],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [108, 12, 152],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [191, 2, -112],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [246, 2, -50],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-137, 2, 116],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-104, 2, 160],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-56, 0, 198],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-56, 12, 198],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-140, 2, 106],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [249, 2, -59],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-202, 0, -148],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-92, 2, 160],
            s: [12, 12, 12],
            i: 8
        }, {
            p: [203, 2, -112],
            s: [12, 12, 12],
            i: 8
        }, {
            p: [130, 34, 79],
            s: [12, 2, 42],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [136, 2, 105],
            s: [2, 42, 8],
            i: 3,
            t: 2,
            d: 2
        }, {
            p: [-47, 44, 35],
            s: [1, 22, 34],
            pe: 1,
            c: 9533019,
            t: 10
        }, {
            p: [-219, -1, 176],
            s: [4, 32, 4],
            pe: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-219, 30, 176],
            s: [26, 26, 28],
            c: 6193707,
            t: 5,
            bo: 1
        }, {
            p: [-219, 20, 181],
            s: [2, 2, 8],
            pe: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-219, 19, 188],
            s: [6, 6, 8],
            pe: 1,
            c: 6193707,
            t: 5,
            bo: 1
        }, {
            p: [-224, 18, 176],
            s: [6, 2, 2],
            pe: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-229, 17, 176],
            s: [6, 4, 6],
            pe: 1,
            c: 6193707,
            t: 5,
            bo: 1
        }, {
            p: [375, -1, 138],
            s: [4, 32, 4],
            pe: 1,
            c: 6574655,
            t: 5,
            bo: 1
        }, {
            p: [375, 29, 138],
            s: [26, 26, 28],
            c: 6193707,
            t: 5,
            bo: 1
        }, {
            p: [375, 19, 133],
            s: [2, 2, 8],
            c: 6574655,
            t: 5
        }, {
            p: [375, 18, 127],
            s: [6, 6, 8],
            c: 6193707,
            t: 5,
            bo: 1
        }, {
            p: [371, 15, 138],
            s: [6, 2, 2],
            c: 6574655,
            t: 5
        }, {
            p: [365, 14, 138],
            s: [6, 4, 6],
            c: 6193707,
            t: 5,
            bo: 1
        }, {
            p: [37, 1, -78],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [49, 1, -78],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [44, 1, -66],
            s: [12, 12, 12],
            i: 8
        }, {
            p: [41, 13, -78],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [130, 2, 51],
            s: [16, 24, 2],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [-39, 2, -31],
            s: [16, 24, 2],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [29, 1, 225],
            s: [51, 15, 20],
            i: 7,
            l: 1
        }, {
            p: [-125, -1, 175],
            s: [4, 22, 2],
            l: 1,
            r: [-.17, 0, 0],
            c: 7692103,
            t: 5
        }, {
            p: [-113, 0, 175],
            s: [4, 22, 2],
            l: 1,
            r: [-.17, 0, 0],
            c: 7692103,
            t: 5
        }, {
            p: [154, 2, -46],
            s: [51, 15, 20],
            i: 7,
            l: 1,
            r: [-3.14, 0, -3.14]
        }, {
            p: [-60, 2, 115],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [169, 0, -150],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [90, 0, 175],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [395, 0, 28],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-246, 0, 112],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [29, 1, 225],
            s: [48, 8, 16],
            v: 1,
            t: 5
        }, {
            p: [34, 8, 225],
            s: [24, 8, 16],
            v: 1,
            t: 5
        }, {
            p: [148, 9, -45],
            s: [24, 8, 16],
            v: 1,
            t: 5
        }, {
            p: [154, 3, -45],
            s: [48, 8, 16],
            v: 1,
            t: 5
        }, {
            p: [138, 44, 3],
            s: [1, 22, 38],
            pe: 1,
            c: 7692103,
            t: 10
        }, {
            p: [117, 21, 180],
            s: [26, 28, 28],
            l: 1,
            c: 5204775,
            t: 5
        }, {
            p: [117, -1, 180],
            s: [4, 28, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-64, -1, 235],
            s: [4, 31, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-64, 21, 235],
            s: [26, 28, 28],
            l: 1,
            c: 7709238,
            t: 5
        }, {
            p: [-42, 23, 288],
            s: [27, 28, 24],
            pe: 1,
            c: 6193707,
            t: 5,
            bo: 1
        }, {
            p: [-37, -1, 265],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [94, -1, 275],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [-42, -1, 289],
            s: [4, 31, 4],
            pe: 1,
            c: 6574655,
            t: 5,
            bo: 1
        }, {
            p: [-315, -1, 13],
            s: [4, 31, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-321, -1, -132],
            s: [4, 31, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [459, 14, -62],
            s: [26, 27, 35],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [207, 17, -188],
            s: [26, 25, 28],
            l: 1,
            c: 5204775,
            t: 5
        }, {
            p: [-102, 16, -181],
            s: [26, 28, 28],
            l: 1,
            c: 5204775,
            t: 5
        }, {
            p: [-320, 19, 175],
            s: [26, 28, 28],
            l: 1,
            c: 7709238,
            t: 5
        }, {
            p: [85, 0, 188],
            s: [2, 73, 2],
            c: 7368816,
            t: 5
        }, {
            p: [79, 71, 188],
            s: [10, 2, 2],
            c: 7368816,
            t: 5
        }, {
            p: [75, 70, 498],
            s: [10, 2, 4],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [75, 69, 188],
            s: [9, 1, 3],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [-27, 0, 332],
            s: [2, 73, 2],
            c: 7368816,
            t: 5
        }, {
            p: [-21, 71, 332],
            s: [10, 2, 2],
            c: 7368816,
            t: 5
        }, {
            p: [-17, 70, 332],
            s: [10, 2, 4],
            c: 7368816,
            t: 5
        }, {
            p: [-17, 69, 332],
            s: [9, 1, 3],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [-9, 0, -104],
            s: [2, 73, 2],
            c: 7368816,
            t: 5
        }, {
            p: [-9, 71, -99],
            s: [2, 2, 8],
            c: 7368816,
            t: 5
        }, {
            p: [-9, 69, -96],
            s: [2, 1, 8],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [-9, 70, -96],
            s: [3, 2, 9],
            c: 7368816,
            t: 5
        }, {
            p: [279, 15, 184],
            s: [26, 28, 28],
            l: 1,
            c: 6193707,
            t: 5
        }, {
            p: [131, -1, -22],
            s: [1, 7, 1],
            l: 1,
            c: 6984507,
            t: 5
        }, {
            p: [-321, 11, -132],
            s: [26, 30, 28],
            l: 1,
            c: 7709238,
            t: 5
        }, {
            p: [230, 2, 2],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [246, 2, 62],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [246, 38, 28],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [190, 38, 76],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-126, 38, 36],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-171, 38, -16],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-126, 2, -58],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-55, 2, -1],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-84, 38, 56],
            s: [4, 22, 2],
            l: 1,
            r: [.17, 0, 0],
            c: 7692103,
            t: 5
        }, {
            p: [-76, 38, 56],
            s: [4, 22, 2],
            l: 1,
            r: [.17, 0, 0],
            c: 7692103,
            t: 5
        }, {
            p: [-96, 38, 56],
            s: [4, 22, 2],
            l: 1,
            r: [.17, 0, 0],
            c: 7692103,
            t: 5
        }, {
            p: [-114, 39, 29],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, .52, 0],
            c: 10987431,
            t: 5
        }, {
            p: [-81, 39, 47],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, -.53, 0],
            c: 11645361,
            t: 5
        }, {
            p: [-144, 39, -57],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, -.53, 0],
            c: 10658466,
            t: 5
        }, {
            p: [-109, 3, -53],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, -.53, 0],
            c: 11184810,
            t: 5
        }, {
            p: [60, 2, -62],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, -.53, 0],
            c: 9671571,
            t: 5
        }, {
            p: [8, 2, 178],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, -.53, 0],
            c: 10329501,
            t: 5
        }, {
            p: [-120, 38, 28],
            s: [2, 4, 2],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [-67, 39, -59],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [-3.14, 1.05, -3.14],
            c: 10987431,
            t: 5
        }, {
            p: [-120, 40, 28],
            s: [1, 4, 1],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [-53, 38, 55],
            s: [2, 4, 2],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [-53, 40, 55],
            s: [1, 4, 1],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [-80, 38, -62],
            s: [2, 4, 2],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [-80, 40, -62],
            s: [1, 4, 1],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [-138, 38, -11],
            s: [2, 4, 2],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [-138, 40, -11],
            s: [1, 4, 1],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [-142, 39, -5],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [3.14, -1.04, 3.14],
            c: 10658466,
            t: 5
        }, {
            p: [-89, 38, -58],
            s: [12, 12, 12],
            i: 8
        }, {
            p: [-70, 3, 108],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [-3.14, 1.05, -3.14],
            c: 10987431,
            t: 5
        }, {
            p: [-86, 2, 66],
            s: [2, 4, 2],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [-86, 4, 66],
            s: [1, 4, 1],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [-106, 3, 127],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [-3.14, 1.05, -3.14],
            c: 10987431,
            t: 5
        }, {
            p: [-103, 3, 119],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, .7, 0],
            c: 10987431,
            t: 5
        }, {
            p: [-92, 4, 58],
            s: [1, 4, 1],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [-92, 2, 58],
            s: [2, 4, 2],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [173, 2, -20],
            s: [1, 8, 7],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [195, 2, -20],
            s: [1, 8, 7],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [184, 9, -20],
            s: [11, 1, 4],
            pe: 1,
            c: 3421236,
            t: 5
        }, {
            p: [184, 8, -20],
            s: [21, 1, 6],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [184, 10, -20],
            s: [2, 1, 1],
            pe: 1,
            c: 3421236,
            t: 5
        }, {
            p: [184, 11, -20],
            s: [22, 11, 1],
            pe: 1,
            c: 3421236,
            t: 5
        }, {
            p: [184, 12, -19],
            s: [20, 9, 1],
            pe: 1,
            c: 3421236,
            e: 16777215,
            t: 5
        }, {
            p: [164, 3, -13],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, -.53, 0],
            c: 9671571,
            t: 5
        }, {
            p: [235, 3, 48],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [-3.14, 1.4, -3.14],
            c: 9671571,
            t: 5
        }, {
            p: [143, 2, 84],
            s: [1, 17, 3],
            l: 1,
            r: [0, 0, .17],
            c: 7692103,
            t: 5
        }, {
            p: [143, 2, 80],
            s: [1, 17, 3],
            l: 1,
            r: [0, 0, .17],
            c: 7692103,
            t: 5
        }, {
            p: [225, 3, 68],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, -.53, 0],
            c: 9671571,
            t: 5
        }, {
            p: [258, 30, -100],
            s: [8, 1, 1],
            l: 1,
            c: 9012870,
            t: 5
        }, {
            p: [261, 28, -100],
            s: [5, 2, 3],
            l: 1,
            c: 9012870,
            t: 5
        }, {
            p: [261, 27, -100],
            s: [4, 1, 2],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [-152, 27, 148],
            s: [5, 2, 3],
            l: 1,
            c: 9012870,
            t: 5
        }, {
            p: [-150, 29, 148],
            s: [6, 1, 1],
            l: 1,
            c: 9012870,
            t: 5
        }, {
            p: [-152, 26, 148],
            s: [4, 1, 2],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [-242, 26, 73],
            s: [4, 1, 1],
            l: 1,
            c: 9012870,
            t: 5
        }, {
            p: [-240, 24, 73],
            s: [4, 2, 3],
            l: 1,
            c: 9012870,
            t: 5
        }, {
            p: [-240, 23, 73],
            s: [3, 1, 2],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [-234, 22, -128],
            s: [1, 1, 4],
            l: 1,
            c: 9012870,
            t: 5
        }, {
            p: [-234, 20, -126],
            s: [3, 2, 4],
            l: 1,
            c: 9012870,
            t: 5
        }, {
            p: [-234, 19, -126],
            s: [2, 1, 3],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [306, 65, 63],
            s: [8, 1, 1],
            l: 1,
            c: 9012870,
            t: 5
        }, {
            p: [309, 63, 63],
            s: [5, 2, 3],
            l: 1,
            c: 9012870,
            t: 5
        }, {
            p: [309, 62, 63],
            s: [4, 1, 2],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [198, 0, 242],
            s: [123, 42, 120],
            c: 5799880,
            t: 5,
            bo: 1
        }, {
            p: [198, 42, 242],
            s: [130, 2, 128],
            c: 8553090,
            t: 5,
            bo: 1
        }, {
            p: [167, 0, 311],
            s: [30, 61, 18],
            c: 7368816,
            t: 5,
            bo: 1
        }, {
            p: [303, 6, 186],
            s: [23, 27, 23],
            l: 1,
            c: 4743462,
            t: 5
        }, {
            p: [331, 10, 205],
            s: [31, 30, 30],
            l: 1,
            c: 7576379,
            t: 5
        }, {
            p: [-121, 0, 322],
            s: [123, 60, 120],
            c: 12951902,
            t: 5,
            bo: 1
        }, {
            p: [-121, 60, 322],
            s: [130, 2, 126],
            c: 6908265,
            t: 5,
            bo: 1
        }, {
            p: [-58, 35, 356],
            s: [3, 1, 14],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-58, 36, 356],
            s: [1, 12, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-59, 36, 362],
            s: [2, 12, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-59, 36, 350],
            s: [2, 12, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-59, 48, 356],
            s: [3, 1, 14],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-59, 36, 356],
            s: [1, 12, 11],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [-112, 35, 261],
            s: [14, 1, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-112, 36, 262],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-106, 36, 262],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-118, 36, 262],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-112, 48, 262],
            s: [14, 1, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-112, 36, 262],
            s: [11, 12, 1],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [77, 49, -131],
            s: [14, 1, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [77, 50, -132],
            s: [11, 12, 1],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [71, 50, -132],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [83, 50, -132],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [77, 62, -132],
            s: [14, 1, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [77, 50, -132],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [95, 47, -163],
            s: [3, 1, 14],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [94, 48, -163],
            s: [1, 12, 11],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [93, 48, -157],
            s: [4, 13, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [94, 60, -163],
            s: [3, 1, 14],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [93, 48, -169],
            s: [4, 13, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [93, 48, -163],
            s: [4, 13, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [32, 0, -109],
            s: [23, 2, 6],
            c: 7368816,
            t: 5
        }, {
            p: [113, -1, 298],
            s: [4, 28, 4],
            c: 6574655,
            t: 5
        }, {
            p: [114, 22, 298],
            s: [26, 28, 28],
            c: 5204775,
            t: 5,
            bo: 1
        }, {
            p: [-121, 0, 322],
            s: [135, 8, 133],
            c: 6193707,
            t: 5
        }, {
            p: [124, 11, -198],
            s: [26, 28, 28],
            l: 1,
            c: 5204775,
            t: 5
        }, {
            p: [418, 15, -183],
            s: [26, 33, 28],
            l: 1,
            c: 7247414,
            t: 5
        }, {
            p: [163, 2, 422],
            s: [113, 78, 116],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [165, 0, 419],
            s: [134, 8, 126],
            c: 6193707,
            t: 5
        }, {
            p: [85, 0, 498],
            s: [2, 73, 2],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [79, 71, 498],
            s: [10, 2, 2],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [75, 70, 188],
            s: [10, 2, 4],
            c: 7368816,
            t: 5
        }, {
            p: [75, 69, 498],
            s: [9, 1, 3],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [163, 80, 422],
            s: [123, 3, 125],
            l: 1,
            c: 5921370,
            t: 5,
            bo: 1
        }, {
            p: [106, 54, 387],
            s: [1, 12, 11],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [105, 53, 387],
            s: [3, 1, 14],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [105, 66, 387],
            s: [3, 1, 14],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [106, 54, 393],
            s: [2, 12, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [106, 54, 381],
            s: [2, 12, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [106, 54, 387],
            s: [2, 12, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [106, 54, 452],
            s: [1, 12, 11],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [105, 53, 452],
            s: [3, 1, 14],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [105, 66, 452],
            s: [3, 1, 14],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [106, 54, 446],
            s: [2, 12, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [106, 54, 458],
            s: [2, 12, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [106, 54, 452],
            s: [2, 12, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [253, -1, 376],
            s: [4, 28, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [253, 22, 376],
            s: [26, 28, 28],
            l: 1,
            c: 5204775,
            t: 5
        }, {
            p: [-224, 19, 248],
            s: [26, 28, 28],
            l: 1,
            c: 7709238,
            t: 5
        }, {
            p: [-224, -1, 248],
            s: [4, 23, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-89, 0, 470],
            s: [104, 135, 116],
            c: 10658466,
            t: 5
        }, {
            p: [-30, -1, 392],
            s: [4, 31, 4],
            c: 6574655,
            t: 5
        }, {
            p: [-30, 23, 392],
            s: [27, 28, 24],
            c: 6193707,
            t: 5
        }, {
            p: [-89, 135, 470],
            s: [110, 3, 122],
            l: 1,
            c: 5921370,
            t: 5
        }, {
            p: [-89, 65, 470],
            s: [111, 5, 124],
            c: 5921370,
            t: 5
        }, {
            p: [-27, 0, 651],
            s: [2, 73, 2],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [-21, 71, 651],
            s: [10, 2, 2],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [-17, 70, 651],
            s: [10, 2, 4],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [-17, 69, 651],
            s: [9, 1, 3],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [107, -1, 504],
            s: [4, 31, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [107, 21, 504],
            s: [27, 28, 24],
            l: 1,
            c: 6193707,
            t: 5
        }, {
            p: [156, 0, 621],
            s: [123, 84, 120],
            l: 1,
            c: 12951902,
            t: 5
        }, {
            p: [-97, 0, 686],
            s: [123, 52, 120],
            l: 1,
            c: 5799880,
            t: 5
        }, {
            p: [-97, 52, 686],
            s: [131, 4, 132],
            l: 1,
            c: 5723991,
            t: 5
        }, {
            p: [156, 84, 621],
            s: [131, 5, 132],
            l: 1,
            c: 5723991,
            t: 5
        }, {
            p: [489, 22, 19],
            s: [26, 28, 28],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [424, 18, 101],
            s: [26, 28, 28],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [427, 15, 26],
            s: [27, 30, 30],
            l: 1,
            c: 7576379,
            t: 5
        }, {
            p: [387, 13, 187],
            s: [23, 27, 23],
            l: 1,
            c: 4743462,
            t: 5
        }, {
            p: [458, 18, 69],
            s: [23, 24, 27],
            l: 1,
            c: 4743462,
            t: 5
        }, {
            p: [727, 0, -41],
            s: [104, 74, 79],
            l: 1,
            c: 10658466,
            t: 5
        }, {
            p: [687, 74, -41],
            s: [24, 48, 26],
            l: 1,
            c: 10658466,
            t: 5
        }, {
            p: [727, 74, -41],
            s: [105, 6, 76],
            l: 1,
            c: 10658466,
            t: 5
        }, {
            p: [687, 121, -41],
            s: [31, 6, 32],
            l: 1,
            c: 7890002,
            t: 5
        }, {
            p: [687, 127, -41],
            s: [22, 13, 19],
            l: 1,
            c: 7890002,
            t: 5
        }, {
            p: [727, 80, -41],
            s: [105, 6, 54],
            l: 1,
            c: 10658466,
            t: 5
        }, {
            p: [727, 84, -61],
            s: [115, 6, 53],
            l: 1,
            r: [-.52, 0, 0],
            c: 7890002,
            t: 5
        }, {
            p: [681, 154, -41],
            s: [2, 25, 2],
            l: 1,
            c: 7890002,
            t: 5
        }, {
            p: [681, 171, -41],
            s: [2, 2, 14],
            l: 1,
            c: 7890002,
            t: 5
        }, {
            p: [687, 124, -30],
            s: [22, 33, 11],
            l: 1,
            r: [-.35, 0, 0],
            c: 7890002,
            t: 5
        }, {
            p: [687, 124, -52],
            s: [22, 33, 11],
            l: 1,
            r: [.35, 0, 0],
            c: 7890002,
            t: 5
        }, {
            p: [727, 84, -22],
            s: [115, 6, 51],
            l: 1,
            r: [.53, 0, 0],
            c: 7890002,
            t: 5
        }, {
            p: [727, 80, -41],
            s: [105, 12, 34],
            l: 1,
            c: 10658466,
            t: 5
        }, {
            p: [674, 0, -41],
            s: [2, 57, 32],
            l: 1,
            c: 7890002,
            t: 5
        }, {
            p: [692, 16, -106],
            s: [26, 31, 28],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [691, -1, -106],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [648, 17, 8],
            s: [26, 34, 28],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [648, -1, 9],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [458, 17, -140],
            s: [26, 31, 28],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [621, 18, -154],
            s: [26, 28, 28],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [621, -1, -154],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [208, 0, -376],
            s: [121, 69, 83],
            l: 1,
            c: 10658466,
            t: 5
        }, {
            p: [674, 108, -41],
            s: [1, 9, 9],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [673, 113, -41],
            s: [1, 4, 1],
            l: 1,
            c: 2960685,
            t: 5
        }, {
            p: [673, 113, -41],
            s: [1, 4, 1],
            l: 1,
            r: [2.09, 0, 0],
            c: 2960685,
            t: 5
        }, {
            p: [674, 64, -41],
            s: [2, 19, 4],
            l: 1,
            c: 2105376,
            t: 5
        }, {
            p: [752, 18, 167],
            s: [39, 24, 1182],
            l: 1,
            c: 4743462,
            t: 5
        }, {
            p: [611, 18, -401],
            s: [257, 31, 27],
            l: 1,
            c: 6060596,
            t: 5
        }, {
            p: [592, 31, -395],
            s: [38, 34, 28],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [737, 15, -383],
            s: [47, 36, 49],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [746, 22, -200],
            s: [38, 28, 38],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [746, 22, -292],
            s: [38, 33, 38],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [748, 0, -142],
            s: [4, 23, 132],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [758, 0, -298],
            s: [4, 23, 219],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [735, -1, -287],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [27, 0, 172],
            s: [1506, 0, 1212],
            i: 4,
            c: 7504967,
            t: 5
        }, {
            p: [640, 0, -405],
            s: [307, 23, 5],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [542, -1, -391],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [610, 18, -235],
            s: [26, 28, 28],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [610, -1, -235],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [460, -1, -324],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [460, 18, -324],
            s: [26, 28, 28],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [748, 0, 331],
            s: [4, 23, 852],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [501, 17, -113],
            s: [26, 28, 28],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [459, 9, -102],
            s: [25, 26, 25],
            l: 1,
            c: 5732402,
            t: 5
        }, {
            p: [451, 22, 93],
            s: [26, 24, 25],
            l: 1,
            c: 6984507,
            t: 5
        }, {
            p: [427, 10, 60],
            s: [26, 28, 29],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [424, 15, 135],
            s: [30, 28, 27],
            l: 1,
            c: 4743462,
            t: 5
        }, {
            p: [501, 16, -8],
            s: [29, 25, 29],
            l: 1,
            c: 4941357,
            t: 5
        }, {
            p: [530, 9, -52],
            s: [29, 25, 29],
            l: 1,
            c: 5732402,
            t: 5
        }, {
            p: [595, 9, 107],
            s: [29, 25, 29],
            l: 1,
            c: 5732402,
            t: 5
        }, {
            p: [418, 13, 183],
            s: [29, 25, 29],
            l: 1,
            c: 5732402,
            t: 5
        }, {
            p: [477, 20, 166],
            s: [27, 30, 30],
            l: 1,
            c: 7576379,
            t: 5
        }, {
            p: [746, 22, 77],
            s: [38, 28, 44],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [746, 22, 140],
            s: [38, 29, 41],
            l: 1,
            c: 6588720,
            t: 5
        }, {
            p: [439, 8, 46],
            s: [29, 25, 29],
            l: 1,
            c: 5732402,
            t: 5
        }, {
            p: [746, 23, 254],
            s: [38, 28, 34],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [746, 18, 349],
            s: [38, 29, 74],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [450, 14, -177],
            s: [25, 30, 25],
            l: 1,
            c: 5732402,
            t: 5
        }, {
            p: [166, 0, -429],
            s: [1786, 23, 5],
            l: 1,
            c: 5917499,
            t: 5
        }, {
            p: [-81, 19, -418],
            s: [1233, 31, 27],
            l: 1,
            c: 6060596,
            t: 5
        }, {
            p: [436, 16, -407],
            s: [38, 37, 28],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [319, 17, -407],
            s: [38, 37, 28],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [437, -1, -401],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [318, -1, -401],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [291, -1, -412],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [371, -1, -412],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [376, 31, -439],
            s: [38, 33, 28],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [291, -1, -234],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [291, 8, -237],
            s: [31, 33, 28],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [208, 69, -376],
            s: [128, 3, 89],
            l: 1,
            c: 6381921,
            t: 5
        }, {
            p: [399, -1, 45],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [408, -1, -415],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [242, 47, -334],
            s: [11, 12, 1],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [173, 47, -334],
            s: [11, 12, 1],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [173, 46, -333],
            s: [14, 1, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [173, 59, -333],
            s: [14, 1, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [242, 59, -333],
            s: [14, 1, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [242, 46, -333],
            s: [14, 1, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [167, 47, -334],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [179, 47, -334],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [236, 47, -334],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [248, 47, -334],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [242, 47, -334],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [173, 47, -334],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-24, 112, 468],
            s: [2, 9, 1],
            l: 1,
            c: 5723991,
            e: 16711680,
            t: 5
        }, {
            p: [-27, 66, 470],
            s: [14, 57, 3],
            l: 1,
            c: 5921370,
            t: 5
        }, {
            p: [-30, 112, 468],
            s: [2, 9, 1],
            l: 1,
            c: 5723991,
            e: 16711680,
            t: 5
        }, {
            p: [-27, 116, 468],
            s: [4, 2, 1],
            l: 1,
            c: 5723991,
            e: 16711680,
            t: 5
        }, {
            p: [-24, 101, 468],
            s: [2, 9, 1],
            l: 1,
            c: 5723991,
            e: 16711680,
            t: 5
        }, {
            p: [-30, 101, 468],
            s: [2, 9, 1],
            l: 1,
            c: 5723991,
            e: 16711680,
            t: 5
        }, {
            p: [-27, 101, 468],
            s: [4, 2, 1],
            l: 1,
            c: 5723991,
            e: 16711680,
            t: 5
        }, {
            p: [-27, 108, 468],
            s: [4, 2, 1],
            l: 1,
            c: 5723991,
            e: 16711680,
            t: 5
        }, {
            p: [-27, 90, 468],
            s: [2, 9, 1],
            l: 1,
            c: 5723991,
            e: 16711680,
            t: 5
        }, {
            p: [-27, 97, 468],
            s: [8, 2, 1],
            l: 1,
            c: 5723991,
            e: 16711680,
            t: 5
        }, {
            p: [-25, 79, 468],
            s: [2, 9, 1],
            l: 1,
            c: 5723991,
            e: 16711680,
            t: 5
        }, {
            p: [-27, 86, 468],
            s: [6, 2, 1],
            l: 1,
            c: 5723991,
            e: 16711680,
            t: 5
        }, {
            p: [-27, 79, 468],
            s: [6, 2, 1],
            l: 1,
            c: 5723991,
            e: 16711680,
            t: 5
        }, {
            p: [-27, 82, 468],
            s: [6, 2, 1],
            l: 1,
            c: 5723991,
            e: 16711680,
            t: 5
        }, {
            p: [-25, 68, 468],
            s: [2, 9, 1],
            l: 1,
            c: 5723991,
            e: 16711680,
            t: 5
        }, {
            p: [-28, 68, 468],
            s: [6, 2, 1],
            l: 1,
            c: 5723991,
            e: 16711680,
            t: 5
        }, {
            p: [-37, 108, 470],
            s: [6, 3, 3],
            l: 1,
            c: 5921370,
            t: 5
        }, {
            p: [-37, 77, 470],
            s: [6, 3, 3],
            l: 1,
            c: 5921370,
            t: 5
        }, {
            p: [65, 1, 654],
            s: [51, 15, 20],
            i: 7,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [32, 0, 814],
            s: [79, 135, 116],
            l: 1,
            c: 10658466,
            t: 5
        }, {
            p: [32, 135, 814],
            s: [87, 3, 124],
            l: 1,
            c: 6052956,
            t: 5
        }, {
            p: [88, -1, 709],
            s: [4, 31, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [90, 17, 708],
            s: [27, 28, 24],
            l: 1,
            c: 6193707,
            t: 5
        }, {
            p: [-33, -1, 770],
            s: [4, 31, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-34, 16, 770],
            s: [27, 28, 24],
            l: 1,
            c: 6193707,
            t: 5
        }, {
            p: [115, -2, 958],
            s: [113, 65, 116],
            l: 1,
            c: 12927811,
            t: 5
        }, {
            p: [115, 63, 958],
            s: [124, 5, 126],
            l: 1,
            c: 5066061,
            t: 5
        }, {
            p: [-63, -18, 928],
            s: [123, 112, 120],
            l: 1,
            c: 12951902,
            t: 5
        }, {
            p: [-63, 93, 928],
            s: [131, 4, 127],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [-155, -75, 1251],
            s: [79, 289, 61],
            l: 1,
            c: 10658466,
            t: 5
        }, {
            p: [151, -31, 1120],
            s: [108, 142, 61],
            l: 1,
            c: 10658466,
            t: 5
        }, {
            p: [308, 0, 1120],
            s: [79, 220, 61],
            l: 1,
            c: 10658466,
            t: 5
        }, {
            p: [-269, -31, 1008],
            s: [108, 142, 113],
            l: 1,
            c: 10658466,
            t: 5
        }, {
            p: [437, 0, 747],
            s: [677, 23, 5],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [609, 21, 751],
            s: [315, 24, 44],
            l: 1,
            c: 4743462,
            t: 5
        }, {
            p: [269, 21, 751],
            s: [374, 27, 53],
            l: 1,
            c: 4743462,
            t: 5
        }, {
            p: [525, 20, 744],
            s: [38, 29, 41],
            l: 1,
            c: 6588720,
            t: 5
        }, {
            p: [744, 18, 739],
            s: [43, 35, 46],
            l: 1,
            c: 6588720,
            t: 5
        }, {
            p: [333, 22, 743],
            s: [38, 32, 41],
            l: 1,
            c: 6588720,
            t: 5
        }, {
            p: [636, 20, 744],
            s: [38, 29, 41],
            l: 1,
            c: 6588720,
            t: 5
        }, {
            p: [746, 23, 557],
            s: [38, 28, 34],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [443, 24, 258],
            s: [23, 24, 23],
            l: 1,
            c: 4743462,
            t: 5
        }, {
            p: [359, 11, 197],
            s: [24, 24, 30],
            l: 1,
            c: 6390324,
            t: 5
        }, {
            p: [313, 13, 245],
            s: [26, 28, 28],
            l: 1,
            c: 5204775,
            t: 5
        }, {
            p: [369, 60, 323],
            s: [132, 3, 130],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [369, -4, 323],
            s: [123, 64, 120],
            l: 1,
            c: 12951902,
            t: 5
        }, {
            p: [252, 12, -209],
            s: [26, 28, 28],
            l: 1,
            c: 4940075,
            t: 5
        }, {
            p: [208, -1, -370],
            s: [137, 10, 89],
            c: 6984507,
            t: 5
        }, {
            p: [373, 18, -259],
            s: [26, 28, 28],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [247, 24, 743],
            s: [38, 32, 41],
            l: 1,
            c: 6588720,
            t: 5
        }, {
            p: [571, -57, 1262],
            s: [79, 220, 61],
            l: 1,
            c: 10658466,
            t: 5
        }, {
            p: [563, 13, 53],
            s: [29, 25, 29],
            l: 1,
            c: 5732402,
            t: 5
        }, {
            p: [439, 5, 10],
            s: [29, 25, 29],
            l: 1,
            c: 5732402,
            t: 5
        }, {
            p: [288, 9, -185],
            s: [25, 26, 25],
            l: 1,
            c: 5732402,
            t: 5
        }, {
            p: [337, 14, -183],
            s: [25, 26, 25],
            l: 1,
            c: 6720572,
            t: 5
        }, {
            p: [164, 6, -221],
            s: [25, 30, 25],
            l: 1,
            c: 5732402,
            t: 5
        }, {
            p: [213, 12, -250],
            s: [21, 25, 21],
            l: 1,
            c: 5732402,
            t: 5
        }, {
            p: [368, 15, -183],
            s: [26, 27, 28],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [392, 11, -194],
            s: [25, 26, 25],
            l: 1,
            c: 5666099,
            t: 5
        }, {
            p: [316, 5, -203],
            s: [25, 26, 25],
            l: 1,
            c: 5666099,
            t: 5
        }, {
            p: [439, 8, 83],
            s: [29, 25, 29],
            l: 1,
            c: 5732402,
            t: 5
        }, {
            p: [212, 18, -319],
            s: [26, 28, 28],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [51, 31, -439],
            s: [38, 33, 28],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [111, 17, -407],
            s: [38, 37, 28],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [25, -1, -412],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [111, -1, -401],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [73, -1, -407],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-92, 17, -407],
            s: [38, 37, 28],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [-175, 27, -427],
            s: [38, 33, 28],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [-175, 27, -427],
            s: [38, 33, 28],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [-90, -1, -400],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-174, -1, -418],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-67, 22, -274],
            s: [26, 28, 28],
            l: 1,
            c: 5204775,
            t: 5
        }, {
            p: [-66, -1, -273],
            s: [4, 31, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-12, 50, -132],
            s: [11, 12, 1],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [-12, 49, -131],
            s: [14, 1, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-12, 62, -132],
            s: [14, 1, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-18, 50, -132],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-6, 50, -132],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-12, 50, -132],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-63, 10, -181],
            s: [25, 30, 25],
            l: 1,
            c: 6851648,
            t: 5
        }, {
            p: [32, 26, -126],
            s: [16, 13, 22],
            c: 12958048,
            t: 5,
            bo: 1
        }, {
            p: [125, -1, 2],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [128, 0, 89],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [88, -1, 82],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [142, -1, 128],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [-37, -1, -55],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [239, 3, -66],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, -.53, 0],
            c: 9671571,
            t: 5
        }, {
            p: [-38, 3, 157],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, -.53, 0],
            c: 9671571,
            t: 5
        }, {
            p: [-247, -1, -414],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-341, -1, -413],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-252, 15, -427],
            s: [51, 58, 28],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [-372, 15, -411],
            s: [48, 41, 35],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [-212, 10, -177],
            s: [26, 28, 28],
            l: 1,
            c: 5204775,
            t: 5
        }, {
            p: [-156, -1, 235],
            s: [4, 31, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-157, 15, 235],
            s: [26, 28, 28],
            l: 1,
            c: 7709238,
            t: 5
        }, {
            p: [165, -1, -213],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [203, -1, -186],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [124, -1, -188],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [285, -1, -185],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [250, -1, -202],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-125, -1, -105],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [-262, -1, -17],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [-245, -1, 190],
            s: [4, 2, 6],
            c: 7368816,
            t: 5
        }, {
            p: [392, -1, 40],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [265, -1, -65],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [109, -1, -146],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [213, -1, -318],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [213, -1, -248],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [55, -1, -407],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [24, 1, 395],
            s: [51, 15, 20],
            i: 7,
            l: 1,
            r: [3.14, -1.22, 3.14]
        }, {
            p: [-259, 17, 231],
            s: [26, 28, 28],
            l: 1,
            c: 7709238,
            t: 5
        }, {
            p: [-203, 18, 291],
            s: [26, 26, 28],
            l: 1,
            c: 6193707,
            t: 5
        }, {
            p: [-203, -1, 292],
            s: [4, 23, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-155, -75, 1251],
            s: [4, 341, 4],
            l: 1,
            c: 10658466,
            t: 5
        }, {
            p: [308, 85, 1120],
            s: [4, 189, 2],
            l: 1,
            c: 10658466,
            t: 5
        }, {
            p: [-102, -1, -180],
            s: [4, 31, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-64, -1, -180],
            s: [4, 31, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-285, -1, -78],
            s: [4, 2, 4],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [-39, -1, -141],
            s: [4, 2, 4],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [350, -1, 5],
            s: [4, 2, 4],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [427, -1, -136],
            s: [4, 2, 4],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [327, -1, 154],
            s: [4, 2, 4],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [200, -1, 121],
            s: [4, 2, 4],
            c: 7368816,
            t: 5
        }, {
            p: [-11, 0, -75],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [133, 0, 15],
            s: [1, 15, 3],
            l: 1,
            r: [0, 0, -.17],
            c: 7692103,
            t: 5
        }, {
            p: [133, 0, 11],
            s: [1, 15, 3],
            l: 1,
            r: [0, 0, -.17],
            c: 7692103,
            t: 5
        }, {
            p: [-47, 2, 22],
            s: [4, 36, 76],
            c: 5799880,
            t: 5
        }, {
            p: [-253, 16, -176],
            s: [26, 28, 28],
            l: 1,
            c: 5204775,
            t: 5
        }, {
            p: [-182, 0, -245],
            s: [121, 51, 83],
            c: 13619151,
            t: 5
        }, {
            p: [-209, -1, -176],
            s: [4, 31, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-183, 66, -58],
            s: [4, 1, 1],
            l: 1,
            c: 9012870,
            t: 5
        }, {
            p: [-185, 64, -58],
            s: [4, 2, 3],
            l: 1,
            c: 9012870,
            t: 5
        }, {
            p: [-185, 63, -58],
            s: [3, 1, 2],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [-182, 51, -245],
            s: [130, 3, 95],
            c: 7039851,
            t: 5
        }, {
            p: [-173, 31, -203],
            s: [11, 12, 1],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [-179, 31, -203],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-167, 31, -203],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-173, 31, -203],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-173, 30, -203],
            s: [14, 1, 4],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-173, 43, -203],
            s: [14, 1, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-392, 0, 747],
            s: [677, 23, 5],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-385, 21, 751],
            s: [691, 27, 53],
            l: 1,
            c: 4743462,
            t: 5
        }, {
            p: [-405, 0, -51],
            s: [123, 60, 120],
            c: 12951902,
            t: 5
        }, {
            p: [-403, 60, -51],
            s: [130, 2, 130],
            c: 5263440,
            t: 5
        }, {
            p: [-316, 15, 11],
            s: [26, 30, 28],
            l: 1,
            c: 7709238,
            t: 5
        }, {
            p: [-320, -1, 173],
            s: [4, 31, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-707, 19, 165],
            s: [44, 31, 1300],
            l: 1,
            c: 6060596,
            t: 5
        }, {
            p: [-694, 0, 183],
            s: [1, 23, 1208],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-343, 40, -83],
            s: [1, 12, 11],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [-344, 52, -83],
            s: [4, 1, 13],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-343, 39, -83],
            s: [4, 1, 14],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-344, 40, -89],
            s: [4, 12, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-344, 40, -77],
            s: [4, 12, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-344, 40, -83],
            s: [4, 12, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-315, 5, -45],
            s: [26, 30, 28],
            l: 1,
            c: 6786608,
            t: 5
        }, {
            p: [-371, -25, 16],
            s: [27, 105, 15],
            c: 6579300,
            t: 5
        }, {
            p: [-310, 16, -166],
            s: [26, 28, 28],
            l: 1,
            c: 5204775,
            t: 5
        }, {
            p: [-310, -1, -167],
            s: [4, 31, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-290, 11, -213],
            s: [26, 30, 28],
            l: 1,
            c: 7709238,
            t: 5
        }, {
            p: [-270, 16, -274],
            s: [26, 28, 28],
            l: 1,
            c: 5204775,
            t: 5
        }, {
            p: [-269, -1, -271],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-334, 16, -216],
            s: [26, 28, 28],
            l: 1,
            c: 5204775,
            t: 5
        }, {
            p: [-328, -1, -219],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-42, 0, 25],
            s: [6, 9, 78],
            c: 6984507,
            t: 5
        }, {
            p: [17, 2, -126],
            s: [14, 37, 22],
            c: 12958048,
            t: 5,
            bo: 1
        }, {
            p: [32, 2, -119],
            s: [16, 24, 2],
            pe: 1,
            c: 7692103,
            t: 5,
            bo: 1
        }, {
            p: [47, 2, -126],
            s: [14, 37, 22],
            c: 12958048,
            t: 5,
            bo: 1
        }, {
            p: [-255, -1, 230],
            s: [4, 23, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [275, -1, 183],
            s: [4, 28, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [32, 42, -132],
            s: [29, 18, 1],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [17, 42, -132],
            s: [1, 18, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [32, 42, -132],
            s: [1, 18, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [32, 60, -132],
            s: [31, 1, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [11, 42, -116],
            s: [2, 8, 2],
            l: 1,
            c: 5263440,
            t: 5
        }, {
            p: [53, 42, -116],
            s: [2, 8, 2],
            l: 1,
            c: 5263440,
            t: 5
        }, {
            p: [53, 42, -131],
            s: [2, 8, 2],
            l: 1,
            c: 5263440,
            t: 5
        }, {
            p: [11, 42, -131],
            s: [2, 8, 2],
            l: 1,
            c: 5263440,
            t: 5
        }, {
            p: [11, 42, -123],
            s: [1, 7, 1],
            l: 1,
            c: 5263440,
            t: 5
        }, {
            p: [53, 42, -124],
            s: [1, 7, 1],
            l: 1,
            c: 5263440,
            t: 5
        }, {
            p: [46, 42, -116],
            s: [1, 7, 1],
            l: 1,
            c: 5263440,
            t: 5
        }, {
            p: [18, 42, -116],
            s: [1, 7, 1],
            l: 1,
            c: 5263440,
            t: 5
        }, {
            p: [27, 42, -116],
            s: [1, 7, 1],
            l: 1,
            c: 5263440,
            t: 5
        }, {
            p: [36, 42, -116],
            s: [1, 7, 1],
            l: 1,
            c: 5263440,
            t: 5
        }, {
            p: [32, 49, -116],
            s: [42, 1, 2],
            l: 1,
            c: 5263440,
            t: 5
        }, {
            p: [53, 49, -124],
            s: [2, 1, 14],
            l: 1,
            c: 5263440,
            t: 5
        }, {
            p: [11, 49, -123],
            s: [2, 1, 14],
            l: 1,
            c: 5263440,
            t: 5
        }, {
            p: [-183, 36, -58],
            s: [4, 2, 20],
            c: 7368816,
            t: 5
        }, {
            p: [306, 36, 64],
            s: [4, 2, 20],
            c: 7368816,
            t: 5
        }, {
            p: [47, 42, -132],
            s: [1, 18, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [340, -1, -182],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [369, -1, -182],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [419, -1, -183],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [391, -1, -193],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-70, 2, 160],
            s: [3, 6, 6],
            l: 1,
            c: 12927811,
            t: 5
        }, {
            p: [-70, 7, 162],
            s: [1, 3, 1],
            l: 1,
            c: 8882055,
            t: 5
        }, {
            p: [98, 2, -212],
            s: [14, 100, 25],
            c: 7368816,
            t: 11
        }, {
            p: [-397, 16, -128],
            s: [26, 28, 28],
            l: 1,
            c: 5204775,
            t: 5
        }, {
            p: [-389, -1, -128],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-689, 15, -307],
            s: [48, 41, 58],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [-689, 17, -208],
            s: [48, 41, 41],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [-574, 17, -413],
            s: [48, 41, 35],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [-404, 17, -176],
            s: [26, 31, 28],
            l: 1,
            c: 5204775,
            t: 5
        }, {
            p: [-405, -1, -177],
            s: [4, 34, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-460, 15, -411],
            s: [36, 43, 35],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [369, 39, 263],
            s: [11, 12, 1],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [369, 38, 262],
            s: [14, 1, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [369, 51, 263],
            s: [14, 1, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [375, 39, 263],
            s: [1, 12, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [363, 39, 263],
            s: [1, 12, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [369, 39, 263],
            s: [1, 12, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-372, 0, 98],
            s: [104, 106, 116],
            l: 1,
            c: 10658466,
            t: 5
        }, {
            p: [-372, 105, 98],
            s: [115, 3, 126],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [-366, 17, 737],
            s: [48, 41, 41],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [-489, 17, 737],
            s: [66, 36, 41],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [-205, 17, 737],
            s: [66, 36, 41],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [-624, 17, 737],
            s: [66, 39, 41],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [-689, 17, 202],
            s: [48, 41, 41],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [-689, 17, 318],
            s: [48, 41, 41],
            l: 1,
            c: 5665581,
            t: 5
        }, {
            p: [-306, 23, 205],
            s: [26, 26, 28],
            l: 1,
            c: 6193707,
            t: 5
        }, {
            p: [-306, -1, 205],
            s: [4, 31, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [-290, 12, 243],
            s: [26, 28, 28],
            l: 1,
            c: 8695624,
            t: 5
        }, {
            p: [-288, -1, 249],
            s: [4, 23, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [126, 0, 60],
            s: [2, 37, 2],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [126, 0, 98],
            s: [2, 37, 2],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [-161, -1, 205],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [-290, -1, -49],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [238, -1, -156],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [182, -1, 159],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [296, -1, 159],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [1009, 10, 134],
            s: [65, 76, 76],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [995, 21, -386],
            s: [65, 53, 76],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [555, 21, -559],
            s: [137, 54, 76],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [924, 10, 606],
            s: [74, 74, 87],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [-289, -7, 309],
            s: [82, 106, 86],
            l: 1,
            c: 10658466,
            t: 5
        }, {
            p: [849, -8, -520],
            s: [65, 84, 76],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [661, -4, 165],
            s: [123, 64, 120],
            l: 1,
            c: 12951902,
            t: 5
        }, {
            p: [661, 60, 165],
            s: [132, 4, 131],
            l: 1,
            c: 6381921,
            t: 5
        }, {
            p: [-289, 99, 309],
            s: [89, 4, 93],
            l: 1,
            c: 7895160,
            t: 5
        }, {
            p: [-345, 18, 247],
            s: [26, 26, 28],
            l: 1,
            c: 6193707,
            t: 5
        }, {
            p: [-431, 14, 166],
            s: [26, 26, 28],
            l: 1,
            c: 6193707,
            t: 5
        }, {
            p: [-269, 74, 266],
            s: [11, 12, 1],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [-269, 73, 265],
            s: [14, 1, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-269, 86, 266],
            s: [14, 1, 3],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-263, 74, 266],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-275, 74, 266],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-269, 74, 266],
            s: [1, 12, 2],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [995, 17, -153],
            s: [65, 68, 47],
            l: 1,
            c: 6324784,
            t: 5
        }, {
            p: [-136, 3, -80],
            s: [7, 32, 23],
            c: 8355711,
            t: 5
        }, {
            p: [-130, 3, -80],
            s: [7, 29, 23],
            c: 8355711,
            t: 5
        }, {
            p: [-124, 3, -80],
            s: [7, 26, 23],
            c: 8355711,
            t: 5
        }, {
            p: [-118, 3, -80],
            s: [7, 23, 23],
            c: 8355711,
            t: 5
        }, {
            p: [-112, 3, -80],
            s: [7, 20, 23],
            c: 8355711,
            t: 5
        }, {
            p: [-106, 3, -80],
            s: [7, 17, 23],
            c: 8355711,
            t: 5
        }, {
            p: [-100, 3, -80],
            s: [7, 14, 23],
            c: 8355711,
            t: 5
        }, {
            p: [-94, 3, -80],
            s: [7, 11, 23],
            c: 8355711,
            t: 5
        }, {
            p: [-88, 3, -80],
            s: [7, 8, 23],
            c: 8355711,
            t: 5
        }, {
            p: [-82, 3, -80],
            s: [7, 5, 23],
            c: 8355711,
            t: 5
        }, {
            p: [-76, 2, -80],
            s: [7, 3, 23],
            c: 8355711,
            t: 5
        }, {
            p: [-102, 2, -80],
            s: [72, 36, 24],
            i: 9,
            v: 1,
            t: 5,
            d: 2
        }, {
            p: [-125, 3, 54],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, 1.04, 0],
            c: 11184810,
            t: 5
        }, {
            p: [251, 3, 98],
            s: [7, 32, 23],
            c: 8355711,
            t: 5
        }, {
            p: [244, 3, 98],
            s: [7, 29, 23],
            c: 8355711,
            t: 5
        }, {
            p: [237, 3, 98],
            s: [7, 26, 23],
            c: 8355711,
            t: 5
        }, {
            p: [230, 3, 98],
            s: [7, 23, 23],
            c: 8355711,
            t: 5
        }, {
            p: [223, 3, 98],
            s: [7, 20, 23],
            c: 8355711,
            t: 5
        }, {
            p: [216, 3, 98],
            s: [7, 17, 23],
            c: 8355711,
            t: 5
        }, {
            p: [209, 3, 98],
            s: [7, 14, 23],
            c: 8355711,
            t: 5
        }, {
            p: [202, 3, 98],
            s: [7, 11, 23],
            c: 8355711,
            t: 5
        }, {
            p: [195, 3, 98],
            s: [7, 8, 23],
            c: 8355711,
            t: 5
        }, {
            p: [188, 3, 98],
            s: [7, 5, 23],
            c: 8355711,
            t: 5
        }, {
            p: [181, 2, 98],
            s: [7, 3, 23],
            c: 8355711,
            t: 5
        }, {
            p: [212, 2, 98],
            s: [84, 36, 24],
            i: 9,
            v: 1,
            t: 5
        }, {
            p: [-320, 72, 67],
            s: [1, 20, 23],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [-320, 72, 125],
            s: [1, 20, 23],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [-319, 71, 67],
            s: [3, 1, 27],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-320, 92, 67],
            s: [2, 1, 27],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-320, 72, 55],
            s: [2, 20, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-320, 72, 79],
            s: [2, 20, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-320, 72, 67],
            s: [2, 20, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-319, 71, 125],
            s: [3, 1, 27],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-320, 92, 125],
            s: [2, 1, 27],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-320, 72, 137],
            s: [2, 20, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-320, 72, 113],
            s: [2, 20, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [-320, 72, 125],
            s: [2, 20, 1],
            l: 1,
            c: 6250335,
            t: 5
        }, {
            p: [137, -1, -156],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [119, 0, -15],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-47, -1, 357],
            s: [38, 24, 2],
            c: 7692103,
            t: 10,
            bo: 1
        }, {
            p: [116, -1, 275],
            s: [41, 24, 2],
            pe: 1,
            c: 7692103,
            t: 10,
            bo: 1
        }, {
            p: [70, 2, 357],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, -1.23, 0],
            c: 10329501,
            t: 5
        }, {
            p: [-12, 2, 249],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, -.53, 0],
            c: 10329501,
            t: 5
        }, {
            p: [-49, -1, 265],
            s: [21, 24, 2],
            c: 7692103,
            t: 10,
            bo: 1
        }, {
            p: [-29, -1, 357],
            s: [4, 26, 4],
            c: 7692103,
            t: 5
        }, {
            p: [41, -1, 365],
            s: [3, 12, 1],
            l: 1,
            r: [.35, 0, 0],
            c: 13158600,
            t: 5
        }, {
            p: [58, 9, 369],
            s: [40, 3, 1],
            l: 1,
            c: 13158600,
            t: 5
        }, {
            p: [41, -1, 373],
            s: [3, 12, 1],
            l: 1,
            r: [-.35, 0, 0],
            c: 13158600,
            t: 5
        }, {
            p: [75, -1, 365],
            s: [3, 12, 1],
            l: 1,
            r: [.35, 0, 0],
            c: 13158600,
            t: 5
        }, {
            p: [75, -1, 373],
            s: [3, 12, 1],
            l: 1,
            r: [-.35, 0, 0],
            c: 13158600,
            t: 5
        }, {
            p: [3, 9, 369],
            s: [40, 3, 1],
            l: 1,
            c: 13158600,
            t: 5
        }, {
            p: [-14, -1, 365],
            s: [3, 12, 1],
            l: 1,
            r: [.35, 0, 0],
            c: 13158600,
            t: 5
        }, {
            p: [20, -1, 365],
            s: [3, 12, 1],
            l: 1,
            r: [.35, 0, 0],
            c: 13158600,
            t: 5
        }, {
            p: [-14, -1, 373],
            s: [3, 12, 1],
            l: 1,
            r: [-.35, 0, 0],
            c: 13158600,
            t: 5
        }, {
            p: [20, -1, 373],
            s: [3, 12, 1],
            l: 1,
            r: [-.35, 0, 0],
            c: 13158600,
            t: 5
        }, {
            p: [58, 1, 382],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-31, 0, 369],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-5, 1, 377],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [47, 1, 378],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [34, 1, 368],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [89, 0, 373],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [73, 2, 406],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [3.14, -1.39, 3.14],
            c: 10329501,
            t: 5
        }, {
            p: [75, 2, 282],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, -1.4, 0],
            c: 10329501,
            t: 5
        }, {
            p: [90, 0, 266],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [100, -1, 348],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [164, -1, 342],
            s: [2, 27, 48],
            pe: 1,
            c: 7692103,
            t: 10,
            bo: 1
        }, {
            p: [133, 0, 292],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [24, -1, 428],
            s: [168, 13, 119],
            v: 1,
            t: 5,
            bo: 1
        }, {
            p: [-47, -1, 363],
            s: [37, 13, 14],
            v: 1,
            t: 5,
            bo: 1
        }, {
            p: [-20, 1, 372],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [188, -1, 339],
            s: [4, 28, 4],
            l: 1,
            c: 6574655,
            t: 5
        }, {
            p: [189, 22, 341],
            s: [26, 28, 28],
            l: 1,
            c: 5204775,
            t: 5
        }, {
            p: [221, -1, 351],
            s: [1, 7, 1],
            l: 1,
            c: 6984507,
            t: 5
        }, {
            p: [289, -1, 366],
            s: [1, 7, 1],
            l: 1,
            c: 6984507,
            t: 5
        }, {
            p: [113, 3, -37],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, -.53, 0],
            c: 9671571,
            t: 5
        }, {
            p: [167, 3, -75],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, -.53, 0],
            c: 9671571,
            t: 5
        }, {
            p: [164, 39, -13],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, -.53, 0],
            c: 9671571,
            t: 5
        }, {
            p: [249, 39, 47],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, -.53, 0],
            c: 9671571,
            t: 5
        }, {
            p: [-142, 2, 25],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-175, 2, -28],
            s: [2, 4, 2],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [-175, 4, -28],
            s: [1, 4, 1],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [243, 2, 8],
            s: [1, 17, 3],
            l: 1,
            r: [0, 0, .17],
            c: 7692103,
            t: 5
        }, {
            p: [-129, 2, 12],
            s: [1, 17, 3],
            l: 1,
            r: [0, 0, .17],
            c: 7692103,
            t: 5
        }, {
            p: [-139, 2, 74],
            s: [1, 17, 3],
            l: 1,
            r: [0, 0, .17],
            c: 7692103,
            t: 5
        }, {
            p: [-139, 2, 81],
            s: [1, 17, 3],
            l: 1,
            r: [0, 0, .17],
            c: 7692103,
            t: 5
        }, {
            p: [158, 38, -22],
            s: [2, 4, 2],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [158, 40, -22],
            s: [1, 4, 1],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [202, 38, 77],
            s: [4, 22, 2],
            l: 1,
            r: [.17, 0, 0],
            c: 7692103,
            t: 5
        }, {
            p: [209, 38, 77],
            s: [4, 22, 2],
            l: 1,
            r: [.17, 0, 0],
            c: 7692103,
            t: 5
        }, {
            p: [145, 2, -22],
            s: [2, 4, 2],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [145, 4, -22],
            s: [1, 4, 1],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [188, 8, 88],
            s: [2, 4, 2],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [188, 10, 88],
            s: [1, 4, 1],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [-93, 14, -70],
            s: [2, 4, 2],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [-93, 16, -70],
            s: [1, 4, 1],
            l: 1,
            pe: 1,
            c: 5211204,
            t: 5
        }, {
            p: [145, 39, 105],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [0, 1.39, 0],
            c: 9671571,
            t: 5
        }, {
            p: [168, 38, 106],
            s: [4, 22, 2],
            l: 1,
            r: [.17, 0, 0],
            c: 7692103,
            t: 5
        }, {
            p: [35, 1, 304],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [23, 1, 304],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [29, 13, 304],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-92, 32, -2],
            s: [7, 2, 7],
            c: 9012870,
            t: 5
        }, {
            p: [-92, 34, -2],
            s: [3, 2, 3],
            c: 9012870,
            t: 5
        }, {
            p: [-92, 31, -2],
            s: [3, 1, 3],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [-92, 74, -2],
            s: [3, 2, 3],
            c: 9012870,
            t: 5
        }, {
            p: [-92, 72, -2],
            s: [7, 2, 7],
            c: 9012870,
            t: 5
        }, {
            p: [-92, 71, -2],
            s: [3, 1, 3],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [183, 74, 39],
            s: [3, 2, 3],
            c: 9012870,
            t: 5
        }, {
            p: [183, 72, 39],
            s: [7, 2, 7],
            c: 9012870,
            t: 5
        }, {
            p: [183, 71, 39],
            s: [3, 1, 3],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [183, 34, 39],
            s: [3, 2, 3],
            c: 9012870,
            t: 5
        }, {
            p: [272, 32, 39],
            s: [7, 2, 7],
            c: 9012870,
            t: 5
        }, {
            p: [183, 31, 39],
            s: [3, 1, 3],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [272, 34, 39],
            s: [3, 2, 3],
            c: 9012870,
            t: 5
        }, {
            p: [183, 32, 39],
            s: [7, 2, 7],
            c: 9012870,
            t: 5
        }, {
            p: [272, 31, 39],
            s: [3, 1, 3],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [294, 2, 23],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [288, 3, 9],
            s: [4, 0, 5],
            i: 4,
            l: 1,
            r: [-3.14, 1.4, -3.14],
            c: 9671571,
            t: 5
        }, {
            p: [-163, 32, -2],
            s: [7, 2, 7],
            c: 9012870,
            t: 5
        }, {
            p: [-163, 34, -2],
            s: [3, 2, 3],
            c: 9012870,
            t: 5
        }, {
            p: [-163, 31, -2],
            s: [3, 1, 3],
            l: 1,
            c: 0,
            e: 16767098,
            t: 5
        }, {
            p: [28, 1, 305],
            s: [72, 50, 63],
            i: 14,
            l: 1
        }, {
            p: [-89, 38, -8],
            s: [61, 38, 65],
            i: 14,
            l: 1
        }, {
            p: [184, 2, 37],
            s: [61, 33, 59],
            i: 14,
            l: 1
        }, {
            p: [367, 0, 32],
            s: [24, 36, 24],
            i: 23,
            l: 1,
            tm: 0
        }, {
            p: [-215, 0, 35],
            s: [24, 36, 24],
            i: 23,
            l: 1,
            tm: "1"
        }, {
            p: [-100, 14, 70],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-100, 2, 70],
            s: [12, 12, 12],
            i: 8
        }, {
            p: [-35, -1, -18],
            s: [3, 2, 3],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [-35, -1, -28],
            s: [3, 2, 3],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [-35, -1, -23],
            s: [4, 2, 5],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [-29, -1, -28],
            s: [5, 2, 4],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [-29, -1, -18],
            s: [5, 2, 4],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [-29, -1, -23],
            s: [3, 2, 3],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [127, -1, 39],
            s: [4, 2, 3],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [127, -1, 49],
            s: [4, 2, 3],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [127, -1, 44],
            s: [4, 2, 5],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [109, -1, 40],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [121, -1, 48],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [115, -1, 44],
            s: [4, 2, 5],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [103, -1, 44],
            s: [4, 2, 5],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [121, -1, 40],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [109, -1, 48],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [115, -1, 49],
            s: [4, 2, 3],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [115, -1, 39],
            s: [4, 2, 3],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [97, -1, 48],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [97, -1, 40],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [91, -1, 44],
            s: [4, 2, 5],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [85, -1, 40],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [85, -1, 48],
            s: [4, 2, 6],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [103, -1, 49],
            s: [4, 2, 3],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [91, -1, 49],
            s: [4, 2, 3],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [91, -1, 39],
            s: [4, 2, 3],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [103, -1, 39],
            s: [4, 2, 3],
            l: 1,
            c: 7368816,
            t: 5
        }, {
            p: [-251, -1, 141],
            s: [4, 26, 4],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [-251, -1, 118],
            s: [4, 26, 4],
            pe: 1,
            c: 7692103,
            t: 5
        }, {
            p: [220, 82, 43],
            s: [178, 4, 152],
            r: [.09, 0, 0],
            c: 5263440,
            t: 5,
            bo: 1
        }, {
            p: [302, 84, -1],
            s: [4, 3, 46],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [302, 87, -13],
            s: [4, 3, 22],
            c: 12927811,
            t: 5
        }, {
            p: [302, 38, 91],
            s: [4, 38, 38],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [302, 76, 91],
            s: [4, 3, 38],
            c: 12927811,
            t: 5
        }, {
            p: [138, 66, 81],
            s: [4, 15, 34],
            c: 12927811,
            t: 5,
            bo: 1
        }, {
            p: [138, 87, -14],
            s: [4, 1, 4],
            c: 12927811,
            t: 5
        }, {
            p: [56, 1, 115],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [56, 6, 111],
            s: [1, 3, 1],
            c: 8882055,
            t: 5
        }, {
            p: [56, 1, 109],
            s: [3, 6, 6],
            c: 12927811,
            t: 5
        }, {
            p: [40, 10, 48],
            s: [24, 2, 100],
            pe: 1,
            c: 2899797,
            t: 5
        }, {
            p: [40, 37, 48],
            s: [28, 2, 100],
            pe: 1,
            c: "#2c3f55",
            t: 5
        }, {
            p: [40, 3, 38],
            s: [27, 4, 4],
            c: 8551805,
            t: 5
        }, {
            p: [40, 3, 22],
            s: [27, 4, 4],
            c: 8551805,
            t: 5
        }, {
            p: [29, 1, 22],
            s: [4, 8, 8],
            c: 1447446,
            t: 5
        }, {
            p: [29, 1, 38],
            s: [4, 8, 8],
            c: 1447446,
            t: 5
        }, {
            p: [34, 1, 38],
            s: [4, 8, 8],
            c: 1447446,
            t: 5
        }, {
            p: [34, 1, 22],
            s: [4, 8, 8],
            c: 1447446,
            t: 5
        }, {
            p: [51, 1, 38],
            s: [4, 8, 8],
            c: 1447446,
            t: 5
        }, {
            p: [46, 1, 38],
            s: [4, 8, 8],
            c: 1447446,
            t: 5
        }, {
            p: [51, 1, 22],
            s: [4, 8, 8],
            c: 1447446,
            t: 5
        }, {
            p: [46, 1, 22],
            s: [4, 8, 8],
            c: 1447446,
            t: 5
        }, {
            p: [40, 12, 97],
            s: [24, 25, 2],
            pe: 1,
            c: "#2c3f55",
            t: 5
        }, {
            p: [40, 6, 59],
            s: [5, 4, 85],
            c: 8551805,
            t: 5
        }, {
            p: [40, 6, -1],
            s: [24, 4, 3],
            c: 8551805,
            t: 5
        }, {
            p: [47, 12, -2],
            s: [12, 25, 2],
            pe: 1,
            c: "#6b6b6b",
            t: 5
        }, {
            p: [26, 12, 3],
            s: [2, 25, 12],
            c: "#6b6b6b",
            t: 5
        }, {
            p: [40, 5, -1],
            s: [27, 1, 4],
            c: 8551805,
            t: 5
        }, {
            p: [40, 3, 110],
            s: [27, 4, 4],
            c: 8551805,
            t: 5
        }, {
            p: [51, 1, 110],
            s: [4, 8, 8],
            c: 1447446,
            t: 5
        }, {
            p: [29, 1, 110],
            s: [4, 8, 8],
            c: 1447446,
            t: 5
        }, {
            p: [50, 7, -2],
            s: [2, 2, 2],
            l: 1,
            c: 16730880,
            e: 16711680,
            o: .8,
            t: 5
        }, {
            p: [30, 7, -2],
            s: [2, 2, 2],
            l: 1,
            c: "#ff4b00",
            e: 16711680,
            o: .8,
            t: 5
        }, {
            p: [40, 5, 102],
            s: [24, 28, 4],
            c: "#bbbbbb",
            t: 5
        }, {
            p: [40, 5, 118],
            s: [24, 24, 4],
            c: "#bbbbbb",
            t: 5
        }, {
            p: [40, 6, 111],
            s: [17, 6, 14],
            c: "#595959",
            t: 5
        }, {
            p: [40, 5, 121],
            s: [25, 6, 3],
            c: "#5c5c5c",
            t: 5
        }, {
            p: [40, 17, 122],
            s: [22, 10, 1],
            l: 1,
            c: "#22272d",
            t: 5
        }, {
            p: [40, 11, 121],
            s: [24, 6, 2],
            c: "#bbbbbb",
            t: 5
        }, {
            p: [40, 17, 121],
            s: [24, 11, 2],
            l: 1,
            c: "#bbbbbb",
            t: 5
        }, {
            p: [40, 17, 121],
            s: [24, 11, 2],
            v: 1,
            c: "#213041",
            t: 5
        }, {
            p: [50, 12, 122],
            s: [2, 2, 2],
            l: 1,
            e: 16765184,
            o: .8,
            t: 5
        }, {
            p: [30, 12, 122],
            s: [2, 2, 2],
            l: 1,
            e: 16765184,
            o: .8,
            t: 5
        }, {
            p: [40, 12, 122],
            s: [14, 4, 2],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [40, 20, 118],
            s: [28, 4, 1],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [40, 3, 86],
            s: [22, 6, 22],
            c: 8551805,
            t: 5
        }, {
            p: [30, 12, 100],
            s: [1, 25, 1],
            c: "#666666",
            e: 1579032,
            t: 5
        }, {
            p: [50, 12, 100],
            s: [1, 25, 1],
            c: "#666666",
            e: 1579032,
            t: 5
        }, {
            p: [40, 8, 49],
            s: [28, 2, 98],
            pe: 1,
            v: 1,
            c: 2899797,
            t: 5
        }, {
            p: [40, 20, 113],
            s: [25, 8, 8],
            c: "#22272d",
            t: 5
        }, {
            p: [40, 12, 111],
            s: [24, 18, 14],
            c: "#bbbbbb",
            t: 5
        }, {
            p: [45, 12, 46],
            s: [6, 2, 92],
            l: 1,
            c: 7035206,
            t: 2
        }, {
            p: [47, 12, -3],
            s: [4, 25, 2],
            i: 3,
            t: 2,
            d: 3
        }, {
            p: [11, 1, 22],
            s: [4, 7, 4],
            i: 16,
            l: 1
        }, {
            p: [56, 1, -12],
            s: [4, 7, 4],
            i: 16,
            l: 1
        }, {
            p: [23, 1, -12],
            s: [4, 7, 4],
            i: 16,
            l: 1
        }, {
            p: [35, 12, 87],
            s: [12, 12, 12],
            i: 8
        }, {
            p: [27, 10, 78],
            s: [2, 27, 40],
            pe: 1,
            c: "#2c3f55",
            t: 5
        }, {
            p: [27, 10, 19],
            s: [2, 27, 42],
            pe: 1,
            c: "#2c3f55",
            t: 5
        }, {
            p: [53, 10, 89],
            s: [2, 27, 18],
            pe: 1,
            c: "#2c3f55",
            t: 5
        }, {
            p: [53, 10, 30],
            s: [2, 27, 64],
            pe: 1,
            c: "#2c3f55",
            t: 5
        }, {
            p: [53, 32, 71],
            s: [1, 5, 18],
            c: "#ffffff",
            t: 10
        }, {
            p: [27, 32, 49],
            s: [1, 5, 18],
            c: "#ffffff",
            t: 10
        }, {
            p: [53, 10, 71],
            s: [2, 2, 18],
            c: "#2c3f55",
            t: 5
        }, {
            p: [27, 10, 49],
            s: [2, 2, 18],
            c: "#2c3f55",
            t: 5
        }, {
            p: [18, 1, 75],
            s: [6, 2, 92],
            c: 8678483,
            t: 2
        }, {
            p: [11, 1, 74],
            s: [6, 2, 92],
            c: 7692103,
            t: 2
        }, {
            p: [4, 1, 76],
            s: [6, 2, 92],
            c: 5259054,
            t: 2
        }, {
            p: [6, 3, 75],
            s: [6, 2, 92],
            c: 7692103,
            t: 2
        }, {
            p: [14, 3, 76],
            s: [6, 2, 92],
            c: 7692103,
            t: 2
        }, {
            p: [10, 5, 76],
            s: [6, 2, 92],
            c: 7035206,
            t: 2
        }, {
            p: [11, 1, 125],
            s: [4, 7, 4],
            i: 16,
            l: 1
        }, {
            p: [-34, 0, 61],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-37, 0, -3],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-26, 0, 37],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-26, 0, -44],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-39, 0, -96],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-14, 0, -105],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-5, 0, -102],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [6, 0, -127],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [36, 0, -101],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [60, 0, -124],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [90, 0, -128],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [98, 0, -135],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [106, 0, -118],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [106, 0, -84],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [85, 0, -29],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [131, -1, -22],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [84, 0, 12],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [131, 0, 27],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [83, 0, 59],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [86, 0, 119],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [158, 0, -153],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [90, 0, 166],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [173, 0, 91],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [87, 0, 238],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-27, 0, 237],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-33, 0, 202],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-31, 0, 149],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-25, 0, 122],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-69, 0, 174],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-96, 0, 201],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-67, 0, 201],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-170, 0, 201],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-147, 0, 174],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-216, 0, 180],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-216, 0, 172],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-247, 0, 198],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-247, 0, 118],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-180, 0, 68],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-151, 0, 69],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-151, 0, 125],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-243, 0, 50],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-241, 0, 79],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-215, 0, -5],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-184, 0, -46],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-257, 0, -12],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-254, 0, -128],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-218, 0, -88],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-196, 0, -147],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-204, 0, -143],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-134, 0, -149],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-99, 0, -113],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-158, 0, -100],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-35, 0, -153],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-65, 0, -118],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-28, 0, 308],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [103, 0, 279],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [109, 0, 302],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [85, 0, 338],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [94, 0, 362],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [144, 0, 353],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [160, 0, 323],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-26, -1, 381],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-33, -1, 413],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [84, -1, 414],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [133, 0, 69],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [132, 0, 112],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [151, 0, 131],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [189, 0, 132],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [229, 0, 156],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [271, 0, 118],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [286, 0, 156],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [334, 0, 156],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [308, 0, 114],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [308, 0, 59],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [349, 0, 38],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [371, 0, 135],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [395, 0, 116],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [391, 0, 22],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [396, 0, -1],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [307, 0, -18],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [296, 0, -34],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [260, 0, -35],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [260, 0, -72],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [394, 0, -43],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [404, 0, -49],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [429, 0, -60],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [405, 0, -153],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [292, 0, -154],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [206, 0, -125],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [177, 0, -154],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [177, 0, -147],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-10, 0, -108],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [64, 0, -126],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-287, 0, -54],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [108, 0, 118],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [99, 0, 152],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [124, 0, 151],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [110, 0, 144],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [90, 0, 179],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [88, 0, 264],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-31, 0, 265],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-32, 0, 255],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-33, 0, 223],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [105, 0, 82],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [109, 0, 10],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [95, 0, -62],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [74, 0, -113],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [96, 0, -103],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [136, 0, -148],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [98, 0, -155],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [170, 0, -126],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [211, 0, -154],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [243, 0, -126],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [262, 0, -152],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [308, 0, -118],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [287, 0, -89],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [325, 0, -36],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [333, 0, -105],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [307, 0, -64],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [359, 0, -76],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [364, 0, -30],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [376, 0, 55],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [358, 0, 113],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [386, 0, 155],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [363, 0, -118],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [378, 0, -148],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [423, 0, -148],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [429, 0, -105],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [405, 0, -98],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [392, 0, -121],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [391, 0, -99],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [391, 0, -79],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [340, 0, 0],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [339, 0, 55],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [338, 0, 86],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-131, 0, 200],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-213, 0, 200],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-171, 0, 172],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-202, 0, 131],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-180, 0, 107],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-211, 0, 70],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-215, 0, 18],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-284, 0, 102],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-260, 0, 102],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-288, 0, 142],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-289, 0, 191],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-264, 0, 202],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-254, 0, 179],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-258, 0, 153],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-183, 2, 46],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-185, 0, 6],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-256, 0, 15],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-255, 0, 38],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-288, 0, 36],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-287, 0, 1],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-287, 0, -30],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-258, 0, -81],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-234, 0, -43],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-208, 0, -44],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-197, 0, -88],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-268, 0, -113],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-278, 0, -139],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-165, 0, -124],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-91, 0, -134],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-47, 0, 350],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-113, 85, -16],
            s: [137, 10, 159],
            i: 12,
            l: 1
        }, {
            p: [219, 85, 43],
            s: [170, 10, 146],
            i: 12,
            l: 1
        }, {
            p: [208, 50, -78],
            s: [93, 10, 87],
            i: 12,
            l: 1
        }, {
            p: [-105, 50, 119],
            s: [87, 10, 99],
            i: 12,
            l: 1
        }]
    }, {
        name: "Sandstorm",
        ambInd: 3,
        modURL: "",
        terrainSeed: "",
        terrainWidth: 2048,
        terrainHeight: 2048,
        terrainMntMlt: 1,
        terrainMntCol: "#a0a0a0",
        terrainGrsCol: "#4a6904",
        terrainDrtCol: "#8c6835",
        skyDome: !1,
        skyDomeCol0: "#ffffff",
        skyDomeCol1: "#7196a2",
        skyDomeCol2: "#184452",
        zone: !1,
        zoneSize: 500,
        zoneSpeed: 1,
        zoneCol0: "#c542d9",
        zoneCol1: "#c542d9",
        zoneCol2: "#c542d9",
        sizeMlt: 2,
        shadowR: 1024,
        ambient: 9937064,
        light: 15923452,
        sky: 11180929,
        fog: 10654834,
        fogD: 633.4396002067896,
        dthY: -100,
        camPos: [-124, 62, -269],
        spawns: [[0, 13, -3, 0], [-77, 33, -347, 0, 1], [278, 33, 122, 0, 2], [-105, 48, 86, 0, 1], [241, 33, -322, 0, 1], [-42, 48, 48, 0], [-39, 33, -210, 0, 3]],
        ambO: .7,
        ambS: 5,
        objects: [{
            p: [-5, 12, 0],
            s: [94, 1, 114],
            t: 1
        }, {
            p: [-67, 12, 0],
            s: [30, 1, 44],
            t: 1
        }, {
            p: [-178, 32, 0],
            s: [122, 1, 150],
            t: 1
        }, {
            p: [-163, 14, 157],
            s: [154, 34, 56],
            t: 1
        }, {
            p: [-28, 9, 104],
            s: [312, 39, 50],
            t: 1
        }, {
            p: [1, 47, -26],
            s: [104, 1, 210],
            t: 1
        }, {
            p: [194, -4, 56],
            s: [216, 37, 221],
            t: 1
        }, {
            p: [-175, 19, -138],
            s: [53, 25, 62],
            t: 1
        }, {
            p: [64, 13, 0],
            s: [44, 20, 46],
            i: 9,
            t: 1
        }, {
            p: [-209, 33, 101],
            s: [38, 15, 56],
            i: 9,
            t: 1,
            d: 1
        }, {
            p: [-175, 33, -91],
            s: [53, 11, 32],
            i: 9,
            t: 1,
            d: 3
        }, {
            p: [-175, 33, -185],
            s: [53, 11, 32],
            i: 9,
            t: 1,
            d: 1
        }, {
            p: [80, 33, -106],
            s: [54, 15, 49],
            i: 9,
            t: 1,
            d: 2
        }, {
            p: [110, 33, 54],
            s: [36, 15, 50],
            i: 9,
            t: 1,
            d: 1
        }, {
            p: [-138, 24, 76],
            s: [104, 31, 6],
            c: 12497300,
            e: 3746078
        }, {
            p: [-187, 24, 104],
            s: [6, 31, 50],
            c: 12497300,
            e: 3746078
        }, {
            p: [159, 32, 103],
            s: [38, 1, 55],
            t: 1
        }, {
            p: [-50, 16, -219],
            s: [6, 22, 37],
            c: 12497300,
            e: 3746078
        }, {
            p: [-50, 14, -246],
            s: [6, 38, 7],
            c: 12497300,
            e: 3746078
        }, {
            p: [-50, 38, -207],
            s: [6, 12, 14],
            c: 12497300,
            e: 3746078
        }, {
            p: [-50, 38, -217],
            s: [6, 4, 6],
            c: 12497300,
            e: 3746078
        }, {
            p: [220, 33, 125],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-103, 32, -128],
            s: [96, 2, 111],
            l: 1,
            c: 4408131,
            t: 2
        }, {
            p: [-103, 109, -129],
            s: [100, 5, 117],
            c: 4408131,
            t: 2,
            bo: 1
        }, {
            p: [61, 87, -245],
            s: [87, 4, 77],
            c: 4868682,
            t: 2,
            bo: 1
        }, {
            p: [20, 87, -167],
            s: [169, 4, 79],
            c: 4868682,
            t: 2,
            bo: 1
        }, {
            p: [61, 30, -242],
            s: [82, 4, 79],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [20, 30, -166],
            s: [164, 4, 73],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [20, 32, -166],
            s: [162, 55, 71],
            c: 8349264,
            e: 2432793,
            bo: 1
        }, {
            p: [42, 32, -284],
            s: [15, 72, 7],
            c: 3091496,
            e: 3616548,
            bo: 1
        }, {
            p: [-33, 51, -202],
            s: [15, 1, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-40, 34, -202],
            s: [1, 17, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-26, 34, -202],
            s: [1, 17, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [42, 33, -285],
            s: [17, 1, 7],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-33, 34, -201],
            s: [13, 17, 2],
            l: 1,
            c: 8221547,
            t: 2
        }, {
            p: [-147, 114, -120],
            s: [35, 3, 15],
            c: 5263440,
            t: 2,
            bo: 1
        }, {
            p: [115, 73, -12],
            s: [2, 42, 2],
            l: 1,
            c: 12303291,
            t: 2
        }, {
            p: [-133, 33, -195],
            s: [36, 1, 19],
            l: 1,
            c: 4408131,
            t: 2
        }, {
            p: [-159, 40, -308],
            s: [87, 1, 57],
            t: 1
        }, {
            p: [-187, 33, -268],
            s: [31, 8, 23],
            i: 9,
            t: 1,
            d: 3
        }, {
            p: [-141, 40, -270],
            s: [51, 1, 19],
            t: 1
        }, {
            p: [-169, 17, -270],
            s: [5, 29, 19],
            c: 12497300,
            e: 3746078
        }, {
            p: [-141, 17, -258],
            s: [61, 29, 5],
            c: 12497300,
            e: 3746078
        }, {
            p: [-113, 17, -299],
            s: [5, 29, 77],
            c: 12497300,
            e: 3746078
        }, {
            p: [-103, 17, -129],
            s: [94, 92, 111],
            c: 10191214,
            e: 4077098,
            bo: 1
        }, {
            p: [-97, 33, -349],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-197, 44, -155],
            s: [1, 19, 6],
            l: 1,
            r: [0, 0, .17],
            c: 8684676,
            t: 2
        }, {
            p: [-229, 32, -162],
            s: [56, 45, 111],
            c: 10652266,
            e: 2432532,
            bo: 1
        }, {
            p: [-229, 77, -162],
            s: [61, 3, 115],
            c: 4868682,
            t: 2,
            bo: 1
        }, {
            p: [-248, 32, -309],
            s: [94, 94, 111],
            c: 7691850,
            e: 3222046,
            bo: 1
        }, {
            p: [-248, 126, -309],
            s: [102, 5, 117],
            c: 5723991,
            t: 2,
            bo: 1
        }, {
            p: [-241, 32, -237],
            s: [56, 33, 111],
            c: 7038557,
            e: 5390122,
            bo: 1
        }, {
            p: [-241, 65, -237],
            s: [62, 3, 111],
            c: 4868682,
            t: 2,
            bo: 1
        }, {
            p: [-241, 31, -236],
            s: [58, 3, 35],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-229, 31, -162],
            s: [58, 3, 113],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-250, 29, -309],
            s: [100, 5, 113],
            l: 1,
            c: 5723991,
            t: 2
        }, {
            p: [-204, 102, -267],
            s: [7, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-340, 32, -199],
            s: [91, 73, 116],
            c: 10519402,
            e: 7892309
        }, {
            p: [-340, 105, -199],
            s: [97, 6, 122],
            c: 6381921,
            t: 2
        }, {
            p: [-197, 44, -163],
            s: [1, 19, 6],
            l: 1,
            r: [0, 0, .17],
            c: 8684676,
            t: 2
        }, {
            p: [-63, 32, -411],
            s: [81, 85, 111],
            c: 16765069,
            e: 1973790,
            bo: 1
        }, {
            p: [-170, 97, -392],
            s: [140, 6, 121],
            c: 4408131,
            t: 2,
            bo: 1
        }, {
            p: [-110, 82, -335],
            s: [4, 4, 16],
            l: 1,
            pe: 1,
            c: 7039851,
            t: 2
        }, {
            p: [-170, 32, -392],
            s: [133, 65, 112],
            c: 9860174,
            e: 3749164,
            bo: 1
        }, {
            p: [-63, 117, -411],
            s: [87, 6, 119],
            c: 5066061,
            t: 2,
            bo: 1
        }, {
            p: [-63, 154, -411],
            s: [58, 5, 56],
            c: 4868682,
            t: 2
        }, {
            p: [22, 32, -381],
            s: [91, 57, 87],
            c: 10519402,
            e: 3616035,
            bo: 1
        }, {
            p: [-203, 134, -483],
            s: [97, 7, 94],
            c: 5395026,
            t: 2
        }, {
            p: [-204, 101, -267],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-204, 102, -288],
            s: [7, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-204, 102, -309],
            s: [7, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-204, 101, -288],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-204, 101, -309],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-103, 84, -129],
            s: [95, 2, 113],
            l: 1,
            c: 4408131,
            t: 2
        }, {
            p: [-103, 59, -129],
            s: [96, 2, 113],
            l: 1,
            c: 4408131,
            t: 2
        }, {
            p: [-63, 123, -411],
            s: [52, 32, 49],
            c: 16765069,
            e: 1973790
        }, {
            p: [-203, 57, -204],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-204, 56, -204],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [61, 32, -241],
            s: [80, 55, 79],
            c: 8349264,
            e: 2432793,
            bo: 1
        }, {
            p: [-63, 89, -411],
            s: [83, 2, 112],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-63, 59, -411],
            s: [83, 2, 112],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-250, 82, -309],
            s: [100, 2, 113],
            l: 1,
            c: 5723991,
            t: 2
        }, {
            p: [61, 59, -242],
            s: [82, 2, 79],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [20, 59, -166],
            s: [164, 2, 73],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-134, 67, -181],
            s: [9, 14, 8],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-37, 97, -359],
            s: [9, 14, 8],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-37, 96, -359],
            s: [10, 1, 9],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-63, 32, -411],
            s: [83, 2, 113],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-128, 82, -335],
            s: [4, 4, 16],
            l: 1,
            pe: 1,
            c: 7039851,
            t: 2
        }, {
            p: [-146, 82, -335],
            s: [4, 4, 16],
            l: 1,
            pe: 1,
            c: 7039851,
            t: 2
        }, {
            p: [-163, 82, -335],
            s: [4, 4, 16],
            l: 1,
            pe: 1,
            c: 7039851,
            t: 2
        }, {
            p: [-180, 82, -335],
            s: [4, 4, 16],
            l: 1,
            pe: 1,
            c: 7039851,
            t: 2
        }, {
            p: [-195, 82, -335],
            s: [4, 4, 16],
            l: 1,
            pe: 1,
            c: 7039851,
            t: 2
        }, {
            p: [-134, 66, -184],
            s: [10, 1, 3],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-75, 91, -184],
            s: [10, 1, 3],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-75, 92, -181],
            s: [9, 14, 8],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-133, 32, -194],
            s: [34, 27, 19],
            c: 10191214,
            e: 4077098
        }, {
            p: [88, 68, -277],
            s: [9, 14, 8],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [88, 67, -280],
            s: [10, 1, 3],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-58, 91, -94],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-237, 81, 150],
            s: [9, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-197, 41, -333],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-187, 41, -332],
            s: [2, 7, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-199, 41, -319],
            s: [2, 4, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [15, 45, -208],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [15, 33, -220],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-204, 32, -485],
            s: [91, 102, 87],
            c: 10519402,
            e: 3616035
        }, {
            p: [22, 89, -381],
            s: [98, 5, 93],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [22, 59, -381],
            s: [92, 2, 88],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [22, 32, -381],
            s: [93, 2, 89],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-10, 68, -341],
            s: [9, 14, 8],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [11, 68, -341],
            s: [9, 14, 8],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-10, 67, -341],
            s: [10, 1, 9],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [11, 67, -341],
            s: [10, 1, 9],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [253, 32, -160],
            s: [64, 53, 72],
            c: 9860174,
            e: 3749164,
            bo: 1
        }, {
            p: [193, 95, -293],
            s: [74, 4, 121],
            c: 4868682,
            t: 2,
            bo: 1
        }, {
            p: [193, 65, -292],
            s: [69, 2, 114],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [193, 32, -285],
            s: [70, 2, 101],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [161, 75, -309],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [161, 74, -309],
            s: [6, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [154, 59, -273],
            s: [20, 2, 44],
            c: 9539985,
            t: 2
        }, {
            p: [146, 33, -293],
            s: [2, 29, 2],
            c: 9539985,
            t: 2
        }, {
            p: [146, 33, -253],
            s: [2, 29, 2],
            c: 9539985,
            t: 2
        }, {
            p: [158, 33, -246],
            s: [1, 38, 4],
            i: 3,
            t: 2,
            d: 2
        }, {
            p: [-8, 55, -258],
            s: [9, 3, 3],
            pe: 1,
            c: 11316396,
            t: 2
        }, {
            p: [-2, 55, -258],
            s: [3, 8, 3],
            pe: 1,
            c: 11316396,
            t: 2
        }, {
            p: [-14, 75, -258],
            s: [30, 27, 31],
            c: 5988172,
            t: 5,
            bo: 1
        }, {
            p: [-2, 63, -258],
            s: [10, 9, 10],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [129, 32, -403],
            s: [124, 73, 93],
            c: 9860174,
            e: 3749164
        }, {
            p: [129, 105, -404],
            s: [132, 5, 121],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [168, 33, -404],
            s: [44, 1, 115],
            l: 1,
            c: 985865,
            t: 5
        }, {
            p: [129, 33, -355],
            s: [37, 36, 6],
            c: 8553090,
            t: 2,
            bo: 1
        }, {
            p: [236, 32, -367],
            s: [90, 32, 61],
            c: 10652266,
            e: 2432532,
            bo: 1
        }, {
            p: [236, 64, -367],
            s: [97, 5, 68],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [241, 44, -340],
            s: [9, 14, 8],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [241, 43, -340],
            s: [10, 1, 9],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [236, 29, -367],
            s: [92, 5, 63],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [74, 33, -341],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [57, 33, -288],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [261, 33, -330],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [273, 33, -330],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-213, 59, -249],
            s: [10, 3, 3],
            l: 1,
            pe: 1,
            c: 7039851,
            t: 2
        }, {
            p: [-213, 59, -231],
            s: [10, 3, 3],
            l: 1,
            pe: 1,
            c: 7039851,
            t: 2
        }, {
            p: [-213, 59, -240],
            s: [10, 3, 3],
            l: 1,
            pe: 1,
            c: 7039851,
            t: 2
        }, {
            p: [-213, 59, -222],
            s: [10, 3, 3],
            l: 1,
            pe: 1,
            c: 7039851,
            t: 2
        }, {
            p: [-14, 33, -258],
            s: [5, 42, 5],
            pe: 1,
            c: 11316396,
            t: 2,
            bo: 1
        }, {
            p: [-65, 33, -188],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-67, 28, -196],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-59, 33, -324],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-59, 33, -336],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-59, 33, -348],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-59, 45, -348],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-50, 16, -348],
            s: [6, 40, 67],
            c: 12497300,
            e: 3746078
        }, {
            p: [-50, 16, -270],
            s: [6, 40, 41],
            c: 12497300,
            e: 3746078
        }, {
            p: [-50, 14, -240],
            s: [6, 31, 5],
            c: 12497300,
            e: 3746078
        }, {
            p: [-50, 38, -233],
            s: [6, 2, 9],
            c: 12497300,
            e: 3746078
        }, {
            p: [-50, 50, -204],
            s: [6, 6, 5],
            c: 12497300,
            e: 3746078
        }, {
            p: [-50, 56, -286],
            s: [6, 3, 9],
            c: 12497300,
            e: 3746078
        }, {
            p: [-50, 56, -270],
            s: [6, 3, 9],
            c: 12497300,
            e: 3746078
        }, {
            p: [-50, 56, -254],
            s: [6, 3, 9],
            c: 12497300,
            e: 3746078
        }, {
            p: [-50, 56, -200],
            s: [6, 3, 9],
            c: 12497300,
            e: 3746078
        }, {
            p: [-50, 56, -319],
            s: [6, 3, 9],
            c: 12497300,
            e: 3746078
        }, {
            p: [-50, 56, -335],
            s: [6, 3, 9],
            c: 12497300,
            e: 3746078
        }, {
            p: [-50, 56, -351],
            s: [6, 3, 9],
            c: 12497300,
            e: 3746078
        }, {
            p: [15, 33, -208],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [3, 33, -208],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-9, 33, -208],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-71, 33, -352],
            s: [2, 7, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-76, 30, -350],
            s: [2, 7, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-82, 32, -354],
            s: [2, 6, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [16, 31, -235],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [18, 33, -242],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [17, 28, -251],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-158, 41, -330],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-146, 41, -330],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-124, 41, -269],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [169, 32, -352],
            s: [44, 73, 9],
            c: 9860174,
            e: 3749164,
            bo: 1
        }, {
            p: [90, 32, -352],
            s: [46, 73, 9],
            c: 9860174,
            e: 3749164,
            bo: 1
        }, {
            p: [130, 69, -352],
            s: [34, 36, 9],
            c: 9860174,
            e: 3749164,
            bo: 1
        }, {
            p: [-210, 33, -222],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-207, 29, -231],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-198, 31, -206],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-44, 33, -338],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-40, 29, -341],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [86, 33, -341],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [319, 32, -317],
            s: [79, 58, 183],
            c: 16765069,
            e: 1973790,
            bo: 1
        }, {
            p: [319, 90, -317],
            s: [87, 4, 189],
            c: 4868682,
            t: 2,
            bo: 1
        }, {
            p: [319, 60, -281],
            s: [80, 2, 112],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [319, 32, -281],
            s: [81, 2, 113],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [281, 70, -240],
            s: [4, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [281, 70, -270],
            s: [4, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [282, 69, -270],
            s: [7, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [282, 69, -240],
            s: [7, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [225, 77, -332],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [225, 76, -332],
            s: [6, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [126, 43, -355],
            s: [3, 5, 8],
            c: "#464646",
            t: 5
        }, {
            p: [327, 32, -470],
            s: [142, 99, 87],
            c: 10519402,
            e: 3616035
        }, {
            p: [328, 130, -470],
            s: [152, 4, 96],
            c: 4868682,
            t: 2
        }, {
            p: [240, 64, -417],
            s: [23, 24, 21],
            c: 5988172,
            t: 5
        }, {
            p: [228, 65, -438],
            s: [30, 31, 31],
            c: 5988172,
            t: 5
        }, {
            p: [267, 63, -420],
            s: [20, 23, 23],
            c: 5988172,
            t: 5
        }, {
            p: [210, 54, -417],
            s: [30, 28, 31],
            c: 5988172,
            t: 5
        }, {
            p: [196, 67, -441],
            s: [21, 22, 26],
            c: 5988172,
            t: 5
        }, {
            p: [259, 52, -412],
            s: [23, 26, 21],
            c: 5988172,
            t: 5
        }, {
            p: [191, 32, -555],
            s: [109, 76, 87],
            c: 10519402,
            e: 3616035
        }, {
            p: [191, 105, -557],
            s: [113, 5, 100],
            c: 5395026,
            t: 2
        }, {
            p: [325, 32, -186],
            s: [80, 77, 79],
            c: 8349264,
            e: 2432793,
            bo: 1
        }, {
            p: [326, 109, -186],
            s: [88, 4, 86],
            c: 4868682,
            t: 2,
            bo: 1
        }, {
            p: [326, 86, -186],
            s: [83, 2, 80],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [326, 60, -186],
            s: [83, 2, 80],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [168, 62, -160],
            s: [20, 2, 44],
            c: 9539985,
            t: 2,
            bo: 1
        }, {
            p: [176, 64, -180],
            s: [2, 7, 2],
            c: 9539985,
            t: 2
        }, {
            p: [176, 71, -160],
            s: [3, 1, 44],
            c: 9539985,
            t: 2
        }, {
            p: [171, 71, -181],
            s: [7, 1, 2],
            c: 9539985,
            t: 2
        }, {
            p: [167, 64, -160],
            s: [1, 17, 13],
            l: 1,
            c: 8221547,
            t: 2
        }, {
            p: [167, 81, -160],
            s: [2, 1, 15],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [167, 64, -167],
            s: [2, 17, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [299, 32, -100],
            s: [52, 40, 93],
            c: 10652266,
            e: 2432532,
            bo: 1
        }, {
            p: [326, 32, -185],
            s: [84, 2, 79],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [299, 72, -100],
            s: [57, 5, 97],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [278, 29, -100],
            s: [12, 5, 95],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [265, 39, -256],
            s: [3, 1, 30],
            c: 9539985,
            t: 2
        }, {
            p: [265, 33, -256],
            s: [1, 6, 30],
            c: 9539985,
            t: 2
        }, {
            p: [241, 33, -281],
            s: [1, 6, 30],
            c: 9539985,
            t: 2
        }, {
            p: [241, 39, -281],
            s: [3, 1, 30],
            c: 9539985,
            t: 2
        }, {
            p: [233, 63, -265],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 4399894,
            t: 5
        }, {
            p: [233, 63, -269],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 6710886,
            t: 5
        }, {
            p: [233, 63, -277],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 6710886,
            t: 5
        }, {
            p: [233, 63, -293],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 6710886,
            t: 5
        }, {
            p: [233, 63, -273],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 4399894,
            t: 5
        }, {
            p: [233, 63, -281],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 4399894,
            t: 5
        }, {
            p: [233, 63, -289],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 4399894,
            t: 5
        }, {
            p: [233, 63, -297],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 4399894,
            t: 5
        }, {
            p: [-133, 59, -195],
            s: [36, 2, 19],
            l: 1,
            c: 4408131,
            t: 2
        }, {
            p: [-133, 34, -203],
            s: [13, 17, 2],
            l: 1,
            c: 8221547,
            t: 2
        }, {
            p: [-140, 34, -204],
            s: [1, 17, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-126, 34, -204],
            s: [1, 17, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-133, 51, -204],
            s: [15, 1, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-133, 60, -194],
            s: [34, 1, 19],
            pe: 1,
            v: 1,
            c: 4408131,
            t: 2
        }, {
            p: [-121, 41, -333],
            s: [2, 5, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-132, 41, -331],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [215, 33, -179],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [215, 33, -167],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [199, 33, -86],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [173, 30, -341],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [325, 32, -14],
            s: [80, 55, 79],
            c: 8349264,
            e: 2432793,
            bo: 1
        }, {
            p: [319, 32, 135],
            s: [68, 76, 115],
            c: 9860174,
            e: 3749164,
            bo: 1
        }, {
            p: [325, 87, -14],
            s: [86, 5, 85],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [325, 29, -14],
            s: [82, 5, 81],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [304, 32, 30],
            s: [13, 43, 9],
            c: 10191214,
            e: 4077098,
            bo: 1
        }, {
            p: [304, 32, 73],
            s: [13, 43, 9],
            c: 10191214,
            e: 4077098,
            bo: 1
        }, {
            p: [304, 75, 51],
            s: [13, 9, 53],
            c: 10191214,
            e: 4077098,
            bo: 1
        }, {
            p: [302, 43, 47],
            s: [3, 8, 3],
            c: "#4d4d4d",
            t: 5,
            bo: 1
        }, {
            p: [302, 33, 51],
            s: [1, 42, 39],
            c: 8553090,
            t: 2,
            bo: 1
        }, {
            p: [325, 60, -14],
            s: [81, 2, 80],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [304, 77, 51],
            s: [26, 4, 4],
            pe: 1,
            c: 7039851,
            t: 2,
            bo: 1
        }, {
            p: [304, 77, 62],
            s: [26, 4, 4],
            pe: 1,
            c: 7039851,
            t: 2,
            bo: 1
        }, {
            p: [304, 77, 72],
            s: [26, 4, 4],
            pe: 1,
            c: 7039851,
            t: 2,
            bo: 1
        }, {
            p: [304, 77, 40],
            s: [26, 4, 4],
            pe: 1,
            c: 7039851,
            t: 2,
            bo: 1
        }, {
            p: [304, 77, 30],
            s: [26, 4, 4],
            pe: 1,
            c: 7039851,
            t: 2,
            bo: 1
        }, {
            p: [431, 12, -96],
            s: [92, 102, 160],
            c: 10519402,
            e: 3616035
        }, {
            p: [431, 113, -96],
            s: [99, 4, 165],
            c: 4868682,
            t: 2
        }, {
            p: [319, 108, 135],
            s: [74, 5, 121],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [319, 83, 135],
            s: [69, 2, 116],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [319, 56, 135],
            s: [69, 2, 116],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [287, 68, -35],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [287, 67, -35],
            s: [6, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [287, 65, 94],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [287, 64, 94],
            s: [6, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [287, 64, 94],
            s: [6, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [94, -2, -52],
            s: [80, 114, 59],
            c: 9860174,
            e: 3749164,
            bo: 1
        }, {
            p: [180, 32, -48],
            s: [92, 40, 63],
            c: 8349264,
            e: 2432793,
            bo: 1
        }, {
            p: [180, 72, -48],
            s: [95, 4, 66],
            c: 4868682,
            t: 2,
            bo: 1
        }, {
            p: [94, 111, -52],
            s: [88, 4, 67],
            c: 4868682,
            t: 2,
            bo: 1
        }, {
            p: [94, 32, -52],
            s: [82, 2, 61],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [180, 32, -48],
            s: [94, 2, 65],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [319, 32, 135],
            s: [70, 2, 117],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [92, 33, -404],
            s: [44, 1, 115],
            l: 1,
            c: 985865,
            t: 5
        }, {
            p: [-144, 32, -345],
            s: [83, 2, 20],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [275, 49, -103],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [275, 48, -103],
            s: [6, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [271, 32, -76],
            s: [8, 54, 15],
            c: 3091496,
            e: 3616548,
            bo: 1
        }, {
            p: [269, 29, -76],
            s: [6, 5, 17],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-156, 44, -136],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-148, 91, -88],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-147, 90, -88],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [280, 33, 0],
            s: [1, 23, 6],
            l: 1,
            r: [0, 0, -.18],
            c: 8684676,
            t: 2
        }, {
            p: [281, 33, 10],
            s: [1, 18, 6],
            l: 1,
            r: [0, 0, -.18],
            c: 8684676,
            t: 2
        }, {
            p: [240, 32, 163],
            s: [92, 51, 64],
            c: 10191214,
            e: 4077098,
            bo: 1
        }, {
            p: [240, 83, 163],
            s: [97, 5, 70],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [239, 56, 163],
            s: [91, 2, 65],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [240, 32, 163],
            s: [90, 2, 66],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [235, 57, 123],
            s: [49, 2, 17],
            c: 9539985,
            t: 2
        }, {
            p: [213, 32, 117],
            s: [2, 28, 2],
            c: 9539985,
            t: 2
        }, {
            p: [257, 32, 117],
            s: [2, 28, 2],
            c: 9539985,
            t: 2
        }, {
            p: [205, 33, 130],
            s: [5, 34, 1],
            i: 3,
            t: 2,
            d: 3
        }, {
            p: [94, 59, -52],
            s: [81, 2, 60],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [94, 86, -52],
            s: [81, 2, 60],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [132, 93, -33],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [132, 92, -33],
            s: [6, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [226, 34, -67],
            s: [1, 17, 13],
            l: 1,
            c: 8221547,
            t: 2
        }, {
            p: [226, 34, -60],
            s: [2, 17, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [226, 51, -67],
            s: [2, 1, 15],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [226, 34, -74],
            s: [2, 17, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [115, 115, -24],
            s: [15, 3, 37],
            c: 5263440,
            t: 2,
            bo: 1
        }, {
            p: [-159, 76, -120],
            s: [2, 38, 2],
            l: 1,
            c: 12303291,
            t: 2
        }, {
            p: [158, 32, 72],
            s: [60, 68, 93],
            c: 10191214,
            e: 4077098,
            bo: 1
        }, {
            p: [158, 67, 72],
            s: [61, 2, 94],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [142, 75, 31],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [142, 74, 31],
            s: [6, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [213, 84, -278],
            s: [9, 14, 8],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [213, 83, -281],
            s: [10, 1, 3],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [194, 33, 34],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [154, 32, 158],
            s: [80, 43, 79],
            c: 8349264,
            e: 2432793,
            bo: 1
        }, {
            p: [154, 75, 154],
            s: [85, 5, 75],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [77, 32, 169],
            s: [74, 69, 79],
            c: 10652266,
            e: 2432532,
            bo: 1
        }, {
            p: [192, 33, 125],
            s: [6, 1, 15],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [271, 64, 134],
            s: [9, 14, 7],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [271, 63, 131],
            s: [10, 1, 2],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [77, 101, 169],
            s: [81, 5, 87],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [77, 76, 169],
            s: [74, 2, 80],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [77, 47, 169],
            s: [74, 2, 81],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [102, 84, 132],
            s: [9, 14, 6],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [102, 83, 130],
            s: [10, 1, 3],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [154, 33, 115],
            s: [47, 1, 5],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [215, 30, -157],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [218, 32, -142],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [250, 28, -117],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [282, 30, -50],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [280, 32, -42],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [269, 31, -60],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [191, 32, 51],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [194, 29, 58],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [191, 29, 76],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [243, 32, -333],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [251, 30, -329],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [152, 47, -19],
            s: [9, 14, 6],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [152, 46, -16],
            s: [10, 1, 1],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [115, 33, -16],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [127, 33, -16],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [69, 94, -78],
            s: [9, 14, 8],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [69, 93, -81],
            s: [10, 1, 3],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [119, 34, -81],
            s: [13, 17, 2],
            l: 1,
            c: 8221547,
            t: 2
        }, {
            p: [112, 34, -82],
            s: [1, 17, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [119, 51, -82],
            s: [15, 1, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [126, 34, -82],
            s: [1, 17, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [67, 94, -25],
            s: [9, 14, 6],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [142, 79, 28],
            s: [9, 14, 6],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [79, 61, 14],
            s: [10, 1, 2],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [142, 78, 26],
            s: [10, 1, 3],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [67, 93, -23],
            s: [10, 1, 3],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [182, 79, 32],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [182, 78, 32],
            s: [6, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-97, 33, -199],
            s: [30, 6, 1],
            c: 9539985,
            t: 2
        }, {
            p: [-113, 33, -199],
            s: [2, 25, 2],
            c: 9539985,
            t: 2
        }, {
            p: [-81, 33, -199],
            s: [2, 25, 2],
            c: 9539985,
            t: 2
        }, {
            p: [-97, 39, -199],
            s: [30, 1, 3],
            c: 9539985,
            t: 2
        }, {
            p: [-81, 58, -193],
            s: [4, 2, 20],
            l: 1,
            r: [-.17, 0, 0],
            c: 4081241,
            t: 5
        }, {
            p: [-113, 58, -193],
            s: [4, 2, 20],
            l: 1,
            r: [-.17, 0, 0],
            c: 4081241,
            t: 5
        }, {
            p: [-85, 58, -193],
            s: [4, 2, 20],
            l: 1,
            r: [-.17, 0, 0],
            c: 8026746,
            t: 5
        }, {
            p: [-109, 58, -193],
            s: [4, 2, 20],
            l: 1,
            r: [-.17, 0, 0],
            c: 8026746,
            t: 5
        }, {
            p: [-105, 58, -193],
            s: [4, 2, 20],
            l: 1,
            r: [-.17, 0, 0],
            c: 4081241,
            t: 5
        }, {
            p: [-101, 58, -193],
            s: [4, 2, 20],
            l: 1,
            r: [-.17, 0, 0],
            c: 8026746,
            t: 5
        }, {
            p: [-97, 58, -193],
            s: [4, 2, 20],
            l: 1,
            r: [-.17, 0, 0],
            c: 4081241,
            t: 5
        }, {
            p: [-89, 58, -193],
            s: [4, 2, 20],
            l: 1,
            r: [-.17, 0, 0],
            c: 4081241,
            t: 5
        }, {
            p: [-93, 58, -193],
            s: [4, 2, 20],
            l: 1,
            r: [-.17, 0, 0],
            c: 8026746,
            t: 5
        }, {
            p: [-75, 29, -187],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [65, 82, 51],
            s: [58, 4, 80],
            c: 4868682,
            t: 2,
            bo: 1
        }, {
            p: [143, 33, 22],
            s: [4, 17, 1],
            l: 1,
            r: [.17, 0, 0],
            c: 8684676,
            t: 2
        }, {
            p: [149, 33, 22],
            s: [4, 17, 1],
            l: 1,
            r: [.17, 0, 0],
            c: 8684676,
            t: 2
        }, {
            p: [65, 54, 51],
            s: [55, 2, 75],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [79, 62, 16],
            s: [9, 14, 5],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-102, -3, -17],
            s: [42, 96, 62],
            c: 9860174,
            e: 3749164,
            bo: 1
        }, {
            p: [-102, 92, -17],
            s: [47, 4, 67],
            c: 4868682,
            t: 2,
            bo: 1
        }, {
            p: [-102, 32, -18],
            s: [44, 2, 62],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [240, 32, -120],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [206, 13, -15],
            s: [15, 74, 7],
            c: 3091496,
            e: 3616548,
            bo: 1
        }, {
            p: [206, 32, -13],
            s: [17, 2, 5],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [180, 30, 115],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [191, 27, 115],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [282, 28, -13],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [189, 31, -14],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [175, 28, -12],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [166, 29, -14],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [102, 29, -17],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [132, 31, 22],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [275, 31, -311],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [276, 32, -287],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [274, 29, -274],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [276, 30, -268],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-119, 40, -278],
            s: [2, 8, 2],
            l: 1,
            pe: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-121, 37, -286],
            s: [2, 8, 2],
            l: 1,
            pe: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-87, -3, 47],
            s: [62, 104, 66],
            c: 10191214,
            e: 4077098,
            bo: 1
        }, {
            p: [-87, 100, 47],
            s: [67, 4, 72],
            c: 4868682,
            t: 2,
            bo: 1
        }, {
            p: [-87, 102, 48],
            s: [45, 10, 55],
            c: 10191214,
            e: 4077098
        }, {
            p: [-87, 112, 48],
            s: [51, 4, 61],
            c: 4868682,
            t: 2
        }, {
            p: [-87, 76, 47],
            s: [63, 2, 67],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-87, 52, 47],
            s: [63, 2, 67],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-67, 84, 26],
            s: [9, 14, 7],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-67, 83, 23],
            s: [10, 1, 2],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-120, 71, -35],
            s: [7, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-120, 70, -35],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-116, 59, 68],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-115, 58, 68],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-87, 32, 47],
            s: [64, 2, 64],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [73, 32, 52],
            s: [40, 2, 78],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [65, 13, 51],
            s: [54, 69, 74],
            c: 9860174,
            e: 3749164,
            bo: 1
        }, {
            p: [28, 12, -46],
            s: [169, 2, 54],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [27, 12, 37],
            s: [167, 2, 52],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-67, 83, 16],
            s: [9, 14, 5],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-67, 82, 15],
            s: [10, 1, 4],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [13, 32, 155],
            s: [55, 54, 63],
            c: 10191214,
            e: 4077098,
            bo: 1
        }, {
            p: [-52, 46, -28],
            s: [8, 31, 218],
            c: 10652266,
            e: 2432532,
            bo: 1
        }, {
            p: [50, 46, -28],
            s: [8, 31, 117],
            c: 10652266,
            e: 2432532,
            bo: 1
        }, {
            p: [50, 77, -80],
            s: [8, 5, 13],
            c: 10652266,
            e: 2432532
        }, {
            p: [50, 77, -58],
            s: [8, 5, 13],
            c: 10652266,
            e: 2432532
        }, {
            p: [50, 77, -36],
            s: [8, 5, 13],
            c: 10652266,
            e: 2432532
        }, {
            p: [50, 77, -14],
            s: [8, 5, 13],
            c: 10652266,
            e: 2432532
        }, {
            p: [50, 77, 8],
            s: [8, 5, 13],
            c: 10652266,
            e: 2432532
        }, {
            p: [-52, 77, 8],
            s: [8, 5, 13],
            c: 10652266,
            e: 2432532
        }, {
            p: [-52, 77, 30],
            s: [8, 5, 13],
            c: 10652266,
            e: 2432532
        }, {
            p: [-52, 77, 53],
            s: [8, 5, 14],
            c: 10652266,
            e: 2432532
        }, {
            p: [-52, 77, 75],
            s: [8, 5, 12],
            c: 10652266,
            e: 2432532
        }, {
            p: [-52, 77, -14],
            s: [8, 5, 13],
            c: 10652266,
            e: 2432532
        }, {
            p: [-52, 77, -36],
            s: [8, 5, 13],
            c: 10652266,
            e: 2432532
        }, {
            p: [-52, 77, -58],
            s: [8, 5, 13],
            c: 10652266,
            e: 2432532
        }, {
            p: [-52, 77, -80],
            s: [8, 5, 13],
            c: 10652266,
            e: 2432532
        }, {
            p: [-52, 77, -102],
            s: [8, 5, 13],
            c: 10652266,
            e: 2432532
        }, {
            p: [-52, 77, -124],
            s: [8, 5, 13],
            c: 10652266,
            e: 2432532
        }, {
            p: [-1, 14, 19],
            s: [110, 32, 14],
            c: 10652266,
            e: 2432532
        }, {
            p: [-1, 14, -51],
            s: [110, 32, 62],
            c: 10652266,
            e: 2432532
        }, {
            p: [-1, 46, -2],
            s: [94, 1, 57],
            c: 10652266,
            e: 2432532
        }, {
            p: [2, 10, -17],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-26, 8, -16],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-12, 10, 9],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-36, 11, -17],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [19, 12, 10],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [34, 10, -18],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [89, 80, -351],
            s: [9, 14, 8],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [89, 79, -351],
            s: [10, 1, 9],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-51, 32, 188],
            s: [73, 76, 116],
            c: 8349264,
            e: 2432793,
            bo: 1
        }, {
            p: [-124, 32, 215],
            s: [73, 76, 61],
            c: 8349264,
            e: 2432793,
            bo: 1
        }, {
            p: [-197, 32, 217],
            s: [73, 52, 79],
            c: 10652266,
            e: 2432532,
            bo: 1
        }, {
            p: [13, 86, 160],
            s: [61, 5, 79],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [13, 47, 163],
            s: [57, 2, 81],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-52, 47, 157],
            s: [73, 2, 56],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-126, 47, 211],
            s: [75, 2, 55],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-265, -3, 183],
            s: [63, 104, 108],
            c: 10191214,
            e: 4077098,
            bo: 1
        }, {
            p: [-268, 32, 74],
            s: [84, 85, 111],
            c: 16765069,
            e: 1973790,
            bo: 1
        }, {
            p: [-268, 32, -10],
            s: [73, 46, 60],
            c: 10652266,
            e: 2432532,
            bo: 1
        }, {
            p: [-232, 32, -73],
            s: [68, 77, 67],
            c: 10191214,
            e: 4077098,
            bo: 1
        }, {
            p: [-51, 108, 187],
            s: [81, 5, 121],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [-128, 108, 214],
            s: [73, 5, 68],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [-70, 32, 127],
            s: [15, 93, 10],
            c: 3091496,
            e: 3616548,
            bo: 1
        }, {
            p: [-70, 47, 125],
            s: [17, 2, 8],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [0, 63, 126],
            s: [9, 14, 6],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [0, 62, 124],
            s: [10, 1, 3],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-29, 89, 132],
            s: [9, 14, 5],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-51, 89, 132],
            s: [9, 14, 5],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-29, 88, 131],
            s: [10, 1, 4],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-51, 88, 131],
            s: [10, 1, 4],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-52, 77, 157],
            s: [73, 2, 56],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-126, 77, 211],
            s: [75, 2, 55],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-117, 50, 154],
            s: [25, 1, 25],
            t: 1
        }, {
            p: [-14, 24, -245],
            s: [29, 13, 3],
            c: 12497300,
            e: 3746078
        }, {
            p: [-117, 24, 168],
            s: [31, 28, 3],
            c: 12497300,
            e: 3746078
        }, {
            p: [-103, 24, 154],
            s: [3, 28, 25],
            c: 12497300,
            e: 3746078
        }, {
            p: [-131, 24, 154],
            s: [3, 28, 25],
            c: 12497300,
            e: 3746078
        }, {
            p: [-117, 48, 154],
            s: [5, 45, 5],
            pe: 1,
            c: 11316396,
            t: 2,
            bo: 1
        }, {
            p: [-117, 92, 154],
            s: [30, 27, 30],
            c: 5988172,
            t: 5,
            bo: 1
        }, {
            p: [-123, 69, 154],
            s: [10, 4, 4],
            l: 1,
            pe: 1,
            c: 11316396,
            t: 2
        }, {
            p: [-130, 69, 154],
            s: [4, 9, 4],
            pe: 1,
            c: 11316396,
            t: 2
        }, {
            p: [-130, 78, 154],
            s: [10, 11, 10],
            c: 5988172,
            t: 5
        }, {
            p: [-145, 89, 187],
            s: [9, 14, 6],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-145, 88, 185],
            s: [10, 1, 3],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-196, 47, 180],
            s: [73, 2, 7],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-242, 47, 154],
            s: [19, 2, 57],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-242, 73, 154],
            s: [19, 2, 57],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-196, 84, 214],
            s: [80, 5, 81],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [67, 33, -285],
            s: [6, 8, 6],
            i: 2,
            r: [0, -1.57, 0]
        }, {
            p: [-265, 101, 178],
            s: [70, 5, 124],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [-228, 32, 49],
            s: [5, 2, 62],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-234, 32, -9],
            s: [7, 2, 63],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-214, 32, -71],
            s: [34, 2, 65],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-236, 82, 150],
            s: [6, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-59, 90, -94],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-265, 117, 74],
            s: [86, 5, 119],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [431, 40, -96],
            s: [66, 102, 125],
            c: 10519402,
            e: 3616035
        }, {
            p: [431, 141, -96],
            s: [77, 4, 135],
            c: 4868682,
            t: 2
        }, {
            p: [-266, 78, -11],
            s: [78, 5, 59],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [-232, 109, -73],
            s: [74, 5, 72],
            c: 5395026,
            t: 2,
            bo: 1
        }, {
            p: [-239, 62, 74],
            s: [27, 2, 112],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-268, 88, 74],
            s: [85, 2, 112],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-232, 60, -73],
            s: [69, 2, 68],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-232, 84, -73],
            s: [69, 2, 68],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [-278, 78, -70],
            s: [54, 5, 59],
            c: 5395026,
            t: 2
        }, {
            p: [-227, 48, 171],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-215, 48, 171],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-78, 48, 86],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-176, 48, 87],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-125, 33, 67],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-137, 33, 67],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-90, 48, 86],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-225, 33, -34],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-213, 33, -34],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-129, 33, -33],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-116, 83, 28],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-115, 82, 28],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-179, 48, 174],
            s: [6, 19, 1],
            l: 1,
            r: [.17, 0, 0],
            c: 8684676,
            t: 2
        }, {
            p: [-189, 48, 174],
            s: [6, 19, 1],
            l: 1,
            r: [.17, 0, 0],
            c: 8684676,
            t: 2
        }, {
            p: [-228, 122, 42],
            s: [35, 3, 15],
            c: 5263440,
            t: 2,
            bo: 1
        }, {
            p: [-217, 69, 42],
            s: [2, 53, 2],
            l: 1,
            c: 12303291,
            t: 2
        }, {
            p: [-232, 34, 3],
            s: [2, 17, 13],
            l: 1,
            c: 8221547,
            t: 2
        }, {
            p: [-231, 34, -4],
            s: [1, 17, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-231, 34, 10],
            s: [1, 17, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-231, 51, 3],
            s: [1, 1, 15],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-211, 92, -43],
            s: [9, 14, 8],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-211, 91, -40],
            s: [10, 1, 3],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-232, 72, 14],
            s: [10, 3, 3],
            l: 1,
            pe: 1,
            c: 7039851,
            t: 2
        }, {
            p: [-232, 72, -11],
            s: [10, 3, 3],
            l: 1,
            pe: 1,
            c: 7039851,
            t: 2
        }, {
            p: [-232, 72, 1],
            s: [10, 3, 3],
            l: 1,
            pe: 1,
            c: 7039851,
            t: 2
        }, {
            p: [-232, 72, -24],
            s: [10, 3, 3],
            l: 1,
            pe: 1,
            c: 7039851,
            t: 2
        }, {
            p: [-232, 72, -35],
            s: [10, 3, 3],
            l: 1,
            pe: 1,
            c: 7039851,
            t: 2
        }, {
            p: [-229, 98, 112],
            s: [7, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-229, 98, 89],
            s: [7, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-229, 97, 112],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-229, 97, 89],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-222, 32, 59],
            s: [1, 23, 4],
            l: 1,
            r: [0, 0, .17],
            c: 8684676,
            t: 2
        }, {
            p: [-222, 33, 52],
            s: [1, 16, 4],
            l: 1,
            r: [0, 0, .17],
            c: 8684676,
            t: 2
        }, {
            p: [-1, 45, -4],
            s: [2, 1, 29],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [-30, 45, -4],
            s: [2, 1, 28],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [-56, 13, -19],
            s: [2, 34, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [-56, 13, 11],
            s: [2, 34, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [-56, 45, -4],
            s: [2, 2, 28],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [54, 13, 11],
            s: [2, 34, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [54, 45, -4],
            s: [2, 2, 28],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [47, 48, 123],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [110, 48, 125],
            s: [6, 8, 6],
            i: 2,
            r: [0, 1.57, 0]
        }, {
            p: [40, 48, -78],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [29, 47, -28],
            s: [2, 31, 2],
            c: 9539985,
            t: 2,
            bo: 1
        }, {
            p: [29, 47, 4],
            s: [2, 31, 2],
            c: 9539985,
            t: 2,
            bo: 1
        }, {
            p: [36, 78, 4],
            s: [21, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 5385783,
            t: 5
        }, {
            p: [36, 78, -4],
            s: [21, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 5385783,
            t: 5
        }, {
            p: [36, 78, 0],
            s: [21, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 7237230,
            t: 5
        }, {
            p: [36, 78, -8],
            s: [21, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 7237230,
            t: 5
        }, {
            p: [36, 78, -12],
            s: [21, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 5385783,
            t: 5
        }, {
            p: [36, 78, -16],
            s: [21, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 7237230,
            t: 5
        }, {
            p: [36, 78, -20],
            s: [21, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 5385783,
            t: 5
        }, {
            p: [36, 78, -24],
            s: [21, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 7237230,
            t: 5
        }, {
            p: [36, 78, -28],
            s: [21, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 5385783,
            t: 5
        }, {
            p: [29, 47, -12],
            s: [1, 7, 30],
            c: 9539985,
            t: 2
        }, {
            p: [29, 54, -12],
            s: [3, 1, 30],
            c: 9539985,
            t: 2
        }, {
            p: [40, 48, -66],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [46, 47, 4],
            s: [2, 33, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [46, 47, -28],
            s: [2, 33, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [-30, 47, 8],
            s: [2, 31, 2],
            c: 9539985,
            t: 2,
            bo: 1
        }, {
            p: [-38, 78, 8],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 3030610,
            t: 5
        }, {
            p: [-38, 78, 12],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 7895160,
            t: 5
        }, {
            p: [-38, 78, 20],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 7895160,
            t: 5
        }, {
            p: [-38, 78, 16],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 3030610,
            t: 5
        }, {
            p: [-38, 78, 24],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 3030610,
            t: 5
        }, {
            p: [-38, 78, 28],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 7895160,
            t: 5
        }, {
            p: [-38, 78, 32],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 3030610,
            t: 5
        }, {
            p: [-38, 78, 36],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 7895160,
            t: 5
        }, {
            p: [-38, 78, 40],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 3030610,
            t: 5
        }, {
            p: [-30, 47, 40],
            s: [2, 31, 2],
            c: 9539985,
            t: 2,
            bo: 1
        }, {
            p: [-30, 47, 24],
            s: [1, 7, 30],
            c: 9539985,
            t: 2
        }, {
            p: [-30, 54, 24],
            s: [3, 1, 30],
            c: 9539985,
            t: 2
        }, {
            p: [-48, 47, 8],
            s: [2, 33, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [-48, 47, 40],
            s: [2, 33, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [54, 13, -19],
            s: [2, 34, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [-30, 13, -19],
            s: [2, 34, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [-30, 13, 11],
            s: [2, 34, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [-1, 13, 11],
            s: [2, 34, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [28, 13, 11],
            s: [2, 34, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [28, 13, -19],
            s: [2, 34, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [-1, 13, -19],
            s: [2, 34, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [28, 45, -4],
            s: [2, 2, 28],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [-30, 47, -59],
            s: [2, 31, 2],
            c: 9539985,
            t: 2,
            bo: 1
        }, {
            p: [-38, 78, -59],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 5849386,
            t: 5
        }, {
            p: [-38, 78, -63],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 7895160,
            t: 5
        }, {
            p: [-38, 78, -67],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 5849386,
            t: 5
        }, {
            p: [-38, 78, -71],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 7895160,
            t: 5
        }, {
            p: [-38, 78, -75],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 5849386,
            t: 5
        }, {
            p: [-38, 78, -79],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 7895160,
            t: 5
        }, {
            p: [-38, 78, -83],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 5849386,
            t: 5
        }, {
            p: [-38, 78, -87],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 7895160,
            t: 5
        }, {
            p: [-38, 78, -91],
            s: [22, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 5849386,
            t: 5
        }, {
            p: [-30, 47, -91],
            s: [2, 31, 2],
            c: 9539985,
            t: 2,
            bo: 1
        }, {
            p: [-48, 47, -59],
            s: [2, 33, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [-48, 47, -91],
            s: [2, 33, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [-30, 47, -75],
            s: [1, 7, 30],
            c: 9539985,
            t: 2
        }, {
            p: [-30, 54, -75],
            s: [3, 1, 30],
            c: 9539985,
            t: 2
        }, {
            p: [-44, 47, -17],
            s: [1, 23, 5],
            l: 1,
            r: [0, 0, .17],
            c: 8684676,
            t: 2
        }, {
            p: [-44, 47, -8],
            s: [1, 23, 5],
            l: 1,
            r: [0, 0, .17],
            c: 8684676,
            t: 2
        }, {
            p: [-42, 48, -124],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [155, 33, -314],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [153, 30, -307],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [155, 31, -336],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [105, 30, -253],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [107, 29, -218],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [104, 33, -210],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [146, 30, -84],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [137, 33, -82],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [138, 33, -120],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [32, 48, 43],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [32, 48, 67],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [32, 48, 55],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-36, 46, 77],
            s: [24, 31, 8],
            c: 10652266,
            e: 2432532,
            bo: 1
        }, {
            p: [26, 46, 77],
            s: [24, 31, 8],
            c: 10652266,
            e: 2432532,
            bo: 1
        }, {
            p: [-46, 77, 77],
            s: [4, 5, 8],
            c: 10652266,
            e: 2432532
        }, {
            p: [-30, 77, 77],
            s: [8, 5, 12],
            r: [0, -1.57, 0],
            c: 10652266,
            e: 2432532
        }, {
            p: [20, 77, 77],
            s: [8, 5, 12],
            r: [0, -1.57, 0],
            c: 10652266,
            e: 2432532
        }, {
            p: [36, 77, 77],
            s: [4, 5, 8],
            c: 10652266,
            e: 2432532
        }, {
            p: [-42, 48, 67],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [1, 45, -129],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-7, 43, -127],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-31, 46, -129],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-46, 44, -107],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-44, 45, -100],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-33, 45, 71],
            s: [2, 10, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-32, 45, 65],
            s: [2, 6, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [41, 46, -57],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [43, 46, -49],
            s: [2, 5, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [32, 46, 34],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [36, 46, 29],
            s: [2, 5, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [34, 46, 18],
            s: [2, 6, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [126, 46, 104],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [125, 46, 115],
            s: [2, 6, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [69, 46, 126],
            s: [2, 6, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [58, 46, 124],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [35, 46, 84],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [29, 46, 86],
            s: [2, 6, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [44, 46, 90],
            s: [2, 7, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-11, 46, 120],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-26, 44, 128],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-111, 43, 87],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-100, 46, 85],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-159, 45, 82],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-181, 45, 111],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-178, 43, 122],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-206, 45, 172],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-197, 43, 174],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-83, 44, 127],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-123, 49, 161],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-125, 46, 148],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-108, 47, 151],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-229, 30, -13],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-227, 33, -22],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-221, 30, 43],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-222, 30, 33],
            s: [2, 10, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-124, 33, 58],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-121, 33, 40],
            s: [2, 5, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-123, 33, 31],
            s: [2, 6, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-125, 33, -42],
            s: [2, 7, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-128, 33, -15],
            s: [2, 4, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-126, 33, -24],
            s: [2, 5, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [227, 33, -297],
            s: [3, 32, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [227, 33, -265],
            s: [3, 32, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [280, 33, -240],
            s: [4, 32, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [-8, 32, -265],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-16, 30, -251],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-22, 31, -260],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-159, 41, -307],
            s: [83, 50, 55],
            i: 14,
            l: 1
        }, {
            p: [240, 33, 106],
            s: [87, 50, 45],
            i: 14,
            l: 1
        }, {
            p: [-151, 48, 104],
            s: [64, 50, 48],
            i: 14,
            l: 1
        }, {
            p: [10, 48, -23],
            s: [69, 50, 72],
            i: 14,
            l: 1
        }, {
            p: [-1, 48, -35],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-1, 48, -23],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [3, 47, -44],
            s: [2, 7, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [8, 44, -33],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-195, 41, -309],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-195, 53, -309],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [158, 100, 72],
            s: [67, 4, 101],
            c: 4868682,
            t: 2,
            bo: 1
        }, {
            p: [158, 32, 72],
            s: [62, 2, 95],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [126, 41, 94],
            s: [6, 74, 12],
            c: 3091496,
            e: 3616548,
            bo: 1
        }, {
            p: [186, 79, 99],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [186, 78, 99],
            s: [6, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [169, 32, -341],
            s: [22, 2, 11],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [153, 33, -325],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [188, 32, -222],
            s: [291, 1, 335],
            t: 1
        }, {
            p: [134, 32, -160],
            s: [66, 76, 72],
            c: 10191214,
            e: 4077098,
            bo: 1
        }, {
            p: [193, 32, -292],
            s: [68, 63, 113],
            c: 10191214,
            e: 4077098,
            bo: 1
        }, {
            p: [273, 63, -240],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 6116223,
            t: 1
        }, {
            p: [273, 63, -244],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 7895160,
            t: 5
        }, {
            p: [273, 63, -252],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 7895160,
            t: 5
        }, {
            p: [273, 63, -248],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 6116223,
            t: 1
        }, {
            p: [273, 63, -256],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 6116223,
            t: 1
        }, {
            p: [273, 63, -264],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 6116223,
            t: 1
        }, {
            p: [273, 63, -260],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 7895160,
            t: 5
        }, {
            p: [273, 63, -272],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 6116223,
            t: 1
        }, {
            p: [273, 63, -268],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, .17],
            c: 7895160,
            t: 5
        }, {
            p: [280, 33, -272],
            s: [4, 32, 2],
            l: 1,
            c: 9539985,
            t: 2
        }, {
            p: [134, 108, -160],
            s: [71, 4, 77],
            c: 4868682,
            t: 2,
            bo: 1
        }, {
            p: [56, 94, -68],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [57, 93, -68],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [130, 79, 44],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [131, 78, 44],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [130, 79, 69],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [131, 78, 69],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [246, 29, -160],
            s: [52, 5, 74],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [278, 29, -174],
            s: [12, 5, 46],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [252, 60, -160],
            s: [63, 2, 73],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [284, 60, -160],
            s: [1, 2, 73],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [253, 85, -160],
            s: [69, 4, 77],
            c: 4868682,
            t: 2,
            bo: 1
        }, {
            p: [135, 29, -160],
            s: [66, 5, 74],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [135, 59, -160],
            s: [66, 2, 73],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [101, 59, -126],
            s: [2, 2, 5],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [101, 59, -129],
            s: [2, 2, 1],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [134, 84, -160],
            s: [67, 2, 73],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [176, 64, -140],
            s: [2, 7, 2],
            c: 9539985,
            t: 2
        }, {
            p: [171, 71, -139],
            s: [7, 1, 2],
            c: 9539985,
            t: 2
        }, {
            p: [167, 64, -153],
            s: [2, 17, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [161, 75, -333],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [161, 74, -333],
            s: [6, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [171, 33, -155],
            s: [1, 20, 6],
            l: 1,
            r: [0, 0, .17],
            c: 8684676,
            t: 2
        }, {
            p: [171, 33, -142],
            s: [1, 20, 6],
            l: 1,
            r: [0, 0, .17],
            c: 8684676,
            t: 2
        }, {
            p: [170, 31, -163],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [172, 29, -173],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [235, 67, -127],
            s: [9, 14, 7],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [235, 66, -125],
            s: [10, 1, 4],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [223, 67, -179],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [223, 66, -179],
            s: [6, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [211, 75, -239],
            s: [9, 14, 8],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [211, 74, -236],
            s: [10, 1, 3],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [144, 33, -202],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [144, 45, -202],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [181, 33, -229],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [268, 9, -199],
            s: [15, 93, 10],
            c: 3091496,
            e: 3616548,
            bo: 1
        }, {
            p: [268, 29, -201],
            s: [17, 5, 8],
            l: 1,
            c: 5395026,
            t: 2
        }, {
            p: [161, 47, -77],
            s: [9, 14, 6],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [161, 46, -80],
            s: [10, 1, 1],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [155, 67, -193],
            s: [9, 14, 7],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [155, 66, -196],
            s: [10, 1, 2],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [115, 91, -193],
            s: [9, 14, 7],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [115, 90, -196],
            s: [10, 1, 2],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [210, 29, -83],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [220, 30, -84],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [267, 33, -118],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [129, 30, -120],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [21, 33, -331],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [21, 45, -331],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-40, 33, -349],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [99, 68, -267],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [99, 67, -267],
            s: [6, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [135, 29, -200],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [23, 68, -227],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [23, 67, -227],
            s: [6, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [5, 29, -330],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-2, 29, -334],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [44, 29, -334],
            s: [2, 10, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [35, 28, -330],
            s: [2, 10, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [57, 28, -332],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [74, 29, -284],
            s: [2, 10, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [83, 27, -286],
            s: [2, 10, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [199, 29, -232],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [208, 29, -230],
            s: [2, 10, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [253, 29, -199],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [236, 29, -201],
            s: [2, 10, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [228, 29, -199],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-14, 35, -258],
            s: [23, 1, 23],
            t: 1
        }, {
            p: [-117, 24, 140],
            s: [31, 28, 3],
            c: 12497300,
            e: 3746078
        }, {
            p: [-27, 24, -258],
            s: [3, 13, 23],
            c: 12497300,
            e: 3746078
        }, {
            p: [-14, 24, -271],
            s: [29, 13, 3],
            c: 12497300,
            e: 3746078
        }, {
            p: [-1, 24, -258],
            s: [3, 13, 23],
            c: 12497300,
            e: 3746078
        }, {
            p: [270, 32, 80],
            s: [30, 15, 4],
            c: 10191214,
            e: 4077098
        }, {
            p: [218, 32, 80],
            s: [5, 16, 5],
            c: 10191214,
            e: 4077098
        }, {
            p: [200, 29, 75],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [200, 29, 86],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [192, 29, 95],
            s: [2, 10, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [282, 29, 87],
            s: [2, 10, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [269, 27, 85],
            s: [2, 10, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [281, 27, 99],
            s: [2, 9, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [245, 27, 126],
            s: [2, 11, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [115, 91, -127],
            s: [9, 14, 7],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [115, 90, -124],
            s: [10, 1, 2],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [148, 33, -118],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [152, 65, -124],
            s: [10, 1, 2],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [152, 66, -127],
            s: [9, 14, 7],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [62, 65, -130],
            s: [10, 1, 1],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [62, 66, -133],
            s: [9, 14, 6],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [27, 65, -130],
            s: [10, 1, 1],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [27, 66, -133],
            s: [9, 14, 6],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [233, 63, -285],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, -.18],
            c: 6710886,
            t: 5
        }, {
            p: [-156, 43, -111],
            s: [2, 5, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-157, 43, -146],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-153, 41, -156],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-196, 41, -143],
            s: [2, 7, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-199, 43, -120],
            s: [2, 7, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [279, 33, 108],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [203, 32, 80],
            s: [30, 15, 4],
            c: 10191214,
            e: 4077098
        }, {
            p: [255, 32, 80],
            s: [5, 16, 5],
            c: 10191214,
            e: 4077098
        }, {
            p: [279, 29, 76],
            s: [2, 10, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [293, 29, 73],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-166, 48, 85],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-229, 48, 134],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-229, 48, 141],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-229, 48, 148],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-147, 33, 69],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-41, 13, 8],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-34, 13, 8],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-92, 48, 180],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-92, 48, 173],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-154, 44, -126],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-134, 41, -267],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-198, 41, -299],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-208, 33, -249],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-208, 33, -242],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-29, 33, -350],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [11, 33, -333],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [96, 33, -343],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [154, 33, -282],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [154, 33, -274],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [191, 33, -231],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [280, 33, -201],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [280, 33, -208],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [257, 33, -120],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [189, 33, -84],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [230, 33, -36],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [230, 33, -29],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [193, 33, 44],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [230, 33, 127],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [237, 33, 127],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-68, 48, 84],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [22, 48, 69],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-44, 48, 57],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-44, 48, -26],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-44, 48, -114],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [9, 48, -24],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-257, 32, 309],
            s: [149, 84, 80],
            c: 10519402,
            e: 7892309
        }, {
            p: [-259, 116, 309],
            s: [160, 5, 87],
            c: 5395026,
            t: 2
        }, {
            p: [-149, 34, 320],
            s: [74, 69, 79],
            c: 10652266,
            e: 2432532
        }, {
            p: [-137, 103, 319],
            s: [91, 5, 87],
            c: 5395026,
            t: 2
        }, {
            p: [395, 7, 103],
            s: [80, 88, 59],
            c: 9860174,
            e: 3749164
        }, {
            p: [396, 95, 104],
            s: [88, 4, 67],
            c: 4868682,
            t: 2
        }, {
            p: [184, 32, 235],
            s: [102, 76, 49],
            c: 9860174,
            e: 3749164
        }, {
            p: [184, 108, 235],
            s: [109, 5, 57],
            c: 5395026,
            t: 2
        }, {
            p: [-89, 33, -137],
            s: [54, 1, 97],
            l: 1,
            c: 4408131,
            t: 2
        }, {
            p: [-200, 92, -91],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-201, 91, -91],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-121, 32, 14],
            s: [6, 2, 2],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-68, 32, 47],
            s: [26, 2, 68],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-69, 12, 47],
            s: [25, 2, 68],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-102, 12, -18],
            s: [44, 2, 62],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-102, 62, -17],
            s: [43, 2, 63],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-120, 71, -18],
            s: [7, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-120, 70, -18],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-123, 34, 0],
            s: [1, 17, 13],
            l: 1,
            c: 8221547,
            t: 2
        }, {
            p: [-122, 34, -7],
            s: [4, 17, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-122, 34, 7],
            s: [4, 17, 1],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-122, 51, 0],
            s: [4, 1, 15],
            l: 1,
            c: 4868682,
            t: 2
        }, {
            p: [-60, 24, -69],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-68, 24, -69],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-75, 22, -71],
            s: [2, 7, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-137, 33, -68],
            s: [2, 7, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-130, 29, -70],
            s: [2, 7, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-84, 43, -34],
            s: [7, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-84, 42, -34],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-84, 72, 1],
            s: [7, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-84, 71, 1],
            s: [8, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-66, 10, 11],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-77, 8, -5],
            s: [2, 8, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-78, 8, -11],
            s: [2, 11, 2],
            l: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-138, 91, -77],
            s: [9, 14, 8],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-138, 90, -74],
            s: [10, 1, 3],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-68, 65, -74],
            s: [10, 1, 3],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-68, 66, -77],
            s: [9, 14, 8],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-94, 66, -77],
            s: [9, 14, 8],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-94, 65, -74],
            s: [10, 1, 3],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-111, 10, -62],
            s: [12, 23, 43],
            t: 1
        }, {
            p: [-110, 71, -45],
            s: [9, 14, 7],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-110, 70, -47],
            s: [10, 1, 4],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [-93, 24, -62],
            s: [24, 9, 28],
            i: 9,
            t: 1,
            d: 2
        }, {
            p: [241, 33, -297],
            s: [2, 30, 2],
            c: 9539985,
            t: 2,
            bo: 1
        }, {
            p: [241, 33, -265],
            s: [2, 30, 2],
            c: 9539985,
            t: 2,
            bo: 1
        }, {
            p: [265, 33, -272],
            s: [2, 30, 2],
            c: 9539985,
            t: 2,
            bo: 1
        }, {
            p: [265, 33, -240],
            s: [2, 30, 2],
            c: 9539985,
            t: 2,
            bo: 1
        }, {
            p: [-61, 3, -61],
            s: [40, 21, 26],
            t: 1
        }, {
            p: [-68, 13, -35],
            s: [26, 11, 26],
            i: 9,
            t: 1,
            d: 3
        }, {
            p: [-85, 32, -318],
            s: [255, 1, 281],
            t: 1
        }, {
            p: [52, 33, -106],
            s: [2, 14, 50],
            t: 1
        }, {
            p: [302, 43, 57],
            s: [3, 8, 3],
            c: "#4d4d4d",
            t: 5,
            bo: 1
        }, {
            p: [134, 43, -355],
            s: [3, 5, 8],
            c: "#464646",
            t: 5
        }, {
            p: [-40, 33, -219],
            s: [4, 2, 3],
            l: 1,
            r: [0, .52, 0],
            c: 12497300,
            e: 3746078
        }, {
            p: [-59, 33, -230],
            s: [6, 2, 4],
            l: 1,
            r: [0, -.52, 0],
            c: 12497300,
            e: 3746078
        }, {
            p: [-64, 33, -223],
            s: [4, 2, 4],
            l: 1,
            c: 12497300,
            e: 3746078
        }, {
            p: [400, 123, -68],
            s: [5, 14, 9],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [400, 122, -68],
            s: [6, 1, 10],
            l: 1,
            c: 5066061,
            t: 2
        }, {
            p: [236, 33, 101],
            s: [24, 36, 24],
            i: 23,
            l: 1,
            tm: 0
        }, {
            p: [-144, 41, -301],
            s: [24, 36, 24],
            i: 23,
            l: 1,
            tm: "1"
        }, {
            p: [-4, 63, -258],
            s: [10, 39, 10],
            v: 1,
            c: 5988172,
            t: 5
        }, {
            p: [-123, 69, 154],
            s: [10, 20, 4],
            pe: 1,
            v: 1,
            c: 11316396,
            t: 2
        }]
    }, {
        name: "Subzero",
        ambInd: 1,
        modURL: "",
        terrainSeed: "",
        terrainWidth: 2048,
        terrainHeight: 2048,
        terrainMntMlt: 1,
        terrainMntCol: "#a0a0a0",
        terrainGrsCol: "#4a6904",
        terrainDrtCol: "#8c6835",
        skyDome: !1,
        skyDomeCol0: "#ffffff",
        skyDomeCol1: "#7196a2",
        skyDomeCol2: "#184452",
        zone: !1,
        zoneSize: 500,
        zoneSpeed: 1,
        zoneCol0: "#c542d9",
        zoneCol1: "#c542d9",
        zoneCol2: "#c542d9",
        sizeMlt: 2,
        shadowR: 1024,
        ambient: 8555670,
        light: 16120058,
        sky: 13883868,
        fog: 13030361,
        fogD: 601.943118216585,
        dthY: -100,
        camPos: [-13, 93, -6],
        spawns: [[-41, 67, -58, 0], [-187, 54, -238, 0, 2], [-299, 54, 2, 0, 3], [131, 67, -203, 0, 3], [186, 67, -250, 0], [350, 67, -265, 0, 2], [319, 86, -59, 0], [178, 84, -49, 0], [140, 84, -13, 0, 1], [-162, 67, 63, 0]],
        ambO: 1,
        ambS: 5,
        objects: [{
            p: [-1, 64, 0],
            s: [140, 2, 142],
            l: 1,
            t: 5
        }, {
            p: [-100, 64, 50],
            s: [58, 2, 42],
            l: 1,
            t: 5
        }, {
            p: [-149, 53, 8],
            s: [40, 13, 126],
            l: 1,
            t: 5
        }, {
            p: [-139, 51, -111],
            s: [172, 2, 130],
            l: 1,
            t: 5
        }, {
            p: [-277, 51, -77],
            s: [104, 2, 202],
            l: 1,
            t: 5
        }, {
            p: [5, 64, -123],
            s: [60, 2, 104],
            l: 1,
            t: 5
        }, {
            p: [-54, 51, -143],
            s: [58, 15, 42],
            l: 1,
            t: 5
        }, {
            p: [240, 65, -325],
            s: [132, 2, 38],
            c: 5723991,
            t: 11
        }, {
            p: [213, 64, -207],
            s: [40, 2, 63],
            l: 1,
            t: 5
        }, {
            p: [213, 64, -112],
            s: [39, 20, 37],
            l: 1,
            t: 5
        }, {
            p: [-124, 51, -285],
            s: [203, 2, 50],
            l: 1,
            t: 5
        }, {
            p: [-198, 50, -218],
            s: [38, 2, 84],
            c: 7566195,
            t: 1
        }, {
            p: [343, 64, -252],
            s: [77, 2, 43],
            l: 1,
            t: 5
        }, {
            p: [343, 64, -122],
            s: [82, 2, 217],
            l: 1,
            t: 5
        }, {
            p: [327, 64, -11],
            s: [140, 20, 129],
            l: 1,
            t: 5
        }, {
            p: [-326, 11, -77],
            s: [9, 47, 632],
            c: 10983566,
            t: 11
        }, {
            p: [-2731, 11, -77],
            s: [5362, 31, 11525],
            l: 1,
            c: 5203837,
            t: 5
        }, {
            p: [-290, 51, -217],
            s: [78, 56, 80],
            c: 9342330,
            t: 10,
            bo: 1
        }, {
            p: [-252, 51, -178],
            s: [4, 56, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-328, 56, -178],
            s: [4, 51, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-252, 51, -256],
            s: [4, 56, 4],
            c: 11513775,
            t: 2
        }, {
            p: [-290, 76, -178],
            s: [72, 4, 4],
            c: 11513775,
            t: 2
        }, {
            p: [-290, 103, -178],
            s: [72, 4, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-290, 51, -178],
            s: [4, 70, 5],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-252, 76, -217],
            s: [4, 4, 74],
            c: 11513775,
            t: 2
        }, {
            p: [-252, 103, -217],
            s: [4, 4, 74],
            c: 11513775,
            t: 2
        }, {
            p: [-268, 113, -217],
            s: [45, 2, 84],
            l: 1,
            r: [0, 0, -.35],
            c: 7039851,
            t: 2
        }, {
            p: [-312, 113, -217],
            s: [45, 2, 84],
            l: 1,
            r: [0, 0, .35],
            c: 7039851,
            t: 2
        }, {
            p: [-290, 107, -217],
            s: [77, 4, 80],
            c: 9342330,
            t: 10
        }, {
            p: [-290, 120, -217],
            s: [5, 5, 89],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-267, 115, -217],
            s: [45, 2, 84],
            l: 1,
            r: [0, 0, -.35],
            t: 5
        }, {
            p: [-313, 115, -217],
            s: [45, 2, 84],
            l: 1,
            r: [0, 0, .35],
            t: 5
        }, {
            p: [-290, 125, -217],
            s: [5, 2, 89],
            t: 5
        }, {
            p: [-276, 51, -178],
            s: [2, 20, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-264, 51, -178],
            s: [2, 20, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-270, 71, -178],
            s: [14, 2, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-290, 111, -217],
            s: [55, 4, 80],
            c: 9342330,
            t: 10
        }, {
            p: [-290, 115, -217],
            s: [34, 4, 80],
            c: 9342330,
            t: 10
        }, {
            p: [-290, 119, -217],
            s: [13, 2, 80],
            c: 9342330,
            t: 10
        }, {
            p: [-319, 56, -198],
            s: [9, 72, 20],
            c: 8355711,
            t: 11
        }, {
            p: [-234, 51, -212],
            s: [34, 40, 96],
            c: 8882055,
            t: 11,
            bo: 1
        }, {
            p: [-151, 51, -212],
            s: [60, 40, 96],
            c: 8355711,
            t: 11,
            bo: 1
        }, {
            p: [-186, 90, -212],
            s: [128, 31, 94],
            c: 8215901,
            t: 10,
            bo: 1
        }, {
            p: [-249, 91, -166],
            s: [4, 30, 4],
            c: 8684676,
            t: 2,
            bo: 1
        }, {
            p: [-207, 91, -166],
            s: [4, 26, 4],
            c: 8684676,
            t: 2,
            bo: 1
        }, {
            p: [-165, 91, -166],
            s: [4, 26, 4],
            c: 8684676,
            t: 2,
            bo: 1
        }, {
            p: [-123, 91, -166],
            s: [4, 30, 4],
            c: 8684676,
            t: 2
        }, {
            p: [-217, 53, -164],
            s: [3, 31, 3],
            c: 8684676,
            t: 2,
            bo: 1
        }, {
            p: [-181, 53, -164],
            s: [3, 31, 3],
            c: 8684676,
            t: 2,
            bo: 1
        }, {
            p: [-199, 81, -164],
            s: [33, 3, 3],
            c: 8684676,
            t: 2,
            bo: 1
        }, {
            p: [-221, 131, -212],
            s: [70, 3, 100],
            l: 1,
            r: [0, 0, .35],
            c: 7894903,
            t: 2
        }, {
            p: [-186, 141, -212],
            s: [7, 7, 108],
            c: 8684676,
            t: 2
        }, {
            p: [-150, 131, -212],
            s: [73, 3, 100],
            l: 1,
            r: [0, 0, -.35],
            c: 7894903,
            t: 2
        }, {
            p: [-149, 134, -212],
            s: [73, 3, 100],
            l: 1,
            r: [0, 0, -.35],
            t: 5
        }, {
            p: [-186, 148, -212],
            s: [7, 3, 108],
            t: 5
        }, {
            p: [-165, 121, -166],
            s: [4, 16, 4],
            c: 8684676,
            t: 2,
            bo: 1
        }, {
            p: [-207, 121, -166],
            s: [4, 17, 4],
            c: 8684676,
            t: 2,
            bo: 1
        }, {
            p: [-186, 121, -212],
            s: [125, 6, 94],
            c: 8215901,
            t: 10
        }, {
            p: [-186, 127, -212],
            s: [93, 6, 94],
            c: 8215901,
            t: 10
        }, {
            p: [-186, 133, -212],
            s: [60, 6, 94],
            c: 8215901,
            t: 10
        }, {
            p: [-186, 139, -212],
            s: [32, 4, 94],
            c: 8215901,
            t: 10
        }, {
            p: [-135, 76, -236],
            s: [9, 72, 20],
            c: 5723991,
            t: 11
        }, {
            p: [-258, 51, -286],
            s: [66, 58, 56],
            c: 8029580,
            t: 10,
            bo: 1
        }, {
            p: [-123, 91, -258],
            s: [4, 30, 4],
            c: 8684676,
            t: 2,
            bo: 1
        }, {
            p: [-249, 91, -258],
            s: [4, 30, 4],
            c: 8684676,
            t: 2
        }, {
            p: [-207, 91, -258],
            s: [4, 26, 4],
            c: 8684676,
            t: 2,
            bo: 1
        }, {
            p: [-165, 91, -258],
            s: [4, 26, 4],
            c: 8684676,
            t: 2,
            bo: 1
        }, {
            p: [-207, 121, -258],
            s: [4, 17, 4],
            c: 8684676,
            t: 2
        }, {
            p: [-165, 121, -258],
            s: [4, 17, 4],
            c: 8684676,
            t: 2
        }, {
            p: [-226, 53, -261],
            s: [4, 56, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-226, 77, -288],
            s: [4, 4, 50],
            c: 11513775,
            t: 2
        }, {
            p: [-226, 105, -288],
            s: [4, 4, 50],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-257, 118, -287],
            s: [72, 4, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-257, 113, -303],
            s: [68, 2, 32],
            l: 1,
            r: [-.35, 0, 0],
            c: 5723991,
            t: 2
        }, {
            p: [-257, 112, -267],
            s: [68, 2, 40],
            l: 1,
            r: [.35, 0, 0],
            c: 5723991,
            t: 2
        }, {
            p: [-258, 109, -287],
            s: [66, 3, 56],
            c: 8029580,
            t: 10
        }, {
            p: [-257, 115, -303],
            s: [68, 2, 33],
            l: 1,
            r: [-.35, 0, 0],
            t: 5
        }, {
            p: [-257, 122, -287],
            s: [72, 2, 4],
            t: 5
        }, {
            p: [-258, 112, -286],
            s: [66, 4, 38],
            c: 8029580,
            t: 10
        }, {
            p: [-258, 116, -287],
            s: [66, 3, 21],
            c: 8029580,
            t: 10
        }, {
            p: [-257, 114, -266],
            s: [68, 2, 41],
            l: 1,
            r: [.35, 0, 0],
            t: 5
        }, {
            p: [-225, 51, -271],
            s: [2, 20, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-225, 51, -283],
            s: [2, 20, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-225, 71, -277],
            s: [2, 2, 14],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-193, 51, -329],
            s: [66, 38, 56],
            c: 7110518,
            t: 10,
            bo: 1
        }, {
            p: [-223, 53, -302],
            s: [4, 42, 4],
            c: 9013641,
            t: 2,
            bo: 1
        }, {
            p: [-161, 53, -302],
            s: [4, 42, 4],
            c: 9013641,
            t: 2,
            bo: 1
        }, {
            p: [-192, 87, -302],
            s: [58, 8, 4],
            c: 9013641,
            t: 2,
            bo: 1
        }, {
            p: [-226, 53, -315],
            s: [4, 56, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-192, 96, -327],
            s: [68, 2, 57],
            l: 1,
            r: [.17, 0, 0],
            c: 5592405,
            t: 2
        }, {
            p: [-192, 98, -327],
            s: [68, 2, 57],
            l: 1,
            r: [.17, 0, 0],
            t: 5
        }, {
            p: [-193, 89, -329],
            s: [66, 6, 56],
            c: 7110518,
            t: 10
        }, {
            p: [-193, 92, -339],
            s: [66, 3, 36],
            c: 7110518,
            t: 5
        }, {
            p: [-193, 95, -347],
            s: [66, 3, 20],
            c: 7110518,
            t: 10
        }, {
            p: [-186, 51, -302],
            s: [2, 20, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-174, 51, -302],
            s: [2, 20, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-180, 71, -302],
            s: [14, 2, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-216, 51, -254],
            s: [19, 2, 12],
            l: 1,
            t: 5
        }, {
            p: [-195, 51, -257],
            s: [12, 2, 6],
            l: 1,
            t: 5
        }, {
            p: [-185, 51, -254],
            s: [8, 2, 12],
            l: 1,
            t: 5
        }, {
            p: [-211, 51, -183],
            s: [12, 2, 14],
            l: 1,
            t: 5
        }, {
            p: [-201, 51, -179],
            s: [8, 2, 6],
            l: 1,
            t: 5
        }, {
            p: [-183, 51, -182],
            s: [8, 2, 12],
            l: 1,
            t: 5
        }, {
            p: [-197, 51, -62],
            s: [56, 57, 80],
            c: 8878432,
            t: 10,
            bo: 1
        }, {
            p: [-224, 51, -101],
            s: [4, 58, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-224, 51, -23],
            s: [4, 58, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-170, 51, -23],
            s: [4, 58, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-170, 51, -101],
            s: [4, 58, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-197, 77, -101],
            s: [50, 4, 4],
            c: 11513775,
            t: 2
        }, {
            p: [-197, 105, -101],
            s: [50, 4, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-197, 105, -62],
            s: [58, 4, 74],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-197, 121, -62],
            s: [65, 6, 6],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-197, 116, -84],
            s: [63, 2, 43],
            l: 1,
            r: [-.35, 0, 0],
            c: 6710886,
            t: 2
        }, {
            p: [-197, 116, -40],
            s: [63, 2, 44],
            l: 1,
            r: [.35, 0, 0],
            c: 6710886,
            t: 2
        }, {
            p: [-197, 118, -39],
            s: [63, 2, 44],
            l: 1,
            r: [.35, 0, 0],
            t: 5
        }, {
            p: [-197, 118, -85],
            s: [63, 2, 43],
            l: 1,
            r: [-.35, 0, 0],
            t: 5
        }, {
            p: [-197, 127, -62],
            s: [65, 2, 6],
            t: 5
        }, {
            p: [-197, 109, -62],
            s: [56, 3, 82],
            c: 8878432,
            t: 10
        }, {
            p: [-186, 117, -212],
            s: [122, 4, 96],
            c: 8684676,
            t: 2,
            bo: 1
        }, {
            p: [-197, 112, -62],
            s: [56, 3, 66],
            c: 8878432,
            t: 10
        }, {
            p: [-197, 115, -62],
            s: [56, 4, 50],
            c: 8878432,
            t: 10
        }, {
            p: [-197, 119, -62],
            s: [56, 4, 28],
            c: 8878432,
            t: 10
        }, {
            p: [-224, 51, -62],
            s: [5, 71, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-170, 51, -62],
            s: [5, 71, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-176, 92, -90],
            s: [7, 39, 12],
            c: 6250335,
            t: 11
        }, {
            p: [-225, 51, -36],
            s: [2, 22, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-225, 51, -48],
            s: [2, 22, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-225, 71, -42],
            s: [2, 2, 10],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-197, 51, 14],
            s: [74, 72, 70],
            c: 6320224,
            t: 10,
            bo: 1
        }, {
            p: [-233, 51, -20],
            s: [4, 73, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-233, 51, 48],
            s: [4, 73, 4],
            c: 7895160,
            t: 2
        }, {
            p: [-161, 51, 48],
            s: [4, 73, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-161, 51, -20],
            s: [4, 73, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-197, 53, 14],
            s: [77, 12, 73],
            c: 6250335,
            t: 11
        }, {
            p: [-160, 91, 14],
            s: [2, 4, 64],
            l: 1,
            c: 7500402,
            t: 2
        }, {
            p: [-197, 120, 14],
            s: [76, 4, 64],
            c: 7500402,
            t: 2,
            bo: 1
        }, {
            p: [-160, 66, -9],
            s: [2, 20, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-160, 66, 3],
            s: [2, 20, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-160, 84, -3],
            s: [2, 2, 10],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-197, 120, -20],
            s: [68, 4, 4],
            c: 7500402,
            t: 2,
            bo: 1
        }, {
            p: [-197, 120, 48],
            s: [68, 4, 4],
            l: 1,
            c: 7500402,
            t: 2
        }, {
            p: [-197, 136, 14],
            s: [5, 5, 80],
            c: 9868950,
            t: 2
        }, {
            p: [-219, 130, 14],
            s: [42, 2, 77],
            l: 1,
            r: [0, 0, .35],
            c: 5395026,
            t: 2
        }, {
            p: [-176, 130, 14],
            s: [41, 2, 77],
            l: 1,
            r: [0, 0, -.35],
            c: 5395026,
            t: 2
        }, {
            p: [-197, 124, 14],
            s: [74, 4, 70],
            c: 6320224,
            t: 10
        }, {
            p: [-176, 132, 14],
            s: [43, 2, 77],
            l: 1,
            r: [0, 0, -.35],
            t: 5
        }, {
            p: [-219, 132, 14],
            s: [44, 2, 77],
            l: 1,
            r: [0, 0, .35],
            t: 5
        }, {
            p: [-197, 141, 14],
            s: [5, 2, 80],
            t: 5
        }, {
            p: [-197, 128, 14],
            s: [53, 4, 70],
            c: 6320224,
            t: 10
        }, {
            p: [-197, 136, 14],
            s: [11, 3, 70],
            c: 6320224,
            t: 10
        }, {
            p: [-197, 132, 14],
            s: [31, 4, 70],
            c: 6320224,
            t: 10
        }, {
            p: [-197, 91, -20],
            s: [68, 4, 4],
            c: 7500402,
            t: 2
        }, {
            p: [-281, 51, 64],
            s: [96, 58, 80],
            c: 7558742,
            t: 10,
            bo: 1
        }, {
            p: [-282, 78, 25],
            s: [88, 4, 4],
            c: 9013641,
            t: 2
        }, {
            p: [-282, 120, 64],
            s: [102, 7, 7],
            l: 1,
            c: 11513775,
            t: 2
        }, {
            p: [-282, 116, 43],
            s: [100, 2, 48],
            l: 1,
            r: [-.35, 0, 0],
            c: 5723991,
            t: 2
        }, {
            p: [-282, 115, 87],
            s: [100, 2, 49],
            l: 1,
            r: [.35, 0, 0],
            c: 5723991,
            t: 2
        }, {
            p: [-282, 118, 42],
            s: [100, 2, 48],
            l: 1,
            r: [-.35, 0, 0],
            t: 5
        }, {
            p: [-282, 117, 88],
            s: [100, 2, 49],
            l: 1,
            r: [.35, 0, 0],
            t: 5
        }, {
            p: [-282, 127, 64],
            s: [102, 2, 7],
            l: 1,
            t: 5
        }, {
            p: [-281, 109, 64],
            s: [96, 4, 80],
            c: 6903125,
            t: 10
        }, {
            p: [-281, 113, 64],
            s: [96, 4, 58],
            c: 6903125,
            t: 10
        }, {
            p: [-281, 117, 64],
            s: [96, 4, 35],
            c: 6903125,
            t: 10
        }, {
            p: [-281, 121, 64],
            s: [96, 3, 15],
            c: 6903125,
            t: 10
        }, {
            p: [-264, 51, 25],
            s: [2, 22, 4],
            c: 9013384,
            t: 2,
            bo: 1
        }, {
            p: [-252, 51, 25],
            s: [2, 22, 4],
            c: 9013641,
            t: 2,
            bo: 1
        }, {
            p: [-258, 71, 25],
            s: [10, 2, 4],
            c: 9539985,
            t: 2,
            bo: 1
        }, {
            p: [-326, 58, -77],
            s: [5, 7, 5],
            c: 8223868,
            t: 11
        }, {
            p: [-326, 58, -61],
            s: [5, 7, 5],
            c: 8223868,
            t: 11
        }, {
            p: [-326, 58, -93],
            s: [5, 7, 5],
            c: 8223868,
            t: 11
        }, {
            p: [-326, 58, -109],
            s: [5, 7, 5],
            c: 8223868,
            t: 11
        }, {
            p: [-326, 58, -126],
            s: [5, 7, 5],
            c: 8223868,
            t: 11
        }, {
            p: [-326, 58, -143],
            s: [5, 7, 5],
            c: 8223868,
            t: 11
        }, {
            p: [-326, 58, -160],
            s: [5, 7, 5],
            c: 8223868,
            t: 11
        }, {
            p: [-326, 58, -177],
            s: [5, 7, 5],
            c: 8223868,
            t: 11
        }, {
            p: [-326, 58, -44],
            s: [5, 7, 5],
            c: 8223868,
            t: 11
        }, {
            p: [-326, 58, -27],
            s: [5, 7, 5],
            c: 8223868,
            t: 11
        }, {
            p: [-326, 58, -10],
            s: [5, 7, 5],
            c: 8223868,
            t: 11
        }, {
            p: [-326, 58, 7],
            s: [5, 7, 5],
            c: 8223868,
            t: 11
        }, {
            p: [-326, 58, 24],
            s: [5, 7, 5],
            c: 8223868,
            t: 11
        }, {
            p: [-326, 61, -79],
            s: [2, 2, 205],
            c: 13619151,
            t: 2,
            bo: 1
        }, {
            p: [-120, 51, -159],
            s: [4, 55, 4],
            c: 9671571,
            t: 2,
            bo: 1
        }, {
            p: [-24, 51, -159],
            s: [4, 55, 4],
            c: 9013641,
            t: 2,
            bo: 1
        }, {
            p: [-24, 51, -265],
            s: [4, 55, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-120, 51, -265],
            s: [4, 55, 4],
            c: 8026746,
            t: 2,
            bo: 1
        }, {
            p: [-72, 51, -265],
            s: [4, 72, 5],
            c: 9539985,
            t: 2,
            bo: 1
        }, {
            p: [-72, 51, -159],
            s: [4, 72, 5],
            c: 9211020,
            t: 2,
            bo: 1
        }, {
            p: [-100, 114, -212],
            s: [56, 3, 114],
            l: 1,
            r: [0, 0, .35],
            c: 5395026,
            t: 2
        }, {
            p: [-72, 122, -212],
            s: [6, 6, 119],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-45, 114, -212],
            s: [56, 3, 114],
            l: 1,
            r: [0, 0, -.35],
            c: 5395026,
            t: 2
        }, {
            p: [-72, 78, -265],
            s: [92, 4, 4],
            c: 7697781,
            t: 2
        }, {
            p: [-24, 78, -212],
            s: [4, 4, 102],
            c: 8355711,
            t: 2
        }, {
            p: [-72, 78, -159],
            s: [92, 4, 4],
            c: 9211020,
            t: 2
        }, {
            p: [-120, 78, -212],
            s: [4, 4, 102],
            l: 1,
            c: 8553090,
            t: 2
        }, {
            p: [-72, 102, -159],
            s: [92, 4, 4],
            c: 9539985,
            t: 2,
            bo: 1
        }, {
            p: [-72, 102, -265],
            s: [92, 4, 4],
            c: 9671571,
            t: 2,
            bo: 1
        }, {
            p: [-24, 51, -212],
            s: [5, 55, 4],
            c: 8355711,
            t: 2,
            bo: 1
        }, {
            p: [-24, 102, -212],
            s: [4, 4, 102],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-120, 102, -212],
            s: [4, 4, 102],
            c: 9013641,
            t: 2,
            bo: 1
        }, {
            p: [-44, 117, -212],
            s: [56, 3, 114],
            l: 1,
            r: [0, 0, -.35],
            t: 5
        }, {
            p: [-101, 117, -212],
            s: [56, 3, 114],
            l: 1,
            r: [0, 0, .35],
            t: 5
        }, {
            p: [-72, 128, -212],
            s: [6, 2, 119],
            t: 5
        }, {
            p: [-111, 51, -265],
            s: [2, 23, 4],
            c: 11513775,
            t: 2
        }, {
            p: [-99, 51, -265],
            s: [2, 23, 4],
            c: 11513775,
            t: 2
        }, {
            p: [-105, 72, -265],
            s: [10, 2, 4],
            c: 11513775,
            t: 2
        }, {
            p: [-108, 51, -356],
            s: [102, 60, 92],
            c: 8217957,
            t: 10,
            bo: 1
        }, {
            p: [-58, 53, -311],
            s: [4, 59, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-158, 53, -311],
            s: [4, 59, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-158, 53, -357],
            s: [4, 55, 4],
            c: 11513775,
            t: 2
        }, {
            p: [-124, 53, -311],
            s: [4, 74, 5],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-92, 53, -311],
            s: [4, 75, 5],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-108, 79, -311],
            s: [96, 4, 4],
            c: 11513775,
            t: 2
        }, {
            p: [-108, 108, -311],
            s: [96, 4, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-108, 129, -356],
            s: [6, 6, 105],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-136, 121, -356],
            s: [57, 3, 99],
            l: 1,
            r: [0, 0, .35],
            c: 5855577,
            t: 2
        }, {
            p: [-58, 108, -358],
            s: [4, 4, 90],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-158, 108, -355],
            s: [4, 4, 84],
            l: 1,
            c: 11513775,
            t: 2
        }, {
            p: [-137, 124, -356],
            s: [57, 2, 99],
            l: 1,
            r: [0, 0, .35],
            t: 5
        }, {
            p: [-108, 135, -356],
            s: [6, 2, 105],
            t: 5
        }, {
            p: [-79, 124, -356],
            s: [57, 2, 99],
            l: 1,
            r: [0, 0, -.35],
            t: 5
        }, {
            p: [-80, 121, -356],
            s: [57, 3, 99],
            l: 1,
            r: [0, 0, -.35],
            c: 6052956,
            t: 2
        }, {
            p: [-108, 112, -356],
            s: [102, 5, 92],
            c: 8217957,
            t: 10
        }, {
            p: [-108, 117, -356],
            s: [77, 5, 92],
            c: 8217957,
            t: 10
        }, {
            p: [-108, 122, -356],
            s: [49, 5, 92],
            c: 8217957,
            t: 10
        }, {
            p: [-108, 127, -356],
            s: [22, 5, 92],
            c: 8217957,
            t: 10
        }, {
            p: [-148, 51, -311],
            s: [2, 22, 4],
            c: 11513775,
            t: 2
        }, {
            p: [-136, 51, -311],
            s: [2, 22, 4],
            c: 11513775,
            t: 2
        }, {
            p: [-142, 71, -311],
            s: [10, 2, 4],
            c: 11513775,
            t: 2
        }, {
            p: [-101, 51, -20],
            s: [60, 62, 100],
            c: 6973550,
            t: 10,
            bo: 1
        }, {
            p: [-101, 130, -20],
            s: [5, 5, 108],
            c: 9868950,
            t: 2
        }, {
            p: [-130, 51, 29],
            s: [4, 63, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-72, 51, 29],
            s: [4, 63, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-72, 51, -71],
            s: [4, 63, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-26, 51, -71],
            s: [4, 70, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-26, 51, -121],
            s: [4, 70, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-128, 51, -121],
            s: [4, 70, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-78, 51, -121],
            s: [4, 70, 5],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-72, 51, -19],
            s: [4, 63, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-101, 87, 29],
            s: [54, 4, 4],
            c: 7500402,
            t: 2
        }, {
            p: [-101, 110, 29],
            s: [54, 4, 4],
            c: 7500402,
            t: 2,
            bo: 1
        }, {
            p: [-103, 91, -121],
            s: [46, 4, 4],
            l: 1,
            c: 7500402,
            t: 2
        }, {
            p: [-52, 91, -121],
            s: [48, 4, 4],
            l: 1,
            c: 7500402,
            t: 2
        }, {
            p: [-49, 91, -71],
            s: [42, 4, 4],
            c: 7500402,
            t: 2
        }, {
            p: [-52, 117, -121],
            s: [48, 4, 4],
            c: 7500402,
            t: 2,
            bo: 1
        }, {
            p: [-103, 117, -121],
            s: [46, 4, 4],
            c: 7500402,
            t: 2,
            bo: 1
        }, {
            p: [-101, 87, 5],
            s: [62, 4, 44],
            c: 7500402,
            t: 2
        }, {
            p: [-128, 91, -95],
            s: [4, 4, 48],
            l: 1,
            c: 7500402,
            t: 2
        }, {
            p: [-26, 117, -96],
            s: [4, 4, 46],
            c: 7500402,
            t: 2,
            bo: 1
        }, {
            p: [-26, 91, -96],
            s: [4, 4, 46],
            c: 7500402,
            t: 2
        }, {
            p: [-84, 122, -20],
            s: [39, 2, 105],
            l: 1,
            r: [0, 0, -.52],
            c: 4737096,
            t: 2
        }, {
            p: [-118, 122, -20],
            s: [39, 2, 105],
            l: 1,
            r: [0, 0, .53],
            c: 4737096,
            t: 2
        }, {
            p: [-52, 117, -71],
            s: [48, 4, 4],
            c: 7500402,
            t: 2,
            bo: 1
        }, {
            p: [-130, 51, -69],
            s: [4, 63, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-130, 51, -19],
            s: [5, 63, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-101, 114, -20],
            s: [61, 4, 100],
            c: 6973550,
            t: 10,
            bo: 1
        }, {
            p: [-101, 118, -20],
            s: [50, 4, 100],
            c: 6973550,
            t: 10
        }, {
            p: [-101, 122, -20],
            s: [35, 4, 100],
            c: 6973550,
            t: 10
        }, {
            p: [-101, 126, -20],
            s: [22, 4, 100],
            c: 6973550,
            t: 10
        }, {
            p: [-101, 130, -20],
            s: [9, 1, 100],
            c: 6973550,
            t: 5
        }, {
            p: [-119, 124, -20],
            s: [39, 2, 105],
            l: 1,
            r: [0, 0, .53],
            t: 5
        }, {
            p: [-83, 124, -20],
            s: [39, 2, 105],
            l: 1,
            r: [0, 0, -.52],
            t: 5
        }, {
            p: [-101, 135, -20],
            s: [5, 2, 108],
            t: 5
        }, {
            p: [-77, 51, -96],
            s: [104, 68, 52],
            c: 6254184,
            t: 10,
            bo: 1
        }, {
            p: [-128, 117, -95],
            s: [4, 4, 48],
            c: 7500402,
            t: 2,
            bo: 1
        }, {
            p: [-77, 119, -96],
            s: [104, 5, 52],
            c: 6254184,
            t: 10
        }, {
            p: [-77, 129, -96],
            s: [114, 5, 5],
            l: 1,
            c: 7500402,
            t: 2
        }, {
            p: [-77, 125, -112],
            s: [108, 2, 31],
            l: 1,
            r: [-.35, 0, 0],
            c: 5723991,
            t: 2
        }, {
            p: [-77, 125, -80],
            s: [108, 2, 31],
            l: 1,
            r: [.35, 0, 0],
            c: 5723991,
            t: 2
        }, {
            p: [-77, 127, -113],
            s: [108, 2, 31],
            l: 1,
            r: [-.35, 0, 0],
            t: 5
        }, {
            p: [-77, 127, -79],
            s: [108, 2, 31],
            l: 1,
            r: [.35, 0, 0],
            t: 5
        }, {
            p: [-77, 134, -96],
            s: [114, 2, 5],
            l: 1,
            t: 5
        }, {
            p: [-77, 124, -96],
            s: [104, 4, 38],
            c: 6254184,
            t: 10
        }, {
            p: [-77, 128, -96],
            s: [104, 4, 16],
            c: 6254184,
            t: 10
        }, {
            p: [-46, 65, -75],
            s: [12, 77, 6],
            c: 10658466,
            t: 11
        }, {
            p: [-25, 64, -102],
            s: [2, 22, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-25, 64, -90],
            s: [2, 22, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-25, 84, -96],
            s: [2, 2, 10],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-92, 53, -87],
            s: [77, 12, 73],
            c: 6250335,
            t: 11
        }, {
            p: [175, 66, -254],
            s: [6, 41, 46],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [175, 103, -334],
            s: [6, 21, 27],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [242, 66, -347],
            s: [128, 62, 7],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [267, 66, -236],
            s: [78, 49, 9],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [175, 66, -328],
            s: [6, 37, 46],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [183, 66, -212],
            s: [38, 102, 38],
            c: 10983566,
            t: 11
        }, {
            p: [239, 65, -259],
            s: [125, 2, 38],
            c: 5723991,
            t: 11
        }, {
            p: [240, 65, -292],
            s: [123, 2, 28],
            c: 6694952,
            t: 5
        }, {
            p: [-102, 66, 118],
            s: [126, 38, 94],
            c: 8215901,
            t: 10,
            bo: 1
        }, {
            p: [-164, 66, 72],
            s: [4, 38, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-40, 66, 72],
            s: [4, 38, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-102, 66, 72],
            s: [4, 62, 5],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-102, 100, 72],
            s: [120, 4, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-102, 126, 117],
            s: [6, 6, 102],
            c: 11513775,
            t: 2
        }, {
            p: [-67, 115, 117],
            s: [71, 3, 99],
            l: 1,
            r: [0, 0, -.35],
            c: 5263440,
            t: 2
        }, {
            p: [-137, 115, 117],
            s: [69, 3, 99],
            l: 1,
            r: [0, 0, .35],
            c: 5263440,
            t: 2
        }, {
            p: [-137, 118, 117],
            s: [71, 2, 99],
            l: 1,
            r: [0, 0, .35],
            t: 5
        }, {
            p: [-102, 132, 117],
            s: [6, 2, 102],
            t: 5
        }, {
            p: [-66, 118, 117],
            s: [71, 2, 99],
            l: 1,
            r: [0, 0, -.35],
            t: 5
        }, {
            p: [-102, 104, 118],
            s: [130, 6, 94],
            c: 8215901,
            t: 10,
            bo: 1
        }, {
            p: [-102, 110, 118],
            s: [97, 5, 94],
            c: 8215901,
            t: 10
        }, {
            p: [-102, 115, 118],
            s: [70, 5, 94],
            c: 8215901,
            t: 10
        }, {
            p: [-102, 120, 118],
            s: [43, 5, 94],
            c: 8215901,
            t: 10
        }, {
            p: [-102, 125, 118],
            s: [17, 3, 94],
            c: 8215901,
            t: 10
        }, {
            p: [-127, 66, 72],
            s: [2, 21, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-139, 66, 72],
            s: [2, 21, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-133, 85, 72],
            s: [10, 2, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-194, 51, 77],
            s: [56, 49, 65],
            c: 8878432,
            t: 10,
            bo: 1
        }, {
            p: [-179, 105, 59],
            s: [39, 2, 105],
            l: 1,
            r: [0, 0, -.52],
            c: 4737096,
            t: 2
        }, {
            p: [-178, 107, 59],
            s: [39, 2, 105],
            l: 1,
            r: [0, 0, -.52],
            t: 5
        }, {
            p: [-167, 93, 60],
            s: [4, 4, 22],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [76, 51, -141],
            s: [84, 62, 142],
            c: 8878432,
            t: 10,
            bo: 1
        }, {
            p: [158, 62, -129],
            s: [82, 50, 128],
            c: 8217957,
            t: 10,
            bo: 1
        }, {
            p: [-48, 92, 88],
            s: [7, 34, 12],
            c: 6710886,
            t: 11
        }, {
            p: [35, 66, -211],
            s: [4, 48, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [117, 66, -211],
            s: [4, 48, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [35, 66, -71],
            s: [4, 48, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [35, 66, -165],
            s: [5, 69, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [35, 66, -117],
            s: [5, 69, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [76, 66, -211],
            s: [4, 48, 5],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-197, 77, -62],
            s: [58, 4, 74],
            c: 11513775,
            t: 2
        }, {
            p: [76, 87, -211],
            s: [78, 4, 4],
            c: 7895160,
            t: 2
        }, {
            p: [76, 110, -211],
            s: [78, 4, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [35, 110, -141],
            s: [4, 4, 136],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [35, 87, -141],
            s: [4, 4, 136],
            c: 7895160,
            t: 2
        }, {
            p: [76, 87, -71],
            s: [78, 4, 4],
            c: 7895160,
            t: 2
        }, {
            p: [76, 110, -71],
            s: [78, 4, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [76, 138, -141],
            s: [102, 6, 6],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [76, 126, -179],
            s: [92, 3, 81],
            l: 1,
            r: [-.35, 0, 0],
            c: 4605253,
            t: 2
        }, {
            p: [76, 126, -103],
            s: [92, 3, 81],
            l: 1,
            r: [.35, 0, 0],
            c: 4605253,
            t: 2
        }, {
            p: [76, 129, -102],
            s: [92, 2, 81],
            l: 1,
            r: [.35, 0, 0],
            t: 5
        }, {
            p: [76, 144, -141],
            s: [102, 2, 6],
            l: 1,
            t: 5
        }, {
            p: [76, 114, -141],
            s: [84, 20, 47],
            c: 8878432,
            t: 10
        }, {
            p: [76, 134, -141],
            s: [84, 5, 33],
            c: 8878432,
            t: 10
        }, {
            p: [76, 129, -180],
            s: [92, 2, 81],
            l: 1,
            r: [-.35, 0, 0],
            t: 5
        }, {
            p: [-221, 134, -212],
            s: [72, 3, 100],
            l: 1,
            r: [0, 0, .35],
            t: 5
        }, {
            p: [117, 110, -141],
            s: [4, 4, 136],
            l: 1,
            c: 7895160,
            t: 2
        }, {
            p: [198, 66, -192],
            s: [4, 47, 4],
            c: 11513775,
            t: 2
        }, {
            p: [198, 66, -66],
            s: [4, 47, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [159, 84, -66],
            s: [4, 51, 5],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [198, 66, -129],
            s: [5, 47, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [158, 66, -158],
            s: [85, 17, 74],
            c: 7235166,
            t: 11
        }, {
            p: [117, 87, -188],
            s: [4, 4, 42],
            c: 7895160,
            t: 2
        }, {
            p: [159, 134, -129],
            s: [5, 5, 140],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [181, 124, -129],
            s: [50, 2, 135],
            l: 1,
            r: [0, 0, -.52],
            c: 6908265,
            t: 2
        }, {
            p: [159, 109, -66],
            s: [74, 4, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [159, 83, -192],
            s: [4, 51, 5],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [159, 109, -192],
            s: [74, 4, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [120, 66, -192],
            s: [4, 47, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [136, 126, -129],
            s: [51, 2, 135],
            l: 1,
            r: [0, 0, .52],
            t: 5
        }, {
            p: [136, 124, -129],
            s: [48, 2, 135],
            l: 1,
            r: [0, 0, .52],
            c: 6908265,
            t: 2
        }, {
            p: [182, 126, -129],
            s: [51, 2, 135],
            l: 1,
            r: [0, 0, -.52],
            t: 5
        }, {
            p: [159, 139, -129],
            s: [5, 2, 140],
            t: 5
        }, {
            p: [198, 109, -129],
            s: [4, 4, 122],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [158, 112, -129],
            s: [82, 5, 128],
            l: 1,
            c: 8217957,
            t: 10
        }, {
            p: [158, 117, -129],
            s: [69, 4, 128],
            l: 1,
            c: 8217957,
            t: 10
        }, {
            p: [158, 121, -129],
            s: [55, 4, 128],
            l: 1,
            c: 8217957,
            t: 10
        }, {
            p: [158, 125, -129],
            s: [40, 4, 128],
            l: 1,
            c: 8217957,
            t: 10
        }, {
            p: [158, 129, -129],
            s: [26, 4, 128],
            l: 1,
            c: 8217957,
            t: 10
        }, {
            p: [158, 133, -129],
            s: [13, 4, 128],
            l: 1,
            c: 8217957,
            t: 10
        }, {
            p: [34, 63, -135],
            s: [2, 22, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [34, 63, -147],
            s: [2, 22, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [34, 83, -141],
            s: [2, 2, 10],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [102, 64, -212],
            s: [2, 22, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [96, 84, -212],
            s: [10, 2, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [90, 64, -212],
            s: [2, 22, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [183, 118, -212],
            s: [33, 102, 33],
            c: 13812408,
            t: 11
        }, {
            p: [183, 219, -212],
            s: [38, 7, 38],
            c: 10983566,
            t: 11
        }, {
            p: [183, 256, -212],
            s: [3, 3, 37],
            c: 10983566,
            t: 11
        }, {
            p: [183, 227, -231],
            s: [38, 39, 3],
            l: 1,
            r: [.52, 0, 0],
            c: 6908265,
            t: 2
        }, {
            p: [183, 227, -192],
            s: [38, 39, 3],
            l: 1,
            r: [-.52, 0, 0],
            c: 6908265,
            t: 2
        }, {
            p: [203, 227, -212],
            s: [3, 39, 38],
            l: 1,
            r: [0, 0, .52],
            c: 6908265,
            t: 2
        }, {
            p: [163, 227, -212],
            s: [3, 39, 38],
            l: 1,
            r: [0, 0, -.52],
            c: 6908265,
            t: 2
        }, {
            p: [183, 227, -212],
            s: [37, 11, 29],
            c: 10983566,
            t: 11
        }, {
            p: [183, 238, -212],
            s: [37, 6, 23],
            c: 10983566,
            t: 11
        }, {
            p: [183, 244, -212],
            s: [37, 6, 16],
            c: 10983566,
            t: 11
        }, {
            p: [183, 250, -212],
            s: [37, 6, 9],
            c: 10983566,
            t: 11
        }, {
            p: [183, 256, -212],
            s: [37, 5, 3],
            c: 10983566,
            t: 11
        }, {
            p: [183, 227, -212],
            s: [31, 11, 37],
            c: 10983566,
            t: 11
        }, {
            p: [183, 238, -212],
            s: [24, 6, 37],
            c: 10983566,
            t: 11
        }, {
            p: [183, 244, -212],
            s: [17, 6, 37],
            c: 10983566,
            t: 11
        }, {
            p: [183, 250, -212],
            s: [10, 6, 37],
            c: 10983566,
            t: 11
        }, {
            p: [183, 118, -212],
            s: [36, 102, 10],
            c: 9341833,
            t: 2
        }, {
            p: [183, 118, -212],
            s: [11, 102, 36],
            c: 9341833,
            t: 2
        }, {
            p: [183, 259, -212],
            s: [3, 3, 41],
            c: 5066061,
            t: 2
        }, {
            p: [183, 259, -212],
            s: [40, 3, 3],
            c: 5066061,
            t: 2
        }, {
            p: [161, 228, -212],
            s: [2, 39, 38],
            l: 1,
            r: [0, 0, -.52],
            t: 5
        }, {
            p: [205, 228, -212],
            s: [2, 39, 38],
            l: 1,
            r: [0, 0, .52],
            t: 5
        }, {
            p: [183, 228, -233],
            s: [38, 39, 2],
            l: 1,
            r: [.52, 0, 0],
            t: 5
        }, {
            p: [183, 228, -190],
            s: [38, 39, 2],
            l: 1,
            r: [-.52, 0, 0],
            t: 5
        }, {
            p: [183, 262, -212],
            s: [3, 2, 41],
            t: 5
        }, {
            p: [183, 262, -212],
            s: [40, 2, 3],
            t: 5
        }, {
            p: [183, 162, -212],
            s: [42, 7, 42],
            c: 8220776,
            bo: 1
        }, {
            p: [183, 169, -212],
            s: [42, 2, 42],
            t: 5
        }, {
            p: [183, 65, -212],
            s: [40, 69, 40],
            c: 8220776,
            t: 11,
            bo: 1
        }, {
            p: [175, 65, -347],
            s: [9, 68, 10],
            c: 6050122,
            t: 11,
            bo: 1
        }, {
            p: [175, 65, -237],
            s: [9, 67, 10],
            c: 6379345,
            t: 11,
            bo: 1
        }, {
            p: [175, 120, -329],
            s: [9, 5, 26],
            c: 8220776,
            t: 11,
            bo: 1
        }, {
            p: [199, 115, -236],
            s: [39, 9, 12],
            c: 6575952,
            t: 11,
            bo: 1
        }, {
            p: [239, 120, -347],
            s: [119, 9, 10],
            c: 7563104,
            t: 11,
            bo: 1
        }, {
            p: [303, 66, -304],
            s: [6, 44, 80],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [303, 66, -245],
            s: [6, 40, 6],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [287, 65, -292],
            s: [29, 10, 49],
            c: 9013641,
            t: 2
        }, {
            p: [271, 65, -292],
            s: [3, 8, 24],
            c: 9013641,
            t: 2
        }, {
            p: [265, 65, -292],
            s: [3, 4, 24],
            c: 9013641,
            t: 2
        }, {
            p: [268, 65, -292],
            s: [3, 6, 24],
            c: 9013641,
            t: 2
        }, {
            p: [273, 65, -316],
            s: [3, 11, 3],
            l: 1,
            c: 7039851,
            t: 2
        }, {
            p: [273, 65, -268],
            s: [3, 11, 3],
            l: 1,
            c: 7039851,
            t: 2
        }, {
            p: [234, 70, -260],
            s: [7, 1, 25],
            c: 3616550,
            t: 5
        }, {
            p: [234, 67, -273],
            s: [7, 6, 1],
            c: 3616550,
            t: 5
        }, {
            p: [234, 67, -247],
            s: [7, 6, 1],
            c: 3616550,
            t: 5
        }, {
            p: [239, 70, -324],
            s: [7, 1, 25],
            c: 3616550,
            t: 5
        }, {
            p: [207, 71, -324],
            s: [1, 5, 25],
            pe: 1,
            c: 3616550,
            t: 5
        }, {
            p: [231, 71, -260],
            s: [1, 5, 25],
            pe: 1,
            c: 3616550,
            t: 5
        }, {
            p: [239, 67, -311],
            s: [7, 6, 1],
            c: 3616550,
            t: 5
        }, {
            p: [239, 67, -337],
            s: [7, 6, 1],
            c: 3616550,
            t: 5
        }, {
            p: [210, 70, -324],
            s: [7, 1, 25],
            c: 3616550,
            t: 5
        }, {
            p: [210, 67, -311],
            s: [7, 6, 1],
            c: 3616550,
            t: 5
        }, {
            p: [210, 67, -337],
            s: [7, 6, 1],
            c: 3616550,
            t: 5
        }, {
            p: [236, 71, -324],
            s: [1, 5, 25],
            pe: 1,
            c: 3616550,
            t: 5
        }, {
            p: [195, 66, -236],
            s: [34, 52, 9],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [303, 65, -347],
            s: [9, 69, 10],
            c: 5919310,
            t: 11
        }, {
            p: [303, 65, -236],
            s: [9, 63, 12],
            c: 6246729,
            t: 11,
            bo: 1
        }, {
            p: [304, 66, -256],
            s: [5, 1, 19],
            c: 8220776,
            t: 11
        }, {
            p: [220, 66, -235],
            s: [19, 1, 10],
            c: 8220776,
            t: 11
        }, {
            p: [175, 65, -305],
            s: [7, 34, 5],
            c: 7694689,
            t: 11,
            bo: 1
        }, {
            p: [175, 65, -279],
            s: [7, 34, 5],
            c: 7234139,
            t: 11,
            bo: 1
        }, {
            p: [175, 99, -302],
            s: [7, 5, 11],
            c: 7233881,
            t: 11,
            bo: 1
        }, {
            p: [175, 66, -292],
            s: [7, 1, 21],
            c: 8220776,
            t: 11
        }, {
            p: [336, 51, -302],
            s: [58, 71, 58],
            c: 6973550,
            t: 10,
            bo: 1
        }, {
            p: [364, 66, -274],
            s: [4, 56, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [336, 66, -274],
            s: [4, 65, 5],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [308, 66, -274],
            s: [4, 56, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [336, 92, -274],
            s: [52, 4, 4],
            c: 11513775,
            t: 2
        }, {
            p: [344, 64, -273],
            s: [2, 22, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [336, 130, -302],
            s: [6, 6, 68],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [320, 127, -302],
            s: [32, 2, 65],
            l: 1,
            r: [0, 0, .35],
            c: 5855577,
            t: 2
        }, {
            p: [336, 118, -274],
            s: [52, 4, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [356, 64, -273],
            s: [2, 22, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [350, 84, -273],
            s: [10, 2, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [336, 122, -302],
            s: [58, 3, 58],
            c: 6973550,
            t: 10
        }, {
            p: [336, 125, -302],
            s: [45, 3, 58],
            c: 6973550,
            t: 10
        }, {
            p: [336, 128, -302],
            s: [28, 3, 58],
            c: 6973550,
            t: 10
        }, {
            p: [336, 131, -302],
            s: [15, 3, 58],
            c: 6973550,
            t: 10
        }, {
            p: [319, 129, -302],
            s: [32, 2, 65],
            l: 1,
            r: [0, 0, .35],
            t: 5
        }, {
            p: [354, 129, -302],
            s: [32, 2, 65],
            l: 1,
            r: [0, 0, -.35],
            t: 5
        }, {
            p: [353, 127, -302],
            s: [32, 2, 65],
            l: 1,
            r: [0, 0, -.35],
            c: 5855577,
            t: 2
        }, {
            p: [336, 136, -302],
            s: [6, 2, 68],
            t: 5
        }, {
            p: [185, 84, -65],
            s: [2, 20, 2],
            l: 1,
            c: 11513775,
            t: 2
        }, {
            p: [173, 84, -65],
            s: [2, 20, 2],
            l: 1,
            c: 11513775,
            t: 2
        }, {
            p: [179, 102, -65],
            s: [10, 2, 2],
            l: 1,
            c: 11513775,
            t: 2
        }, {
            p: [277, 51, -190],
            s: [88, 63, 86],
            c: 6254184,
            t: 10,
            bo: 1
        }, {
            p: [320, 51, -232],
            s: [4, 63, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [281, 51, -110],
            s: [106, 72, 80],
            c: 8878432,
            t: 10,
            bo: 1
        }, {
            p: [333, 66, -149],
            s: [4, 58, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [320, 51, -152],
            s: [4, 63, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [320, 51, -192],
            s: [5, 77, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [234, 51, -192],
            s: [5, 77, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [234, 51, -152],
            s: [4, 63, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [234, 51, -232],
            s: [4, 63, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [229, 66, -149],
            s: [4, 58, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [280, 66, 38],
            s: [4, 65, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [229, 66, -71],
            s: [4, 58, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [333, 66, -110],
            s: [5, 72, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [320, 88, -192],
            s: [4, 4, 76],
            c: 7895160,
            t: 2
        }, {
            p: [320, 110, -192],
            s: [4, 4, 76],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [234, 88, -192],
            s: [4, 4, 76],
            c: 7895160,
            t: 2
        }, {
            p: [234, 110, -192],
            s: [4, 4, 76],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [301, 110, -232],
            s: [34, 4, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [301, 88, -232],
            s: [34, 4, 4],
            l: 1,
            c: 7895160,
            t: 2
        }, {
            p: [277, 127, -192],
            s: [102, 5, 5],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [277, 119, -166],
            s: [97, 2, 59],
            l: 1,
            r: [.35, 0, 0],
            c: 5395026,
            t: 2
        }, {
            p: [277, 121, -214],
            s: [97, 2, 47],
            l: 1,
            r: [-.35, 0, 0],
            c: 5395026,
            t: 2
        }, {
            p: [277, 114, -190],
            s: [88, 3, 86],
            c: 6254184,
            t: 10
        }, {
            p: [277, 117, -190],
            s: [88, 3, 68],
            c: 6254184,
            t: 10
        }, {
            p: [277, 120, -190],
            s: [88, 3, 50],
            c: 6254184,
            t: 10
        }, {
            p: [277, 123, -190],
            s: [88, 3, 30],
            c: 6254184,
            t: 10
        }, {
            p: [277, 126, -190],
            s: [88, 2, 16],
            c: 6254184,
            t: 10
        }, {
            p: [277, 121, -165],
            s: [97, 2, 59],
            l: 1,
            r: [.35, 0, 0],
            t: 5
        }, {
            p: [277, 123, -215],
            s: [97, 2, 47],
            l: 1,
            r: [-.35, 0, 0],
            t: 5
        }, {
            p: [277, 132, -192],
            s: [102, 2, 5],
            t: 5
        }, {
            p: [333, 93, -110],
            s: [4, 4, 74],
            c: 11513775,
            t: 2
        }, {
            p: [333, 120, -110],
            s: [4, 4, 74],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [11, 137, -444],
            s: [100, 5, 5],
            c: 7895160,
            t: 2
        }, {
            p: [11, 142, -444],
            s: [100, 2, 5],
            t: 5
        }, {
            p: [10, 128, -416],
            s: [97, 2, 61],
            l: 1,
            r: [.35, 0, 0],
            c: 5395026,
            t: 2
        }, {
            p: [10, 130, -416],
            s: [97, 2, 62],
            l: 1,
            r: [.35, 0, 0],
            t: 5
        }, {
            p: [43, 69, -400],
            s: [13, 70, 7],
            c: 6381921,
            t: 11
        }, {
            p: [229, 66, -110],
            s: [5, 72, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [229, 93, -110],
            s: [4, 4, 74],
            c: 11513775,
            t: 2
        }, {
            p: [229, 120, -110],
            s: [4, 4, 74],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [281, 120, -149],
            s: [100, 4, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [281, 120, -71],
            s: [100, 4, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [281, 93, -149],
            s: [100, 4, 4],
            l: 1,
            c: 11513775,
            t: 2
        }, {
            p: [281, 137, -110],
            s: [120, 5, 5],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [281, 131, -132],
            s: [113, 2, 50],
            l: 1,
            r: [-.35, 0, 0],
            c: 6579300,
            t: 2
        }, {
            p: [281, 133, -133],
            s: [113, 2, 50],
            l: 1,
            r: [-.35, 0, 0],
            t: 5
        }, {
            p: [281, 131, -89],
            s: [113, 2, 50],
            l: 1,
            r: [.35, 0, 0],
            c: 6579300,
            t: 2
        }, {
            p: [281, 133, -88],
            s: [113, 2, 50],
            l: 1,
            r: [.35, 0, 0],
            t: 5
        }, {
            p: [281, 142, -110],
            s: [120, 2, 5],
            t: 5
        }, {
            p: [281, 124, -110],
            s: [106, 4, 80],
            c: 8878432,
            t: 10
        }, {
            p: [281, 128, -110],
            s: [106, 3, 60],
            c: 8878432,
            t: 10
        }, {
            p: [281, 131, -110],
            s: [106, 4, 43],
            c: 8878432,
            t: 10
        }, {
            p: [281, 135, -110],
            s: [106, 3, 21],
            c: 8878432,
            t: 10
        }, {
            p: [263, 51, -43],
            s: [60, 62, 72],
            c: 6973550,
            t: 10,
            bo: 1
        }, {
            p: [263, 125, -40],
            s: [71, 2, 70],
            l: 1,
            r: [0, 0, .35],
            c: 6908265,
            t: 2
        }, {
            p: [262, 127, -40],
            s: [71, 2, 70],
            l: 1,
            r: [0, 0, .35],
            t: 5
        }, {
            p: [281, 93, -71],
            s: [100, 4, 4],
            c: 11513775,
            t: 2
        }, {
            p: [292, 66, -68],
            s: [4, 71, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [292, 66, -8],
            s: [4, 71, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [234, 66, -8],
            s: [4, 47, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [234, 66, -68],
            s: [4, 47, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [263, 109, -8],
            s: [54, 4, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [234, 109, -38],
            s: [4, 4, 56],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [292, 109, -38],
            s: [4, 4, 56],
            l: 1,
            c: 11513775,
            t: 2
        }, {
            p: [262, 113, -43],
            s: [59, 4, 72],
            c: 6973550,
            t: 10
        }, {
            p: [267, 117, -43],
            s: [50, 4, 72],
            c: 6973550,
            t: 10
        }, {
            p: [272, 121, -43],
            s: [38, 4, 72],
            c: 6973550,
            t: 10
        }, {
            p: [277, 125, -38],
            s: [28, 4, 62],
            c: 6973550,
            t: 10
        }, {
            p: [283, 129, -38],
            s: [17, 4, 62],
            c: 6973550,
            t: 10
        }, {
            p: [288, 133, -38],
            s: [6, 3, 62],
            c: 6973550,
            t: 10
        }, {
            p: [292, 113, -37],
            s: [2, 23, 61],
            c: 6973550,
            t: 10,
            bo: 1
        }, {
            p: [233, 84, -32],
            s: [2, 20, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [233, 84, -44],
            s: [2, 20, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [233, 102, -38],
            s: [2, 2, 10],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [321, 66, -166],
            s: [2, 20, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [321, 66, -178],
            s: [2, 20, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [321, 84, -172],
            s: [2, 2, 10],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [411, 66, -212],
            s: [90, 38, 138],
            c: 8215901,
            t: 10,
            bo: 1
        }, {
            p: [413, 66, -6],
            s: [90, 50, 88],
            c: 8215901,
            t: 10,
            bo: 1
        }, {
            p: [208, 66, 90],
            s: [140, 80, 88],
            c: 8215901,
            t: 10,
            bo: 1
        }, {
            p: [20, 66, 96],
            s: [116, 53, 80],
            c: 9342330,
            t: 10,
            bo: 1
        }, {
            p: [425, 51, -96],
            s: [90, 71, 92],
            c: 6973550,
            t: 10,
            bo: 1
        }, {
            p: [334, 51, 80],
            s: [110, 79, 86],
            c: 6254184,
            t: 10,
            bo: 1
        }, {
            p: [-37, 51, 57],
            s: [4, 69, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [20, 51, 57],
            s: [4, 89, 5],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [20, 91, 57],
            s: [110, 4, 4],
            c: 7895160,
            t: 2
        }, {
            p: [20, 139, 96],
            s: [5, 5, 92],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-11, 130, 96],
            s: [65, 2, 88],
            l: 1,
            r: [0, 0, .35],
            c: 4737096,
            t: 2
        }, {
            p: [51, 130, 96],
            s: [65, 2, 88],
            l: 1,
            r: [0, 0, -.35],
            c: 4737096,
            t: 2
        }, {
            p: [20, 144, 96],
            s: [5, 2, 92],
            t: 5
        }, {
            p: [-12, 132, 96],
            s: [65, 2, 88],
            l: 1,
            r: [0, 0, .35],
            t: 5
        }, {
            p: [52, 132, 96],
            s: [65, 2, 88],
            l: 1,
            r: [0, 0, -.35],
            t: 5
        }, {
            p: [20, 116, 57],
            s: [110, 4, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-37, 91, 96],
            s: [4, 4, 74],
            c: 7895160,
            t: 2
        }, {
            p: [-37, 116, 96],
            s: [4, 4, 74],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [20, 119, 96],
            s: [113, 6, 80],
            c: 9342330,
            t: 10,
            bo: 1
        }, {
            p: [20, 125, 96],
            s: [91, 4, 80],
            c: 9342330,
            t: 10
        }, {
            p: [20, 129, 96],
            s: [69, 4, 80],
            c: 9342330,
            t: 10
        }, {
            p: [20, 133, 96],
            s: [46, 4, 80],
            c: 9342330,
            t: 10
        }, {
            p: [20, 137, 96],
            s: [25, 4, 80],
            c: 9342330,
            t: 10
        }, {
            p: [-15, 66, 57],
            s: [2, 21, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-3, 66, 57],
            s: [2, 21, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [-9, 85, 57],
            s: [10, 2, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [367, 66, -144],
            s: [4, 38, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [367, 66, -212],
            s: [5, 62, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [367, 100, -212],
            s: [4, 4, 132],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [377, 100, -144],
            s: [16, 4, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [412, 127, -212],
            s: [106, 5, 5],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [412, 116, -248],
            s: [98, 2, 75],
            l: 1,
            r: [-.35, 0, 0],
            c: 4605510,
            t: 2
        }, {
            p: [412, 118, -249],
            s: [98, 2, 75],
            l: 1,
            r: [-.35, 0, 0],
            t: 5
        }, {
            p: [412, 118, -174],
            s: [98, 2, 77],
            l: 1,
            r: [.35, 0, 0],
            t: 5
        }, {
            p: [412, 116, -175],
            s: [98, 2, 77],
            l: 1,
            r: [.35, 0, 0],
            c: 4605510,
            t: 2
        }, {
            p: [412, 132, -212],
            s: [106, 2, 5],
            t: 5
        }, {
            p: [411, 104, -212],
            s: [90, 4, 138],
            c: 8215901,
            t: 10
        }, {
            p: [411, 108, -212],
            s: [90, 4, 117],
            c: 8215901,
            t: 10
        }, {
            p: [411, 112, -212],
            s: [90, 4, 94],
            c: 8215901,
            t: 10
        }, {
            p: [411, 116, -212],
            s: [90, 4, 73],
            c: 8215901,
            t: 10
        }, {
            p: [411, 124, -212],
            s: [90, 4, 29],
            c: 8215901,
            t: 10
        }, {
            p: [411, 120, -212],
            s: [90, 4, 51],
            c: 8215901,
            t: 10
        }, {
            p: [411, 128, -212],
            s: [90, 1, 11],
            c: 8215901,
            t: 10
        }, {
            p: [366, 66, -237],
            s: [2, 20, 2],
            l: 1,
            c: 11513775,
            t: 2
        }, {
            p: [366, 66, -249],
            s: [2, 20, 2],
            l: 1,
            c: 11513775,
            t: 2
        }, {
            p: [366, 84, -243],
            s: [2, 2, 10],
            l: 1,
            c: 11513775,
            t: 2
        }, {
            p: [381, 66, -141],
            s: [4, 57, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [381, 66, -51],
            s: [4, 57, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [381, 66, -96],
            s: [5, 73, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [381, 119, -96],
            s: [4, 4, 86],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [427, 119, -96],
            s: [88, 4, 94],
            l: 1,
            c: 11513775,
            t: 2
        }, {
            p: [427, 138, -96],
            s: [108, 6, 6],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [427, 131, -121],
            s: [102, 2, 52],
            l: 1,
            r: [-.35, 0, 0],
            c: 6052956,
            t: 2
        }, {
            p: [427, 131, -70],
            s: [102, 2, 52],
            l: 1,
            r: [.35, 0, 0],
            c: 6052956,
            t: 2
        }, {
            p: [427, 133, -69],
            s: [102, 2, 52],
            l: 1,
            r: [.35, 0, 0],
            t: 5
        }, {
            p: [427, 133, -122],
            s: [102, 2, 52],
            l: 1,
            r: [-.35, 0, 0],
            t: 5
        }, {
            p: [427, 144, -96],
            s: [108, 2, 6],
            t: 5
        }, {
            p: [425, 123, -96],
            s: [90, 5, 91],
            c: 6973550,
            t: 10
        }, {
            p: [425, 128, -96],
            s: [90, 4, 69],
            c: 6973550,
            t: 10
        }, {
            p: [425, 132, -96],
            s: [90, 4, 47],
            c: 6973550,
            t: 10
        }, {
            p: [425, 136, -96],
            s: [90, 4, 25],
            c: 6973550,
            t: 10
        }, {
            p: [369, 66, -49],
            s: [4, 51, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [369, 66, 35],
            s: [4, 51, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [369, 66, -7],
            s: [5, 65, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [369, 113, -7],
            s: [4, 4, 80],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [376, 113, -49],
            s: [10, 4, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [333, 66, -71],
            s: [4, 58, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [388, 66, 38],
            s: [4, 65, 4],
            c: 11513775,
            t: 2
        }, {
            p: [334, 66, 38],
            s: [4, 83, 5],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [334, 95, 38],
            s: [104, 4, 4],
            c: 11513775,
            t: 2
        }, {
            p: [334, 127, 38],
            s: [104, 4, 4],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [280, 127, 49],
            s: [4, 4, 18],
            l: 1,
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [280, 95, 49],
            s: [4, 4, 18],
            c: 11513775,
            t: 2
        }, {
            p: [277, 66, 47],
            s: [4, 81, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [139, 66, 47],
            s: [4, 81, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [107, 66, -12],
            s: [92, 19, 145],
            c: 6250335,
            t: 11
        }, {
            p: [64, 85, 28],
            s: [2, 38, 59],
            pe: 1,
            c: 6254184,
            t: 10,
            bo: 1
        }, {
            p: [64, 85, -43],
            s: [2, 38, 53],
            pe: 1,
            c: 6254184,
            t: 10,
            bo: 1
        }, {
            p: [150, 85, -27],
            s: [2, 38, 77],
            pe: 1,
            c: 6254184,
            t: 10,
            bo: 1
        }, {
            p: [150, 85, 34],
            s: [2, 38, 19],
            pe: 1,
            c: 6254184,
            t: 10,
            bo: 1
        }, {
            p: [208, 66, 47],
            s: [4, 104, 5],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [208, 112, 47],
            s: [134, 4, 4],
            l: 1,
            c: 7895160,
            t: 2
        }, {
            p: [208, 143, 47],
            s: [134, 4, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [252, 66, 81],
            s: [85, 17, 73],
            c: 6250335
        }, {
            p: [277, 143, 87],
            s: [4, 4, 76],
            l: 1,
            c: 7895160,
            t: 2
        }, {
            p: [413, 130, -7],
            s: [107, 5, 5],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [413, 124, -29],
            s: [99, 2, 51],
            l: 1,
            r: [-.35, 0, 0],
            c: 5066061,
            t: 2
        }, {
            p: [413, 124, 16],
            s: [99, 2, 54],
            l: 1,
            r: [.35, 0, 0],
            c: 5066061,
            t: 2
        }, {
            p: [413, 126, 17],
            s: [99, 2, 54],
            l: 1,
            r: [.35, 0, 0],
            t: 5
        }, {
            p: [413, 126, -30],
            s: [99, 2, 51],
            l: 1,
            r: [-.35, 0, 0],
            t: 5
        }, {
            p: [413, 135, -7],
            s: [107, 2, 5],
            t: 5
        }, {
            p: [413, 117, -6],
            s: [90, 3, 88],
            c: 8215901,
            t: 10
        }, {
            p: [413, 120, -6],
            s: [90, 3, 71],
            c: 8215901,
            t: 10
        }, {
            p: [413, 123, -6],
            s: [90, 3, 58],
            c: 8215901,
            t: 10
        }, {
            p: [413, 126, -6],
            s: [90, 3, 37],
            c: 8215901,
            t: 10
        }, {
            p: [413, 129, -6],
            s: [90, 3, 22],
            c: 8215901,
            t: 10
        }, {
            p: [334, 149, 80],
            s: [5, 5, 106],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [364, 140, 80],
            s: [61, 2, 97],
            l: 1,
            r: [0, 0, -.35],
            c: 7039851,
            t: 2
        }, {
            p: [303, 140, 80],
            s: [61, 2, 97],
            l: 1,
            r: [0, 0, .35],
            c: 7039851,
            t: 2
        }, {
            p: [334, 154, 80],
            s: [5, 2, 106],
            t: 5
        }, {
            p: [304, 143, 80],
            s: [63, 2, 97],
            l: 1,
            r: [0, 0, .35],
            t: 5
        }, {
            p: [364, 142, 80],
            s: [63, 2, 97],
            l: 1,
            r: [0, 0, -.35],
            t: 5
        }, {
            p: [334, 130, 80],
            s: [110, 5, 86],
            c: 6254184,
            t: 10
        }, {
            p: [334, 135, 80],
            s: [89, 4, 86],
            c: 6254184,
            t: 10
        }, {
            p: [334, 139, 80],
            s: [67, 4, 86],
            c: 6254184,
            t: 10
        }, {
            p: [334, 143, 80],
            s: [45, 4, 86],
            c: 6254184,
            t: 10
        }, {
            p: [334, 147, 80],
            s: [23, 4, 86],
            c: 6254184,
            t: 10
        }, {
            p: [208, 169, 90],
            s: [6, 6, 104],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [246, 158, 90],
            s: [81, 2, 97],
            l: 1,
            r: [0, 0, -.35],
            c: 4605510,
            t: 2
        }, {
            p: [170, 159, 90],
            s: [81, 2, 97],
            l: 1,
            r: [0, 0, .35],
            c: 4605510,
            t: 2
        }, {
            p: [169, 161, 90],
            s: [81, 2, 97],
            l: 1,
            r: [0, 0, .35],
            t: 5
        }, {
            p: [247, 160, 90],
            s: [81, 2, 97],
            l: 1,
            r: [0, 0, -.35],
            t: 5
        }, {
            p: [208, 175, 90],
            s: [6, 2, 104],
            t: 5
        }, {
            p: [208, 147, 90],
            s: [140, 3, 88],
            c: 8215901,
            t: 10
        }, {
            p: [208, 150, 90],
            s: [124, 4, 88],
            c: 8215901,
            t: 10
        }, {
            p: [208, 154, 90],
            s: [102, 4, 88],
            c: 8215901,
            t: 10
        }, {
            p: [208, 158, 90],
            s: [81, 4, 88],
            c: 8215901,
            t: 10
        }, {
            p: [208, 162, 90],
            s: [58, 4, 88],
            c: 8215901,
            t: 10
        }, {
            p: [208, 166, 90],
            s: [36, 4, 88],
            c: 8215901,
            t: 10
        }, {
            p: [208, 170, 90],
            s: [15, 3, 88],
            c: 8215901,
            t: 10
        }, {
            p: [-72, 87, -45],
            s: [4, 4, 48],
            c: 7500402,
            t: 2
        }, {
            p: [-101, 110, 5],
            s: [62, 4, 44],
            c: 7500402,
            t: 2,
            bo: 1
        }, {
            p: [368, 84, -22],
            s: [2, 22, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [368, 84, -34],
            s: [2, 22, 2],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [368, 104, -28],
            s: [2, 2, 10],
            c: 11513775,
            t: 2,
            bo: 1
        }, {
            p: [179, 84, 47],
            s: [2, 21, 4],
            l: 1,
            c: 11513775,
            t: 2
        }, {
            p: [167, 84, 47],
            s: [2, 21, 4],
            l: 1,
            c: 11513775,
            t: 2
        }, {
            p: [173, 103, 47],
            s: [10, 2, 4],
            l: 1,
            c: 11513775,
            t: 2
        }, {
            p: [107, 146, -9],
            s: [101, 5, 5],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [107, 134, 26],
            s: [93, 2, 74],
            l: 1,
            r: [.35, 0, 0],
            c: 4868682,
            t: 2
        }, {
            p: [150, 66, -64],
            s: [4, 58, 4],
            c: 7895160,
            t: 2
        }, {
            p: [151, 66, -9],
            s: [3, 81, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [150, 66, 44],
            s: [4, 58, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [107, 85, 50],
            s: [84, 38, 19],
            c: 6254184,
            t: 10,
            bo: 1
        }, {
            p: [107, 85, -44],
            s: [84, 38, 51],
            c: 6254184,
            t: 10,
            bo: 1
        }, {
            p: [64, 66, -2],
            s: [5, 54, 2],
            pe: 1,
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [64, 66, -16],
            s: [5, 54, 2],
            pe: 1,
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [64, 105, -9],
            s: [5, 2, 12],
            l: 1,
            c: 7895160,
            t: 2
        }, {
            p: [150, 66, 11],
            s: [4, 54, 2],
            pe: 1,
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [150, 66, 25],
            s: [4, 54, 2],
            pe: 1,
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [150, 105, 18],
            s: [4, 2, 12],
            l: 1,
            c: 7895160,
            t: 2
        }, {
            p: [150, 106, 18],
            s: [2, 15, 13],
            pe: 1,
            c: 6254184,
            t: 10,
            bo: 1
        }, {
            p: [64, 107, -9],
            s: [2, 16, 15],
            pe: 1,
            c: 6254184,
            t: 10
        }, {
            p: [63, 123, -9],
            s: [2, 24, 4],
            c: 7895160,
            t: 2
        }, {
            p: [64, 85, -68],
            s: [5, 39, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [64, 85, 54],
            s: [5, 39, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [64, 120, -9],
            s: [5, 4, 114],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [64, 120, 50],
            s: [5, 4, 4],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [107, 135, -41],
            s: [93, 2, 70],
            l: 1,
            r: [-.35, 0, 0],
            c: 4868682,
            t: 2
        }, {
            p: [150, 120, -10],
            s: [4, 4, 104],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [107, 115, 10],
            s: [85, 1, 71],
            c: 6250335,
            t: 2
        }, {
            p: [107, 124, -9],
            s: [88, 4, 122],
            c: 6254184,
            t: 10,
            bo: 1
        }, {
            p: [107, 136, 27],
            s: [93, 2, 74],
            l: 1,
            r: [.35, 0, 0],
            t: 5
        }, {
            p: [107, 151, -9],
            s: [101, 2, 5],
            l: 1,
            t: 5
        }, {
            p: [107, 137, -42],
            s: [93, 2, 70],
            l: 1,
            r: [-.35, 0, 0],
            t: 5
        }, {
            p: [107, 128, -9],
            s: [88, 4, 104],
            c: 6254184,
            t: 10
        }, {
            p: [107, 132, -9],
            s: [88, 4, 82],
            c: 6254184,
            t: 10
        }, {
            p: [107, 136, -9],
            s: [88, 4, 60],
            c: 6254184,
            t: 10
        }, {
            p: [107, 140, -9],
            s: [88, 4, 38],
            c: 6254184,
            t: 10
        }, {
            p: [107, 144, -9],
            s: [88, 3, 16],
            c: 6254184,
            t: 10
        }, {
            p: [50, 83, -9],
            s: [22, 2, 88],
            c: 7895160,
            t: 2
        }, {
            p: [41, 66, -51],
            s: [2, 20, 2],
            c: 7895160,
            t: 2
        }, {
            p: [41, 66, 33],
            s: [2, 20, 2],
            c: 7895160,
            t: 2
        }, {
            p: [92, 66, 40],
            s: [2, 39, 2],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [80, 66, 40],
            s: [2, 39, 2],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [121, 66, -18],
            s: [2, 39, 2],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [133, 66, -18],
            s: [2, 39, 2],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [127, 105, -18],
            s: [14, 2, 2],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [86, 105, 40],
            s: [14, 2, 2],
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [10, 128, -471],
            s: [97, 2, 59],
            l: 1,
            r: [-.35, 0, 0],
            c: 5395026,
            t: 2
        }, {
            p: [10, 130, -472],
            s: [97, 2, 59],
            l: 1,
            r: [-.35, 0, 0],
            t: 5
        }, {
            p: [10, 51, -444],
            s: [92, 67, 107],
            c: 6254184,
            t: 10
        }, {
            p: [10, 118, -444],
            s: [92, 2, 107],
            c: 6254184,
            t: 10
        }, {
            p: [10, 123, -444],
            s: [92, 5, 75],
            c: 6254184,
            t: 10
        }, {
            p: [10, 128, -444],
            s: [92, 5, 49],
            c: 6254184,
            t: 10
        }, {
            p: [10, 133, -444],
            s: [92, 5, 22],
            c: 6254184,
            t: 10
        }, {
            p: [55, 114, -444],
            s: [4, 4, 107],
            c: 11513775,
            t: 2
        }, {
            p: [71, 51, -393],
            s: [4, 63, 4],
            c: 11513775,
            t: 2
        }, {
            p: [207, 51, -393],
            s: [4, 64, 4],
            c: 11513775,
            t: 2
        }, {
            p: [116, 51, -393],
            s: [4, 77, 5],
            c: 11513775,
            t: 2
        }, {
            p: [71, 51, -445],
            s: [4, 63, 4],
            c: 11513775,
            t: 2
        }, {
            p: [71, 51, -495],
            s: [4, 62, 4],
            c: 11513775,
            t: 2
        }, {
            p: [139, 111, -393],
            s: [132, 4, 4],
            c: 11513775,
            t: 2
        }, {
            p: [71, 110, -444],
            s: [4, 4, 98],
            l: 1,
            c: 11513775,
            t: 2
        }, {
            p: [139, 134, -443],
            s: [7, 7, 121],
            c: 11513775,
            t: 2
        }, {
            p: [101, 121, -443],
            s: [79, 3, 113],
            l: 1,
            r: [0, 0, .35],
            c: 4605510,
            t: 2
        }, {
            p: [100, 124, -443],
            s: [79, 2, 113],
            l: 1,
            r: [0, 0, .35],
            t: 5
        }, {
            p: [139, 141, -443],
            s: [7, 2, 121],
            l: 1,
            t: 5
        }, {
            p: [178, 124, -443],
            s: [78, 3, 113],
            l: 1,
            r: [0, 0, -.35],
            t: 5
        }, {
            p: [139, 66, -444],
            s: [136, 49, 104],
            c: 9342330,
            t: 10
        }, {
            p: [139, 115, -444],
            s: [107, 5, 104],
            c: 9342330,
            t: 10
        }, {
            p: [139, 120, -444],
            s: [83, 5, 104],
            c: 9342330,
            t: 10
        }, {
            p: [139, 125, -444],
            s: [55, 5, 104],
            c: 9342330,
            t: 10
        }, {
            p: [139, 130, -444],
            s: [28, 4, 104],
            c: 9342330,
            t: 10
        }, {
            p: [161, 51, -393],
            s: [4, 77, 5],
            c: 11513775,
            t: 2
        }, {
            p: [214, 113, -385],
            s: [48, 2, 70],
            l: 1,
            r: [0, 0, .52],
            c: 6908265,
            t: 2
        }, {
            p: [213, 115, -385],
            s: [48, 2, 70],
            l: 1,
            r: [0, 0, .52],
            t: 5
        }, {
            p: [233, 125, -386],
            s: [5, 5, 71],
            c: 11513775,
            t: 2
        }, {
            p: [233, 130, -386],
            s: [5, 2, 71],
            t: 5
        }, {
            p: [55, 65, 13],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [55, 65, -64],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-65, 65, -64],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-65, 65, -52],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-72, 110, -45],
            s: [4, 4, 48],
            c: 7500402,
            t: 2,
            bo: 1
        }, {
            p: [-130, 87, -44],
            s: [4, 4, 46],
            c: 7500402,
            t: 2
        }, {
            p: [-130, 110, -44],
            s: [4, 4, 46],
            c: 7500402,
            t: 2,
            bo: 1
        }, {
            p: [28, 65, -95],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-88, 65, 36],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [28, 65, 50],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [28, 77, 50],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [146, 85, 35],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [60, 85, -36],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [60, 85, -28],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-17, 65, -178],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-56, 65, -128],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-164, 52, -158],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-152, 52, -158],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-315, 52, -86],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-315, 52, -74],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-315, 52, 18],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-315, 52, 6],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-315, 64, 18],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-231, 52, -93],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-281, 52, -49],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-269, 52, -49],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-128, 52, -266],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-116, 52, -304],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-116, 64, -304],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-162, 65, -28],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-19, 65, -28],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [216, 83, 40],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [157, 83, -56],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [300, 83, -50],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [300, 83, -62],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [361, 83, 31],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [360, 65, -220],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [45, 65, -66],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-55, 65, -66],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-68, 65, 22],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-68, 65, 14],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-163, 65, 54],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-165, 65, -38],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-269, 52, -59],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-317, 52, -64],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-317, 52, -56],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-317, 52, -173],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-305, 52, 20],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-184, 52, -204],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-184, 52, -196],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [75, 71, -311],
            s: [31, 3, 7],
            c: 8220776
        }, {
            p: [94, 66, -292],
            s: [6, 7, 44],
            c: 10983566,
            t: 11
        }, {
            p: [56, 66, -292],
            s: [6, 7, 44],
            c: 10983566,
            t: 11
        }, {
            p: [75, 66, -273],
            s: [32, 7, 6],
            c: 10983566,
            t: 11
        }, {
            p: [75, 66, -311],
            s: [32, 7, 6],
            c: 10983566,
            t: 11
        }, {
            p: [75, 71, -273],
            s: [31, 3, 7],
            c: 8220776
        }, {
            p: [56, 71, -292],
            s: [7, 3, 45],
            c: 8220776,
            t: 11
        }, {
            p: [94, 71, -292],
            s: [7, 3, 45],
            c: 8220776
        }, {
            p: [75, 66, -292],
            s: [32, 1, 33],
            c: 10983566
        }, {
            p: [75, 66, -292],
            s: [9, 23, 9],
            c: 10983566,
            t: 11
        }, {
            p: [75, 77, -292],
            s: [20, 3, 20],
            c: 8220776,
            t: 11
        }, {
            p: [75, 86, -292],
            s: [14, 3, 14],
            c: 8220776,
            t: 11
        }, {
            p: [75, 74, -311],
            s: [31, 1, 7],
            l: 1,
            t: 5
        }, {
            p: [75, 74, -273],
            s: [31, 1, 7],
            l: 1,
            t: 5
        }, {
            p: [94, 74, -292],
            s: [7, 1, 45],
            l: 1,
            t: 5
        }, {
            p: [56, 74, -292],
            s: [7, 1, 45],
            l: 1,
            t: 5
        }, {
            p: [75, 80, -292],
            s: [20, 1, 20],
            l: 1,
            t: 5
        }, {
            p: [75, 89, -292],
            s: [14, 1, 14],
            l: 1,
            t: 5
        }, {
            p: [75, 67, -292],
            s: [32, 2, 33],
            c: 9165268,
            o: .7000000000000001,
            t: 5
        }, {
            p: [63, 62, -565],
            s: [173, 63, 128],
            c: 8217957,
            t: 10
        }, {
            p: [351, 83, 34],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [296, 83, -25],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [296, 83, -17],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [375, 65, -139],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [325, 65, -202],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [325, 65, -210],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [206, 65, -227],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [206, 65, -220],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-222, 52, -295],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-17, 65, -190],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [157, 65, -201],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [157, 65, -213],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-1, 65, -362],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [11, 65, -362],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [23, 65, -362],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-1, 77, -363],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [77, 65, -362],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [89, 65, -362],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [135, 65, -362],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [135, 77, -363],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [104, 65, -301],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [65, 65, -218],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-11, 66, -365],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [145, 65, -365],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [152, 65, -365],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [102, 65, -291],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [147, 65, -198],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [55, 65, -215],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-67, 65, -9],
            s: [1, 18, 4],
            l: 1,
            r: [0, 0, .17],
            c: 7895160,
            t: 2
        }, {
            p: [-31, 65, -28],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-31, 65, -16],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [39, 66, -35],
            s: [1, 19, 5],
            pe: 1,
            v: 1,
            c: 7895160,
            t: 2
        }, {
            p: [39, 66, -35],
            s: [1, 19, 3],
            i: 3,
            t: 2,
            d: 2
        }, {
            p: [-161, 87, -309],
            s: [4, 8, 10],
            c: 9013641,
            t: 2,
            bo: 1
        }, {
            p: [381, 91, -96],
            s: [4, 4, 86],
            c: 11513775,
            t: 2
        }, {
            p: [202, 82, -11],
            s: [110, 2, 165],
            l: 1,
            t: 5
        }, {
            p: [177, 121, -443],
            s: [79, 3, 113],
            l: 1,
            r: [0, 0, -.35],
            c: 4605510,
            t: 2
        }, {
            p: [383, 65, 26],
            s: [12, 70, 6],
            c: 11293523
        }, {
            p: [63, 121, -502],
            s: [174, 4, 4],
            c: 6381921,
            t: 2
        }, {
            p: [-22, 96, -502],
            s: [4, 34, 4],
            c: 6381921,
            t: 2
        }, {
            p: [63, 156, -568],
            s: [6, 6, 145],
            c: 6381921,
            t: 2
        }, {
            p: [18, 140, -568],
            s: [97, 3, 138],
            l: 1,
            r: [0, 0, .35],
            c: 6381921,
            t: 2
        }, {
            p: [108, 140, -568],
            s: [102, 3, 138],
            l: 1,
            r: [0, 0, -.35],
            c: 6381921,
            t: 2
        }, {
            p: [63, 162, -568],
            s: [6, 2, 145],
            t: 5
        }, {
            p: [109, 143, -568],
            s: [102, 2, 138],
            l: 1,
            r: [0, 0, -.35],
            t: 5
        }, {
            p: [17, 143, -568],
            s: [97, 2, 138],
            l: 1,
            r: [0, 0, .35],
            t: 5
        }, {
            p: [93, 96, -502],
            s: [4, 50, 4],
            c: 6381921,
            t: 2
        }, {
            p: [63, 125, -565],
            s: [173, 4, 128],
            c: 8217957,
            t: 10
        }, {
            p: [63, 133, -565],
            s: [131, 4, 128],
            c: 8217957,
            t: 10
        }, {
            p: [63, 129, -565],
            s: [153, 4, 128],
            c: 8217957,
            t: 10
        }, {
            p: [63, 137, -565],
            s: [109, 4, 128],
            c: 8217957,
            t: 10
        }, {
            p: [63, 141, -565],
            s: [86, 4, 128],
            c: 8217957,
            t: 10
        }, {
            p: [63, 145, -565],
            s: [65, 4, 128],
            c: 8217957,
            t: 10
        }, {
            p: [63, 149, -565],
            s: [43, 4, 128],
            c: 8217957,
            t: 10
        }, {
            p: [63, 153, -565],
            s: [22, 3, 128],
            c: 8217957,
            t: 10
        }, {
            p: [-108, 107, -447],
            s: [97, 2, 59],
            l: 1,
            r: [.35, 0, 0],
            c: 5395026,
            t: 2
        }, {
            p: [-108, 108, -446],
            s: [97, 2, 59],
            l: 1,
            r: [.35, 0, 0],
            t: 5
        }, {
            p: [-108, 116, -475],
            s: [100, 5, 5],
            c: 7895160,
            t: 2
        }, {
            p: [-108, 121, -475],
            s: [100, 2, 5],
            t: 5
        }, {
            p: [10, 114, -392],
            s: [94, 4, 4],
            c: 11513775,
            t: 2
        }, {
            p: [55, 51, -392],
            s: [4, 63, 4],
            c: 11513775,
            t: 2
        }, {
            p: [-35, 51, -392],
            s: [4, 63, 4],
            c: 11513775,
            t: 2
        }, {
            p: [11, 51, -392],
            s: [4, 63, 4],
            c: 11513775,
            t: 2
        }, {
            p: [30, 96, -502],
            s: [4, 52, 4],
            c: 6381921,
            t: 2
        }, {
            p: [63, 109, -502],
            s: [174, 4, 4],
            c: 6381921,
            t: 2
        }, {
            p: [10, 120, -444],
            s: [92, 3, 102],
            c: 6254184,
            t: 10
        }, {
            p: [55, 51, -444],
            s: [4, 86, 4],
            c: 11513775,
            t: 2
        }, {
            p: [296, 66, -292],
            s: [9, 19, 34],
            c: 7891810,
            t: 11
        }, {
            p: [298, 101, -292],
            s: [3, 9, 12],
            c: 6051153,
            t: 11,
            bo: 1
        }, {
            p: [298, 85, -301],
            s: [4, 22, 6],
            c: 6051153,
            t: 11,
            bo: 1
        }, {
            p: [298, 85, -283],
            s: [4, 23, 6],
            c: 6051153,
            t: 11,
            bo: 1
        }, {
            p: [300, 85, -292],
            s: [1, 22, 23],
            c: 5590860,
            t: 11
        }, {
            p: [293, 85, -297],
            s: [1, 3, 1],
            l: 1,
            c: 9997922,
            t: 5
        }, {
            p: [294, 85, -301],
            s: [1, 2, 1],
            l: 1,
            r: [0, -.35, 0],
            c: 9997922,
            t: 5
        }, {
            p: [293, 85, -306],
            s: [1, 3, 1],
            l: 1,
            r: [0, .35, 0],
            c: 9997922,
            t: 5
        }, {
            p: [294, 85, -288],
            s: [1, 2, 1],
            l: 1,
            r: [0, -.17, 0],
            c: 9997922,
            t: 5
        }, {
            p: [293, 85, -283],
            s: [1, 2, 1],
            l: 1,
            r: [0, 1.05, 0],
            c: 9997922,
            t: 5
        }, {
            p: [294, 85, -278],
            s: [1, 3, 1],
            l: 1,
            r: [0, .35, 0],
            c: 9997922,
            t: 5
        }, {
            p: [296, 85, -292],
            s: [1, 1, 3],
            l: 1,
            r: [0, 0, -.35],
            c: 12630166,
            t: 5
        }, {
            p: [297, 85, -292],
            s: [3, 4, 4],
            l: 1,
            r: [0, 0, -.35],
            c: 12630166,
            t: 5
        }, {
            p: [297, 86, -293],
            s: [3, 1, 1],
            l: 1,
            r: [0, 0, -.35],
            c: 0,
            t: 5
        }, {
            p: [297, 86, -291],
            s: [3, 1, 1],
            l: 1,
            r: [0, 0, -.35],
            c: 0,
            t: 5
        }, {
            p: [-224, 53, -74],
            s: [216, 0, 229],
            i: 4,
            l: 1,
            en: 1.8,
            t: 5
        }, {
            p: [-277, 51, -77],
            s: [104, 2, 202],
            v: 1,
            t: 5
        }, {
            p: [-139, 51, -111],
            s: [172, 2, 130],
            v: 1,
            t: 5
        }, {
            p: [-211, 51, -183],
            s: [12, 2, 14],
            v: 1,
            t: 5
        }, {
            p: [-201, 51, -179],
            s: [8, 2, 6],
            v: 1,
            t: 5
        }, {
            p: [-183, 51, -182],
            s: [8, 2, 12],
            v: 1,
            t: 5
        }, {
            p: [22, 66, -48],
            s: [210, 0, 258],
            i: 4,
            l: 1,
            en: 1.8,
            t: 5
        }, {
            p: [-1, 64, 0],
            s: [140, 2, 142],
            v: 1,
            t: 5
        }, {
            p: [-100, 64, 50],
            s: [58, 2, 42],
            v: 1,
            t: 5
        }, {
            p: [-149, 53, 8],
            s: [40, 13, 126],
            v: 1,
            t: 5
        }, {
            p: [-54, 51, -143],
            s: [58, 15, 42],
            v: 1,
            t: 5
        }, {
            p: [5, 64, -123],
            s: [60, 2, 104],
            v: 1,
            t: 5
        }, {
            p: [-124, 51, -285],
            s: [203, 2, 50],
            v: 1,
            t: 5
        }, {
            p: [343, 64, -252],
            s: [77, 2, 43],
            v: 1,
            t: 5
        }, {
            p: [343, 64, -122],
            s: [82, 2, 217],
            v: 1,
            t: 5
        }, {
            p: [327, 64, -11],
            s: [140, 20, 129],
            v: 1,
            t: 5
        }, {
            p: [202, 82, -11],
            s: [110, 2, 165],
            v: 1,
            t: 5
        }, {
            p: [213, 64, -112],
            s: [39, 20, 37],
            v: 1,
            t: 5
        }, {
            p: [213, 64, -207],
            s: [40, 2, 63],
            v: 1,
            t: 5
        }, {
            p: [-131, 66, 50],
            s: [119, 0, 210],
            i: 4,
            l: 1,
            en: 1.8,
            t: 5
        }, {
            p: [74, 66, -271],
            s: [214, 0, 223],
            i: 4,
            l: 1,
            en: 1.8,
            t: 5
        }, {
            p: [80, 51, -272],
            s: [226, 15, 194],
            v: 1,
            t: 5
        }, {
            p: [80, 51, -272],
            s: [226, 15, 194],
            l: 1,
            t: 5
        }, {
            p: [-185, 51, -254],
            s: [8, 2, 12],
            v: 1,
            t: 5
        }, {
            p: [-195, 51, -257],
            s: [12, 2, 6],
            v: 1,
            t: 5
        }, {
            p: [-216, 51, -254],
            s: [19, 2, 12],
            v: 1,
            t: 5
        }, {
            p: [-195, 53, -304],
            s: [201, 0, 97],
            i: 4,
            l: 1,
            en: 1.8,
            t: 5
        }, {
            p: [-65, 53, -289],
            s: [64, 13, 195],
            i: 9,
            t: 5
        }, {
            p: [-149, 53, -78],
            s: [145, 13, 46],
            i: 9,
            t: 5,
            d: 1
        }, {
            p: [-101, 53, -140],
            s: [36, 13, 182],
            i: 9,
            t: 5
        }, {
            p: [216, 66, -157],
            s: [197, 18, 53],
            i: 9,
            t: 5,
            d: 1
        }, {
            p: [357, 66, -103],
            s: [244, 18, 55],
            i: 9,
            t: 5,
            d: 1
        }, {
            p: [344, 66, -246],
            s: [82, 0, 234],
            i: 4,
            l: 1,
            en: 1.8,
            t: 5
        }, {
            p: [220, 66, -208],
            s: [88, 0, 52],
            i: 4,
            l: 1,
            en: 1.8,
            t: 5
        }, {
            p: [342, 84, 36],
            s: [170, 0, 223],
            i: 4,
            l: 1,
            en: 1.8,
            t: 5
        }, {
            p: [208, 84, -10],
            s: [131, 0, 240],
            i: 4,
            l: 1,
            en: 1.8,
            t: 5
        }, {
            p: [-72, 52, -212],
            s: [98, 50, 108],
            c: 8548950,
            t: 10,
            bo: 1
        }, {
            p: [65, 77, -218],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [157, 77, -207],
            s: [12, 1, 24],
            l: 1,
            t: 5
        }, {
            p: [83, 77, -363],
            s: [24, 1, 14],
            l: 1,
            t: 5
        }, {
            p: [17, 77, -363],
            s: [24, 1, 14],
            l: 1,
            t: 5
        }, {
            p: [-1, 89, -363],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [135, 89, -363],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [104, 77, -301],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [-17, 77, -184],
            s: [12, 1, 24],
            l: 1,
            t: 5
        }, {
            p: [28, 77, -95],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [55, 77, -64],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [-31, 77, -22],
            s: [12, 1, 24],
            l: 1,
            t: 5
        }, {
            p: [-19, 77, -28],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [-65, 77, -58],
            s: [12, 1, 24],
            l: 1,
            t: 5
        }, {
            p: [28, 89, 50],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [-88, 77, 36],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [-162, 77, -28],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [-158, 64, -158],
            s: [24, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [-275, 64, -49],
            s: [24, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [-315, 64, 6],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [-315, 64, -80],
            s: [12, 1, 24],
            l: 1,
            t: 5
        }, {
            p: [-315, 76, 18],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [-231, 64, -93],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [-128, 64, -266],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [-116, 76, -304],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [216, 95, 40],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [157, 95, -56],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [361, 95, 31],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [300, 95, -50],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [360, 77, -220],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [-56, 77, -128],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [-282, 105, 25],
            s: [88, 4, 4],
            c: 8224125,
            t: 2,
            bo: 1
        }, {
            p: [-282, 53, 25],
            s: [5, 57, 5],
            c: 9013641,
            t: 2,
            bo: 1
        }, {
            p: [-236, 53, 25],
            s: [4, 56, 4],
            c: 8553090,
            t: 2,
            bo: 1
        }, {
            p: [-328, 53, 25],
            s: [4, 56, 4],
            c: 9013641,
            t: 2,
            bo: 1
        }, {
            p: [-234, 91, 14],
            s: [2, 4, 64],
            c: 7500402,
            t: 2
        }, {
            p: [76, 114, -188],
            s: [84, 6, 43],
            c: 8878432,
            t: 10
        }, {
            p: [76, 114, -94],
            s: [84, 6, 43],
            c: 8878432,
            t: 10
        }, {
            p: [76, 120, -101],
            s: [84, 5, 29],
            c: 8878432,
            t: 10
        }, {
            p: [76, 125, -108],
            s: [84, 3, 16],
            c: 8878432,
            t: 10
        }, {
            p: [76, 128, -112],
            s: [84, 3, 7],
            c: 8878432,
            t: 10
        }, {
            p: [76, 120, -181],
            s: [84, 5, 29],
            c: 8878432,
            t: 10
        }, {
            p: [76, 125, -175],
            s: [84, 3, 16],
            c: 8878432,
            t: 10
        }, {
            p: [76, 128, -170],
            s: [84, 3, 7],
            c: 8878432,
            t: 10
        }, {
            p: [-270, 51, -177],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [-258, 51, 24],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-225, 51, -42],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [-3.14, 0, -3.14]
        }, {
            p: [-160, 64, -3],
            s: [3, 20, 10],
            i: 21,
            l: 1
        }, {
            p: [-133, 65, 71],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [34, 63, -141],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [-3.14, 0, -3.14]
        }, {
            p: [-25, 64, -96],
            s: [3, 20, 10],
            i: 21,
            l: 1
        }, {
            p: [-9, 65, 56],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [56, 85, -2],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [157, 85, 11],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [173, 83, 46],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [86, 85, 40],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [179, 82, -65],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [233, 82, -38],
            s: [3, 20, 10],
            i: 21,
            l: 1
        }, {
            p: [368, 84, -28],
            s: [3, 20, 10],
            i: 21,
            l: 1
        }, {
            p: [96, 64, -212],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-105, 52, -266],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-142, 51, -310],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [-180, 51, -301],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [-225, 51, -277],
            s: [3, 20, 10],
            i: 21,
            l: 1
        }, {
            p: [366, 64, -243],
            s: [3, 20, 10],
            i: 21,
            l: 1
        }, {
            p: [350, 64, -273],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [321, 64, -172],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [3.14, 0, 3.14]
        }, {
            p: [-72, 104, -212],
            s: [99, 8, 108],
            c: 8548950,
            t: 10
        }, {
            p: [-72, 112, -212],
            s: [65, 6, 108],
            c: 8548950,
            t: 10
        }, {
            p: [-72, 118, -212],
            s: [35, 6, 108],
            c: 8548950,
            t: 10
        }, {
            p: [127, 85, -18],
            s: [3, 20, 10],
            i: 21,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [-259, 85, 23],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-305, 85, 23],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-235, 70, 4],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [-3.14, 0, -3.14]
        }, {
            p: [-226, 84, -44],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [-3.14, 0, -3.14]
        }, {
            p: [-226, 84, -81],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [-3.14, 0, -3.14]
        }, {
            p: [-271, 83, -176],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [-308, 83, -176],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [-228, 96, -164],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [-145, 96, -164],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [-197, 84, -103],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-102, 97, -123],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-130, 97, -96],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [-3.14, 0, -3.14]
        }, {
            p: [-132, 92, 4],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [-3.14, 0, -3.14]
        }, {
            p: [-159, 99, 14],
            s: [1, 17, 17],
            i: 22,
            l: 1
        }, {
            p: [-168, 85, -44],
            s: [1, 17, 17],
            i: 22,
            l: 1
        }, {
            p: [-50, 84, -157],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [-22, 83, -185],
            s: [1, 17, 17],
            i: 22,
            l: 1
        }, {
            p: [-24, 98, -97],
            s: [1, 17, 17],
            i: 22,
            l: 1
        }, {
            p: [-224, 84, -278],
            s: [1, 17, 17],
            i: 22,
            l: 1
        }, {
            p: [-187, 96, -260],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-204, 64, -300],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [-141, 87, -309],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [-76, 87, -309],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [-49, 83, -267],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [140, 88, -194],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [56, 92, -213],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [33, 92, -188],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [-3.14, 0, -3.14]
        }, {
            p: [33, 92, -93],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [-3.14, 0, -3.14]
        }, {
            p: [-73, 76, 70],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-70, 92, 5],
            s: [1, 17, 17],
            i: 22,
            l: 1
        }, {
            p: [42, 97, 55],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [242, 121, 45],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [227, 100, -90],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [-3.14, 0, -3.14]
        }, {
            p: [232, 92, -211],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [-3.14, 0, -3.14]
        }, {
            p: [200, 88, -161],
            s: [1, 17, 17],
            i: 22,
            l: 1
        }, {
            p: [308, 105, 36],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [322, 98, -272],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [0, -1.57, 0]
        }, {
            p: [367, 92, 13],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [3.14, 0, 3.14]
        }, {
            p: [294, 116, -25],
            s: [1, 17, 17],
            i: 22,
            l: 1
        }, {
            p: [335, 100, -92],
            s: [1, 17, 17],
            i: 22,
            l: 1
        }, {
            p: [322, 92, -212],
            s: [1, 17, 17],
            i: 22,
            l: 1
        }, {
            p: [379, 99, -118],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [3.14, 0, 3.14]
        }, {
            p: [365, 78, -179],
            s: [1, 17, 17],
            i: 22,
            l: 1,
            r: [3.14, 0, 3.14]
        }, {
            p: [175, 99, -281],
            s: [7, 5, 9],
            c: 6247502,
            t: 11,
            bo: 1
        }, {
            p: [175, 103, -312],
            s: [6, 10, 17],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [166, 65, -337],
            s: [7, 3, 4],
            l: 1,
            c: 4275e3,
            t: 5
        }, {
            p: [165, 65, -348],
            s: [4, 3, 7],
            l: 1,
            c: 4275e3,
            t: 5
        }, {
            p: [175, 107, -246],
            s: [6, 5, 12],
            l: 1,
            c: 10983566,
            t: 11
        }, {
            p: [175, 107, -265],
            s: [6, 3, 14],
            l: 1,
            c: 10983566,
            t: 11
        }, {
            p: [175, 120, -244],
            s: [9, 5, 4],
            c: 6248017,
            t: 11,
            bo: 1
        }, {
            p: [165, 65, -237],
            s: [7, 3, 4],
            l: 1,
            c: 4275e3,
            t: 5
        }, {
            p: [183, 65, -300],
            s: [4, 3, 7],
            l: 1,
            c: 4275e3,
            t: 5
        }, {
            p: [167, 65, -280],
            s: [5, 2, 4],
            l: 1,
            c: 4275e3,
            t: 5
        }, {
            p: [48, 64, -271],
            s: [4, 3, 7],
            l: 1,
            c: 4275e3,
            t: 5
        }, {
            p: [102, 64, -277],
            s: [4, 3, 7],
            l: 1,
            c: 4275e3,
            t: 5
        }, {
            p: [229, 64, -224],
            s: [4, 3, 7],
            l: 1,
            c: 4275e3,
            t: 5
        }, {
            p: [267, 129, -347],
            s: [22, 3, 10],
            c: 8220776,
            t: 11,
            bo: 1
        }, {
            p: [214, 105, -236],
            s: [4, 5, 9],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [287, 115, -236],
            s: [23, 5, 12],
            c: 5918536,
            t: 11,
            bo: 1
        }, {
            p: [237, 115, -236],
            s: [30, 4, 9],
            c: 7563360,
            t: 11,
            bo: 1
        }, {
            p: [64, 64, -364],
            s: [6, 3, 3],
            l: 1,
            c: 4275e3,
            t: 5
        }, {
            p: [-20, 64, -328],
            s: [4, 3, 7],
            l: 1,
            c: 4275e3,
            t: 5
        }, {
            p: [175, 120, -355],
            s: [9, 5, 6],
            c: 8220776,
            t: 11,
            bo: 1
        }, {
            p: [176, 77, -363],
            s: [5, 31, 22],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [130, 77, -371],
            s: [90, 31, 4],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [68, 77, -371],
            s: [34, 24, 4],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [12, 77, -371],
            s: [78, 27, 4],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [-28, 77, -345],
            s: [5, 29, 58],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [-44, 77, -315],
            s: [27, 29, 4],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [-28, 106, -327],
            s: [5, 3, 14],
            l: 1,
            c: 10983566,
            t: 11
        }, {
            p: [-28, 106, -363],
            s: [5, 2, 22],
            l: 1,
            c: 10983566,
            t: 11
        }, {
            p: [-36, 106, -315],
            s: [15, 3, 4],
            l: 1,
            c: 10983566,
            t: 11
        }, {
            p: [69, 101, -371],
            s: [16, 3, 4],
            l: 1,
            c: 10983566,
            t: 11
        }, {
            p: [177, 65, -359],
            s: [9, 12, 24],
            c: 6575952,
            t: 11
        }, {
            p: [64, 65, -372],
            s: [220, 12, 8],
            c: 6379602,
            t: 11
        }, {
            p: [-43, 51, -341],
            s: [37, 26, 58],
            c: 6576209,
            t: 11
        }, {
            p: [-29, 77, -317],
            s: [9, 37, 10],
            c: 6247759,
            t: 11,
            bo: 1
        }, {
            p: [303, 110, -335],
            s: [6, 4, 23],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [291, 74, -313],
            s: [7, 3, 4],
            l: 1,
            c: 4275e3,
            t: 5
        }, {
            p: [294, 65, -246],
            s: [4, 3, 7],
            l: 1,
            c: 4275e3,
            t: 5
        }, {
            p: [303, 110, -270],
            s: [6, 4, 24],
            c: 6708310,
            t: 11,
            bo: 1
        }, {
            p: [182, 65, -263],
            s: [4, 3, 7],
            l: 1,
            c: 4275e3,
            t: 5
        }, {
            p: [294, 65, -335],
            s: [4, 3, 7],
            l: 1,
            c: 4275e3,
            t: 5
        }, {
            p: [270, 65, -339],
            s: [8, 3, 4],
            l: 1,
            c: 4275e3,
            t: 5
        }, {
            p: [303, 123, -340],
            s: [9, 6, 4],
            c: 8220776,
            t: 11,
            bo: 1
        }, {
            p: [227, 95, -236],
            s: [2, 5, 9],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [303, 95, -249],
            s: [6, 5, 2],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [303, 101, -263],
            s: [6, 4, 2],
            c: 10983566,
            t: 11,
            bo: 1
        }, {
            p: [97, 104, -217],
            s: [2, 2, 13],
            l: 1,
            c: 7895160,
            t: 2
        }, {
            p: [97, 97, -218],
            s: [1, 6, 9],
            l: 1,
            c: 7895160,
            t: 2
        }, {
            p: [97, 103, -221],
            s: [1, 1, 1],
            l: 1,
            c: 7895160,
            t: 5
        }, {
            p: [97, 103, -215],
            s: [1, 1, 1],
            l: 1,
            c: 7895160,
            t: 5
        }, {
            p: [112, 64, -218],
            s: [4, 3, 7],
            l: 1,
            c: 4275e3,
            t: 5
        }, {
            p: [-96, 98, -271],
            s: [2, 2, 13],
            l: 1,
            c: 7895160,
            t: 2
        }, {
            p: [-96, 91, -272],
            s: [1, 6, 9],
            l: 1,
            c: 7895160,
            t: 2
        }, {
            p: [-96, 97, -275],
            s: [1, 1, 1],
            l: 1,
            c: 7895160,
            t: 5
        }, {
            p: [-96, 97, -269],
            s: [1, 1, 1],
            l: 1,
            c: 7895160,
            t: 5
        }, {
            p: [-8, 107, 52],
            s: [2, 2, 17],
            l: 1,
            c: 7895160,
            t: 2
        }, {
            p: [-8, 100, 49],
            s: [1, 6, 9],
            l: 1,
            c: 7895160,
            t: 2
        }, {
            p: [-8, 106, 46],
            s: [1, 1, 1],
            l: 1,
            c: 7895160,
            t: 5
        }, {
            p: [-8, 106, 52],
            s: [1, 1, 1],
            l: 1,
            c: 7895160,
            t: 5
        }, {
            p: [-213, 50, -197],
            s: [4, 3, 7],
            l: 1,
            c: 3092271,
            t: 5
        }, {
            p: [-185, 50, -237],
            s: [4, 3, 7],
            l: 1,
            c: 3092271,
            t: 5
        }, {
            p: [-199, 81, -260],
            s: [33, 3, 3],
            c: 8684676,
            t: 2,
            bo: 1
        }, {
            p: [-181, 53, -260],
            s: [3, 31, 3],
            c: 8684676,
            t: 2,
            bo: 1
        }, {
            p: [-217, 53, -260],
            s: [3, 31, 3],
            c: 8684676,
            t: 2,
            bo: 1
        }, {
            p: [130, 108, -371],
            s: [90, 1, 4],
            l: 1,
            t: 5
        }, {
            p: [12, 104, -371],
            s: [78, 1, 4],
            l: 1,
            t: 5
        }, {
            p: [69, 104, -371],
            s: [16, 1, 4],
            l: 1,
            t: 5
        }, {
            p: [175, 125, -355],
            s: [9, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [-28, 106, -343],
            s: [5, 1, 18],
            l: 1,
            t: 5
        }, {
            p: [-28, 108, -363],
            s: [5, 1, 22],
            l: 1,
            t: 5
        }, {
            p: [-28, 109, -327],
            s: [5, 1, 14],
            l: 1,
            t: 5
        }, {
            p: [-38, 109, -315],
            s: [11, 1, 4],
            l: 1,
            t: 5
        }, {
            p: [-50, 106, -315],
            s: [13, 1, 4],
            l: 1,
            t: 5
        }, {
            p: [176, 108, -361],
            s: [5, 1, 25],
            l: 1,
            t: 5
        }, {
            p: [175, 125, -329],
            s: [9, 1, 26],
            l: 1,
            t: 5
        }, {
            p: [175, 133, -347],
            s: [9, 1, 10],
            l: 1,
            t: 5
        }, {
            p: [175, 113, -312],
            s: [6, 1, 17],
            l: 1,
            t: 5
        }, {
            p: [175, 110, -265],
            s: [6, 1, 14],
            l: 1,
            t: 5
        }, {
            p: [175, 112, -245],
            s: [6, 1, 14],
            l: 1,
            t: 5
        }, {
            p: [303, 114, -267],
            s: [6, 1, 18],
            l: 1,
            t: 5
        }, {
            p: [303, 128, -236],
            s: [9, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [199, 124, -236],
            s: [39, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [175, 132, -236],
            s: [9, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [303, 134, -347],
            s: [9, 1, 10],
            l: 1,
            t: 5
        }, {
            p: [292, 129, -347],
            s: [13, 1, 10],
            l: 1,
            t: 5
        }, {
            p: [211, 129, -347],
            s: [63, 1, 10],
            l: 1,
            t: 5
        }, {
            p: [300, 110, -292],
            s: [7, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [300, 107, -301],
            s: [8, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [157, 85, 11],
            s: [10, 20, 1],
            pe: 1,
            v: 1,
            c: 7895160,
            t: 5
        }, {
            p: [56, 85, -2],
            s: [10, 20, 1],
            pe: 1,
            v: 1,
            c: 7895160,
            t: 5
        }, {
            p: [303, 114, -333],
            s: [6, 1, 19],
            l: 1,
            t: 5
        }, {
            p: [303, 129, -340],
            s: [9, 1, 4],
            l: 1,
            t: 5
        }, {
            p: [300, 95, -62],
            s: [12, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [296, 90, -25],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [296, 90, -17],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [351, 90, 34],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [375, 72, -139],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [325, 72, -210],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [325, 72, -202],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [102, 72, -291],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [147, 72, -198],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [152, 72, -365],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [145, 72, -365],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [45, 72, -66],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [-55, 72, -66],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [-68, 72, 14],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [-68, 72, 22],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [-163, 72, 54],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [-165, 72, -38],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [-317, 59, -173],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [-317, 59, -56],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [-317, 59, -64],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [-305, 59, 20],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [-269, 59, -59],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [-222, 59, -295],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [206, 72, -227],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [206, 72, -220],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [-205, 51, -258],
            s: [3, 2, 4],
            l: 1,
            t: 5
        }, {
            p: [-189, 51, -180],
            s: [4, 2, 8],
            l: 1,
            t: 5
        }, {
            p: [-189, 51, -180],
            s: [4, 2, 8],
            v: 1,
            t: 5
        }, {
            p: [61, 89, -2],
            s: [1, 2, 1],
            pe: 1,
            c: 7895160,
            t: 5
        }, {
            p: [61, 99, -2],
            s: [1, 2, 1],
            pe: 1,
            c: 7895160,
            t: 5
        }, {
            p: [-8, 109, 52],
            s: [2, 1, 17],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-96, 100, -271],
            s: [2, 1, 13],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [97, 106, -217],
            s: [2, 1, 13],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-234, 95, 14],
            s: [3, 25, 64],
            v: 1,
            c: 7500402,
            t: 2
        }, {
            p: [55, 72, -215],
            s: [6, 1, 6],
            l: 1,
            t: 5
        }, {
            p: [75, 90, -292],
            s: [3, 16, 3],
            c: 10983566,
            t: 11
        }, {
            p: [75, 99, -292],
            s: [2, 3, 12],
            c: 10983566,
            t: 11
        }, {
            p: [75, 102, -292],
            s: [2, 1, 12],
            l: 1,
            t: 5
        }, {
            p: [75, 106, -292],
            s: [3, 1, 3],
            l: 1,
            t: 5
        }, {
            p: [-276, 53, -16],
            s: [24, 36, 24],
            i: 23,
            l: 1,
            tm: 0
        }, {
            p: [245, 67, -293],
            s: [24, 36, 24],
            i: 23,
            l: 1,
            tm: "1"
        }, {
            p: [97, 97, -217],
            s: [2, 16, 13],
            v: 1,
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-96, 91, -271],
            s: [2, 16, 13],
            v: 1,
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [-8, 100, 50],
            s: [2, 16, 13],
            v: 1,
            c: 7895160,
            t: 2,
            bo: 1
        }, {
            p: [238, 66, -292],
            s: [114, 50, 95],
            i: 14,
            l: 1
        }, {
            p: [-273, 53, -22],
            s: [91, 50, 86],
            i: 14,
            l: 1
        }, {
            p: [74, 66, -292],
            s: [91, 50, 86],
            i: 14,
            l: 1
        }, {
            p: [192, 84, -9],
            s: [73, 50, 103],
            i: 14,
            l: 1
        }, {
            p: [-199, 83, -212],
            s: [36, 8, 96],
            c: 8355711,
            t: 11,
            bo: 1
        }]
    }, {
        name: "Kanji",
        ambInd: 2,
        modURL: "",
        terrainSeed: "",
        terrainWidth: 3e3,
        terrainHeight: 3e3,
        terrainMntMlt: 1,
        terrainMntCol: "#a0a0a0",
        terrainGrsCol: "#4a6904",
        terrainDrtCol: "#8c6835",
        skyDome: !0,
        skyDomeCol0: "#071250",
        skyDomeCol1: "#452e7d",
        skyDomeCol2: "#2f3b7d",
        zone: !1,
        zoneSize: 500,
        zoneSpeed: 1,
        zoneCol0: "#c542d9",
        zoneCol1: "#c542d9",
        zoneCol2: "#c542d9",
        sizeMlt: 2,
        shadowR: 2227.25487273401,
        ambient: 6184555,
        light: 3358064,
        sky: 0,
        fog: 3551876,
        fogD: 888.9947618183014,
        dthY: -118.35524224550045,
        camPos: [-296, 67, -379],
        spawns: [[-17, 0, 80, 0, 3], [-149.99999999999997, -21, -619.9999999999999, 0], [-306, -20, -524, 0], [-63, -20.999999999999996, -547.9999999999999, 0], [-21, -19.999999999999996, -243, 0], [-469.99999999999994, -17.99999999999999, -219, 0, 3], [-378.9999999999999, -.9999999999999998, -373, 0], [-83, -20.99999999999999, -311.99999999999994, 0], [-323, -2.9999999999999996, -8, 0]],
        objects: [{
            p: [0, -1200, 0],
            s: [125, 1200, 203],
            c: "#969696",
            t: 5
        }, {
            p: [-62, 2, 101],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-30, -1182, -33],
            s: [132, 1161, 203],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [62, 2, 101],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-62, 2, 61],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-90, -19, -34],
            s: [9, 15, 26],
            t: 5
        }, {
            p: [0, 0, -101],
            s: [120, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [0, 0, 101],
            s: [120, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [62, 0, 0],
            s: [4, 2, 206],
            c: "#787878",
            t: 5
        }, {
            p: [-62, 0, 0],
            s: [4, 2, 206],
            c: "#787878",
            t: 5
        }, {
            p: [-98, -21, 54],
            s: [5, 2, 24],
            c: "#787878",
            t: 5
        }, {
            p: [-62, -21, -134],
            s: [74, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [35, 2, 75],
            s: [2, 16, 2],
            c: "#666666",
            t: 5
        }, {
            p: [11, 2, 75],
            s: [2, 16, 2],
            c: "#666666",
            t: 5
        }, {
            p: [11, 2, 51],
            s: [2, 16, 2],
            c: "#666666",
            t: 5
        }, {
            p: [35, 2, 51],
            s: [2, 16, 2],
            c: "#666666",
            t: 5
        }, {
            p: [23, 18, 63],
            s: [28, 1, 28],
            c: "#666666",
            t: 5
        }, {
            p: [23, 19, 63],
            s: [25, 21, 25],
            c: "#acacac",
            t: 5
        }, {
            p: [11, 0, 51],
            s: [3, 2, 3],
            c: "#666666",
            t: 5
        }, {
            p: [35, 0, 51],
            s: [3, 2, 3],
            c: "#666666",
            t: 5
        }, {
            p: [35, 0, 75],
            s: [3, 2, 3],
            c: "#666666",
            t: 5
        }, {
            p: [11, 0, 75],
            s: [3, 2, 3],
            c: "#666666",
            t: 5
        }, {
            p: [23, 3, 51],
            s: [22, 1, 1],
            c: "#666666",
            t: 5
        }, {
            p: [11, 3, 63],
            s: [1, 1, 22],
            c: "#666666",
            t: 5
        }, {
            p: [23, 3, 75],
            s: [22, 1, 1],
            c: "#666666",
            t: 5
        }, {
            p: [35, 3, 63],
            s: [1, 1, 22],
            c: "#666666",
            t: 5
        }, {
            p: [10, 21, 56],
            s: [1, 4, 4],
            c: "#666666",
            t: 5
        }, {
            p: [10, 21, 61],
            s: [1, 4, 4],
            c: "#666666",
            t: 5
        }, {
            p: [-47, -21, -103],
            s: [2, 25, 4],
            i: 3,
            c: "#e84d4d",
            t: 5,
            d: 3
        }, {
            p: [-90, -21, -34],
            s: [7, 6, 25],
            c: "#505050",
            t: 5
        }, {
            p: [23, 40, 63],
            s: [28, 1, 28],
            c: "#666666",
            t: 5
        }, {
            p: [-16, 6, -62],
            s: [24, 20, 34],
            t: 5
        }, {
            p: [30, 6, -61],
            s: [20, 14, 39],
            c: "#acacac",
            t: 5
        }, {
            p: [-16, 26, -62],
            s: [26, 1, 36],
            c: "#666666",
            t: 5
        }, {
            p: [30, 20, -61],
            s: [22, 1, 41],
            c: "#666666",
            t: 5
        }, {
            p: [-7, 27, -48],
            s: [3, 1, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-7, 28, -48],
            s: [4, 2, 4],
            c: "#666666",
            t: 5
        }, {
            p: [30, 0, -61],
            s: [19, 6, 38],
            c: "#666666",
            t: 5
        }, {
            p: [0, 2, 101],
            s: [123, 29, 1],
            pe: 1,
            t: 12
        }, {
            p: [-62, 2, 81],
            s: [1, 29, 38],
            pe: 1,
            t: 12
        }, {
            p: [0, 2, 101],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-64, -21, 22],
            s: [2, 25, 4],
            i: 3,
            c: "#e84d4d",
            t: 5,
            d: 2
        }, {
            p: [62, 2, 71],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [62, 2, -15],
            s: [1, 29, 172],
            pe: 1,
            t: 12
        }, {
            p: [192, -708, 517],
            s: [139, 784, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-112, -712, 319],
            s: [186, 710, 214],
            r: [-3.14, 0, 3.14],
            c: "#757575",
            t: 5
        }, {
            p: [-294, -905, 765],
            s: [145, 1089, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-112, -2, 212],
            s: [189, 2, 4],
            c: "#4d4d4d",
            t: 5,
            bo: 1
        }, {
            p: [-112, -2, 426],
            s: [189, 2, 4],
            c: "#4d4d4d",
            t: 5
        }, {
            p: [-20, -2, 319],
            s: [5, 2, 218],
            c: "#4d4d4d",
            t: 5,
            bo: 1
        }, {
            p: [-204, -2, 319],
            s: [5, 2, 218],
            c: "#4d4d4d",
            t: 5,
            bo: 1
        }, {
            p: [192, 76, 517],
            s: [142, 3, 145],
            l: 1,
            c: "#696969",
            t: 5
        }, {
            p: [308, -708, 191],
            s: [139, 745, 142],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [308, 11, 191],
            s: [100, 75, 106],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [308, 86, 191],
            s: [106, 3, 111],
            c: "#707070",
            t: 5
        }, {
            p: [308, 37, 191],
            s: [145, 2, 147],
            c: "#707070",
            t: 5,
            bo: 1
        }, {
            p: [300, -708, 467],
            s: [158, 608, 142],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [0, 165, 368],
            s: [143, 3, 146],
            c: "#828282",
            t: 5
        }, {
            p: [559, -708, 21],
            s: [158, 796, 139],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [308, -708, -55],
            s: [139, 694, 142],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-377, -708, 284],
            s: [162, 796, 139],
            c: "#6b6b6b",
            t: 5,
            bo: 1
        }, {
            p: [-82, -708, 830],
            s: [139, 926, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-33, 0, 55],
            s: [22, 6, 48],
            c: "#666666",
            t: 5
        }, {
            p: [-33, 6, 55],
            s: [23, 14, 49],
            c: "#acacac",
            t: 5
        }, {
            p: [-33, 20, 55],
            s: [25, 1, 51],
            c: "#666666",
            t: 5
        }, {
            p: [-478, -708, 187],
            s: [139, 732, 161],
            c: "#b6b6b6",
            t: 5,
            bo: 1
        }, {
            p: [-383, -708, -199],
            s: [148, 860, 130],
            c: "#919191",
            t: 5,
            bo: 1
        }, {
            p: [-322, -708, -222],
            s: [88, 687, 142],
            c: "#d9d9d9",
            t: 5
        }, {
            p: [-291, -21, -293],
            s: [30, 2, 4],
            c: "#939393",
            t: 5
        }, {
            p: [-278, -21, -238],
            s: [4, 2, 112],
            c: "#939393",
            t: 5
        }, {
            p: [-865, -708, 375],
            s: [139, 926, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-633, -905, -887],
            s: [145, 1088, 142],
            l: 1,
            c: "#e3e3e3",
            t: 5
        }, {
            p: [2, -708, -231],
            s: [55, 688, 136],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-211, -708, -147],
            s: [34, 844, 34],
            c: "#b6b6b6",
            t: 5,
            bo: 1
        }, {
            p: [618, -708, 215],
            s: [139, 945, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [438, -708, 627],
            s: [158, 858, 139],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [129, -905, 772],
            s: [225, 962, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [62, 2, 19],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [62, 2, -101],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-830, -905, 119],
            s: [185, 965, 116],
            l: 1,
            c: "#f0f0f0",
            t: 5
        }, {
            p: [-659, -712, -122],
            s: [186, 744, 214],
            r: [-3.14, 0, 3.14],
            c: "#757575",
            t: 5,
            bo: 1
        }, {
            p: [-1107, -708, 30],
            s: [139, 926, 142],
            l: 1,
            c: "#141414",
            t: 5
        }, {
            p: [-496, -905, 789],
            s: [145, 1202, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [415, -905, 789],
            s: [145, 1257, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-208, -905, 1060],
            s: [225, 1031, 142],
            l: 1,
            c: "#fcfcfc",
            t: 5
        }, {
            p: [580, -905, 464],
            s: [208, 962, 214],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-707, -905, 586],
            s: [225, 1010, 256],
            l: 1,
            c: "#c8c8c8",
            t: 5
        }, {
            p: [-90, -3, -43],
            s: [4, 2, 4],
            c: "#666666",
            t: 5
        }, {
            p: [-90, -4, -43],
            s: [3, 1, 3],
            c: "#666666",
            t: 5
        }, {
            p: [355, -905, -147],
            s: [145, 1066, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [2, 24, -231],
            s: [55, 84, 136],
            c: "#8c8c8c",
            t: 5,
            bo: 1
        }, {
            p: [-145, -796, -231],
            s: [239, 905, 136],
            c: "#8c8c8c",
            t: 5,
            bo: 1
        }, {
            p: [-79, -21, 68],
            s: [43, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [24, -20, -168],
            s: [11, 44, 10],
            c: "#b6b6b6",
            t: 5,
            bo: 1
        }, {
            p: [0, -708, 368],
            s: [139, 873, 142],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [230, -708, -401],
            s: [139, 873, 142],
            c: "#616161",
            t: 5
        }, {
            p: [484, -905, -475],
            s: [208, 962, 214],
            l: 1,
            c: "#f2f2f2",
            t: 5
        }, {
            p: [889, -708, -261],
            s: [171, 889, 259],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [547, -905, -486],
            s: [145, 1257, 142],
            l: 1,
            c: "#484848",
            t: 5
        }, {
            p: [-853, -905, -279],
            s: [145, 1202, 142],
            l: 1,
            c: "#969696",
            t: 5
        }, {
            p: [154, -905, -948],
            s: [145, 1202, 142],
            l: 1,
            c: "#555454",
            t: 5
        }, {
            p: [-461, -905, 37],
            s: [106, 761, 94],
            l: 1,
            c: "#646464",
            t: 5
        }, {
            p: [504, -708, 72],
            s: [158, 608, 142],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [-943, -905, 716],
            s: [145, 1292, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-26, 27, -78],
            s: [1, 2, 1],
            c: "#666666",
            t: 5
        }, {
            p: [-26, 29, -78],
            s: [2, 1, 2],
            c: "#666666",
            t: 5
        }, {
            p: [-706, -905, -504],
            s: [145, 1034, 142],
            c: "#828282",
            t: 5
        }, {
            p: [-1007, -708, -410],
            s: [158, 796, 139],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [-791, -905, -1167],
            s: [145, 1202, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-165, -905, -1488],
            s: [145, 1212, 142],
            l: 1,
            c: "#616161",
            t: 5
        }, {
            p: [-1655, -820, -464],
            s: [145, 1238, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [276, -905, -739],
            s: [145, 1034, 142],
            l: 1,
            c: "#b9b9b9",
            t: 5
        }, {
            p: [-657, -785, -556],
            s: [158, 757, 139],
            c: "#7d7d7d",
            t: 5,
            bo: 1
        }, {
            p: [190, -710, -360],
            s: [123, 763, 135],
            r: [-3.14, 0, 3.14],
            c: "#a0a0a0",
            t: 5,
            bo: 1
        }, {
            p: [87, -708, -895],
            s: [158, 731, 139],
            l: 1,
            c: "#acacac",
            t: 5
        }, {
            p: [-700, -905, -818],
            s: [145, 981, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-282, -710, -534],
            s: [96, 690, 104],
            r: [-3.14, 0, 3.14],
            c: "#c0c0c0",
            t: 5
        }, {
            p: [-235, -21, -533],
            s: [4, 2, 105],
            c: "#787878",
            t: 5
        }, {
            p: [-331, -21, -533],
            s: [4, 2, 105],
            c: "#787878",
            t: 5
        }, {
            p: [-312, -21, -483],
            s: [39, 2, 5],
            c: "#787878",
            t: 5
        }, {
            p: [-283, -21, -583],
            s: [100, 2, 5],
            c: "#787878",
            t: 5
        }, {
            p: [-331, -19, -583],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-331, -19, -483],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-331, -19, -533],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-284, -19, -583],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-235, -19, -583],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-308, -19, -583],
            s: [47, 29, 1],
            pe: 1,
            t: 12
        }, {
            p: [-331, -19, -533],
            s: [1, 29, 99],
            pe: 1,
            t: 12
        }, {
            p: [-307, -17, -502],
            s: [25, 13, 14],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-307, -22, -502],
            s: [24, 5, 13],
            c: "#7a7a7a",
            t: 5
        }, {
            p: [-307, -4, -502],
            s: [27, 1, 16],
            c: "#737373",
            t: 5
        }, {
            p: [-707, -905, -54],
            s: [145, 1034, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-111, -708, -1048],
            s: [158, 796, 151],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [-854, -708, -684],
            s: [139, 926, 142],
            l: 1,
            c: "#4b4b4b",
            t: 5
        }, {
            p: [-1056, -708, -814],
            s: [158, 885, 139],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [-405, -708, -987],
            s: [158, 680, 139],
            l: 1,
            c: "#acacac",
            t: 5
        }, {
            p: [-224, -708, -1269],
            s: [139, 876, 142],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [-564, -708, -1215],
            s: [158, 796, 139],
            l: 1,
            c: "#b4b4b4",
            t: 5
        }, {
            p: [500, -905, -912],
            s: [145, 1285, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [83, -905, -1262],
            s: [145, 1112, 142],
            l: 1,
            c: "#7f7f7f",
            t: 5
        }, {
            p: [-414, -905, -1447],
            s: [145, 1068, 142],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-592, -708, -1418],
            s: [158, 1072, 139],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [133, -708, -1094],
            s: [158, 796, 139],
            l: 1,
            c: "#6e6e6e",
            t: 5
        }, {
            p: [484, -708, -653],
            s: [158, 915, 139],
            l: 1,
            c: "#6e6e6e",
            t: 5
        }, {
            p: [379, -708, -1008],
            s: [158, 821, 139],
            l: 1,
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-1217, -708, -567],
            s: [158, 979, 139],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [-1275, -905, -1165],
            s: [145, 1238, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [991, -708, 134],
            s: [171, 933, 138],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [1380, -708, -70],
            s: [171, 1084, 138],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [680, -708, 544],
            s: [171, 1084, 138],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [295, -905, 1272],
            s: [145, 1257, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-1455, -905, -155],
            s: [145, 1305, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-1206, -905, 376],
            s: [145, 1305, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-254, -22, -502],
            s: [24, 5, 13],
            c: "#7a7a7a",
            t: 5
        }, {
            p: [-254, -17, -502],
            s: [25, 13, 14],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-254, -4, -502],
            s: [27, 1, 16],
            c: "#737373",
            t: 5
        }, {
            p: [-383, 151, -199],
            s: [152, 3, 135],
            c: "#737373",
            t: 5,
            bo: 1
        }, {
            p: [-305, -2, -557],
            s: [25, 21, 25],
            c: "#acacac",
            t: 5
        }, {
            p: [-305, 19, -557],
            s: [28, 1, 28],
            c: "#666666",
            t: 5
        }, {
            p: [-305, -3, -557],
            s: [28, 1, 28],
            c: "#666666",
            t: 5
        }, {
            p: [-294, -18, -546],
            s: [2, 15, 2],
            c: "#666666",
            t: 5
        }, {
            p: [-294, -20, -546],
            s: [3, 2, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-294, -18, -568],
            s: [2, 15, 2],
            c: "#666666",
            t: 5
        }, {
            p: [-294, -20, -568],
            s: [3, 2, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-316, -18, -546],
            s: [2, 15, 2],
            c: "#666666",
            t: 5
        }, {
            p: [-316, -20, -546],
            s: [3, 2, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-316, -18, -568],
            s: [2, 15, 2],
            c: "#666666",
            t: 5
        }, {
            p: [-316, -20, -568],
            s: [3, 2, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-294, -17, -557],
            s: [1, 1, 22],
            c: "#666666",
            t: 5
        }, {
            p: [-316, -17, -557],
            s: [1, 1, 22],
            c: "#666666",
            t: 5
        }, {
            p: [-305, -17, -546],
            s: [20, 1, 1],
            c: "#666666",
            t: 5
        }, {
            p: [-305, -17, -568],
            s: [20, 1, 1],
            c: "#666666",
            t: 5
        }, {
            p: [-121, -708, -427],
            s: [157, 687, 70],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-63, -708, -533],
            s: [41, 687, 142],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-199, -21, -427],
            s: [4, 2, 73],
            c: "#787878",
            t: 5
        }, {
            p: [-121, -21, -393],
            s: [160, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-43, -21, -517],
            s: [4, 2, 245],
            c: "#787878",
            t: 5
        }, {
            p: [-131, -23, -436],
            s: [102, 96, 52],
            c: "#b6b6b6",
            t: 5,
            bo: 1
        }, {
            p: [-67, -708, -322],
            s: [193, 688, 46],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [24, -20, -294],
            s: [11, 44, 10],
            c: "#b6b6b6",
            t: 5,
            bo: 1
        }, {
            p: [24, -20, -232],
            s: [11, 44, 10],
            c: "#b6b6b6",
            t: 5,
            bo: 1
        }, {
            p: [-20, -20, -340],
            s: [11, 44, 10],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-20, -20, -168],
            s: [11, 44, 10],
            c: "#b6b6b6",
            t: 5,
            bo: 1
        }, {
            p: [-20, -20, -232],
            s: [11, 44, 10],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [24, -20, -340],
            s: [11, 44, 10],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-20, -20, -294],
            s: [11, 44, 10],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [2, 24, -322],
            s: [55, 9, 46],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [6, -1182, -144],
            s: [69, 1161, 19],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-27, -21, -143],
            s: [4, 2, 14],
            c: "#787878",
            t: 5
        }, {
            p: [6, -21, -152],
            s: [70, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [50, 2, -101],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [56, 2, -101],
            s: [12, 29, 1],
            pe: 1,
            t: 12
        }, {
            p: [-129, -20, -322],
            s: [69, 33, 46],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-93, -21, -323],
            s: [2, 38, 4],
            i: 3,
            r: [-3.14, 0, -3.14],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-95, 13, -323],
            s: [4, 2, 48],
            c: "#787878",
            t: 5
        }, {
            p: [-129, 13, -345],
            s: [64, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-67, -19, -367],
            s: [4, 1, 56],
            c: "#897966",
            t: 5
        }, {
            p: [-63, -19, -367],
            s: [4, 1, 59],
            c: "#988671",
            t: 5
        }, {
            p: [-94, -20, -323],
            s: [2, 35, 9],
            v: 1,
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-132, 96, -533],
            s: [184, 4, 147],
            c: "#707070",
            t: 5,
            bo: 1
        }, {
            p: [-131, 73, -440],
            s: [105, 4, 65],
            c: "#707070",
            t: 5,
            bo: 1
        }, {
            p: [-141, 13, -339],
            s: [5, 1, 5],
            c: "#666666",
            t: 5
        }, {
            p: [-383, -21, -199],
            s: [151, 2, 133],
            l: 1,
            c: "#919191",
            t: 5
        }, {
            p: [-141, 14, -339],
            s: [2, 23, 2],
            c: "#666666",
            t: 5
        }, {
            p: [-101, 13, -339],
            s: [5, 1, 5],
            c: "#666666",
            t: 5
        }, {
            p: [-101, 14, -339],
            s: [2, 23, 2],
            c: "#666666",
            t: 5
        }, {
            p: [-101, 37, -349],
            s: [2, 2, 27],
            c: "#666666",
            t: 5
        }, {
            p: [-101, -14, -360],
            s: [1, 52, 1],
            c: "#505050",
            t: 5
        }, {
            p: [-141, 37, -349],
            s: [2, 2, 27],
            c: "#666666",
            t: 5
        }, {
            p: [-141, -14, -360],
            s: [1, 52, 1],
            c: "#505050",
            t: 5
        }, {
            p: [-121, -15, -361],
            s: [41, 1, 19],
            c: "#646464",
            t: 5
        }, {
            p: [-100, -15, -361],
            s: [1, 2, 19],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-142, -15, -361],
            s: [1, 2, 19],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-121, -15, -371],
            s: [43, 2, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-121, -15, -351],
            s: [43, 2, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-142, -13, -360],
            s: [1, 2, 4],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-100, -13, -360],
            s: [1, 2, 4],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-106, 13, -340],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [-158, 13, -302],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [16, -20, -342],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [-21, -20, -286],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [16, -20, -166],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [-235, -19, -560],
            s: [1, 29, 45],
            pe: 1,
            t: 12
        }, {
            p: [-235, -19, -537],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [230, 165, -401],
            s: [143, 3, 146],
            c: "#575757",
            t: 5
        }, {
            p: [355, 161, -147],
            s: [151, 5, 147],
            l: 1,
            c: "#737373",
            t: 5
        }, {
            p: [-117, 107, -231],
            s: [299, 4, 142],
            c: "#6b6b6b",
            t: 5,
            bo: 1
        }, {
            p: [-211, 136, -143],
            s: [38, 3, 46],
            c: "#787878",
            t: 5,
            bo: 1
        }, {
            p: [-16, 0, -62],
            s: [22, 6, 32],
            c: "#757575",
            t: 5
        }, {
            p: [-101, 111, -164],
            s: [2, 23, 2],
            l: 1,
            c: "#666666",
            t: 5
        }, {
            p: [-141, 111, -164],
            s: [2, 23, 2],
            l: 1,
            c: "#666666",
            t: 5
        }, {
            p: [-101, 134, -155],
            s: [3, 3, 27],
            l: 1,
            c: "#666666",
            t: 5
        }, {
            p: [-141, 134, -155],
            s: [3, 3, 27],
            l: 1,
            c: "#666666",
            t: 5
        }, {
            p: [-101, 34, -143],
            s: [1, 99, 1],
            l: 1,
            c: "#505050",
            t: 5
        }, {
            p: [-141, 34, -143],
            s: [1, 102, 1],
            l: 1,
            c: "#505050",
            t: 5
        }, {
            p: [-121, 33, -143],
            s: [41, 1, 19],
            c: "#646464",
            t: 5,
            bo: 1
        }, {
            p: [-121, 33, -133],
            s: [43, 2, 1],
            c: "#e84d4d",
            t: 5,
            bo: 1
        }, {
            p: [-121, 33, -153],
            s: [43, 2, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-100, 33, -143],
            s: [1, 2, 19],
            c: "#e84d4d",
            t: 5,
            bo: 1
        }, {
            p: [-142, 33, -143],
            s: [1, 2, 19],
            c: "#e84d4d",
            t: 5,
            bo: 1
        }, {
            p: [-100, 35, -143],
            s: [1, 2, 4],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-142, 35, -143],
            s: [1, 2, 4],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-100, 35, -133],
            s: [1, 11, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-100, 35, -153],
            s: [1, 11, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-142, 35, -153],
            s: [1, 11, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-142, 35, -133],
            s: [1, 11, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-121, 44, -133],
            s: [45, 1, 2],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-121, 44, -153],
            s: [45, 1, 2],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-121, 35, -133],
            s: [1, 9, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-121, 35, -153],
            s: [1, 9, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-100, 37, -143],
            s: [1, 7, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-142, 37, -143],
            s: [1, 7, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-142, 44, -143],
            s: [2, 1, 18],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-100, 44, -143],
            s: [2, 1, 18],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-297, -2, -498],
            s: [3, 1, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-297, -3, -498],
            s: [2, 1, 2],
            c: "#666666",
            t: 5
        }, {
            p: [-264, -3, -498],
            s: [2, 1, 2],
            c: "#666666",
            t: 5
        }, {
            p: [-264, -2, -498],
            s: [3, 1, 3],
            c: "#666666",
            t: 5
        }, {
            p: [263, 89, 144],
            s: [1, 64, 1],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-63, 168, 304],
            s: [1, 40, 1],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [48, 166, 315],
            s: [27, 14, 22],
            l: 1,
            c: "#acacac",
            t: 5
        }, {
            p: [48, 180, 315],
            s: [29, 1, 24],
            l: 1,
            c: "#5c5c5c",
            t: 5
        }, {
            p: [-377, 88, 284],
            s: [167, 3, 142],
            l: 1,
            c: "#555555",
            t: 5
        }, {
            p: [-478, 24, 187],
            s: [145, 3, 165],
            l: 1,
            c: "#696969",
            t: 5
        }, {
            p: [-112, -2, 221],
            s: [3, 8, 3],
            l: 1,
            c: "#696969",
            t: 5
        }, {
            p: [308, -14, -55],
            s: [144, 4, 147],
            c: "#696565",
            t: 5,
            bo: 1
        }, {
            p: [-163, -708, -623],
            s: [241, 687, 38],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-196, -2, 221],
            s: [3, 8, 3],
            l: 1,
            c: "#696969",
            t: 5
        }, {
            p: [-154, 6, 221],
            s: [116, 54, 3],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [-448, -905, -776],
            s: [145, 943, 142],
            c: "#828282",
            t: 5
        }, {
            p: [-448, 38, -776],
            s: [149, 4, 147],
            c: "#616161",
            t: 5,
            bo: 1
        }, {
            p: [928, -708, -443],
            s: [171, 1084, 138],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-283, -21, -623],
            s: [4, 2, 33],
            c: "#787878",
            t: 5
        }, {
            p: [-163, -21, -642],
            s: [244, 2, 5],
            c: "#787878",
            t: 5
        }, {
            p: [-293, 56, 249],
            s: [22, 4, 2],
            l: 1,
            c: "#3e3e3e",
            t: 5
        }, {
            p: [-293, 8, 249],
            s: [22, 4, 2],
            l: 1,
            c: "#3e3e3e",
            t: 5
        }, {
            p: [-281, 8, 249],
            s: [2, 69, 2],
            l: 1,
            c: "#3e3e3e",
            t: 5
        }, {
            p: [-268, -3, 249],
            s: [25, 83, 5],
            l: 1,
            c: "#000000",
            t: 5
        }, {
            p: [-268, 75, 246],
            s: [18, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-276, 73, 246],
            s: [2, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-260, 73, 246],
            s: [2, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-264, 71, 246],
            s: [6, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-274, 68, 246],
            s: [6, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-264, 68, 246],
            s: [10, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-267, 61, 246],
            s: [2, 7, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-274, 63, 246],
            s: [2, 10, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-268, 60, 246],
            s: [5, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-262, 61, 246],
            s: [2, 7, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-261, 60, 246],
            s: [2, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-268, 54, 246],
            s: [18, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-276, 41, 246],
            s: [2, 10, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-275, 40, 246],
            s: [2, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-260, 40, 246],
            s: [2, 11, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-268, 47, 246],
            s: [9, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-268, 40, 246],
            s: [2, 17, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-272, 49, 246],
            s: [2, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-270, 33, 246],
            s: [2, 4, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-268, 34, 246],
            s: [17, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-268, 30, 246],
            s: [14, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-268, 26, 246],
            s: [6, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-268, 20, 246],
            s: [2, 14, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-264, 26, 246],
            s: [2, 4, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-268, 23, 246],
            s: [14, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-261, 5, 246],
            s: [2, 12, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-262, 12, 246],
            s: [6, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-264, 2, 246],
            s: [2, 13, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-263, 4, 246],
            s: [7, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-272, 15, 246],
            s: [10, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-272, 13, 246],
            s: [4, 1, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-272, 10, 246],
            s: [4, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-269, 9, 246],
            s: [2, 8, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-276, 10, 246],
            s: [2, 1, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-268, 9, 246],
            s: [2, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-268, 5, 246],
            s: [2, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-272, 5, 246],
            s: [2, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-276, 5, 246],
            s: [2, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-270, 1, 246],
            s: [2, 7, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-269, 0, 246],
            s: [2, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-274, 0, 246],
            s: [2, 8, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-268, 79, 246],
            s: [25, 1, 1],
            l: 1,
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-268, -3, 246],
            s: [25, 1, 1],
            l: 1,
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-256, -3, 246],
            s: [1, 83, 1],
            l: 1,
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-280, -3, 246],
            s: [1, 83, 1],
            l: 1,
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-264, 49, 246],
            s: [2, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-268, 43, 246],
            s: [10, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-268, 51, 246],
            s: [18, 2, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-266, 33, 246],
            s: [2, 4, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-272, 26, 246],
            s: [2, 4, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-262, 0, 246],
            s: [2, 3, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-275, 9, 246],
            s: [2, 8, 1],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-308, 90, 223],
            s: [2, 76, 2],
            l: 1,
            c: "#aaaaaa",
            t: 5
        }, {
            p: [-40, 35, -521],
            s: [9, 1, 1],
            c: "#372d2d",
            t: 5
        }, {
            p: [-40, 52, -521],
            s: [9, 1, 1],
            c: "#372d2d",
            t: 5
        }, {
            p: [-35, 33, -521],
            s: [1, 22, 2],
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-28, 34, -521],
            s: [13, 20, 1],
            c: "#021606",
            e: "#010903",
            t: 5
        }, {
            p: [-21, 33, -521],
            s: [1, 22, 2],
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-28, 33, -521],
            s: [14, 1, 2],
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-28, 54, -521],
            s: [14, 1, 2],
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-25, 51, -521],
            s: [5, 1, 2],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-26, 49, -521],
            s: [5, 1, 2],
            l: 1,
            r: [0, 0, .7],
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-25, 44, -521],
            s: [5, 1, 2],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-23, 35, -521],
            s: [1, 6, 2],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-26, 37, -521],
            s: [1, 3, 2],
            l: 1,
            r: [0, 0, 1.22],
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-26, 39, -521],
            s: [1, 2, 2],
            l: 1,
            r: [0, 0, .87],
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-27, 40, -521],
            s: [1, 2, 2],
            l: 1,
            r: [0, 0, .7],
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-29, 36, -521],
            s: [1, 4, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-32, 36, -521],
            s: [1, 4, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-30, 36, -521],
            s: [2, 1, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-31, 39, -521],
            s: [2, 1, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-31, 37, -521],
            s: [1, 2, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#004aff",
            e: "#7800ff",
            t: 5
        }, {
            p: [-31, 40, -521],
            s: [4, 1, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#fffe00",
            e: "#fff000",
            t: 5
        }, {
            p: [-31, 41, -521],
            s: [1, 4, 2],
            l: 1,
            r: [0, 0, .18],
            c: "#002dff",
            e: "#0000ff",
            t: 5
        }, {
            p: [-32, 41, -521],
            s: [1, 3, 2],
            l: 1,
            r: [0, 0, -.52],
            c: "#002dff",
            e: "#0000ff",
            t: 5
        }, {
            p: [-19, 35, -521],
            s: [4, 1, 1],
            l: 1,
            c: "#372d2d",
            t: 5
        }, {
            p: [-40, 43, -521],
            s: [9, 1, 1],
            c: "#372d2d",
            t: 5
        }, {
            p: [-19, 41, -521],
            s: [4, 1, 1],
            l: 1,
            c: "#372d2d",
            t: 5
        }, {
            p: [-19, 53, -521],
            s: [4, 1, 1],
            l: 1,
            c: "#372d2d",
            t: 5
        }, {
            p: [-17, 32, -521],
            s: [1, 23, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-9, 32, -521],
            s: [1, 23, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-13, 32, -521],
            s: [7, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-13, 54, -521],
            s: [7, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-13, 33, -521],
            s: [7, 21, 1],
            c: "#120216",
            e: "#010903",
            t: 5
        }, {
            p: [-13, 51, -521],
            s: [5, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-14, 50, -521],
            s: [1, 3, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-12, 50, -521],
            s: [1, 3, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-13, 43, -521],
            s: [1, 6, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-12, 48, -521],
            s: [3, 1, 2],
            l: 1,
            r: [0, 0, .7],
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-14, 48, -521],
            s: [3, 1, 2],
            l: 1,
            r: [0, 0, -.7],
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-13, 45, -521],
            s: [5, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-15, 44, -521],
            s: [3, 1, 2],
            l: 1,
            r: [0, 0, -.7],
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-11, 44, -521],
            s: [3, 1, 2],
            l: 1,
            r: [0, 0, .52],
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-11, 37, -521],
            s: [1, 4, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-13, 37, -521],
            s: [1, 5, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-13, 40, -521],
            s: [5, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-14, 38, -521],
            s: [3, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-14, 36, -521],
            s: [3, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-15, 35, -521],
            s: [1, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-12, 35, -521],
            s: [1, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-13, 34, -521],
            s: [3, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-10, 35, -521],
            s: [1, 3, 2],
            l: 1,
            r: [0, 0, -.35],
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-15, 34, -521],
            s: [1, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-12, 36, -521],
            s: [1, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-31, 47, -521],
            s: [3, 1, 2],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-31, 50, -521],
            s: [3, 1, 2],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-30, 47, -521],
            s: [1, 3, 2],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-33, 47, -521],
            s: [1, 4, 2],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-32, 51, -521],
            s: [3, 1, 2],
            l: 1,
            c: "#ff8700",
            e: "#553200",
            t: 5
        }, {
            p: [-30, 51, -521],
            s: [1, 1, 2],
            l: 1,
            c: "#ff8700",
            e: "#553200",
            t: 5
        }, {
            p: [-26, 29, -521],
            s: [1, 4, 1],
            l: 1,
            c: "#372d2d",
            t: 5
        }, {
            p: [-30, 29, -521],
            s: [1, 4, 1],
            l: 1,
            c: "#372d2d",
            t: 5
        }, {
            p: [-28, 30, -521],
            s: [8, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-28, 22, -521],
            s: [4, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-32, 18, -521],
            s: [1, 13, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-24, 18, -521],
            s: [1, 13, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-28, 19, -521],
            s: [7, 11, 1],
            c: "#000337",
            t: 5
        }, {
            p: [-25, 22, -521],
            s: [1, 7, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-28, 28, -521],
            s: [3, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-28, 26, -521],
            s: [3, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-30, 26, -521],
            s: [1, 3, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-28, 24, -521],
            s: [5, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-29, 23, -521],
            s: [2, 1, 2],
            l: 1,
            r: [0, 0, -.87],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-28, 23, -521],
            s: [2, 1, 2],
            l: 1,
            r: [0, 0, .87],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-28, 18, -521],
            s: [8, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-28, 20, -521],
            s: [1, 3, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-28, 20, -521],
            s: [6, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-32, 36, -521],
            s: [1, 1, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [92, 25, 318],
            s: [36, 136, 3],
            l: 1,
            c: "#200028",
            t: 5
        }, {
            p: [100, 132, 315],
            s: [3, 20, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [84, 132, 315],
            s: [3, 20, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [92, 141, 315],
            s: [17, 3, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [92, 125, 315],
            s: [17, 3, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [100, 108, 315],
            s: [3, 20, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [83, 108, 315],
            s: [3, 20, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [92, 108, 315],
            s: [17, 3, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [92, 101, 315],
            s: [21, 3, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [92, 83, 315],
            s: [3, 18, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [91, 77, 315],
            s: [19, 3, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [100, 60, 315],
            s: [3, 20, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [91, 60, 315],
            s: [19, 3, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [91, 69, 315],
            s: [19, 3, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [100, 36, 315],
            s: [3, 20, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [91, 36, 315],
            s: [21, 3, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [77, 56, 322],
            s: [22, 5, 4],
            l: 1,
            c: "#3e3e3e",
            t: 5
        }, {
            p: [77, 118, 322],
            s: [22, 5, 4],
            l: 1,
            c: "#3e3e3e",
            t: 5
        }, {
            p: [-448, 48, -706],
            s: [128, 42, 5],
            l: 1,
            c: "#1b1b1b",
            t: 5
        }, {
            p: [-404, 63, -704],
            s: [20, 2, 4],
            l: 1,
            r: [0, 0, -.87],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-394, 64, -703],
            s: [20, 2, 3],
            l: 1,
            r: [0, 0, -2.27],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-400, 72, -703],
            s: [23, 2, 3],
            l: 1,
            r: [0, 0, 3.14],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-400, 80, -703],
            s: [2, 11, 3],
            l: 1,
            r: [0, 0, 3.14],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-428, 58, -704],
            s: [7, 2, 5],
            l: 1,
            r: [0, 0, 3.14],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-423, 60, -704],
            s: [8, 2, 5],
            l: 1,
            r: [0, 0, -1.57],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-428, 64, -704],
            s: [10, 2, 6],
            l: 1,
            r: [0, 0, 3.14],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-426, 80, -703],
            s: [2, 18, 3],
            l: 1,
            r: [0, 0, -2.79],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-427, 78, -703],
            s: [20, 2, 3],
            l: 1,
            r: [0, 0, -2.79],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-429, 72, -703],
            s: [20, 2, 3],
            l: 1,
            r: [0, 0, -2.79],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-456, 81, -703],
            s: [2, 20, 3],
            l: 1,
            r: [0, 0, 2.8],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-454, 78, -703],
            s: [15, 2, 2],
            l: 1,
            r: [0, 0, -3.05],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-462, 73, -704],
            s: [2, 15, 5],
            l: 1,
            r: [0, 0, -3.13],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-459, 59, -702],
            s: [7, 2, 1],
            l: 1,
            r: [0, 0, -3.14],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-456, 62, -703],
            s: [2, 5, 3],
            l: 1,
            r: [0, 0, -3.14],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-462, 62, -703],
            s: [12, 2, 3],
            l: 1,
            r: [0, 0, 2.97],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-468, 79, -703],
            s: [9, 2, 3],
            l: 1,
            r: [0, 0, 2.79],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-484, 78, -703],
            s: [2, 20, 3],
            l: 1,
            r: [0, 0, 2.97],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-481, 65, -703],
            s: [2, 6, 3],
            l: 1,
            r: [0, 0, -2.44],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-480, 76, -703],
            s: [2, 6, 3],
            l: 1,
            r: [0, 0, 2.97],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-486, 74, -703],
            s: [2, 6, 3],
            l: 1,
            r: [0, 0, 2.45],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-493, 79, -703],
            s: [2, 11, 4],
            l: 1,
            r: [0, 0, -3.14],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-497, 79, -703],
            s: [2, 11, 4],
            l: 1,
            r: [0, 0, -3.14],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-501, 74, -703],
            s: [2, 6, 4],
            l: 1,
            r: [0, 0, -3.14],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-495, 75, -703],
            s: [12, 2, 4],
            l: 1,
            r: [0, 0, -3.14],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-495, 70, -703],
            s: [12, 2, 4],
            l: 1,
            r: [0, 0, -3.14],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-489, 74, -703],
            s: [2, 6, 4],
            l: 1,
            r: [0, 0, -3.14],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-495, 80, -703],
            s: [14, 2, 4],
            l: 1,
            r: [0, 0, -3.14],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-495, 59, -703],
            s: [2, 8, 3],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-495, 60, -703],
            s: [14, 2, 3],
            l: 1,
            r: [0, 0, -3.14],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-495, 64, -703],
            s: [9, 2, 3],
            l: 1,
            r: [0, 0, -3.14],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-480, 46, -709],
            s: [9, 8, 17],
            l: 1,
            r: [-1.05, 0, 0],
            c: "#929292",
            t: 5
        }, {
            p: [-425, 45, -709],
            s: [9, 8, 16],
            l: 1,
            r: [-1.05, 0, 0],
            c: "#929292",
            t: 5
        }, {
            p: [-448, 46, -706],
            s: [131, 2, 9],
            l: 1,
            c: "#000000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-448, 90, -706],
            s: [131, 2, 9],
            l: 1,
            c: "#000000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-513, 46, -706],
            s: [2, 46, 9],
            l: 1,
            c: "#000000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-384, 46, -706],
            s: [3, 46, 9],
            l: 1,
            c: "#000000",
            e: "#ff0000",
            t: 5
        }, {
            p: [55, 44, -833],
            s: [17, 3, 4],
            l: 1,
            r: [0, 0, -.52],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [46, 41, -833],
            s: [3, 9, 4],
            l: 1,
            r: [0, 0, -.52],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [55, 50, -833],
            s: [3, 1, 4],
            l: 1,
            r: [0, 0, -.52],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [56, 52, -833],
            s: [3, 1, 4],
            l: 1,
            r: [0, 0, -.52],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [78, 44, -833],
            s: [17, 3, 4],
            l: 1,
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [98, 48, -833],
            s: [17, 3, 4],
            l: 1,
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [98, 40, -833],
            s: [17, 3, 4],
            l: 1,
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [105, 39, -833],
            s: [3, 12, 4],
            l: 1,
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [121, 44, -833],
            s: [17, 3, 4],
            l: 1,
            r: [0, 0, .52],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [118, 49, -833],
            s: [3, 1, 4],
            l: 1,
            r: [0, 0, -.52],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [86, 31, -836],
            s: [107, 30, 4],
            l: 1,
            c: "#0012ff",
            t: 5
        }, {
            p: [48, 24, -842],
            s: [5, 40, 5],
            l: 1,
            c: "#575757",
            t: 5
        }, {
            p: [125, 24, -842],
            s: [5, 40, 5],
            l: 1,
            c: "#575757",
            t: 5
        }, {
            p: [-310, 59, -252],
            s: [9, 1, 1],
            c: "#372d2d",
            t: 5
        }, {
            p: [-310, 76, -252],
            s: [9, 1, 1],
            c: "#372d2d",
            t: 5
        }, {
            p: [-305, 57, -252],
            s: [1, 22, 2],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-298, 58, -252],
            s: [13, 20, 1],
            c: "#021606",
            e: "#010903",
            t: 5
        }, {
            p: [-291, 57, -252],
            s: [1, 22, 2],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-298, 57, -252],
            s: [14, 1, 2],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-298, 78, -252],
            s: [14, 1, 2],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-295, 75, -252],
            s: [5, 1, 2],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-296, 73, -252],
            s: [5, 1, 2],
            l: 1,
            r: [0, 0, .7],
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-295, 68, -252],
            s: [5, 1, 2],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-293, 59, -252],
            s: [1, 6, 2],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-296, 61, -252],
            s: [1, 3, 2],
            l: 1,
            r: [0, 0, 1.22],
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-296, 63, -252],
            s: [1, 2, 2],
            l: 1,
            r: [0, 0, .87],
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-297, 64, -252],
            s: [1, 2, 2],
            l: 1,
            r: [0, 0, .7],
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-299, 60, -252],
            s: [1, 4, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-302, 60, -252],
            s: [1, 4, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-300, 60, -252],
            s: [2, 1, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-301, 63, -252],
            s: [2, 1, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-301, 61, -252],
            s: [1, 2, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#004aff",
            e: "#7800ff",
            t: 5
        }, {
            p: [-301, 64, -252],
            s: [4, 1, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#fffe00",
            e: "#fff000",
            t: 5
        }, {
            p: [-301, 65, -252],
            s: [1, 4, 2],
            l: 1,
            r: [0, 0, .18],
            c: "#002dff",
            e: "#0000ff",
            t: 5
        }, {
            p: [-302, 65, -252],
            s: [1, 3, 2],
            l: 1,
            r: [0, 0, -.52],
            c: "#002dff",
            e: "#0000ff",
            t: 5
        }, {
            p: [-301, 71, -252],
            s: [3, 1, 2],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-301, 74, -252],
            s: [3, 1, 2],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-300, 71, -252],
            s: [1, 3, 2],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-303, 71, -252],
            s: [1, 4, 2],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-302, 75, -252],
            s: [3, 1, 2],
            l: 1,
            c: "#ff8700",
            e: "#553200",
            t: 5
        }, {
            p: [-300, 75, -252],
            s: [1, 1, 2],
            l: 1,
            c: "#ff8700",
            e: "#553200",
            t: 5
        }, {
            p: [-301, 72, -252],
            s: [1, 2, 2],
            l: 1,
            c: "#053e0f",
            e: "#0c1e05",
            t: 5
        }, {
            p: [-302, 72, -252],
            s: [1, 2, 2],
            l: 1,
            c: "#053e0f",
            e: "#0c1e05",
            t: 5
        }, {
            p: [-296, 54, -252],
            s: [1, 3, 1],
            l: 1,
            c: "#372d2d",
            t: 5
        }, {
            p: [-300, 54, -252],
            s: [1, 3, 1],
            l: 1,
            c: "#372d2d",
            t: 5
        }, {
            p: [-298, 54, -252],
            s: [8, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-298, 46, -252],
            s: [4, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-302, 42, -252],
            s: [1, 13, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-294, 42, -252],
            s: [1, 13, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-298, 43, -252],
            s: [7, 11, 1],
            c: "#000337",
            t: 5
        }, {
            p: [-295, 46, -252],
            s: [1, 7, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-298, 52, -252],
            s: [3, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-298, 50, -252],
            s: [3, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-300, 50, -252],
            s: [1, 3, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-298, 48, -252],
            s: [5, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-299, 47, -252],
            s: [2, 1, 2],
            l: 1,
            r: [0, 0, -.87],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-298, 47, -252],
            s: [2, 1, 2],
            l: 1,
            r: [0, 0, .87],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-298, 42, -252],
            s: [8, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-298, 44, -252],
            s: [1, 3, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-298, 44, -252],
            s: [6, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-302, 60, -252],
            s: [1, 1, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-573, 39, -78],
            s: [4, 50, 112],
            l: 1,
            c: "#000337",
            t: 5
        }, {
            p: [-576, 33, -32],
            s: [4, 58, 4],
            l: 1,
            c: "#434343",
            t: 5
        }, {
            p: [-576, 33, -122],
            s: [4, 58, 4],
            l: 1,
            c: "#434343",
            t: 5
        }, {
            p: [-571, 88, -78],
            s: [2, 2, 112],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-571, 38, -78],
            s: [2, 2, 112],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-571, 38, -135],
            s: [2, 52, 2],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-571, 38, -21],
            s: [2, 52, 2],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-1206, 106, 376],
            s: [105, 498, 103],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-1206, 600, 376],
            s: [5, 92, 6],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-308, 166, 223],
            s: [3, 4, 3],
            l: 1,
            c: "#000000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-63, 206, 304],
            s: [3, 4, 3],
            l: 1,
            c: "#000000",
            e: "#ff0000",
            t: 5
        }, {
            p: [263, 152, 144],
            s: [3, 4, 3],
            l: 1,
            c: "#000000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-176, 64, -407],
            s: [1, 2, 10],
            c: "#1f1f1f",
            t: 5
        }, {
            p: [-176, 49, -389],
            s: [3, 1, 21],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-176, 63, -385],
            s: [3, 1, 3],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-176, 49, -378],
            s: [3, 15, 1],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-176, 49, -400],
            s: [3, 15, 1],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-176, 51, -380],
            s: [3, 11, 1],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-176, 58, -382],
            s: [3, 15, 1],
            l: 1,
            r: [-.17, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-176, 58, -386],
            s: [3, 15, 1],
            l: 1,
            r: [-.35, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-176, 63, -380],
            s: [3, 1, 4],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-176, 63, -395],
            s: [3, 1, 11],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-176, 51, -384],
            s: [3, 1, 5],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-176, 55, -384],
            s: [3, 1, 5],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-176, 52, -382],
            s: [3, 3, 1],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-176, 52, -386],
            s: [3, 3, 1],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-176, 53, -384],
            s: [3, 1, 1],
            l: 1,
            c: "#02d625",
            e: "#02d625",
            t: 5
        }, {
            p: [-176, 52, -392],
            s: [3, 3, 1],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-176, 51, -390],
            s: [3, 1, 5],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-176, 51, -396],
            s: [3, 1, 5],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-176, 52, -398],
            s: [3, 3, 1],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-176, 55, -396],
            s: [3, 1, 5],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-176, 52, -394],
            s: [3, 3, 1],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-176, 52, -388],
            s: [3, 3, 1],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-176, 55, -390],
            s: [3, 1, 5],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-176, 53, -390],
            s: [3, 1, 1],
            l: 1,
            c: "#d60202",
            e: "#d60202",
            t: 5
        }, {
            p: [-176, 53, -396],
            s: [3, 1, 1],
            l: 1,
            c: "#ff8708",
            e: "#ff2d00",
            t: 5
        }, {
            p: [-176, 66, -397],
            s: [3, 1, 5],
            l: 1,
            c: "#ff8b78",
            e: "#ff5134",
            t: 5
        }, {
            p: [-176, 67, -399],
            s: [3, 3, 1],
            l: 1,
            c: "#ff8b78",
            e: "#ff5134",
            t: 5
        }, {
            p: [-176, 70, -398],
            s: [3, 1, 3],
            l: 1,
            c: "#ff8b78",
            e: "#ff5134",
            t: 5
        }, {
            p: [-176, 68, -396],
            s: [3, 3, 1],
            l: 1,
            c: "#ff8b78",
            e: "#ff5134",
            t: 5
        }, {
            p: [-176, 68, -397],
            s: [3, 1, 1],
            l: 1,
            c: "#ff8b78",
            e: "#ff5134",
            t: 5
        }, {
            p: [-176, 44, -376],
            s: [3, 30, 1],
            c: "#181717",
            t: 5
        }, {
            p: [-176, 44, -402],
            s: [3, 30, 1],
            c: "#181717",
            t: 5
        }, {
            p: [-176, 74, -389],
            s: [3, 1, 27],
            c: "#181717",
            t: 5
        }, {
            p: [-176, 43, -389],
            s: [3, 1, 27],
            c: "#181717",
            t: 5,
            bo: 1
        }, {
            p: [-176, 48, -407],
            s: [1, 2, 10],
            c: "#1f1f1f",
            t: 5
        }, {
            p: [-176, 44, -389],
            s: [1, 30, 25],
            l: 1,
            c: "#2a867f",
            t: 5,
            bo: 1
        }, {
            p: [-176, 57, -388],
            s: [3, 5, 1],
            l: 1,
            r: [-.35, 0, 0],
            c: "#ff9200",
            e: "#ff2d00",
            t: 5
        }, {
            p: [-176, 57, -391],
            s: [3, 5, 1],
            l: 1,
            r: [-.35, 0, 0],
            c: "#ff9200",
            e: "#ff2d00",
            t: 5
        }, {
            p: [-176, 57, -394],
            s: [3, 5, 1],
            l: 1,
            r: [-.35, 0, 0],
            c: "#ff9200",
            e: "#ff2d00",
            t: 5
        }, {
            p: [-176, 57, -397],
            s: [3, 5, 1],
            l: 1,
            r: [-.35, 0, 0],
            c: "#ff9200",
            e: "#ff2d00",
            t: 5
        }, {
            p: [75, 25, 315],
            s: [2, 137, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [110, 25, 315],
            s: [2, 137, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [92, 160, 315],
            s: [35, 2, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [92, 25, 315],
            s: [35, 2, 3],
            l: 1,
            c: "#d200ff",
            e: "#d200ff",
            t: 5
        }, {
            p: [135, 61, -356],
            s: [4, 50, 112],
            l: 1,
            c: "#000337",
            t: 5
        }, {
            p: [133, 110, -356],
            s: [2, 2, 112],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [133, 60, -356],
            s: [2, 2, 112],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [133, 60, -412],
            s: [2, 52, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [133, 60, -300],
            s: [2, 52, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [138, 55, -310],
            s: [4, 58, 4],
            l: 1,
            c: "#434343",
            t: 5
        }, {
            p: [138, 55, -400],
            s: [4, 58, 4],
            l: 1,
            c: "#434343",
            t: 5
        }, {
            p: [-830, 60, 119],
            s: [191, 2, 121],
            l: 1,
            c: "#707070",
            t: 5
        }, {
            p: [87, 23, -895],
            s: [161, 2, 144],
            l: 1,
            c: "#5a5a5a",
            t: 5
        }, {
            p: [-223, 47, -589],
            s: [4, 2, 1],
            c: "#372d2d",
            t: 5
        }, {
            p: [-223, 60, -589],
            s: [4, 2, 1],
            c: "#372d2d",
            t: 5
        }, {
            p: [-225, 43, -589],
            s: [1, 23, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-233, 43, -589],
            s: [1, 23, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-229, 43, -589],
            s: [7, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-229, 65, -589],
            s: [7, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-229, 44, -589],
            s: [7, 22, 1],
            c: "#120216",
            e: "#010903",
            t: 5
        }, {
            p: [-229, 62, -589],
            s: [5, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-228, 61, -589],
            s: [1, 3, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-230, 61, -589],
            s: [1, 3, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-229, 54, -589],
            s: [1, 6, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-230, 59, -589],
            s: [3, 1, 2],
            l: 1,
            r: [0, 0, .7],
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-228, 59, -589],
            s: [3, 1, 2],
            l: 1,
            r: [0, 0, -.7],
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-229, 56, -589],
            s: [5, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-227, 55, -589],
            s: [3, 1, 2],
            l: 1,
            r: [0, 0, -.7],
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-231, 55, -589],
            s: [3, 1, 2],
            l: 1,
            r: [0, 0, .52],
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-231, 48, -589],
            s: [1, 4, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-229, 48, -589],
            s: [1, 5, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-229, 51, -589],
            s: [5, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-228, 49, -589],
            s: [3, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-228, 47, -589],
            s: [3, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-227, 46, -589],
            s: [1, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-230, 46, -589],
            s: [1, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-229, 45, -589],
            s: [3, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-232, 46, -589],
            s: [1, 3, 2],
            l: 1,
            r: [0, 0, -.35],
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-227, 45, -589],
            s: [1, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-230, 47, -589],
            s: [1, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-360, 18, -711],
            s: [4, 16, 4],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-360, 24, -711],
            s: [16, 4, 4],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-360, 17, -711],
            s: [7, 18, 1],
            l: 1,
            c: "#252a26",
            t: 5
        }, {
            p: [-360, 23, -711],
            s: [18, 6, 1],
            l: 1,
            c: "#252a26",
            t: 5
        }, {
            p: [-373, 25, -711],
            s: [8, 2, 1],
            l: 1,
            c: "#555555",
            t: 5
        }, {
            p: [-592, 362, -1418],
            s: [112, 103, 88],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [-592, 467, -1418],
            s: [6, 103, 5],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [-592, 570, -1418],
            s: [6, 6, 5],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-252, -21, -604],
            s: [66, 2, 5],
            c: "#787878",
            t: 5
        }, {
            p: [-283, -19, -642],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-220, -19, -642],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-159, -19, -642],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-163, -19, -642],
            s: [239, 29, 1],
            pe: 1,
            t: 12
        }, {
            p: [-283, -19, -623],
            s: [1, 29, 37],
            pe: 1,
            t: 12
        }, {
            p: [-283, -19, -604],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-411, -7, 96],
            s: [2, 27, 11],
            l: 1,
            c: "#001100",
            t: 5
        }, {
            p: [-411, -4, 96],
            s: [3, 1, 7],
            l: 1,
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [-411, -4, 99],
            s: [3, 8, 1],
            l: 1,
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [-411, 3, 97],
            s: [3, 1, 7],
            l: 1,
            r: [.17, 0, 0],
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [-411, 15, 97],
            s: [3, 1, 7],
            l: 1,
            r: [.35, 0, 0],
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [-411, 12, 98],
            s: [3, 1, 6],
            l: 1,
            r: [1.58, 0, 0],
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [-411, -3, 106],
            s: [1, 2, 10],
            c: "#555555",
            t: 5
        }, {
            p: [-411, 13, 106],
            s: [1, 2, 10],
            c: "#555555",
            t: 5
        }, {
            p: [-411, 12, 93],
            s: [3, 1, 6],
            l: 1,
            r: [1.58, 0, 0],
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [-411, -8, 90],
            s: [3, 29, 1],
            l: 1,
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [-411, -8, 102],
            s: [3, 29, 1],
            l: 1,
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [-411, 20, 96],
            s: [3, 1, 11],
            l: 1,
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [-411, -8, 96],
            s: [3, 1, 11],
            l: 1,
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [-414, 29, 160],
            s: [3, 42, 99],
            l: 1,
            c: "#5f5f5f",
            t: 5
        }, {
            p: [-416, 26, 120],
            s: [3, 47, 3],
            l: 1,
            c: "#696969",
            t: 5
        }, {
            p: [-496, 210, 789],
            s: [5, 204, 3],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-416, 26, 197],
            s: [3, 47, 3],
            l: 1,
            c: "#696969",
            t: 5
        }, {
            p: [248, -7, -43],
            s: [3, 48, 113],
            l: 1,
            c: "#434343",
            t: 5
        }, {
            p: [250, -10, -3],
            s: [3, 50, 5],
            l: 1,
            c: "#696969",
            t: 5
        }, {
            p: [250, -10, -80],
            s: [3, 50, 5],
            l: 1,
            c: "#696969",
            t: 5
        }, {
            p: [189, 53, -359],
            s: [126, 2, 137],
            l: 1,
            r: [-3.14, 0, 3.14],
            c: "#4d4d4d",
            t: 5
        }, {
            p: [-706, 129, -504],
            s: [152, 4, 150],
            l: 1,
            c: "#919191",
            t: 5
        }, {
            p: [-586, -24, -560],
            s: [3, 47, 111],
            l: 1,
            c: "#484848",
            t: 5
        }, {
            p: [-588, -28, -518],
            s: [3, 53, 4],
            l: 1,
            c: "#696969",
            t: 5
        }, {
            p: [-588, -28, -601],
            s: [3, 53, 4],
            l: 1,
            c: "#696969",
            t: 5
        }, {
            p: [-384, 57, -265],
            s: [125, 54, 2],
            c: "#464646",
            t: 5,
            bo: 1
        }, {
            p: [-384, 55, -266],
            s: [128, 2, 4],
            l: 1,
            c: "#525252",
            t: 5
        }, {
            p: [276, 129, -739],
            s: [151, 3, 148],
            l: 1,
            c: "#898989",
            t: 5
        }, {
            p: [202, 58, -739],
            s: [3, 56, 128],
            l: 1,
            c: "#434343",
            t: 5
        }, {
            p: [201, 55, -739],
            s: [5, 3, 132],
            l: 1,
            c: "#575656",
            t: 5
        }, {
            p: [-43, -19, -642],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-99, -19, -642],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [176, -5, -498],
            s: [3, 164, 35],
            l: 1,
            c: "#181717",
            t: 5
        }, {
            p: [176, 35, -476],
            s: [3, 6, 9],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [176, 125, -476],
            s: [3, 6, 9],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [176, -5, -515],
            s: [4, 164, 3],
            l: 1,
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [176, -5, -481],
            s: [4, 164, 3],
            l: 1,
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [176, -6, -498],
            s: [4, 3, 37],
            l: 1,
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [176, 159, -498],
            s: [4, 3, 37],
            l: 1,
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [-223, 34, -523],
            s: [3, 53, 109],
            c: "#4d4d4d",
            t: 5,
            bo: 1
        }, {
            p: [-224, 34, -523],
            s: [5, 3, 114],
            l: 1,
            c: "#575757",
            t: 5
        }, {
            p: [135, 38, -279],
            s: [4, 16, 4],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [135, 37, -279],
            s: [1, 18, 6],
            l: 1,
            c: "#252a26",
            t: 5
        }, {
            p: [135, 43, -279],
            s: [1, 6, 17],
            l: 1,
            c: "#252a26",
            t: 5
        }, {
            p: [135, 45, -290],
            s: [1, 2, 5],
            l: 1,
            c: "#252a26",
            t: 5
        }, {
            p: [127, -9, -358],
            s: [3, 56, 125],
            c: "#5a5a5a",
            t: 5,
            bo: 1
        }, {
            p: [125, -12, -359],
            s: [5, 3, 128],
            l: 1,
            c: "#575656",
            t: 5
        }, {
            p: [-192, 45, -300],
            s: [114, 52, 2],
            c: "#6e6e6e",
            t: 5,
            bo: 1
        }, {
            p: [-192, 43, -301],
            s: [118, 2, 4],
            l: 1,
            c: "#525252",
            t: 5
        }, {
            p: [-341, 90, 230],
            s: [40, 19, 22],
            l: 1,
            c: "#989898",
            t: 5
        }, {
            p: [-95, 48, -162],
            s: [108, 46, 2],
            c: "#393939",
            t: 5,
            bo: 1
        }, {
            p: [-95, 47, -161],
            s: [112, 2, 4],
            l: 1,
            c: "#525252",
            t: 5
        }, {
            p: [-1385, -905, 265],
            s: [145, 1295, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-211, -708, -126],
            s: [34, 670, 8],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-225, -38, -126],
            s: [6, 177, 8],
            c: "#b6b6b6",
            t: 5,
            bo: 1
        }, {
            p: [-211, 129, -126],
            s: [22, 7, 8],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-211, 30, -126],
            s: [22, 7, 8],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-211, 65, -126],
            s: [22, 7, 8],
            c: "#b6b6b6",
            t: 5,
            bo: 1
        }, {
            p: [-211, 99, -126],
            s: [22, 7, 8],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-211, -38, -127],
            s: [22, 169, 7],
            c: "#282828",
            t: 5
        }, {
            p: [-211, -5, -126],
            s: [22, 7, 8],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-197, -38, -126],
            s: [6, 175, 8],
            c: "#b6b6b6",
            t: 5,
            bo: 1
        }, {
            p: [-308, 45, -190],
            s: [3, 43, 88],
            c: "#464646",
            t: 5,
            bo: 1
        }, {
            p: [-307, 44, -190],
            s: [6, 2, 91],
            l: 1,
            c: "#525252",
            t: 5
        }, {
            p: [-43, -19, -624],
            s: [1, 29, 36],
            pe: 1,
            t: 12
        }, {
            p: [-43, -19, -606],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [78, -708, -626],
            s: [139, 703, 142],
            c: "#7f7f7f",
            t: 5
        }, {
            p: [-700, 76, -818],
            s: [149, 3, 146],
            l: 1,
            c: "#787272",
            t: 5
        }, {
            p: [-633, 183, -887],
            s: [153, 3, 151],
            l: 1,
            c: "#8c8c8c",
            t: 5
        }, {
            p: [-1275, 282, -1165],
            s: [4, 169, 4],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-255, -19, -594],
            s: [4, 1, 32],
            c: "#917d66",
            t: 5
        }, {
            p: [-251, -19, -594],
            s: [4, 1, 33],
            c: "#847462",
            t: 5
        }, {
            p: [-247, -19, -594],
            s: [4, 1, 32],
            c: "#968169",
            t: 5
        }, {
            p: [-141, 35, -605],
            s: [108, 47, 2],
            c: "#4d4d4d",
            t: 5,
            bo: 1
        }, {
            p: [-141, 33, -606],
            s: [112, 2, 4],
            l: 1,
            c: "#525252",
            t: 5
        }, {
            p: [-131, 25, -409],
            s: [79, 38, 2],
            c: "#4d4d4d",
            t: 5,
            bo: 1
        }, {
            p: [-131, 25, -408],
            s: [82, 2, 4],
            l: 1,
            c: "#434343",
            t: 5
        }, {
            p: [-151, -708, -533],
            s: [142, 805, 142],
            c: "#b6b6b6",
            t: 5,
            bo: 1
        }, {
            p: [-63, 20, -533],
            s: [41, 78, 142],
            c: "#b6b6b6",
            t: 5,
            bo: 1
        }, {
            p: [-47, -21, -466],
            s: [9, 41, 8],
            c: "#b6b6b6",
            t: 5,
            bo: 1
        }, {
            p: [-47, -21, -600],
            s: [9, 41, 8],
            c: "#b6b6b6",
            t: 5,
            bo: 1
        }, {
            p: [-47, -21, -535],
            s: [9, 41, 8],
            c: "#b6b6b6",
            t: 5,
            bo: 1
        }, {
            p: [-59, -19, -367],
            s: [4, 1, 58],
            c: "#a79177",
            t: 5
        }, {
            p: [-447, -24, -704],
            s: [123, 53, 2],
            l: 1,
            c: "#505050",
            t: 5
        }, {
            p: [-447, -26, -703],
            s: [127, 2, 4],
            l: 1,
            c: "#525252",
            t: 5
        }, {
            p: [-405, -28, -987],
            s: [162, 4, 143],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [-373, -9, -711],
            s: [8, 3, 2],
            l: 1,
            c: "#555555",
            t: 5
        }, {
            p: [-359, -53, -711],
            s: [19, 61, 2],
            l: 1,
            c: "#555555",
            t: 5
        }, {
            p: [-373, -35, -711],
            s: [8, 3, 2],
            l: 1,
            c: "#555555",
            t: 5
        }, {
            p: [-349, -53, -711],
            s: [2, 61, 3],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-369, -53, -711],
            s: [2, 61, 3],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-359, 7, -711],
            s: [22, 2, 3],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-359, -55, -711],
            s: [22, 2, 3],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [282, 98, -148],
            s: [3, 55, 120],
            l: 1,
            c: "#3e3e3e",
            t: 5
        }, {
            p: [282, 98, -148],
            s: [7, 2, 124],
            l: 1,
            c: "#525252",
            t: 5
        }, {
            p: [-633, 56, -505],
            s: [3, 60, 128],
            c: "#3c3c3c",
            t: 5
        }, {
            p: [-633, 53, -505],
            s: [7, 3, 131],
            l: 1,
            c: "#393939",
            t: 5
        }, {
            p: [-707, 129, -54],
            s: [150, 4, 149],
            l: 1,
            c: "#616161",
            t: 5
        }, {
            p: [-646, -1, 41],
            s: [3, 122, 33],
            l: 1,
            c: "#181717",
            t: 5
        }, {
            p: [-646, 97, 20],
            s: [3, 6, 9],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [-646, 25, 20],
            s: [3, 6, 9],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [-646, -1, 57],
            s: [4, 122, 3],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-646, -1, 25],
            s: [4, 122, 3],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-646, -2, 41],
            s: [4, 3, 35],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-646, 121, 41],
            s: [4, 3, 35],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-1, 87, 295],
            s: [121, 57, 3],
            l: 1,
            c: "#393939",
            t: 5
        }, {
            p: [-1, 86, 294],
            s: [126, 2, 6],
            l: 1,
            c: "#555555",
            t: 5
        }, {
            p: [248, -80, 96],
            s: [3, 112, 31],
            l: 1,
            c: "#000337",
            t: 5
        }, {
            p: [230, 101, -329],
            s: [113, 55, 3],
            l: 1,
            c: "#3c3c3c",
            t: 5
        }, {
            p: [230, 100, -329],
            s: [119, 2, 8],
            l: 1,
            c: "#5c5c5c",
            t: 5
        }, {
            p: [248, -81, 96],
            s: [4, 3, 31],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [248, 30, 96],
            s: [4, 3, 31],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [248, -81, 80],
            s: [4, 114, 3],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [248, -81, 111],
            s: [4, 114, 3],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [248, 6, 116],
            s: [3, 5, 10],
            l: 1,
            c: "#181717",
            t: 5
        }, {
            p: [248, -61, 116],
            s: [3, 5, 10],
            l: 1,
            c: "#181717",
            t: 5
        }, {
            p: [135, 44, -279],
            s: [4, 4, 15],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [261, -53, -139],
            s: [2, 27, 11],
            c: "#001100",
            t: 5
        }, {
            p: [261, -50, -139],
            s: [3, 1, 7],
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [261, -50, -136],
            s: [3, 8, 1],
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [261, -43, -138],
            s: [3, 1, 7],
            r: [.17, 0, 0],
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [261, -31, -138],
            s: [3, 1, 7],
            r: [.35, 0, 0],
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [261, -34, -137],
            s: [3, 1, 6],
            r: [1.58, 0, 0],
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [261, -49, -129],
            s: [1, 2, 10],
            c: "#555555",
            t: 5
        }, {
            p: [261, -33, -129],
            s: [1, 2, 10],
            c: "#555555",
            t: 5
        }, {
            p: [261, -34, -142],
            s: [3, 1, 6],
            r: [1.58, 0, 0],
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [261, -54, -145],
            s: [3, 29, 1],
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [261, -54, -133],
            s: [3, 29, 1],
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [261, -26, -139],
            s: [3, 1, 11],
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [261, -54, -139],
            s: [3, 1, 11],
            c: "#0eff00",
            e: "#0eff00",
            t: 5
        }, {
            p: [211, 132, -672],
            s: [2, 64, 2],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [211, 195, -672],
            s: [3, 4, 3],
            l: 1,
            c: "#000000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-74, -2, 229],
            s: [22, 6, 21],
            l: 1,
            c: "#666666",
            t: 5
        }, {
            p: [-74, 4, 229],
            s: [23, 14, 22],
            l: 1,
            c: "#acacac",
            t: 5
        }, {
            p: [-74, 18, 229],
            s: [25, 1, 24],
            l: 1,
            c: "#666666",
            t: 5
        }, {
            p: [237, -53, -643],
            s: [3, 164, 35],
            l: 1,
            c: "#181717",
            t: 5
        }, {
            p: [237, 78, -665],
            s: [3, 6, 9],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [237, -18, -665],
            s: [3, 6, 9],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [237, -53, -625],
            s: [4, 164, 3],
            l: 1,
            c: "#bf00ff",
            e: "#bf00ff",
            t: 5
        }, {
            p: [237, -53, -661],
            s: [4, 164, 3],
            l: 1,
            c: "#bf00ff",
            e: "#bf00ff",
            t: 5
        }, {
            p: [237, 111, -643],
            s: [4, 3, 39],
            l: 1,
            c: "#bf00ff",
            e: "#bf00ff",
            t: 5
        }, {
            p: [237, -56, -643],
            s: [4, 3, 39],
            l: 1,
            c: "#bf00ff",
            e: "#bf00ff",
            t: 5
        }, {
            p: [-633, 111, -815],
            s: [131, 59, 2],
            l: 1,
            c: "#413f3f",
            t: 5
        }, {
            p: [-633, 109, -815],
            s: [134, 2, 6],
            l: 1,
            c: "#555555",
            t: 5
        }, {
            p: [-354, 32, 213],
            s: [104, 50, 3],
            l: 1,
            c: "#252525",
            t: 5
        }, {
            p: [-354, 32, 213],
            s: [106, 3, 8],
            l: 1,
            c: "#4b4b4b",
            t: 5
        }, {
            p: [212, 55, -298],
            s: [2, 23, 2],
            l: 1,
            c: "#373737",
            t: 5
        }, {
            p: [192, -20, -278],
            s: [41, 1, 19],
            l: 1,
            c: "#646464",
            t: 5
        }, {
            p: [212, 77, -288],
            s: [3, 3, 27],
            l: 1,
            c: "#373737",
            t: 5
        }, {
            p: [212, -19, -278],
            s: [1, 96, 1],
            l: 1,
            c: "#505050",
            t: 5
        }, {
            p: [172, -19, -278],
            s: [1, 97, 1],
            l: 1,
            c: "#505050",
            t: 5
        }, {
            p: [172, 77, -288],
            s: [3, 3, 27],
            l: 1,
            c: "#373737",
            t: 5
        }, {
            p: [172, 55, -298],
            s: [2, 23, 2],
            l: 1,
            c: "#373737",
            t: 5
        }, {
            p: [192, -20, -268],
            s: [43, 2, 1],
            l: 1,
            c: "#e84d4d",
            t: 5
        }, {
            p: [192, -20, -288],
            s: [43, 2, 1],
            l: 1,
            c: "#e84d4d",
            t: 5
        }, {
            p: [171, -20, -278],
            s: [1, 2, 19],
            l: 1,
            c: "#e84d4d",
            t: 5
        }, {
            p: [213, -20, -278],
            s: [1, 2, 19],
            l: 1,
            c: "#e84d4d",
            t: 5
        }, {
            p: [-19, 77, -161],
            s: [1, 2, 10],
            c: "#1f1f1f",
            t: 5
        }, {
            p: [-19, 67, -139],
            s: [3, 2, 6],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-19, 74, -139],
            s: [2, 16, 1],
            l: 1,
            r: [-.96, 0, 0],
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-19, 73, -143],
            s: [2, 11, 1],
            l: 1,
            r: [-1.31, 0, 0],
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-19, 62, -143],
            s: [4, 5, 15],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-19, 56, -130],
            s: [3, 30, 1],
            l: 1,
            c: "#181717",
            t: 5
        }, {
            p: [-19, 56, -156],
            s: [3, 30, 1],
            l: 1,
            c: "#181717",
            t: 5
        }, {
            p: [-19, 86, -143],
            s: [3, 1, 27],
            l: 1,
            c: "#181717",
            t: 5
        }, {
            p: [-19, 55, -143],
            s: [3, 1, 27],
            l: 1,
            c: "#181717",
            t: 5
        }, {
            p: [-19, 60, -161],
            s: [1, 2, 10],
            c: "#1f1f1f",
            t: 5
        }, {
            p: [-19, 56, -143],
            s: [1, 30, 25],
            c: "#2a8586",
            t: 5
        }, {
            p: [-19, 67, -145],
            s: [4, 1, 9],
            l: 1,
            c: "#ff7800",
            e: "#ff7800",
            t: 5
        }, {
            p: [-19, 60, -143],
            s: [3, 2, 9],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-19, 67, -146],
            s: [2, 2, 3],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-19, 67, -143],
            s: [2, 2, 2],
            l: 1,
            c: "#68ff00",
            e: "#68ff00",
            t: 5
        }, {
            p: [-19, 69, -142],
            s: [3, 6, 3],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-19, 68, -142],
            s: [4, 9, 1],
            l: 1,
            c: "#ff9600",
            e: "#ff9600",
            t: 5
        }, {
            p: [-19, 78, -137],
            s: [3, 6, 2],
            l: 1,
            r: [.7, 0, 0],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-19, 79, -141],
            s: [3, 4, 2],
            l: 1,
            r: [.09, 0, 0],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-19, 75, -135],
            s: [3, 3, 2],
            l: 1,
            r: [1.14, 0, 0],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [171, -18, -268],
            s: [1, 11, 1],
            l: 1,
            c: "#e84d4d",
            t: 5
        }, {
            p: [213, -18, -268],
            s: [1, 11, 1],
            l: 1,
            c: "#e84d4d",
            t: 5
        }, {
            p: [213, -18, -288],
            s: [1, 11, 1],
            l: 1,
            c: "#e84d4d",
            t: 5
        }, {
            p: [171, -18, -288],
            s: [1, 11, 1],
            l: 1,
            c: "#e84d4d",
            t: 5
        }, {
            p: [192, -18, -268],
            s: [1, 11, 1],
            l: 1,
            c: "#e84d4d",
            t: 5
        }, {
            p: [192, -18, -288],
            s: [1, 11, 1],
            l: 1,
            c: "#e84d4d",
            t: 5
        }, {
            p: [192, -7, -268],
            s: [44, 1, 2],
            l: 1,
            c: "#e84d4d",
            t: 5
        }, {
            p: [192, -7, -288],
            s: [44, 1, 2],
            l: 1,
            c: "#e84d4d",
            t: 5
        }, {
            p: [171, -18, -278],
            s: [1, 11, 1],
            l: 1,
            c: "#e84d4d",
            t: 5
        }, {
            p: [213, -18, -278],
            s: [1, 11, 1],
            l: 1,
            c: "#e84d4d",
            t: 5
        }, {
            p: [213, -7, -278],
            s: [2, 1, 18],
            l: 1,
            c: "#e84d4d",
            t: 5
        }, {
            p: [171, -7, -278],
            s: [2, 1, 18],
            l: 1,
            c: "#e84d4d",
            t: 5
        }, {
            p: [-579, -77, -252],
            s: [3, 100, 35],
            l: 1,
            c: "#181717",
            t: 5
        }, {
            p: [-579, -11, -230],
            s: [3, 6, 9],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [-579, -47, -230],
            s: [3, 6, 9],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [-579, -78, -270],
            s: [4, 102, 3],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-579, -78, -235],
            s: [4, 103, 3],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-579, 22, -253],
            s: [4, 3, 37],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-579, -78, -253],
            s: [4, 3, 37],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [282, 89, 158],
            s: [27, 14, 22],
            l: 1,
            c: "#acacac",
            t: 5
        }, {
            p: [-1, 116, 293],
            s: [118, 0, 53],
            i: 11,
            l: 1,
            r: [1.57, 0, -3.14],
            bb: 4
        }, {
            p: [-154, 33, 219],
            s: [110, 0, 49],
            i: 11,
            l: 1,
            r: [1.57, 0, -3.14],
            bb: 1
        }, {
            p: [-354, 58, 211],
            s: [103, 0, 47],
            i: 11,
            l: 1,
            r: [1.57, 0, -3.14],
            bb: 3
        }, {
            p: [-412, 50, 160],
            s: [96, 0, 40],
            i: 11,
            l: 1,
            r: [1.57, 0, -1.57],
            bb: 2
        }, {
            p: [-95, 72, -160],
            s: [104, 0, 42],
            i: 11,
            l: 1,
            r: [1.57, 0, 0],
            bb: 2
        }, {
            p: [-306, 67, -190],
            s: [86, 0, 41],
            i: 11,
            l: 1,
            r: [1.57, 0, -1.57],
            bb: 4
        }, {
            p: [246, 17, -43],
            s: [110, 0, 46],
            i: 11,
            l: 1,
            r: [1.57, 0, 1.57],
            bb: 2
        }, {
            p: [280, 126, -147],
            s: [117, 0, 50],
            i: 11,
            l: 1,
            r: [1.57, 0, 1.57],
            bb: 3
        }, {
            p: [230, 129, -327],
            s: [108, 0, 50],
            i: 11,
            l: 1,
            r: [1.57, 0, 0],
            bb: 1
        }, {
            p: [125, 19, -358],
            s: [120, 0, 53],
            i: 11,
            l: 1,
            r: [1.57, 0, 1.57],
            bb: 4
        }, {
            p: [200, 85, -739],
            s: [126, 0, 56],
            i: 11,
            l: 1,
            r: [1.57, 0, 1.57],
            bb: 2
        }, {
            p: [-193, 71, -302],
            s: [110, 0, 49],
            i: 11,
            l: 1,
            r: [1.57, 0, -3.14],
            bb: 2
        }, {
            p: [-131, 45, -407],
            s: [76, 0, 34],
            i: 11,
            l: 1,
            r: [1.57, 0, 0],
            bb: 3
        }, {
            p: [-384, 84, -267],
            s: [120, 0, 50],
            i: 11,
            l: 1,
            r: [1.57, 0, -3.14],
            bb: 4
        }, {
            p: [-584, 0, -560],
            s: [109, 0, 45],
            i: 11,
            l: 1,
            r: [1.57, 0, -1.57],
            bb: 3
        }, {
            p: [-631, 86, -505],
            s: [128, 0, 61],
            i: 11,
            l: 1,
            r: [1.57, 0, -1.57],
            bb: 4
        }, {
            p: [-447, 2, -702],
            s: [120, 0, 50],
            i: 11,
            l: 1,
            r: [1.57, 0, 0],
            bb: 2
        }, {
            p: [-633, 140, -813],
            s: [127, 0, 55],
            i: 11,
            l: 1,
            r: [1.57, 0, 0],
            bb: 1
        }, {
            p: [-225, 62, -523],
            s: [108, 0, 49],
            i: 11,
            l: 1,
            r: [1.57, 0, 1.57],
            bb: 4
        }, {
            p: [-141, 59, -607],
            s: [107, 0, 47],
            i: 11,
            l: 1,
            r: [1.57, 0, -3.14],
            bb: 4
        }, {
            p: [-183, 48, -416],
            s: [5, 1, 1],
            c: "#372d2d",
            t: 5
        }, {
            p: [-188, 58, -416],
            s: [8, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-188, 50, -416],
            s: [4, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-192, 46, -416],
            s: [1, 13, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-184, 46, -416],
            s: [1, 13, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-188, 47, -416],
            s: [7, 11, 1],
            c: "#000337",
            t: 5
        }, {
            p: [-185, 50, -416],
            s: [1, 7, 2],
            l: 1,
            r: [0, 0, -.17],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-188, 56, -416],
            s: [3, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-188, 54, -416],
            s: [3, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-190, 54, -416],
            s: [1, 3, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-188, 52, -416],
            s: [5, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-189, 51, -416],
            s: [2, 1, 2],
            l: 1,
            r: [0, 0, -.87],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-188, 51, -416],
            s: [2, 1, 2],
            l: 1,
            r: [0, 0, .87],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-188, 46, -416],
            s: [8, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-188, 48, -416],
            s: [1, 3, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-188, 48, -416],
            s: [6, 1, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [-183, 55, -416],
            s: [5, 1, 1],
            c: "#372d2d",
            t: 5
        }, {
            p: [-853, 297, -279],
            s: [148, 4, 146],
            l: 1,
            c: "#707070",
            t: 5
        }, {
            p: [-674, -66, -721],
            s: [3, 142, 35],
            l: 1,
            c: "#000000",
            t: 5
        }, {
            p: [-674, 42, -743],
            s: [3, 6, 9],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [-674, -54, -743],
            s: [3, 6, 9],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [-674, -68, -703],
            s: [4, 144, 3],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-674, -68, -739],
            s: [4, 146, 3],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-674, 75, -721],
            s: [4, 3, 39],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [-674, -68, -721],
            s: [4, 3, 39],
            l: 1,
            c: "#00ff2d",
            e: "#00ff2d",
            t: 5
        }, {
            p: [8, -4, -834],
            s: [8, 3, 2],
            l: 1,
            c: "#555555",
            t: 5
        }, {
            p: [-7, -48, -834],
            s: [19, 61, 2],
            l: 1,
            c: "#555555",
            t: 5
        }, {
            p: [7, -30, -834],
            s: [8, 3, 2],
            l: 1,
            c: "#555555",
            t: 5
        }, {
            p: [3, -48, -834],
            s: [2, 61, 3],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-17, -48, -834],
            s: [2, 61, 3],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-7, 12, -834],
            s: [22, 2, 3],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-7, -50, -834],
            s: [22, 2, 3],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [16, 44, -860],
            s: [4, 3, 17],
            l: 1,
            r: [-.52, 0, -1.57],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [18, 46, -854],
            s: [4, 9, 3],
            l: 1,
            r: [-.52, 0, -3.14],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [19, 50, -859],
            s: [4, 1, 3],
            l: 1,
            r: [-.52, -.05, .08],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [17, 44, -879],
            s: [4, 3, 17],
            l: 1,
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [17, 48, -903],
            s: [4, 3, 17],
            l: 1,
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [17, 40, -903],
            s: [4, 3, 17],
            l: 1,
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [17, 39, -910],
            s: [4, 12, 3],
            l: 1,
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [17, 44, -926],
            s: [4, 3, 17],
            l: 1,
            r: [-.44, 0, -1.57],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [19, 51, -925],
            s: [4, 1, 3],
            l: 1,
            r: [0, 0, -3.14],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [20, 31, -891],
            s: [4, 30, 107],
            l: 1,
            c: "#0012ff",
            t: 5
        }, {
            p: [26, 24, -853],
            s: [5, 40, 5],
            l: 1,
            c: "#575757",
            t: 5
        }, {
            p: [26, 24, -930],
            s: [5, 40, 5],
            l: 1,
            c: "#575757",
            t: 5
        }, {
            p: [19, 53, -860],
            s: [4, 1, 3],
            l: 1,
            r: [-.52, -.05, .08],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-1275, 451, -1165],
            s: [6, 8, 6],
            l: 1,
            c: "#fc0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-496, 413, 789],
            s: [6, 6, 5],
            l: 1,
            c: "#056100",
            e: "#056100",
            t: 5
        }, {
            p: [-449, -905, 1613],
            s: [209, 1548, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [1746, -905, 2165],
            s: [209, 1714, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-1329, -905, 1432],
            s: [209, 1351, 142],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [193, 25, -289],
            s: [104, 0, 42],
            i: 11,
            l: 1,
            r: [1.57, 0, 0],
            bb: 2
        }, {
            p: [192, 2, -291],
            s: [106, 45, 3],
            c: "#3c3c3c",
            t: 5,
            bo: 1
        }, {
            p: [484, 57, -475],
            s: [217, 4, 220],
            l: 1,
            c: "#a0a0a0",
            t: 5
        }, {
            p: [-455, 47, 111],
            s: [17, 3, 4],
            l: 1,
            r: [-3.14, 0, -2.62],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-446, 44, 111],
            s: [3, 9, 4],
            l: 1,
            r: [-3.14, 0, -2.62],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-451, 51, 111],
            s: [3, 1, 4],
            l: 1,
            r: [-3.14, 0, -2.62],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-450, 54, 111],
            s: [3, 1, 4],
            l: 1,
            r: [-3.14, 0, -2.62],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-475, 47, 111],
            s: [17, 3, 4],
            l: 1,
            r: [3.14, 0, 3.14],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-498, 51, 111],
            s: [17, 3, 4],
            l: 1,
            r: [3.14, 0, 3.14],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-498, 43, 111],
            s: [17, 3, 4],
            l: 1,
            r: [3.14, 0, 3.14],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-505, 42, 111],
            s: [3, 12, 4],
            l: 1,
            r: [3.14, 0, 3.14],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-521, 47, 111],
            s: [17, 3, 4],
            l: 1,
            r: [3.14, 0, 2.62],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-521, 55, 111],
            s: [3, 1, 4],
            l: 1,
            r: [-3.14, 0, -2.19],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-486, 34, 114],
            s: [107, 30, 4],
            l: 1,
            r: [3.14, 0, 3.14],
            c: "#0012ff",
            t: 5
        }, {
            p: [-448, 27, 120],
            s: [5, 40, 5],
            l: 1,
            r: [3.14, 0, 3.14],
            c: "#575757",
            t: 5
        }, {
            p: [-525, 27, 120],
            s: [5, 40, 5],
            l: 1,
            r: [3.14, 0, 3.14],
            c: "#575757",
            t: 5
        }, {
            p: [237, -25, 190],
            s: [3, 54, 121],
            l: 1,
            c: "#434343",
            t: 5
        }, {
            p: [235, 2, 191],
            s: [115, 0, 50],
            i: 11,
            l: 1,
            r: [1.57, 0, 1.57],
            bb: 1
        }, {
            p: [-591, 52, -216],
            s: [17, 3, 6],
            l: 1,
            r: [-3.14, 0, -2.62],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-583, 47, -216],
            s: [3, 12, 6],
            l: 1,
            r: [-3.14, 0, -2.62],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-588, 57, -216],
            s: [3, 1, 6],
            l: 1,
            r: [-3.14, 0, -2.62],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-587, 60, -216],
            s: [3, 1, 6],
            l: 1,
            r: [-3.14, 0, -2.62],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-613, 52, -216],
            s: [17, 3, 6],
            l: 1,
            r: [-3.14, 0, -3.14],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-637, 56, -216],
            s: [17, 3, 6],
            l: 1,
            r: [-3.14, 0, -3.14],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-636, 48, -216],
            s: [17, 3, 6],
            l: 1,
            r: [-3.14, 0, -3.14],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-643, 47, -216],
            s: [3, 12, 6],
            l: 1,
            r: [-3.14, 0, -3.14],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-660, 51, -216],
            s: [17, 3, 6],
            l: 1,
            r: [3.14, 0, 2.62],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-659, 58, -216],
            s: [3, 1, 6],
            l: 1,
            r: [-3.14, 0, -2.62],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-622, 39, -216],
            s: [107, 30, 4],
            l: 1,
            r: [-3.14, 0, -3.14],
            c: "#0012ff",
            t: 5
        }, {
            p: [-584, 32, -216],
            s: [5, 7, 4],
            l: 1,
            r: [-3.14, 0, -3.14],
            c: "#575757",
            t: 5
        }, {
            p: [-660, 32, -216],
            s: [5, 7, 4],
            l: 1,
            r: [-3.14, 0, -3.14],
            c: "#575757",
            t: 5
        }, {
            p: [-264, 63, -293],
            s: [4, 1, 1],
            c: "#372d2d",
            t: 5
        }, {
            p: [-264, 78, -293],
            s: [4, 1, 1],
            c: "#372d2d",
            t: 5
        }, {
            p: [-274, 60, -293],
            s: [1, 23, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-266, 60, -293],
            s: [1, 23, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-270, 60, -293],
            s: [7, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-270, 82, -293],
            s: [7, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-270, 61, -293],
            s: [7, 21, 1],
            c: "#120216",
            e: "#010903",
            t: 5
        }, {
            p: [-270, 79, -293],
            s: [5, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-271, 78, -293],
            s: [1, 3, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-269, 78, -293],
            s: [1, 3, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-270, 71, -293],
            s: [1, 6, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-269, 76, -293],
            s: [3, 1, 2],
            l: 1,
            r: [0, 0, .7],
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-271, 76, -293],
            s: [3, 1, 2],
            l: 1,
            r: [0, 0, -.7],
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-270, 73, -293],
            s: [5, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-272, 72, -293],
            s: [3, 1, 2],
            l: 1,
            r: [0, 0, -.7],
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-268, 72, -293],
            s: [3, 1, 2],
            l: 1,
            r: [0, 0, .52],
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-268, 65, -293],
            s: [1, 4, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-270, 65, -293],
            s: [1, 5, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-270, 68, -293],
            s: [5, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-271, 66, -293],
            s: [3, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-271, 64, -293],
            s: [3, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-272, 63, -293],
            s: [1, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-269, 63, -293],
            s: [1, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-270, 62, -293],
            s: [3, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-272, 62, -293],
            s: [1, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [-269, 64, -293],
            s: [1, 1, 2],
            l: 1,
            c: "#ff00e0",
            e: "#d200ff",
            t: 5
        }, {
            p: [37, 21, -44],
            s: [3, 1, 3],
            c: "#666666",
            t: 5
        }, {
            p: [37, 22, -44],
            s: [4, 2, 4],
            c: "#666666",
            t: 5
        }, {
            p: [-496, 289, 789],
            s: [122, 48, 100],
            l: 1,
            c: "#b6b6b6",
            t: 5
        }, {
            p: [242, 55, 160],
            s: [17, 3, 4],
            l: 1,
            r: [-.43, -1.57, 0],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [242, 54, 153],
            s: [3, 9, 4],
            l: 1,
            r: [-.43, -1.57, 0],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [242, 60, 159],
            s: [3, 1, 4],
            l: 1,
            r: [-.43, -1.57, 0],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [242, 57, 182],
            s: [13, 3, 4],
            l: 1,
            r: [0, -1.57, 0],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [242, 61, 205],
            s: [17, 3, 4],
            l: 1,
            r: [0, -1.57, 0],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [242, 53, 205],
            s: [17, 3, 4],
            l: 1,
            r: [0, -1.57, 0],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [242, 52, 212],
            s: [3, 12, 4],
            l: 1,
            r: [0, -1.57, 0],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [242, 55, 231],
            s: [17, 3, 4],
            l: 1,
            r: [-.61, -1.57, 0],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [242, 62, 227],
            s: [3, 2, 4],
            l: 1,
            r: [1.57, -1.48, 1.57],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [245, 44, 193],
            s: [107, 30, 4],
            l: 1,
            r: [0, -1.57, 0],
            c: "#0012ff",
            t: 5
        }, {
            p: [251, 37, 155],
            s: [5, 40, 5],
            l: 1,
            r: [0, -1.57, 0],
            c: "#575757",
            t: 5
        }, {
            p: [251, 37, 232],
            s: [5, 40, 5],
            l: 1,
            r: [0, -1.57, 0],
            c: "#575757",
            t: 5
        }, {
            p: [242, 62, 157],
            s: [3, 1, 4],
            l: 1,
            r: [-.43, -1.57, 0],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [78, -5, -626],
            s: [143, 3, 146],
            c: "#4d4d4d",
            t: 5,
            bo: 1
        }, {
            p: [-32, -708, -1854],
            s: [158, 1320, 139],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [154, 78, -877],
            s: [129, 55, 2],
            l: 1,
            c: "#323232",
            t: 5
        }, {
            p: [154, 105, -875],
            s: [130, 0, 53],
            i: 11,
            l: 1,
            r: [1.57, 0, 0],
            bb: 4
        }, {
            p: [-125, -23, -163],
            s: [110, 48, 4],
            c: "#000337",
            t: 5
        }, {
            p: [-125, 24, -163],
            s: [112, 2, 5],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-125, -25, -163],
            s: [112, 2, 5],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-181, -25, -163],
            s: [2, 51, 5],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-70, -25, -163],
            s: [2, 51, 5],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [290, 171, -207],
            s: [4, 39, 9],
            l: 1,
            c: "#ff003b",
            e: "#ff003b",
            t: 5
        }, {
            p: [290, 171, -191],
            s: [4, 39, 9],
            l: 1,
            c: "#ff003b",
            e: "#ff003b",
            t: 5
        }, {
            p: [290, 180, -177],
            s: [4, 21, 10],
            l: 1,
            c: "#ff003b",
            e: "#ff003b",
            t: 5
        }, {
            p: [290, 201, -143],
            s: [4, 9, 24],
            l: 1,
            c: "#ff003b",
            e: "#ff003b",
            t: 5
        }, {
            p: [290, 171, -88],
            s: [4, 9, 24],
            l: 1,
            c: "#ff003b",
            e: "#ff003b",
            t: 5
        }, {
            p: [290, 186, -116],
            s: [4, 9, 24],
            l: 1,
            c: "#ff003b",
            t: 5
        }, {
            p: [290, 187, -199],
            s: [4, 8, 7],
            l: 1,
            c: "#ff003b",
            e: "#ff003b",
            t: 5
        }, {
            p: [290, 171, -170],
            s: [4, 9, 24],
            l: 1,
            c: "#ff003b",
            e: "#ff003b",
            t: 5
        }, {
            p: [290, 201, -170],
            s: [4, 9, 24],
            l: 1,
            c: "#ff003b",
            e: "#ff003b",
            t: 5
        }, {
            p: [290, 180, -163],
            s: [4, 21, 10],
            l: 1,
            c: "#ff003b",
            e: "#ff003b",
            t: 5
        }, {
            p: [290, 171, -143],
            s: [4, 30, 9],
            l: 1,
            c: "#ff003b",
            e: "#ff003b",
            t: 5
        }, {
            p: [290, 171, -96],
            s: [4, 39, 8],
            l: 1,
            c: "#ff003b",
            e: "#ff003b",
            t: 5
        }, {
            p: [290, 171, -116],
            s: [4, 9, 24],
            l: 1,
            c: "#ff003b",
            t: 5
        }, {
            p: [290, 201, -116],
            s: [4, 9, 24],
            l: 1,
            c: "#ff003b",
            t: 5
        }, {
            p: [290, 179, -124],
            s: [4, 22, 8],
            l: 1,
            c: "#ff003b",
            t: 5
        }, {
            p: [282, 53, -148],
            s: [3, 33, 123],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [282, 6, -148],
            s: [3, 33, 123],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-1, 41, 296],
            s: [114, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [282, -40, -148],
            s: [3, 33, 123],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [282, -87, -148],
            s: [3, 33, 123],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [282, -133, -148],
            s: [3, 33, 123],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [282, -177, -148],
            s: [3, 33, 123],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [282, -223, -148],
            s: [3, 33, 123],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [282, -269, -148],
            s: [3, 33, 123],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-353, -14, 214],
            s: [89, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-1, -4, 296],
            s: [114, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-1, -50, 296],
            s: [114, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-1, -97, 296],
            s: [114, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-1, -145, 296],
            s: [114, 36, 2],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-1, -193, 296],
            s: [114, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-353, -60, 214],
            s: [89, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-353, -108, 214],
            s: [89, 36, 2],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-353, -157, 214],
            s: [89, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-353, -206, 214],
            s: [89, 36, 2],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-353, -258, 214],
            s: [89, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-446, -254, 106],
            s: [56, 268, 1],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [-408, -83, 160],
            s: [3, 45, 91],
            l: 1,
            c: "#5f5f5f",
            t: 5
        }, {
            p: [-406, -61, 160],
            s: [90, 0, 45],
            i: 11,
            l: 1,
            r: [1.57, 0, -1.57],
            bb: 4
        }, {
            p: [-1, -241, 296],
            s: [114, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-1, -289, 296],
            s: [114, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-567, -24, -120],
            s: [3, 43, 183],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-567, -80, -120],
            s: [3, 43, 183],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-567, -137, -120],
            s: [3, 43, 183],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [238, -68, 192],
            s: [3, 33, 119],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [238, -111, 192],
            s: [3, 33, 119],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [238, -154, 192],
            s: [3, 33, 119],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [238, -197, 192],
            s: [3, 33, 119],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [238, -240, 192],
            s: [3, 33, 119],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [238, -282, 192],
            s: [3, 33, 119],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [238, -324, 192],
            s: [3, 33, 119],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [238, -276, -54],
            s: [3, 59, 119],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [282, -312, -148],
            s: [3, 33, 123],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-649, 108, -565],
            s: [2, 76, 2],
            l: 1,
            c: "#aaaaaa",
            t: 5
        }, {
            p: [-649, 184, -565],
            s: [3, 4, 3],
            l: 1,
            c: "#000000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-780, -719, -280],
            s: [3, 989, 116],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [-263, 5, -227],
            s: [3, 43, 88],
            c: "#464646",
            t: 5
        }, {
            p: [-264, 5, -227],
            s: [6, 2, 91],
            l: 1,
            c: "#464646",
            t: 5
        }, {
            p: [-265, 28, -227],
            s: [86, 0, 40],
            i: 11,
            l: 1,
            r: [1.57, 0, -1.57],
            bb: 2
        }, {
            p: [-633, 8, -504],
            s: [3, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-578, -120, -557],
            s: [3, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-578, -166, -557],
            s: [3, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-578, -212, -557],
            s: [3, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-578, -258, -557],
            s: [3, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-578, -305, -557],
            s: [3, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [190, -45, -292],
            s: [104, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [190, -90, -292],
            s: [104, 36, 2],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [190, -135, -292],
            s: [104, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [190, -181, -292],
            s: [104, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [190, -228, -292],
            s: [104, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [190, -275, -292],
            s: [104, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [190, -321, -292],
            s: [104, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [190, -367, -292],
            s: [104, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-448, -71, -705],
            s: [122, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-448, -116, -705],
            s: [122, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-448, -162, -705],
            s: [122, 36, 2],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-448, -209, -705],
            s: [122, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-448, -256, -705],
            s: [122, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-448, -304, -705],
            s: [122, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-448, -351, -705],
            s: [122, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-110, 31, -972],
            s: [137, 46, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-110, -26, -972],
            s: [137, 46, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-110, -84, -972],
            s: [137, 46, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-110, -141, -972],
            s: [137, 46, 2],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-110, -198, -972],
            s: [137, 46, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-110, -256, -972],
            s: [137, 46, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-110, -314, -972],
            s: [137, 46, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-110, -373, -972],
            s: [137, 46, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-110, -430, -972],
            s: [137, 46, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-110, -486, -972],
            s: [137, 46, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [203, 0, -738],
            s: [3, 46, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [203, -56, -738],
            s: [3, 46, 121],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [203, -114, -738],
            s: [3, 46, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [203, -174, -738],
            s: [3, 46, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [203, -234, -738],
            s: [3, 46, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [156, 142, -877],
            s: [122, 42, 3],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [156, 192, -877],
            s: [122, 42, 3],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [156, 243, -877],
            s: [122, 42, 3],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [613, 221, 217],
            s: [7, 118, 4],
            l: 1,
            c: "#aaaaaa",
            t: 5
        }, {
            p: [-215, -88, -985],
            s: [3, 164, 35],
            l: 1,
            r: [0, 1.57, 0],
            c: "#181717",
            t: 5
        }, {
            p: [-193, -48, -985],
            s: [3, 6, 9],
            l: 1,
            r: [0, 1.57, 0],
            c: "#343434",
            t: 5
        }, {
            p: [-193, 42, -985],
            s: [3, 6, 9],
            l: 1,
            r: [0, 1.57, 0],
            c: "#343434",
            t: 5
        }, {
            p: [-232, -88, -985],
            s: [4, 164, 3],
            l: 1,
            r: [0, 1.57, 0],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-198, -88, -985],
            s: [4, 164, 3],
            l: 1,
            r: [0, 1.57, 0],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-215, -89, -985],
            s: [4, 3, 37],
            l: 1,
            r: [0, 1.57, 0],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-215, 76, -985],
            s: [4, 3, 37],
            l: 1,
            r: [0, 1.57, 0],
            c: "#f000ff",
            e: "#f000ff",
            t: 5
        }, {
            p: [-170, 88, -986],
            s: [4, 39, 9],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-154, 88, -986],
            s: [4, 39, 9],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-106, 118, -986],
            s: [4, 9, 24],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-51, 88, -986],
            s: [4, 9, 24],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-79, 103, -986],
            s: [4, 9, 24],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-162, 104, -986],
            s: [4, 8, 7],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-133, 88, -986],
            s: [4, 9, 24],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            t: 5
        }, {
            p: [-133, 118, -986],
            s: [4, 9, 24],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            t: 5
        }, {
            p: [-126, 97, -986],
            s: [4, 21, 10],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            t: 5
        }, {
            p: [-106, 88, -986],
            s: [4, 30, 9],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-59, 88, -986],
            s: [4, 39, 8],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-79, 88, -986],
            s: [4, 9, 24],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-79, 118, -986],
            s: [4, 9, 24],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-87, 96, -986],
            s: [4, 22, 8],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-140, 97, -986],
            s: [4, 21, 10],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            t: 5
        }, {
            p: [86, -31, -825],
            s: [137, 46, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [86, -86, -825],
            s: [137, 46, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [86, -142, -825],
            s: [137, 46, 2],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [86, -199, -825],
            s: [137, 46, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [86, -257, -825],
            s: [137, 46, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [127, -69, -359],
            s: [3, 47, 117],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [127, -126, -359],
            s: [3, 47, 117],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [127, -184, -359],
            s: [3, 47, 117],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [127, -245, -359],
            s: [3, 47, 117],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [127, -305, -359],
            s: [3, 47, 117],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [62, 74, -1031],
            s: [2, 64, 2],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-578, -74, -557],
            s: [3, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-633, -41, -504],
            s: [3, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-633, -88, -504],
            s: [3, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-633, -136, -504],
            s: [3, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-633, -186, -504],
            s: [3, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-633, -234, -504],
            s: [3, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-633, -283, -504],
            s: [3, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-633, -332, -504],
            s: [3, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [432, -644, -454],
            s: [59, 688, 173],
            l: 1,
            c: "#f2f2f2",
            t: 3
        }, {
            p: [479, 37, 22],
            s: [3, 41, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [479, -12, 22],
            s: [3, 41, 121],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [479, -62, 22],
            s: [3, 41, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [479, -113, 22],
            s: [3, 41, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [426, -278, 74],
            s: [3, 59, 121],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [-376, -8, -778],
            s: [4, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-376, -56, -778],
            s: [4, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-376, -103, -778],
            s: [4, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-376, -151, -778],
            s: [4, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-376, -199, -778],
            s: [4, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-376, -247, -778],
            s: [4, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-376, -294, -778],
            s: [4, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-571, 64, -44],
            s: [2, 3, 23],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-571, 58, -38],
            s: [2, 3, 17],
            l: 1,
            r: [-.87, 0, 0],
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-571, 73, -45],
            s: [2, 2, 7],
            l: 1,
            r: [.87, 0, 0],
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-571, 63, -110],
            s: [2, 3, 23],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-571, 72, -109],
            s: [2, 2, 8],
            l: 1,
            r: [-.35, 0, 0],
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-571, 59, -76],
            s: [2, 3, 20],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-571, 68, -76],
            s: [2, 3, 20],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-571, 63, -86],
            s: [2, 3, 21],
            l: 1,
            r: [1.57, 0, 0],
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-571, 55, -110],
            s: [2, 2, 8],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-645, 109, 50],
            s: [2, 19, 3],
            l: 1,
            r: [-1.57, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 93, 44],
            s: [2, 19, 3],
            l: 1,
            r: [-.7, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 115, 46],
            s: [2, 12, 2],
            l: 1,
            r: [-1.57, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 75, 43],
            s: [2, 3, 17],
            l: 1,
            r: [-1.57, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 53, 50],
            s: [2, 19, 3],
            l: 1,
            r: [-1.4, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 49, 48],
            s: [2, 3, 17],
            l: 1,
            r: [-1.57, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 42, 48],
            s: [2, 17, 3],
            l: 1,
            r: [-1.57, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 20, 49],
            s: [2, 17, 3],
            l: 1,
            r: [-1.57, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 27, 45],
            s: [2, 10, 3],
            l: 1,
            r: [-1.57, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 20, 49],
            s: [2, 17, 3],
            l: 1,
            r: [-2.27, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-795, 25, 373],
            s: [3, 67, 124],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [246, 10, 96],
            s: [2, 3, 18],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [246, -2, 96],
            s: [2, 3, 18],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [246, -18, 97],
            s: [2, 3, 18],
            l: 1,
            r: [-.17, 0, 0],
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [246, -8, 100],
            s: [2, 3, 20],
            l: 1,
            r: [1.57, 0, 0],
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [246, 18, 96],
            s: [2, 2, 8],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [246, -39, 96],
            s: [2, 3, 18],
            l: 1,
            r: [-.52, 0, 0],
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [246, -30, 95],
            s: [2, 2, 8],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [246, -40, 101],
            s: [2, 3, 14],
            l: 1,
            r: [1.57, 0, 0],
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [246, -58, 96],
            s: [2, 3, 18],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [246, -69, 101],
            s: [2, 7, 3],
            l: 1,
            r: [.17, 0, 0],
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-646, 12, -599],
            s: [3, 112, 31],
            l: 1,
            c: "#000337",
            t: 5
        }, {
            p: [-646, 11, -599],
            s: [4, 3, 31],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-646, 122, -599],
            s: [4, 3, 31],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-646, 11, -615],
            s: [4, 114, 3],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-646, 11, -584],
            s: [4, 114, 3],
            l: 1,
            c: "#00b3ff",
            e: "#00b3ff",
            t: 5
        }, {
            p: [-646, 98, -579],
            s: [3, 5, 10],
            l: 1,
            c: "#181717",
            t: 5
        }, {
            p: [-646, 31, -579],
            s: [3, 5, 10],
            l: 1,
            c: "#181717",
            t: 5
        }, {
            p: [-644, 102, -599],
            s: [2, 3, 18],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-644, 90, -599],
            s: [2, 3, 18],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-644, 74, -598],
            s: [2, 3, 18],
            l: 1,
            r: [-.17, 0, 0],
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-644, 84, -595],
            s: [2, 3, 20],
            l: 1,
            r: [1.57, 0, 0],
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-644, 110, -599],
            s: [2, 2, 8],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-644, 53, -599],
            s: [2, 3, 18],
            l: 1,
            r: [-.52, 0, 0],
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-644, 62, -600],
            s: [2, 2, 8],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-644, 52, -594],
            s: [2, 3, 14],
            l: 1,
            r: [1.57, 0, 0],
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-644, 34, -599],
            s: [2, 3, 18],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-644, 23, -594],
            s: [2, 7, 3],
            l: 1,
            r: [.17, 0, 0],
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-646, -7, -410],
            s: [3, 122, 33],
            l: 1,
            c: "#181717",
            t: 5
        }, {
            p: [-646, 91, -431],
            s: [3, 6, 9],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [-646, 19, -431],
            s: [3, 6, 9],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [-646, -7, -394],
            s: [4, 122, 3],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-646, -7, -426],
            s: [4, 122, 3],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-646, -8, -410],
            s: [4, 3, 35],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-646, 115, -410],
            s: [4, 3, 35],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-645, 103, -401],
            s: [2, 19, 3],
            l: 1,
            r: [-1.57, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 87, -407],
            s: [2, 19, 3],
            l: 1,
            r: [-.7, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 109, -405],
            s: [2, 12, 2],
            l: 1,
            r: [-1.57, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 69, -408],
            s: [2, 3, 17],
            l: 1,
            r: [-1.57, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 47, -401],
            s: [2, 19, 3],
            l: 1,
            r: [-1.4, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 43, -403],
            s: [2, 3, 17],
            l: 1,
            r: [-1.57, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 36, -403],
            s: [2, 17, 3],
            l: 1,
            r: [-1.57, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 14, -402],
            s: [2, 17, 3],
            l: 1,
            r: [-1.57, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 21, -406],
            s: [2, 10, 3],
            l: 1,
            r: [-1.57, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-645, 14, -402],
            s: [2, 17, 3],
            l: 1,
            r: [-2.27, 0, 0],
            c: "#00ff69",
            e: "#00ff69",
            t: 5
        }, {
            p: [-617, -817, -349],
            s: [5e3, 1, 5e3],
            l: 1,
            c: "#3e4984",
            t: 5
        }, {
            p: [-674, 41, -728],
            s: [4, 18, 2],
            l: 1,
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-674, 41, -714],
            s: [4, 18, 2],
            l: 1,
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-674, 41, -721],
            s: [4, 2, 16],
            l: 1,
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-674, 46, -723],
            s: [4, 11, 1],
            l: 1,
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-674, 46, -719],
            s: [4, 11, 1],
            l: 1,
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-674, 56, -715],
            s: [5, 3, 5],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-674, 59, -721],
            s: [5, 3, 17],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-674, 62, -721],
            s: [5, 3, 13],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-674, 46, -733],
            s: [4, 10, 2],
            l: 1,
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-674, 46, -730],
            s: [4, 2, 4],
            l: 1,
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-674, 54, -730],
            s: [4, 2, 4],
            l: 1,
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-674, 19, -714],
            s: [4, 3, 21],
            l: 1,
            r: [1.57, 0, 0],
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-674, 11, -722],
            s: [4, 3, 16],
            l: 1,
            r: [3.14, 0, 0],
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-674, 21, -718],
            s: [4, 3, 9],
            l: 1,
            r: [-2.97, 0, 0],
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-674, 25, -727],
            s: [4, 2, 4],
            l: 1,
            r: [2.09, 0, 0],
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-674, 27, -730],
            s: [4, 2, 4],
            l: 1,
            r: [2.09, 0, 0],
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-674, -8, -721],
            s: [4, 4, 21],
            l: 1,
            r: [3.14, 0, 0],
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-674, -38, -716],
            s: [4, 3, 21],
            l: 1,
            r: [1.4, 0, 0],
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-674, -38, -725],
            s: [4, 3, 22],
            l: 1,
            r: [1.57, 0, 0],
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-674, -44, -728],
            s: [4, 3, 11],
            l: 1,
            r: [-2.79, 0, 0],
            c: "#feff00",
            e: "#feff00",
            t: 5
        }, {
            p: [-359, -1, -711],
            s: [6, 1, 3],
            l: 1,
            c: "#fff000",
            e: "#fff000",
            t: 5
        }, {
            p: [-360, -6, -711],
            s: [10, 2, 3],
            l: 1,
            r: [0, 0, .35],
            c: "#fff000",
            e: "#fff000",
            t: 5
        }, {
            p: [-354, -6, -711],
            s: [7, 2, 3],
            l: 1,
            r: [0, 0, 1.92],
            c: "#fff000",
            e: "#fff000",
            t: 5
        }, {
            p: [-358, -20, -711],
            s: [12, 2, 3],
            l: 1,
            r: [0, 0, 1.57],
            c: "#fff000",
            e: "#fff000",
            t: 5
        }, {
            p: [-361, -39, -711],
            s: [12, 2, 3],
            l: 1,
            r: [0, 0, 1.57],
            c: "#fff000",
            e: "#fff000",
            t: 5
        }, {
            p: [-355, -45, -711],
            s: [2, 8, 3],
            l: 1,
            r: [0, 0, 1.4],
            c: "#fff000",
            e: "#fff000",
            t: 5
        }, {
            p: [216, -2, 258],
            s: [24, 4, 4],
            l: 1,
            r: [0, 0, -.01],
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [219, 4, 258],
            s: [4, 20, 4],
            l: 1,
            r: [0, 0, -.35],
            c: "#ffe100",
            e: "#ffe100",
            t: 5
        }, {
            p: [215, 4, 258],
            s: [4, 16, 4],
            l: 1,
            r: [0, 0, -.19],
            c: "#ffe100",
            e: "#ffe100",
            t: 5
        }, {
            p: [215, -5, 258],
            s: [37, 31, 2],
            l: 1,
            c: "#e31a1a",
            e: "#e31a1a",
            t: 5
        }, {
            p: [235, -5, 258],
            s: [3, 31, 4],
            l: 1,
            c: "#4d4d4d",
            t: 5
        }, {
            p: [197, -5, 258],
            s: [3, 31, 4],
            l: 1,
            c: "#4d4d4d",
            t: 5
        }, {
            p: [216, -8, 258],
            s: [41, 3, 4],
            l: 1,
            c: "#4d4d4d",
            t: 5
        }, {
            p: [216, 26, 258],
            s: [41, 3, 4],
            l: 1,
            c: "#4d4d4d",
            t: 5
        }, {
            p: [238, 18, 258],
            s: [3, 4, 4],
            l: 1,
            c: "#4d4d4d",
            t: 5
        }, {
            p: [238, 1, 258],
            s: [3, 4, 4],
            l: 1,
            c: "#4d4d4d",
            t: 5
        }, {
            p: [-399, -613, -917],
            s: [123, 570, 2],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [-204, 59, -984],
            s: [4, 21, 5],
            l: 1,
            r: [-1.57, 0, 1.57],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-208, 47, -984],
            s: [4, 3, 9],
            l: 1,
            r: [-1.57, .7, 1.57],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-214, 12, -984],
            s: [4, 21, 5],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-214, -6, -984],
            s: [4, 5, 17],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-220, -40, -984],
            s: [4, 23, 4],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-225, -23, -984],
            s: [4, 21, 4],
            l: 1,
            r: [1.57, 0, -1.57],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-216, -30, -984],
            s: [4, 9, 4],
            l: 1,
            r: [1.57, 0, -1.57],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-214, -49, -984],
            s: [4, 5, 22],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-214, -74, -984],
            s: [4, 13, 5],
            l: 1,
            r: [0, 1.57, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-579, 9, -253],
            s: [4, 4, 22],
            l: 1,
            c: "#ffe100",
            e: "#ffe100",
            t: 5
        }, {
            p: [-577, 2, -257],
            s: [4, 3, 8],
            l: 1,
            r: [.87, 0, 0],
            c: "#ffe100",
            e: "#ffe100",
            t: 5
        }, {
            p: [-579, -27, -253],
            s: [4, 17, 5],
            l: 1,
            c: "#ffe100",
            e: "#ffe100",
            t: 5
        }, {
            p: [-579, -63, -253],
            s: [4, 4, 20],
            l: 1,
            r: [-.35, 0, 0],
            c: "#ffe100",
            e: "#ffe100",
            t: 5
        }, {
            p: [-579, -54, -258],
            s: [4, 3, 8],
            l: 1,
            r: [.52, 0, 0],
            c: "#ffe100",
            e: "#ffe100",
            t: 5
        }, {
            p: [-579, -41, -253],
            s: [4, 4, 22],
            l: 1,
            c: "#ffe100",
            e: "#ffe100",
            t: 5
        }, {
            p: [-7, 4, -832],
            s: [11, 3, 2],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-7, -1, -832],
            s: [5, 2, 2],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-4, -21, -832],
            s: [2, 12, 2],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-6, -19, -832],
            s: [9, 2, 2],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-6, -13, -832],
            s: [13, 3, 2],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-7, -31, -832],
            s: [13, 3, 2],
            l: 1,
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-5, -37, -832],
            s: [5, 2, 2],
            l: 1,
            r: [0, 0, .7],
            c: "#ff0086",
            e: "#ff0086",
            t: 5
        }, {
            p: [-698, -113, -746],
            s: [118, 0, 55],
            i: 11,
            l: 1,
            r: [1.57, 0, 0],
            bb: 1
        }, {
            p: [-699, -753, -747],
            s: [118, 600, 2],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [-829, -708, -1511],
            s: [111, 970, 102],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [-380, -708, -1581],
            s: [111, 982, 102],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [-1491, -708, -1083],
            s: [111, 1125, 102],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [919, -708, -604],
            s: [171, 933, 138],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [-1239, -708, -57],
            s: [158, 1062, 139],
            l: 1,
            c: "#7d7d7d",
            t: 5
        }, {
            p: [2, -19, -159],
            s: [4, 1, 23],
            c: "#9d8161",
            t: 5
        }, {
            p: [-2, -19, -159],
            s: [4, 1, 21],
            c: "#8e7252",
            t: 5
        }, {
            p: [6, -19, -159],
            s: [4, 1, 20],
            c: "#93795b",
            t: 5
        }, {
            p: [295, 51, -240],
            s: [3, 100, 35],
            l: 1,
            c: "#181717",
            t: 5
        }, {
            p: [295, 117, -218],
            s: [3, 6, 9],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [295, 81, -218],
            s: [3, 6, 9],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [295, 50, -258],
            s: [4, 102, 3],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [295, 50, -223],
            s: [4, 103, 3],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [295, 150, -241],
            s: [4, 3, 37],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [295, 50, -241],
            s: [4, 3, 37],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [295, 137, -241],
            s: [4, 4, 22],
            l: 1,
            c: "#ffe100",
            e: "#ffe100",
            t: 5
        }, {
            p: [297, 130, -245],
            s: [4, 3, 8],
            l: 1,
            r: [.87, 0, 0],
            c: "#ffe100",
            e: "#ffe100",
            t: 5
        }, {
            p: [295, 106, -241],
            s: [4, 17, 5],
            l: 1,
            c: "#ffe100",
            e: "#ffe100",
            t: 5
        }, {
            p: [295, 65, -241],
            s: [4, 4, 20],
            l: 1,
            r: [-.35, 0, 0],
            c: "#ffe100",
            e: "#ffe100",
            t: 5
        }, {
            p: [295, 74, -246],
            s: [4, 3, 8],
            l: 1,
            r: [.52, 0, 0],
            c: "#ffe100",
            e: "#ffe100",
            t: 5
        }, {
            p: [295, 89, -241],
            s: [4, 4, 22],
            l: 1,
            c: "#ffe100",
            e: "#ffe100",
            t: 5
        }, {
            p: [237, 70, -638],
            s: [4, 20, 5],
            l: 1,
            r: [-.79, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [237, 89, -643],
            s: [4, 5, 23],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [237, 31, -648],
            s: [4, 25, 5],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [237, 44, -636],
            s: [4, 5, 9],
            l: 1,
            r: [-.17, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [237, 4, -653],
            s: [4, 22, 5],
            l: 1,
            r: [.96, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [237, 0, -639],
            s: [4, 5, 11],
            l: 1,
            r: [.96, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [237, -28, -643],
            s: [4, 5, 23],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [175, 129, -505],
            s: [4, 3, 24],
            l: 1,
            r: [1.74, 0, 0],
            c: "#ff004a",
            e: "#ff004a",
            t: 5
        }, {
            p: [175, 117, -498],
            s: [4, 3, 19],
            l: 1,
            r: [-.01, 0, 0],
            c: "#ff004a",
            e: "#ff004a",
            t: 5
        }, {
            p: [175, 117, -490],
            s: [4, 9, 3],
            l: 1,
            r: [-.01, 0, 0],
            c: "#ff004a",
            e: "#ff004a",
            t: 5
        }, {
            p: [175, 99, -498],
            s: [4, 3, 21],
            l: 1,
            r: [-.01, 0, 0],
            c: "#ff004a",
            e: "#ff004a",
            t: 5
        }, {
            p: [175, 89, -500],
            s: [4, 3, 12],
            l: 1,
            r: [.51, 0, 0],
            c: "#ff004a",
            e: "#ff004a",
            t: 5
        }, {
            p: [175, 55, -497],
            s: [4, 12, 3],
            l: 1,
            r: [-.01, 0, 0],
            c: "#ff004a",
            e: "#ff004a",
            t: 5
        }, {
            p: [175, 71, -498],
            s: [4, 3, 19],
            l: 1,
            r: [-.01, 0, 0],
            c: "#ff004a",
            e: "#ff004a",
            t: 5
        }, {
            p: [175, 21, -489],
            s: [4, 16, 3],
            l: 1,
            r: [-.01, 0, 0],
            c: "#ff004a",
            e: "#ff004a",
            t: 5
        }, {
            p: [175, 21, -505],
            s: [4, 16, 3],
            l: 1,
            r: [-.01, 0, 0],
            c: "#ff004a",
            e: "#ff004a",
            t: 5
        }, {
            p: [175, 21, -497],
            s: [4, 3, 19],
            l: 1,
            r: [-.01, 0, 0],
            c: "#ff004a",
            e: "#ff004a",
            t: 5
        }, {
            p: [175, 34, -497],
            s: [4, 3, 19],
            l: 1,
            r: [-.01, 0, 0],
            c: "#ff004a",
            e: "#ff004a",
            t: 5
        }, {
            p: [175, 30, -497],
            s: [4, 12, 3],
            l: 1,
            r: [-.01, 0, 0],
            c: "#ff004a",
            e: "#ff004a",
            t: 5
        }, {
            p: [-103, -21, -607],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [-49, -21, -542],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [216, 2, 258],
            s: [29, 10, 5],
            l: 1,
            r: [0, 0, -.01],
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-24, 21, 33],
            s: [3, 1, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-24, 22, 33],
            s: [5, 3, 5],
            c: "#666666",
            t: 5
        }, {
            p: [-41, 4, 3],
            s: [9, 14, 19],
            c: "#919191",
            t: 5
        }, {
            p: [-41, 18, 3],
            s: [10, 1, 20],
            c: "#616161",
            t: 5
        }, {
            p: [-41, 0, 3],
            s: [8, 4, 18],
            c: "#696969",
            t: 5
        }, {
            p: [62, 2, -42],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [64, -21, 86],
            s: [2, 24, 4],
            i: 3,
            c: "#e84d4d",
            t: 5
        }, {
            p: [60, -1182, -17],
            s: [48, 1161, 235],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [74, -21, 102],
            s: [26, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [85, -21, -16],
            s: [4, 2, 232],
            c: "#787878",
            t: 5
        }, {
            p: [39, -21, -143],
            s: [4, 2, 14],
            c: "#787878",
            t: 5
        }, {
            p: [62, -21, -134],
            s: [50, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [65, -21, -98],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [96, -43, -18],
            s: [19, 1, 50],
            c: "#646464",
            t: 5
        }, {
            p: [106, -43, -18],
            s: [1, 2, 50],
            c: "#e84d4d",
            t: 5
        }, {
            p: [86, -43, -18],
            s: [1, 2, 50],
            c: "#e84d4d",
            t: 5
        }, {
            p: [96, -43, -43],
            s: [21, 2, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [96, -43, 7],
            s: [21, 2, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [96, -42, -42],
            s: [1, 48, 1],
            c: "#505050",
            t: 5
        }, {
            p: [96, -42, 6],
            s: [1, 48, 1],
            c: "#505050",
            t: 5
        }, {
            p: [96, -41, -43],
            s: [4, 2, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [96, -41, 7],
            s: [4, 2, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [80, -21, 6],
            s: [2, 26, 2],
            c: "#666666",
            t: 5
        }, {
            p: [87, 5, 6],
            s: [22, 2, 2],
            c: "#666666",
            t: 5
        }, {
            p: [80, -21, -42],
            s: [2, 26, 2],
            c: "#666666",
            t: 5
        }, {
            p: [87, 5, -42],
            s: [22, 2, 2],
            c: "#666666",
            t: 5
        }, {
            p: [80, -21, 6],
            s: [4, 1, 4],
            c: "#666666",
            t: 5
        }, {
            p: [80, -21, -42],
            s: [4, 1, 4],
            c: "#666666",
            t: 5
        }, {
            p: [-8, -21, -104],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [297, 44, -51],
            s: [3, 129, 35],
            l: 1,
            c: "#181717",
            t: 5
        }, {
            p: [297, 140, -73],
            s: [3, 6, 9],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [297, 72, -73],
            s: [3, 6, 9],
            l: 1,
            c: "#343434",
            t: 5
        }, {
            p: [297, 42, -33],
            s: [4, 134, 3],
            l: 1,
            c: "#bf00ff",
            e: "#bf00ff",
            t: 5
        }, {
            p: [297, 41, -69],
            s: [4, 135, 3],
            l: 1,
            c: "#bf00ff",
            e: "#bf00ff",
            t: 5
        }, {
            p: [297, 173, -51],
            s: [4, 3, 39],
            l: 1,
            c: "#bf00ff",
            e: "#bf00ff",
            t: 5
        }, {
            p: [297, 41, -51],
            s: [4, 3, 39],
            l: 1,
            c: "#bf00ff",
            e: "#bf00ff",
            t: 5
        }, {
            p: [297, 132, -46],
            s: [4, 20, 5],
            l: 1,
            r: [-.79, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [297, 151, -51],
            s: [4, 5, 23],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [297, 93, -56],
            s: [4, 25, 5],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [297, 106, -44],
            s: [4, 5, 9],
            l: 1,
            r: [-.17, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [297, 66, -61],
            s: [4, 22, 5],
            l: 1,
            r: [.96, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [297, 62, -47],
            s: [4, 5, 11],
            l: 1,
            r: [.96, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 39, -101],
            s: [1, 164, 35],
            c: "#181717",
            t: 5,
            bo: 1
        }, {
            p: [-422, 40, -85],
            s: [4, 162, 1],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 40, -86],
            s: [3, 161, 1],
            l: 1,
            c: "#bf00ff",
            e: "#bf00ff",
            t: 5
        }, {
            p: [-422, 40, -116],
            s: [2, 161, 1],
            l: 1,
            c: "#bf00ff",
            e: "#bf00ff",
            t: 5
        }, {
            p: [-422, 40, -117],
            s: [4, 161, 1],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 40, -101],
            s: [4, 1, 33],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 41, -101],
            s: [2, 1, 29],
            l: 1,
            c: "#bf00ff",
            e: "#bf00ff",
            t: 5
        }, {
            p: [-422, 201, -101],
            s: [4, 1, 33],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 200, -101],
            s: [3, 1, 29],
            l: 1,
            c: "#bf00ff",
            e: "#bf00ff",
            t: 5
        }, {
            p: [-421, 141, -126],
            s: [1, 3, 16],
            c: "#101010",
            t: 5
        }, {
            p: [-422, 192, -102],
            s: [4, 1, 17],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 191, -102],
            s: [3, 3, 19],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 184, -102],
            s: [4, 1, 14],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 183, -102],
            s: [3, 3, 16],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 175, -102],
            s: [4, 1, 21],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 174, -102],
            s: [3, 3, 23],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 180, -110],
            s: [4, 1, 10],
            l: 1,
            r: [-1.22, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 176, -111],
            s: [3, 9, 2],
            l: 1,
            r: [.35, 0, 0],
            c: "#ffffff",
            t: 5
        }, {
            p: [-421, 176, -113],
            s: [1, 10, 2],
            l: 1,
            r: [.35, 0, 0],
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 175, -102],
            s: [4, 17, 1],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 175, -102],
            s: [3, 17, 3],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 164, -102],
            s: [3, 3, 19],
            l: 1,
            r: [.17, 0, 0],
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 165, -102],
            s: [4, 1, 17],
            l: 1,
            r: [.17, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 156, -103],
            s: [4, 13, 1],
            l: 1,
            r: [-.52, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 156, -104],
            s: [3, 12, 3],
            l: 1,
            r: [-.52, 0, 0],
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 155, -102],
            s: [4, 1, 21],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 154, -102],
            s: [3, 3, 23],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 142, -106],
            s: [4, 13, 1],
            l: 1,
            r: [.17, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 142, -106],
            s: [4, 7, 1],
            l: 1,
            r: [.87, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 141, -106],
            s: [3, 15, 3],
            l: 1,
            r: [.17, 0, 0],
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 142, -106],
            s: [3, 8, 3],
            l: 1,
            r: [.87, 0, 0],
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 135, -102],
            s: [4, 1, 13],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 134, -102],
            s: [3, 3, 15],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 130, -102],
            s: [4, 1, 20],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 129, -102],
            s: [3, 3, 22],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 115, -103],
            s: [4, 18, 1],
            l: 1,
            r: [-.52, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 114, -102],
            s: [3, 19, 3],
            l: 1,
            r: [-.52, 0, 0],
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 91, -102],
            s: [4, 16, 1],
            l: 1,
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 90, -102],
            s: [3, 18, 3],
            l: 1,
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 68, -93],
            s: [4, 26, 1],
            l: 1,
            r: [-.7, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 67, -93],
            s: [3, 28, 3],
            l: 1,
            r: [-.7, 0, 0],
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 67, -110],
            s: [4, 19, 1],
            l: 1,
            r: [.52, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 66, -111],
            s: [3, 22, 3],
            l: 1,
            r: [.52, 0, 0],
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 51, -102],
            s: [4, 1, 23],
            l: 1,
            r: [.35, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 50, -102],
            s: [3, 3, 25],
            l: 1,
            r: [.35, 0, 0],
            c: "#ffffff",
            t: 5
        }, {
            p: [-422, 57, -102],
            s: [4, 9, 1],
            l: 1,
            r: [.17, 0, 0],
            c: "#fffb00",
            e: "#fffb00",
            t: 5
        }, {
            p: [-422, 56, -102],
            s: [3, 11, 3],
            l: 1,
            r: [.17, 0, 0],
            c: "#ffffff",
            t: 5
        }, {
            p: [-421, 95, -126],
            s: [1, 3, 16],
            c: "#101010",
            t: 5
        }, {
            p: [-421, 51, -126],
            s: [1, 3, 16],
            c: "#101010",
            t: 5
        }, {
            p: [-422, -21, -73],
            s: [34, 18, 48],
            c: "#969696",
            t: 5
        }, {
            p: [-513, -21, -171],
            s: [4, 2, 243],
            c: "#787878",
            t: 5
        }, {
            p: [-487, -21, -293],
            s: [57, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-446, -3, -50],
            s: [74, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-480, -3, -150],
            s: [4, 2, 100],
            c: "#787878",
            t: 5
        }, {
            p: [-407, -3, -101],
            s: [4, 2, 106],
            c: "#787878",
            t: 5
        }, {
            p: [-460, -3, -98],
            s: [44, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-454, -3, -202],
            s: [56, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-470, -21, -204],
            s: [2, 20, 4],
            i: 3,
            c: "#e84d4d",
            t: 5,
            d: 3
        }, {
            p: [-513, -19, -51],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-513, -19, -104],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-513, -19, -171],
            s: [1, 29, 240],
            pe: 1,
            t: 12
        }, {
            p: [-513, -19, -237],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-513, -19, -292],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-513, -19, -170],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [192, -59, 446],
            s: [116, 118, 2],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [192, -201, 446],
            s: [116, 118, 2],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [192, -347, 446],
            s: [116, 118, 2],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [426, -182, 74],
            s: [3, 59, 121],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [426, -369, 74],
            s: [3, 59, 121],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [192, -501, 446],
            s: [116, 118, 2],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [-737, -414, 119],
            s: [3, 448, 57],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [-795, 122, 373],
            s: [3, 67, 124],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-795, -75, 373],
            s: [3, 67, 124],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-795, -176, 373],
            s: [3, 67, 124],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-795, -284, 373],
            s: [3, 67, 124],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [404, -455, -653],
            s: [3, 651, 59],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [403, 84, -639],
            s: [3, 29, 30],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [403, -95, -666],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [402, -36, -638],
            s: [1, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-512, -254, 106],
            s: [56, 268, 1],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [-527, -44, 106],
            s: [26, 28, 2],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-736, -144, 104],
            s: [2, 28, 26],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-220, -709, -1198],
            s: [121, 869, 2],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [-234, 70, -1197],
            s: [28, 29, 3],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-234, -231, -1197],
            s: [28, 29, 3],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [238, -184, -54],
            s: [3, 59, 119],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [238, -95, -54],
            s: [3, 59, 119],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [-114, -78, 213],
            s: [163, 58, 2],
            l: 1,
            c: "#757575",
            t: 3
        }, {
            p: [-114, -164, 213],
            s: [163, 58, 2],
            l: 1,
            c: "#757575",
            t: 3
        }, {
            p: [-114, -253, 213],
            s: [163, 58, 2],
            l: 1,
            c: "#757575",
            t: 3
        }, {
            p: [-114, -345, 213],
            s: [163, 58, 2],
            l: 1,
            c: "#757575",
            t: 3
        }, {
            p: [888, -644, -266],
            s: [173, 787, 178],
            l: 1,
            c: "#f2f2f2",
            t: 3
        }, {
            p: [176, -29, 445],
            s: [26, 28, 1],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [147, -286, 445],
            s: [27, 28, 1],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [236, 0, 445],
            s: [26, 28, 1],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [549, -182, 216],
            s: [3, 387, 117],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [466, -646, -444],
            s: [173, 681, 121],
            l: 1,
            c: "#f2f2f2",
            t: 3
        }, {
            p: [537, -644, -454],
            s: [59, 688, 173],
            l: 1,
            c: "#f2f2f2",
            t: 3
        }, {
            p: [-376, -346, -778],
            s: [4, 37, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [133, 60, -400],
            s: [2, 16, 1],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [133, 67, -401],
            s: [2, 1, 20],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [133, 71, -396],
            s: [2, 1, 11],
            l: 1,
            r: [.7, 0, 0],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [133, 74, -397],
            s: [2, 2, 16],
            l: 1,
            r: [.35, 0, 0],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [133, 78, -396],
            s: [2, 4, 18],
            l: 1,
            r: [.35, 0, 0],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [133, 80, -397],
            s: [2, 4, 12],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [133, 79, -393],
            s: [2, 4, 7],
            l: 1,
            r: [.87, 0, 0],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [133, 81, -404],
            s: [2, 12, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [133, 90, -397],
            s: [2, 7, 2],
            l: 1,
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [133, 89, -397],
            s: [2, 9, 2],
            l: 1,
            r: [-1.05, 0, 0],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [133, 95, -398],
            s: [2, 5, 6],
            l: 1,
            r: [.52, 0, 0],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [133, 98, -402],
            s: [2, 1, 10],
            l: 1,
            r: [.69, 0, 0],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [133, 99, -400],
            s: [2, 1, 11],
            l: 1,
            r: [.35, 0, 0],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [132, 97, -397],
            s: [1, 1, 2],
            l: 1,
            r: [.52, 0, 0],
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 75, -387],
            s: [2, 2, 2],
            l: 1,
            r: [.35, 0, 0],
            c: "#000de8",
            e: "#004aff",
            t: 5
        }, {
            p: [133, 73, -381],
            s: [2, 26, 3],
            l: 1,
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 87, -378],
            s: [2, 3, 9],
            l: 1,
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 78, -375],
            s: [2, 3, 12],
            l: 1,
            r: [1.05, 0, 0],
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 94, -374],
            s: [2, 3, 9],
            l: 1,
            r: [-.87, 0, 0],
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 74, -355],
            s: [2, 24, 3],
            l: 1,
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 92, -357],
            s: [2, 3, 14],
            l: 1,
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 83, -360],
            s: [2, 3, 14],
            l: 1,
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 93, -363],
            s: [2, 5, 3],
            l: 1,
            r: [-.35, 0, 0],
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 81, -363],
            s: [2, 12, 3],
            l: 1,
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 74, -366],
            s: [2, 12, 3],
            l: 1,
            r: [.35, 0, 0],
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 74, -336],
            s: [2, 25, 3],
            l: 1,
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 74, -347],
            s: [2, 9, 3],
            l: 1,
            r: [.52, 0, 0],
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 85, -345],
            s: [2, 9, 3],
            l: 1,
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 93, -345],
            s: [2, 5, 3],
            l: 1,
            r: [-.35, 0, 0],
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 91, -345],
            s: [2, 12, 3],
            l: 1,
            r: [2.27, 0, 0],
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 93, -329],
            s: [2, 5, 3],
            l: 1,
            r: [-.35, 0, 0],
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 93, -325],
            s: [2, 3, 9],
            l: 1,
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 81, -324],
            s: [2, 12, 3],
            l: 1,
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 73, -329],
            s: [2, 11, 3],
            l: 1,
            r: [.52, 0, 0],
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 77, -312],
            s: [2, 22, 3],
            l: 1,
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 93, -314],
            s: [2, 3, 9],
            l: 1,
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [133, 74, -314],
            s: [2, 3, 9],
            l: 1,
            c: "#e80000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-137, -14, -163],
            s: [9, 9, 5],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-148, -14, -163],
            s: [9, 9, 5],
            l: 1,
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-167, -4, -163],
            s: [9, 9, 5],
            l: 1,
            r: [0, 0, -.87],
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-148, -11, -163],
            s: [3, 3, 6],
            l: 1,
            c: "#ff5a00",
            e: "#ff5a00",
            t: 5
        }, {
            p: [-137, -11, -163],
            s: [3, 3, 6],
            l: 1,
            c: "#00ff0f",
            e: "#00ff0f",
            t: 5
        }, {
            p: [-165, -2, -163],
            s: [3, 3, 6],
            l: 1,
            r: [0, 0, -.87],
            c: "#ff5a00",
            e: "#ff5a00",
            t: 5
        }, {
            p: [-165, -14, -163],
            s: [2, 47, 6],
            l: 1,
            r: [0, 0, -.87],
            c: "#ffe100",
            e: "#ffe100",
            t: 5
        }, {
            p: [-173, 9, -163],
            s: [2, 47, 6],
            l: 1,
            r: [0, 0, -1.57],
            c: "#ffe100",
            e: "#ffe100",
            t: 5
        }, {
            p: [-116, 6, -163],
            s: [2, 12, 6],
            l: 1,
            r: [0, 0, -1.05],
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-101, 3, -164],
            s: [3, 14, 7],
            l: 1,
            r: [0, 0, 1.57],
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-91, 3, -163],
            s: [3, 14, 6],
            l: 1,
            r: [0, 0, -1.57],
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-76, 6, -163],
            s: [2, 12, 6],
            l: 1,
            r: [0, 0, 1.05],
            c: "#ffffff",
            e: "#ffffff",
            t: 5
        }, {
            p: [-109, -8, -164],
            s: [5, 5, 7],
            l: 1,
            c: "#ffffff",
            e: "#ff00ff",
            t: 5
        }, {
            p: [-83, -8, -164],
            s: [5, 5, 7],
            l: 1,
            c: "#ffffff",
            e: "#ff00ff",
            t: 5
        }, {
            p: [-150, -21, -163],
            s: [54, 2, 5],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-149, 20, -163],
            s: [54, 2, 5],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-177, -21, -163],
            s: [2, 43, 5],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-122, -21, -163],
            s: [2, 43, 5],
            l: 1,
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-100, -9, -163],
            s: [5, 3, 6],
            l: 1,
            r: [0, 0, 1.57],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-89, -9, -163],
            s: [5, 3, 6],
            l: 1,
            r: [0, 0, 1.57],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-97, -12, -163],
            s: [3, 3, 6],
            l: 1,
            r: [0, 0, 1.57],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-92, -12, -163],
            s: [3, 3, 6],
            l: 1,
            r: [0, 0, 1.57],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [-94, -13, -163],
            s: [3, 4, 6],
            l: 1,
            r: [0, 0, 1.57],
            c: "#ff0000",
            e: "#ff0000",
            t: 5
        }, {
            p: [14, 0, 6],
            s: [69, 50, 80],
            i: 14,
            l: 1
        }, {
            p: [-283, -20, -533],
            s: [91, 50, 94],
            i: 14,
            l: 1
        }, {
            p: [-227, 21, -34],
            s: [76, 50, 99],
            i: 14,
            l: 1
        }, {
            p: [-70, -78, 212],
            s: [28, 28, 1],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-160, -134, 212],
            s: [28, 28, 1],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [127, -371, -359],
            s: [3, 47, 117],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [418, -75, -368],
            s: [29, 29, 3],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [549, -194, -368],
            s: [29, 29, 3],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [549, -13, -368],
            s: [29, 29, 3],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [448, -255, -368],
            s: [29, 29, 3],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [380, -107, -399],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [380, -346, -399],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [380, -227, -457],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [380, -77, -488],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-353, -224, -917],
            s: [28, 29, 3],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-412, -134, -917],
            s: [28, 29, 3],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-353, -75, -917],
            s: [28, 29, 3],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-444, -313, -917],
            s: [28, 29, 3],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-385, -613, -987],
            s: [120, 568, 57],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [-326, -194, -974],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-326, -254, -974],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-326, -374, -1e3],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-326, -74, -1e3],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-683, -214, -746],
            s: [28, 29, 1],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-654, -272, -746],
            s: [28, 29, 1],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-713, -394, -746],
            s: [28, 29, 1],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-778, 211, -324],
            s: [1, 29, 28],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-778, 150, -266],
            s: [1, 29, 28],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-778, 1, -266],
            s: [1, 29, 28],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-778, 1, -325],
            s: [1, 29, 28],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-778, -90, -294],
            s: [1, 29, 28],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-778, -300, -295],
            s: [1, 29, 28],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-778, -238, -237],
            s: [1, 29, 28],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-353, -320, 214],
            s: [89, 36, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [-130, -48, 212],
            s: [28, 28, 1],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [296, -667, 394],
            s: [116, 538, 2],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [252, -188, 393],
            s: [27, 28, 1],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [310, -246, 393],
            s: [27, 28, 1],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [279, -366, 393],
            s: [27, 28, 1],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [424, -340, 30],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [424, -277, 90],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [424, -182, 90],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [237, -95, -9],
            s: [3, 28, 28],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [237, -65, -68],
            s: [3, 28, 28],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [237, -154, -99],
            s: [3, 28, 28],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [548, 87, 172],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [548, 149, 172],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [548, 149, 233],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [548, -64, 172],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [86, -318, -825],
            s: [137, 46, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [86, -385, -825],
            s: [137, 46, 2],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [203, -301, -738],
            s: [3, 46, 121],
            l: 1,
            c: "#282828",
            t: 5
        }, {
            p: [403, 145, -666],
            s: [3, 29, 30],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [380, -17, -458],
            s: [3, 29, 29],
            l: 1,
            c: "#f5e14c",
            e: "#f5e14c",
            t: 5
        }, {
            p: [-926, -719, -432],
            s: [3, 781, 116],
            l: 1,
            c: "#b6b6b6",
            t: 3
        }, {
            p: [-63, -708, -533],
            s: [5e3, 1, 5e3],
            c: "#363284",
            t: 5
        }, {
            p: [-349, -4, -446],
            s: [112, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-314, -4, -318],
            s: [183, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-404, -4, -382],
            s: [4, 2, 132],
            c: "#787878",
            t: 5
        }, {
            p: [-224, -4, -382],
            s: [4, 2, 132],
            c: "#787878",
            t: 5
        }, {
            p: [-314, -691, -382],
            s: [179, 687, 129],
            c: "#b6b6b6",
            t: 5
        }, {
            p: [-404, -2, -382],
            s: [1, 29, 129],
            pe: 1,
            t: 12
        }, {
            p: [-404, -2, -318],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-404, -2, -446],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-404, -2, -384],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-375, -2, -446],
            s: [58, 29, 1],
            pe: 1,
            t: 12
        }, {
            p: [-345, -2, -446],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-375, 14, -415],
            s: [25, 21, 25],
            c: "#acacac",
            t: 5
        }, {
            p: [-375, 35, -415],
            s: [28, 1, 28],
            c: "#666666",
            t: 5
        }, {
            p: [-375, 13, -415],
            s: [28, 1, 28],
            c: "#666666",
            t: 5
        }, {
            p: [-364, -2, -404],
            s: [2, 15, 2],
            c: "#666666",
            t: 5
        }, {
            p: [-364, -4, -404],
            s: [3, 2, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-364, -2, -426],
            s: [2, 15, 2],
            c: "#666666",
            t: 5
        }, {
            p: [-364, -4, -426],
            s: [3, 2, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-386, -2, -404],
            s: [2, 15, 2],
            c: "#666666",
            t: 5
        }, {
            p: [-386, -4, -404],
            s: [3, 2, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-386, -2, -426],
            s: [2, 15, 2],
            c: "#666666",
            t: 5
        }, {
            p: [-386, -4, -426],
            s: [3, 2, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-364, -1, -415],
            s: [1, 1, 22],
            c: "#666666",
            t: 5
        }, {
            p: [-386, -1, -415],
            s: [1, 1, 22],
            c: "#666666",
            t: 5
        }, {
            p: [-375, -1, -404],
            s: [20, 1, 1],
            c: "#666666",
            t: 5
        }, {
            p: [-375, -1, -426],
            s: [20, 1, 1],
            c: "#666666",
            t: 5
        }, {
            p: [-380, -1, -353],
            s: [16, 13, 26],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-380, -4, -353],
            s: [15, 3, 25],
            c: "#7a7a7a",
            t: 5
        }, {
            p: [-380, 12, -353],
            s: [18, 1, 28],
            c: "#828282",
            t: 5
        }, {
            p: [-374, 13, -342],
            s: [3, 1, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-374, 14, -342],
            s: [4, 2, 4],
            c: "#666666",
            t: 5
        }, {
            p: [-392, -2, -318],
            s: [22, 29, 1],
            pe: 1,
            t: 12
        }, {
            p: [-381, -2, -318],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-251, -2, -318],
            s: [53, 29, 1],
            pe: 1,
            t: 12
        }, {
            p: [-278, -2, -318],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-224, -2, -318],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-293, -6, -370],
            s: [99, 19, 67],
            c: "#969696",
            t: 5
        }, {
            p: [-244, 13, -370],
            s: [4, 2, 68],
            c: "#787878",
            t: 5
        }, {
            p: [-342, 13, -370],
            s: [4, 2, 68],
            c: "#787878",
            t: 5
        }, {
            p: [-268, 12, -350],
            s: [24, 5, 13],
            c: "#7a7a7a",
            t: 5
        }, {
            p: [-268, 16, -350],
            s: [25, 13, 14],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-268, 29, -350],
            s: [27, 1, 16],
            c: "#737373",
            t: 5
        }, {
            p: [-278, 30, -345],
            s: [3, 1, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-278, 31, -345],
            s: [4, 2, 4],
            c: "#666666",
            t: 5
        }, {
            p: [-366, 36, -406],
            s: [3, 1, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-366, 37, -406],
            s: [5, 3, 5],
            c: "#666666",
            t: 5
        }, {
            p: [-252, -6, -415],
            s: [4, 14, 23],
            c: "#969696",
            t: 5
        }, {
            p: [-252, 8, -415],
            s: [5, 1, 24],
            c: "#828282",
            t: 5
        }, {
            p: [-200, -11, -406],
            s: [56, 1, 4],
            l: 1,
            r: [0, 0, -.35],
            c: "#917d66",
            t: 5
        }, {
            p: [-335, 15, -396],
            s: [5, 3, 5],
            c: "#666666",
            t: 5
        }, {
            p: [-335, 13, -396],
            s: [3, 2, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-293, 13, -370],
            s: [92, 50, 60],
            i: 14,
            l: 1
        }, {
            p: [-382, -715, -277],
            s: [68, 711, 28],
            c: "#d9d9d9",
            t: 5
        }, {
            p: [-200, -11, -398],
            s: [56, 1, 4],
            l: 1,
            r: [0, 0, -.35],
            c: "#917d66",
            t: 5
        }, {
            p: [-200, -11, -402],
            s: [56, 1, 4],
            l: 1,
            r: [0, 0, -.35],
            c: "#847666",
            t: 5
        }, {
            p: [-198, -21, -402],
            s: [48, 19, 11],
            i: 9,
            d: 2
        }, {
            p: [-251, -1164, -34],
            s: [187, 1161, 160],
            c: "#d9d9d9",
            t: 5
        }, {
            p: [-160, -3, 43],
            s: [5, 2, 10],
            c: "#939393",
            t: 5
        }, {
            p: [-344, -3, -34],
            s: [4, 2, 164],
            c: "#939393",
            t: 5
        }, {
            p: [-218, -3, -114],
            s: [116, 2, 4],
            c: "#939393",
            t: 5
        }, {
            p: [-344, -1, -114],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-344, -1, 46],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-344, -1, -96],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-221, -1, 46],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-252, -1, 46],
            s: [184, 29, 1],
            pe: 1,
            t: 12
        }, {
            p: [-344, -1, -4],
            s: [1, 29, 98],
            pe: 1,
            t: 12
        }, {
            p: [-344, -1, -54],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-227, -5, -34],
            s: [82, 26, 104],
            c: "#969696",
            t: 5
        }, {
            p: [-186, 21, -34],
            s: [4, 2, 108],
            c: "#939393",
            t: 5
        }, {
            p: [-268, 21, -34],
            s: [4, 2, 108],
            c: "#939393",
            t: 5
        }, {
            p: [-227, 21, -86],
            s: [78, 2, 4],
            c: "#939393",
            t: 5
        }, {
            p: [-227, 21, 18],
            s: [78, 2, 4],
            c: "#939393",
            t: 5
        }, {
            p: [-184, -3, -1],
            s: [2, 27, 4],
            i: 3,
            c: "#e84d4d",
            t: 5
        }, {
            p: [-205, 24, -61],
            s: [16, 13, 26],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-205, 21, -61],
            s: [15, 3, 25],
            c: "#8c8c8c",
            t: 5
        }, {
            p: [-205, 37, -61],
            s: [18, 1, 28],
            c: "#646464",
            t: 5
        }, {
            p: [-199, 38, -50],
            s: [3, 1, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-199, 39, -50],
            s: [4, 2, 4],
            c: "#666666",
            t: 5
        }, {
            p: [-159, -1, 46],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-285, -1, 46],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-254, -3, -88],
            s: [2, 27, 4],
            i: 3,
            c: "#e84d4d",
            t: 5,
            d: 3
        }, {
            p: [-246, 22, 2],
            s: [18, 14, 6],
            c: "#919191",
            t: 5
        }, {
            p: [-246, 21, 2],
            s: [17, 1, 5],
            c: "#5a5a5a",
            t: 5
        }, {
            p: [-246, 36, 2],
            s: [19, 1, 7],
            c: "#575757",
            t: 5
        }, {
            p: [-246, 21, -11],
            s: [12, 1, 12],
            c: "#ffffff",
            t: 5
        }, {
            p: [-246, 21, -11],
            s: [3, 11, 3],
            c: "#ffffff",
            t: 5
        }, {
            p: [-246, 24, -11],
            s: [1, 64, 1],
            c: "#ffffff",
            t: 5
        }, {
            p: [-211, 38, -71],
            s: [1, 2, 1],
            c: "#666666",
            t: 5
        }, {
            p: [-211, 40, -71],
            s: [2, 1, 2],
            c: "#666666",
            t: 5
        }, {
            p: [-137, -1164, -34],
            s: [41, 1161, 84],
            c: "#d9d9d9",
            t: 5
        }, {
            p: [-159, -3, -111],
            s: [4, 2, 10],
            c: "#939393",
            t: 5
        }, {
            p: [-117, -3, -34],
            s: [4, 2, 86],
            c: "#939393",
            t: 5
        }, {
            p: [-139, -3, 7],
            s: [40, 2, 4],
            c: "#939393",
            t: 5
        }, {
            p: [-134, -3, -55],
            s: [18, 6, 29],
            c: "#666666",
            t: 5
        }, {
            p: [-134, 23, -55],
            s: [22, 1, 34],
            c: "#666666",
            t: 5
        }, {
            p: [-134, 1, -55],
            s: [20, 22, 31],
            c: "#acacac",
            t: 5
        }, {
            p: [-128, 25, -42],
            s: [4, 2, 4],
            c: "#666666",
            t: 5
        }, {
            p: [-128, 24, -42],
            s: [3, 1, 3],
            c: "#666666",
            t: 5
        }, {
            p: [-251, -3, 46],
            s: [186, 2, 4],
            c: "#939393",
            t: 5
        }, {
            p: [-270, -3, -24],
            s: [2, 27, 4],
            i: 3,
            c: "#e84d4d",
            t: 5,
            d: 2
        }, {
            p: [-344, -1, -105],
            s: [1, 29, 17],
            pe: 1,
            t: 12
        }, {
            p: [-320, -7, -47],
            s: [18, 17, 6],
            c: "#787878",
            t: 5
        }, {
            p: [-322, 1, -99],
            s: [20, 17, 8],
            c: "#bbbbbb",
            t: 5
        }, {
            p: [-322, 18, -99],
            s: [21, 1, 9],
            c: "#787878",
            t: 5
        }, {
            p: [-375, -1, -81],
            s: [71, 1, 4],
            c: "#9d8161",
            t: 5
        }, {
            p: [-374, -1, -77],
            s: [71, 1, 4],
            c: "#a78e71",
            t: 5
        }, {
            p: [-375, -1, -73],
            s: [71, 1, 4],
            c: "#9d8161",
            t: 5
        }, {
            p: [-335, -1, -114],
            s: [17, 29, 1],
            pe: 1,
            t: 12
        }, {
            p: [-326, -1, -114],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-292, -669, -124],
            s: [31, 648, 60],
            c: "#d9d9d9",
            t: 5
        }, {
            p: [-443, -21, -150],
            s: [76, 18, 106],
            c: "#969696",
            t: 5
        }, {
            p: [-461, -21, -60],
            s: [44, 18, 22],
            c: "#969696",
            t: 5
        }, {
            p: [-461, -3, -70],
            s: [44, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-481, -3, -60],
            s: [4, 2, 16],
            c: "#787878",
            t: 5
        }, {
            p: [-128, -1147, -91],
            s: [64, 126, 30],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-382, -21, -293],
            s: [153, 19, 4],
            c: "#939393",
            t: 5
        }, {
            p: [-363, -2, -306],
            s: [4, 1, 31],
            c: "#847462",
            t: 5
        }, {
            p: [-359, -2, -305],
            s: [4, 1, 31],
            c: "#847462",
            t: 5
        }, {
            p: [-355, -2, -306],
            s: [4, 1, 31],
            c: "#847462",
            t: 5
        }, {
            p: [-459, -708, -171],
            s: [108, 687, 244],
            c: "#d9d9d9",
            t: 5
        }, {
            p: [-499, -21, -50],
            s: [32, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-127, -1147, 23],
            s: [62, 1126, 30],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-326, -3, -114],
            s: [32, 2, 4],
            c: "#939393",
            t: 5
        }, {
            p: [-278, -21, -147],
            s: [4, 20, 70],
            c: "#939393",
            t: 5
        }, {
            p: [-308, -21, -147],
            s: [4, 20, 70],
            c: "#939393",
            t: 5
        }, {
            p: [-419, -2, -293],
            s: [75, 29, 1],
            pe: 1,
            t: 12
        }, {
            p: [-381, -2, -293],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-457, -2, -293],
            s: [2, 30, 2],
            c: "#323232",
            t: 5
        }, {
            p: [-328, -21, -278],
            s: [40, 17, 27],
            i: 9,
            c: "#d9d9d9",
            t: 5,
            d: 2
        }, {
            p: [-383, -21, -263],
            s: [150, 19, 4],
            c: "#939393",
            t: 5
        }, {
            p: [-127, -1147, -91],
            s: [62, 1126, 30],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-98, -21, -34],
            s: [5, 2, 76],
            c: "#787878",
            t: 5
        }, {
            p: [-97, -21, -119],
            s: [4, 2, 26],
            c: "#787878",
            t: 5
        }, {
            p: [-107, -21, -108],
            s: [16, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-137, -688, 40],
            s: [41, 685, 4],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-137, -3, 40],
            s: [41, 2, 4],
            c: "#939393",
            t: 5
        }, {
            p: [-267, -655, -464],
            s: [4, 651, 36],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-247, -4, -446],
            s: [44, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-267, -4, -465],
            s: [4, 2, 34],
            c: "#787878",
            t: 5
        }, {
            p: [-295, -4, -465],
            s: [4, 2, 34],
            c: "#787878",
            t: 5
        }, {
            p: [-252, -21, -483],
            s: [35, 2, 5],
            c: "#787878",
            t: 5
        }, {
            p: [-320, 1, -47],
            s: [20, 17, 8],
            c: "#bbbbbb",
            t: 5
        }, {
            p: [-322, -7, -99],
            s: [18, 17, 6],
            c: "#787878",
            t: 5
        }, {
            p: [-320, 18, -47],
            s: [21, 1, 9],
            c: "#787878",
            t: 5
        }, {
            p: [-507, -19, -293],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [-471, -19, -293],
            s: [4, 7, 4],
            i: 16
        }, {
            p: [-137, -21, 23],
            s: [41, 18, 30],
            i: 9,
            c: "#cfcfcf",
            t: 5,
            d: 2
        }, {
            p: [-137, -21, -91],
            s: [41, 18, 30],
            i: 9,
            c: "#cfcfcf",
            t: 5,
            d: 2
        }, {
            p: [-136, -723, -108],
            s: [42, 720, 4],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-136, -3, -108],
            s: [42, 2, 4],
            c: "#939393",
            t: 5
        }, {
            p: [-293, -21, -148],
            s: [26, 18, 68],
            i: 9,
            c: "#d9d9d9",
            t: 5,
            d: 1
        }, {
            p: [-437, -21, -278],
            s: [42, 17, 27],
            i: 9,
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-460, -21, -84],
            s: [42, 18, 26],
            i: 9,
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-281, -21, -465],
            s: [24, 17, 37],
            i: 9,
            c: "#c0c0c0",
            t: 5,
            d: 1
        }, {
            p: [0, 0, 0],
            s: [24, 36, 24],
            i: 23,
            l: 1,
            tm: 0
        }, {
            p: [-248, -21, -624],
            s: [24, 36, 24],
            i: 23,
            l: 1,
            tm: "1"
        }, {
            p: [-163, 13, -323],
            s: [4, 2, 48],
            c: "#787878",
            t: 5
        }, {
            p: [-293, 13, -338],
            s: [94, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-106, -21, -74],
            s: [21, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-106, -21, 6],
            s: [21, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-106, -21, 40],
            s: [21, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-175, 132, -314],
            s: [2, 2, 34],
            c: "#666666",
            t: 5
        }, {
            p: [-175, 17, -328],
            s: [1, 116, 1],
            c: "#505050",
            t: 5
        }, {
            p: [-215, 132, -314],
            s: [2, 2, 34],
            c: "#666666",
            t: 5
        }, {
            p: [-215, 17, -328],
            s: [1, 115, 1],
            c: "#505050",
            t: 5
        }, {
            p: [-195, 16, -329],
            s: [41, 1, 19],
            c: "#646464",
            t: 5
        }, {
            p: [-174, 16, -329],
            s: [1, 2, 19],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-216, 16, -329],
            s: [1, 2, 19],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-195, 16, -339],
            s: [43, 2, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-195, 16, -319],
            s: [43, 2, 1],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-216, 18, -328],
            s: [1, 2, 4],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-174, 18, -328],
            s: [1, 2, 4],
            c: "#e84d4d",
            t: 5
        }, {
            p: [-293, 13, -402],
            s: [94, 2, 4],
            c: "#787878",
            t: 5
        }, {
            p: [-139, -3, -75],
            s: [40, 2, 4],
            c: "#939393",
            t: 5
        }, {
            p: [-175, 109, -298],
            s: [2, 23, 2],
            c: "#666666",
            t: 5
        }, {
            p: [-215, 109, -298],
            s: [2, 23, 2],
            c: "#666666",
            t: 5
        }, {
            p: [-459, 84, -199],
            s: [108, 0, 48],
            i: 11,
            l: 1,
            r: [1.57, 0, 1.57],
            bb: 3
        }, {
            p: [-457, 57, -199],
            s: [3, 54, 113],
            l: 1,
            c: "#484848",
            t: 5
        }, {
            p: [-457, 55, -199],
            s: [7, 2, 116],
            l: 1,
            c: "#484848",
            t: 5
        }, {
            p: [-330, 1, -9],
            s: [7, 17, 20],
            c: "#bbbbbb",
            t: 5
        }, {
            p: [-330, -3, -9],
            s: [4, 17, 18],
            c: "#787878",
            t: 5
        }, {
            p: [-330, 18, -9],
            s: [8, 1, 21],
            c: "#787878",
            t: 5
        }, {
            p: [-295, -655, -464],
            s: [4, 651, 36],
            c: "#cfcfcf",
            t: 5
        }, {
            p: [-292, -4, -404],
            s: [2, 20, 4],
            i: 3,
            c: "#e84d4d",
            t: 5,
            d: 3
        }, {
            p: [-292, -4, -336],
            s: [2, 20, 4],
            i: 3,
            c: "#e84d4d",
            t: 5,
            d: 1
        }]
    }, {
        name: "Bazaar",
        ambInd: 3,
        modURL: "",
        terrainSeed: "hoaxge",
        terrainWidth: 4e3,
        terrainHeight: 4e3,
        terrainMntMlt: .7000000000000001,
        terrainMntCol: "#ca9354",
        terrainGrsCol: "#2b3b5a",
        terrainDrtCol: "#7f6238",
        skyDome: !0,
        skyDomeCol0: "#7bd7ff",
        skyDomeCol1: "#f7d4b4",
        skyDomeCol2: "#dce8ed",
        zone: !1,
        zoneSize: 500,
        zoneSpeed: 1,
        zoneCol0: "#c542d9",
        zoneCol1: "#c542d9",
        zoneCol2: "#c542d9",
        sizeMlt: 2,
        shadowR: 1756.618811233233,
        ambient: 9010041,
        light: 16772332,
        sky: 14477549,
        fog: 12294553,
        fogD: 933.0972515856238,
        dthY: 98,
        camPos: [-127, 218, -15],
        spawns: [[347.99999999999994, 132, 178, 1, 3], [-413, 133, 54, 2], [-601, 133, 178, 1, 3], [-545, 133, -184, 1, 2], [316, 133, -189, 2, 2], [134, 133, 55, 1], [33.99999999999999, 168, -150, 0, 1], [-288, 168, -157, 0, 1]],
        objects: [{
            p: [-126, 156, -174],
            s: [106, 2, 44]
        }, {
            p: [-126, 158, -225],
            s: [58, 2, 146],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-126, 158, 176],
            s: [50, 2, 48]
        }, {
            p: [-126, 159, 198],
            s: [30, 2, 4],
            l: 1,
            r: [0, -.17, 0],
            t: 2
        }, {
            p: [-126, 159, 189],
            s: [30, 2, 4],
            l: 1,
            r: [0, .17, 0],
            t: 2
        }, {
            p: [-126, 159, 181],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, 172],
            s: [30, 2, 4],
            l: 1,
            r: [0, -.17, 0],
            t: 2
        }, {
            p: [-126, 159, 163],
            s: [30, 2, 4],
            l: 1,
            r: [0, .17, 0],
            t: 2
        }, {
            p: [-126, 159, 156],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, 148],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, 140],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, 131],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, 123],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-136, 160, 108],
            s: [2, 2, 259],
            l: 1
        }, {
            p: [-126, 159, 115],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, 107],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, 98],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, 89],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, 80],
            s: [30, 2, 4],
            l: 1,
            r: [0, .09, 0],
            t: 2
        }, {
            p: [-126, 159, 71],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, 63],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, 54],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, 46],
            s: [30, 2, 4],
            l: 1,
            r: [0, -.09, 0],
            t: 2
        }, {
            p: [-126, 159, 37],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, 29],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, 20],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, 11],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, 2],
            s: [30, 2, 4],
            l: 1,
            r: [0, -.09, 0],
            t: 2
        }, {
            p: [-126, 159, -7],
            s: [30, 2, 4],
            l: 1,
            r: [0, .09, 0],
            t: 2
        }, {
            p: [-127, 156, -16],
            s: [30, 2, 4],
            l: 1,
            r: [0, -.09, -.35],
            t: 2
        }, {
            p: [-125, 153, -135],
            s: [30, 2, 4],
            l: 1,
            r: [0, 0, -.52],
            t: 2
        }, {
            p: [-124, 156, -144],
            s: [30, 2, 4],
            l: 1,
            r: [0, 0, -.26],
            t: 2
        }, {
            p: [-126, 159, -153],
            s: [30, 2, 4],
            l: 1,
            r: [0, -.09, 0],
            t: 2
        }, {
            p: [-126, 159, -161],
            s: [30, 2, 4],
            l: 1,
            r: [0, .09, 0],
            t: 2
        }, {
            p: [-126, 159, -169],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -178],
            s: [30, 2, 4],
            l: 1,
            r: [0, .09, 0],
            t: 2
        }, {
            p: [-126, 159, -186],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -195],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -203],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -211],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -220],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -228],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -236],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -245],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -252],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -260],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -268],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -277],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -285],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -293],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-136, 162, 109],
            s: [2, 8, 8],
            r: [.87, 0, 0]
        }, {
            p: [-136, 162, 98],
            s: [2, 8, 8],
            r: [.7, 0, 0]
        }, {
            p: [-126, 164, 112],
            s: [24, 2, 2],
            c: 4868682
        }, {
            p: [-126, 164, 15],
            s: [24, 2, 2],
            c: 4868682
        }, {
            p: [-136, 162, 13],
            s: [2, 8, 8],
            r: [.7, 0, 0]
        }, {
            p: [-136, 162, 1],
            s: [2, 8, 8],
            r: [.7, 0, 0]
        }, {
            p: [-126, 164, 4],
            s: [24, 2, 2],
            c: 4868682
        }, {
            p: [-126, 164, 101],
            s: [24, 2, 2],
            c: 4868682
        }, {
            p: [-126, 168, 58],
            s: [18, 4, 124]
        }, {
            p: [-126, 168, -5],
            s: [14, 4, 2]
        }, {
            p: [-126, 164, 57],
            s: [6, 4, 124]
        }, {
            p: [-126, 168, -229],
            s: [18, 4, 124]
        }, {
            p: [-140, 172, 27],
            s: [2, 24, 62],
            pe: 1,
            c: 15882585,
            t: 2
        }, {
            p: [-140, 172, 112],
            s: [2, 24, 16],
            pe: 1,
            c: 15882585,
            t: 2
        }, {
            p: [-126, 172, 121],
            s: [26, 24, 2],
            pe: 1,
            c: 15882585,
            t: 2
        }, {
            p: [-140, 172, 121],
            s: [2, 24, 2],
            c: 10329501,
            t: 2
        }, {
            p: [-126, 160, 58],
            s: [30, 12, 128],
            pe: 1,
            v: 1,
            t: 2
        }, {
            p: [-111, 164, 30],
            s: [2, 10, 4],
            i: 3,
            c: "#ffffff",
            t: 2
        }, {
            p: [-140, 172, 103],
            s: [2, 24, 2],
            l: 1,
            c: 10329501,
            t: 2
        }, {
            p: [-140, 172, 59],
            s: [2, 24, 2],
            l: 1,
            c: 10329501,
            t: 2
        }, {
            p: [-140, 172, -5],
            s: [2, 24, 2],
            c: 10329501,
            t: 2
        }, {
            p: [-112, 172, -5],
            s: [2, 24, 2],
            c: 10329501,
            t: 2
        }, {
            p: [-126, 172, -5],
            s: [26, 24, 2],
            pe: 1,
            c: 15882585,
            t: 2
        }, {
            p: [-138, 174, 50],
            s: [2, 22, 40],
            pe: 1,
            c: 15751513,
            t: 2
        }, {
            p: [-112, 172, 121],
            s: [2, 24, 2],
            c: 10329501,
            t: 2
        }, {
            p: [-138, 172, 71],
            s: [2, 24, 2],
            l: 1,
            c: 10329501,
            t: 2
        }, {
            p: [-112, 170, 58],
            s: [2, 2, 128],
            c: 10329501,
            t: 2
        }, {
            p: [-140, 170, 58],
            s: [2, 2, 128],
            c: 10329501,
            t: 2
        }, {
            p: [-141, 164, 87],
            s: [2, 10, 4],
            i: 3,
            c: "#ffffff",
            t: 2,
            d: 2
        }, {
            p: [-126, 164, -230],
            s: [6, 4, 124]
        }, {
            p: [-126, 172, -228],
            s: [26, 2, 124],
            c: 10329501,
            t: 2
        }, {
            p: [-126, 168, -166],
            s: [14, 4, 2]
        }, {
            p: [-140, 172, -165],
            s: [2, 24, 2],
            c: 10329501,
            t: 2
        }, {
            p: [-140, 172, -187],
            s: [2, 24, 42],
            pe: 1,
            c: 11657643,
            t: 2
        }, {
            p: [-140, 170, -228],
            s: [2, 2, 128],
            c: 10329501,
            t: 2
        }, {
            p: [-140, 172, -209],
            s: [2, 24, 2],
            l: 1,
            c: 10329501,
            t: 2
        }, {
            p: [-140, 172, -273],
            s: [2, 24, 34],
            pe: 1,
            c: 11264430,
            t: 2
        }, {
            p: [-140, 172, -291],
            s: [2, 24, 2],
            c: 10329501,
            t: 2
        }, {
            p: [-140, 172, -255],
            s: [2, 24, 2],
            l: 1,
            c: 10329501,
            t: 2
        }, {
            p: [-112, 172, -211],
            s: [2, 24, 2],
            l: 1,
            c: 10329501,
            t: 2
        }, {
            p: [-112, 172, -165],
            s: [2, 24, 2],
            c: 10329501,
            t: 2
        }, {
            p: [-112, 172, -273],
            s: [2, 24, 34],
            pe: 1,
            c: 11264427,
            t: 2
        }, {
            p: [-112, 172, -255],
            s: [2, 24, 2],
            l: 1,
            c: 10329501,
            t: 2
        }, {
            p: [-112, 172, -291],
            s: [2, 24, 2],
            c: 10329501,
            t: 2
        }, {
            p: [-126, 172, -165],
            s: [26, 24, 2],
            pe: 1,
            c: 11264427,
            t: 2
        }, {
            p: [-126, 172, -291],
            s: [26, 24, 2],
            pe: 1,
            c: 11264427,
            t: 2
        }, {
            p: [-126, 196, -228],
            s: [30, 6, 128],
            pe: 1,
            c: 10329501,
            t: 2
        }, {
            p: [-136, 162, -184],
            s: [2, 8, 8],
            r: [.79, 0, 0]
        }, {
            p: [-136, 162, -196],
            s: [2, 8, 8],
            r: [.7, 0, 0]
        }, {
            p: [-136, 162, -277],
            s: [2, 8, 8],
            r: [.7, 0, 0]
        }, {
            p: [-136, 162, -265],
            s: [2, 8, 8],
            r: [.7, 0, 0]
        }, {
            p: [-126, 164, -181],
            s: [24, 2, 2],
            c: 4868682
        }, {
            p: [-126, 164, -194],
            s: [24, 2, 2],
            c: 4868682
        }, {
            p: [-126, 164, -262],
            s: [24, 2, 2],
            c: 4868682
        }, {
            p: [-126, 164, -275],
            s: [24, 2, 2],
            c: 4868682
        }, {
            p: [-126, 130, -311],
            s: [56, 30, 26]
        }, {
            p: [-126, 159, -301],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -309],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -317],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 159, -325],
            s: [30, 2, 4],
            l: 1,
            t: 2
        }, {
            p: [-126, 132, 193],
            s: [106, 26, 12]
        }, {
            p: [-136, 159, 245],
            s: [2, 2, 18],
            l: 1,
            r: [.17, 0, 0]
        }, {
            p: [-136, 155, 257],
            s: [2, 2, 8],
            l: 1,
            r: [.69, 0, 0]
        }, {
            p: [-116, 162, 243],
            s: [2, 2, 18],
            l: 1,
            r: [-.18, 0, 0]
        }, {
            p: [-115, 166, 256],
            s: [2, 2, 8],
            l: 1,
            r: [-.55, .12, .33]
        }, {
            p: [-129, 156, 211],
            s: [30, 2, 4],
            l: 1,
            r: [0, .18, -.35],
            t: 2
        }, {
            p: [-133, 152, 226],
            s: [30, 2, 4],
            l: 1,
            r: [0, .18, -1.05],
            t: 2
        }, {
            p: [-156, 158, 189],
            s: [10, 6, 74]
        }, {
            p: [-156, 163, 158],
            s: [8, 48, 10],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-156, 211, 193],
            s: [10, 10, 82],
            pe: 1,
            t: 2,
            bo: 1
        }, {
            p: [-311, 132, -107],
            s: [101, 36, 148],
            c: "#645e58"
        }, {
            p: [-398, 132, -150],
            s: [74, 81, 70],
            c: "#f7b973"
        }, {
            p: [-527, 132, -58],
            s: [8, 40, 14],
            c: 16760180
        }, {
            p: [-527, 164, -77],
            s: [5, 8, 24],
            c: 16758132
        }, {
            p: [-527, 132, -95],
            s: [8, 40, 14],
            c: 16759936
        }, {
            p: [-536, 132, -66],
            s: [14, 32, 2],
            pe: 1,
            t: 2
        }, {
            p: [-536, 132, -87],
            s: [14, 32, 2],
            pe: 1,
            t: 2
        }, {
            p: [-500, 132, -149],
            s: [68, 72, 102],
            c: "#f7b973",
            bo: 1
        }, {
            p: [-479, 132, 77],
            s: [108, 38, 4],
            c: 16758390
        }, {
            p: [-313, 131, 23],
            s: [113, 4, 113],
            c: "#f7b973"
        }, {
            p: [-477, 131, -5],
            s: [104, 36, 92],
            c: "#645e58"
        }, {
            p: [-376, 132, 78],
            s: [14, 36, 6],
            c: 16758390
        }, {
            p: [-398, 162, 79],
            s: [30, 6, 4],
            c: 16758390
        }, {
            p: [-423, 132, 50],
            s: [4, 34, 54],
            c: 16758390
        }, {
            p: [-423, 132, -15],
            s: [4, 38, 76],
            c: 16758390
        }, {
            p: [-397, 167, 77],
            s: [56, 22, 4],
            c: 16758390
        }, {
            p: [-313, 132, 77],
            s: [112, 57, 4],
            c: 16758390
        }, {
            p: [-336, 133, -31],
            s: [66, 56, 4],
            c: 16758390
        }, {
            p: [-367, 133, -1],
            s: [4, 56, 56],
            c: 16758390
        }, {
            p: [-452, 132, -51],
            s: [54, 38, 4],
            c: "#ffb676"
        }, {
            p: [-531, 132, 26],
            s: [4, 38, 38],
            c: "#ffb676"
        }, {
            p: [-138, 174, -211],
            s: [2, 24, 22],
            pe: 1,
            c: 11657643,
            t: 2
        }, {
            p: [-114, 174, -256],
            s: [2, 22, 23],
            pe: 1,
            c: 11657643,
            t: 2
        }, {
            p: [-452, 132, -53],
            s: [4, 38, 2],
            i: 3,
            c: "#fffbfb",
            t: 2,
            d: 3
        }, {
            p: [-418, 132, 79],
            s: [10, 36, 4],
            c: 16758390
        }, {
            p: [-197, 132, -380],
            s: [84, 90, 158],
            bo: 1
        }, {
            p: [-125, 220, -347],
            s: [1845, 18, 108],
            c: "#4a4a4a",
            t: 5,
            bo: 1
        }, {
            p: [-286, 132, -304],
            s: [94, 50, 6],
            bo: 1
        }, {
            p: [-477, 129, -286],
            s: [270, 54, 7],
            c: "#ffffff",
            bo: 1
        }, {
            p: [-324, 50, 185],
            s: [60, 148, 66],
            c: 16563832
        }, {
            p: [-414, 66, 192],
            s: [60, 143, 60],
            c: 16563832
        }, {
            p: [-531, 132, 182],
            s: [116, 60, 60],
            c: 16563832,
            bo: 1
        }, {
            p: [-559, 192, 182],
            s: [60, 28, 60],
            c: 16563832,
            bo: 1
        }, {
            p: [-267, 71, 190],
            s: [54, 117, 44],
            c: "#fcbe78"
        }, {
            p: [-503, 81, 228],
            s: [60, 111, 32],
            c: 16563832,
            bo: 1
        }, {
            p: [-458, 135, 186],
            s: [30, 46, 36],
            c: 16563832
        }, {
            p: [-300, 192, 153],
            s: [4, 4, 8],
            l: 1,
            t: 2
        }, {
            p: [-643, 132, 172],
            s: [60, 72, 60],
            c: 16563832,
            bo: 1
        }, {
            p: [-642, 132, -8],
            s: [60, 82, 60],
            c: 16563832,
            bo: 1
        }, {
            p: [-602, 132, 202],
            s: [60, 56, 28],
            c: 16563832,
            bo: 1
        }, {
            p: [-666, 184, 102],
            s: [16, 10, 50],
            c: 16563832,
            bo: 1
        }, {
            p: [-666, 132, 135],
            s: [16, 62, 16],
            c: 16563832,
            bo: 1
        }, {
            p: [-666, 132, 47],
            s: [16, 62, 60],
            c: 16563832,
            bo: 1
        }, {
            p: [-666, 132, 115],
            s: [2, 54, 24],
            t: 2
        }, {
            p: [-665, 132, 90],
            s: [2, 54, 26],
            t: 2
        }, {
            p: [-666, 194, 136],
            s: [16, 6, 12],
            c: 16563832
        }, {
            p: [-666, 194, 69],
            s: [16, 4, 16],
            c: 16563832
        }, {
            p: [-666, 194, 94],
            s: [16, 4, 16],
            c: 16563832
        }, {
            p: [-666, 194, 118],
            s: [16, 6, 12],
            c: 16563832
        }, {
            p: [-666, 194, 46],
            s: [16, 6, 12],
            c: 16563832
        }, {
            p: [-666, 194, 28],
            s: [16, 4, 12],
            c: 16563832
        }, {
            p: [-623, 133, 61],
            s: [16, 6, 28],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-623, 132, 76],
            s: [16, 8, 2],
            c: 16563832
        }, {
            p: [-623, 132, 46],
            s: [16, 8, 2],
            c: 16563832
        }, {
            p: [-632, 132, 61],
            s: [2, 8, 32],
            c: 16563832
        }, {
            p: [-384, 75, 210],
            s: [60, 92, 4],
            c: 16563832
        }, {
            p: [-474, 132, 84],
            s: [98, 28, 16],
            c: 16758390
        }, {
            p: [-474, 160, 85],
            s: [100, 2, 18],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-497, 132, 98],
            s: [12, 12, 12],
            i: 8
        }, {
            p: [-485, 132, 98],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-485, 144, 98],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-567, 131, 162],
            s: [184, 2, 53],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-637, 131, 27],
            s: [59, 2, 109],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-642, 132, -105],
            s: [42, 72, 88],
            c: 16563832,
            bo: 1
        }, {
            p: [-642, 126, -184],
            s: [64, 73, 88],
            c: 16563832,
            bo: 1
        }, {
            p: [-658, 188, -184],
            s: [32, 42, 88],
            c: 16563832
        }, {
            p: [-657, 132, -49],
            s: [8, 67, 24],
            c: 16563832,
            bo: 1
        }, {
            p: [-111, 164, -228],
            s: [2, 11, 4],
            i: 3,
            c: "#fffbfb",
            t: 2
        }, {
            p: [-141, 164, -238],
            s: [2, 11, 4],
            i: 3,
            c: "#fffbfb",
            t: 2,
            d: 2
        }, {
            p: [-354, 132, -185],
            s: [4, 43, 2],
            i: 3,
            c: "#fffbfb",
            t: 2,
            d: 3
        }, {
            p: [-542, 132, -134],
            s: [16, 30, 61],
            c: 16760180
        }, {
            p: [-431, 167, -21],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-328, 168, -39],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-309, 168, -120],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-271, 132, -191],
            s: [12, 12, 12],
            i: 8
        }, {
            p: [-542, 161, -134],
            s: [18, 2, 63],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-573, 168, -19],
            s: [80, 8, 20],
            c: 16758390
        }, {
            p: [-604, 132, -19],
            s: [16, 36, 20],
            c: 16758390
        }, {
            p: [-541, 132, -19],
            s: [16, 36, 20],
            c: 16758390
        }, {
            p: [-559, 132, -11],
            s: [21, 36, 2],
            pe: 1,
            t: 2
        }, {
            p: [-586, 132, -25],
            s: [22, 36, 2],
            pe: 1,
            t: 2
        }, {
            p: [-539, 176, -19],
            s: [12, 4, 20],
            c: 16758390
        }, {
            p: [-607, 176, -19],
            s: [12, 4, 20],
            c: 16758390
        }, {
            p: [-582, 176, -19],
            s: [12, 2, 20],
            c: 16758390
        }, {
            p: [-561, 176, -19],
            s: [10, 4, 20],
            c: 16758390
        }, {
            p: [-87, 158, -200],
            s: [20, 2, 96],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-116, 160, -233],
            s: [2, 2, 191],
            l: 1
        }, {
            p: [-116, 162, 109],
            s: [2, 8, 8],
            r: [.87, 0, 0]
        }, {
            p: [-116, 162, 98],
            s: [2, 8, 8],
            r: [.7, 0, 0]
        }, {
            p: [-116, 162, 13],
            s: [2, 8, 8],
            r: [.7, 0, 0]
        }, {
            p: [-116, 162, 1],
            s: [2, 8, 8],
            r: [.7, 0, 0]
        }, {
            p: [-112, 172, 5],
            s: [2, 24, 18],
            pe: 1,
            c: 15882585,
            t: 2
        }, {
            p: [-112, 172, 121],
            s: [2, 24, 2],
            c: 10329501,
            t: 2
        }, {
            p: [-112, 172, 45],
            s: [2, 24, 2],
            l: 1,
            c: 10329501,
            t: 2
        }, {
            p: [-112, 172, 15],
            s: [2, 24, 2],
            l: 1,
            c: 10329501,
            t: 2
        }, {
            p: [-112, 172, -5],
            s: [2, 24, 2],
            c: 10329501,
            t: 2
        }, {
            p: [-112, 170, 58],
            s: [2, 2, 128],
            c: 10329501,
            t: 2
        }, {
            p: [-112, 172, -165],
            s: [2, 24, 2],
            c: 10329501,
            t: 2
        }, {
            p: [-112, 172, -188],
            s: [2, 24, 44],
            pe: 1,
            c: 11657643,
            t: 2
        }, {
            p: [-112, 170, -228],
            s: [2, 2, 128],
            c: 10329501,
            t: 2
        }, {
            p: [-112, 172, -291],
            s: [2, 24, 2],
            c: 10329501,
            t: 2
        }, {
            p: [-116, 162, -184],
            s: [2, 8, 8],
            r: [.7, 0, 0]
        }, {
            p: [-116, 162, -196],
            s: [2, 8, 8],
            r: [.7, 0, 0]
        }, {
            p: [-116, 162, -277],
            s: [2, 8, 8],
            r: [.7, 0, 0]
        }, {
            p: [-116, 162, -265],
            s: [2, 8, 8],
            r: [.7, 0, 0]
        }, {
            p: [-113, 133, -336],
            s: [170, 88, 24],
            c: 0,
            bo: 1
        }, {
            p: [-36, 132, -311],
            s: [124, 30, 26]
        }, {
            p: [-96, 158, 197],
            s: [10, 6, 90]
        }, {
            p: [-96, 163, 158],
            s: [8, 48, 10],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-126, 215, 162],
            s: [50, 6, 10],
            pe: 1,
            t: 2,
            bo: 1
        }, {
            p: [-125, 213, 224],
            s: [52, 6, 10],
            pe: 1,
            t: 2,
            bo: 1
        }, {
            p: [275, 132, -57],
            s: [8, 42, 14],
            c: 16760180
        }, {
            p: [275, 164, -76],
            s: [6, 10, 24],
            c: 16758132
        }, {
            p: [275, 132, -95],
            s: [8, 42, 14],
            c: 16759936
        }, {
            p: [284, 132, -65],
            s: [14, 32, 2],
            t: 2
        }, {
            p: [284, 132, -87],
            s: [14, 32, 2],
            t: 2
        }, {
            p: [185, 132, -180],
            s: [4, 42, 6],
            c: 16761987
        }, {
            p: [213, 132, -180],
            s: [4, 42, 6],
            c: 16762486
        }, {
            p: [199, 164, -180],
            s: [24, 10, 4],
            c: 16563059
        }, {
            p: [227, 132, 77],
            s: [108, 38, 4],
            c: 16758390
        }, {
            p: [225, 132, -4],
            s: [104, 34, 90],
            c: "#645e58"
        }, {
            p: [141, 162, 51],
            s: [57, 2, 52],
            c: 16758390
        }, {
            p: [124, 132, 79],
            s: [16, 36, 4],
            c: 16758390
        }, {
            p: [148, 162, 79],
            s: [32, 6, 4],
            c: 16758390
        }, {
            p: [171, 132, 51],
            s: [4, 33, 55],
            c: 16758390
        }, {
            p: [145, 162, 23],
            s: [56, 27, 4],
            c: 16758390
        }, {
            p: [145, 165, 77],
            s: [56, 24, 4],
            c: 16758390
        }, {
            p: [61, 132, 77],
            s: [112, 57, 4],
            c: 16758390
        }, {
            p: [84, 132, -31],
            s: [66, 57, 4],
            c: 16758390
        }, {
            p: [7, 132, 37],
            s: [4, 57, 76],
            c: "#ffb676"
        }, {
            p: [115, 132, -2],
            s: [4, 57, 54],
            c: 16758390
        }, {
            p: [279, 132, 26],
            s: [4, 38, 38],
            c: 16758390
        }, {
            p: [197, 132, -53],
            s: [4, 38, 2],
            i: 3,
            c: "#fffbfb",
            t: 2,
            d: 3
        }, {
            p: [254, 132, -23],
            s: [54, 80, 60],
            c: "#ffb676"
        }, {
            p: [165, 132, 79],
            s: [11, 30, 4],
            c: 16758390
        }, {
            p: [-53, 130, -367],
            s: [84, 90, 132],
            bo: 1
        }, {
            p: [209, 114, -294],
            s: [14, 128, 26],
            bo: 1
        }, {
            p: [226, 132, -289],
            s: [274, 49, 11],
            bo: 1
        }, {
            p: [34, 132, -303],
            s: [90, 49, 4],
            bo: 1
        }, {
            p: [72, 66, 182],
            s: [60, 132, 60],
            c: 16563832
        }, {
            p: [162, 54, 192],
            s: [60, 158, 60],
            c: 16563832
        }, {
            p: [279, 132, 182],
            s: [116, 74, 60],
            c: "#fcbe78",
            bo: 1
        }, {
            p: [15, 82, 190],
            s: [54, 106, 44],
            c: 16563832
        }, {
            p: [251, 81, 276],
            s: [60, 110, 128],
            c: 16563832,
            bo: 1
        }, {
            p: [206, 135, 186],
            s: [30, 52, 36],
            c: 16563832
        }, {
            p: [95, 190, 153],
            s: [4, 4, 8],
            l: 1,
            t: 2
        }, {
            p: [391, 132, -8],
            s: [62, 93, 60],
            c: 16563832,
            bo: 1
        }, {
            p: [350, 132, 202],
            s: [60, 56, 28],
            c: 16563832,
            bo: 1
        }, {
            p: [414, 184, 102],
            s: [16, 10, 50],
            c: 16563832,
            bo: 1
        }, {
            p: [414, 132, 135],
            s: [16, 62, 16],
            c: 16563832,
            bo: 1
        }, {
            p: [414, 132, 47],
            s: [16, 62, 60],
            c: 16563832,
            bo: 1
        }, {
            p: [414, 132, 115],
            s: [2, 54, 24],
            t: 2
        }, {
            p: [413, 132, 90],
            s: [2, 54, 26],
            t: 2
        }, {
            p: [414, 194, 136],
            s: [16, 6, 12],
            c: 16563832
        }, {
            p: [414, 194, 108],
            s: [16, 4, 16],
            c: 16563832
        }, {
            p: [414, 194, 85],
            s: [16, 4, 12],
            c: 16563832
        }, {
            p: [414, 194, 60],
            s: [16, 6, 18],
            c: 16563832
        }, {
            p: [414, 194, 28],
            s: [16, 6, 12],
            c: 16563832
        }, {
            p: [371, 132, 61],
            s: [16, 7, 28],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [371, 132, 75],
            s: [14, 8, 4],
            c: 16563832
        }, {
            p: [371, 132, 47],
            s: [14, 8, 4],
            c: 16563832
        }, {
            p: [362, 132, 61],
            s: [4, 8, 32],
            c: 16563832
        }, {
            p: [380, 132, 61],
            s: [4, 8, 32],
            c: 16563832
        }, {
            p: [126, 68, 210],
            s: [48, 103, 4],
            c: 16563832
        }, {
            p: [221, 132, 85],
            s: [98, 28, 16],
            c: 16758390
        }, {
            p: [222, 160, 85],
            s: [100, 2, 18],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [245, 132, 99],
            s: [12, 12, 12],
            i: 8
        }, {
            p: [233, 132, 99],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [233, 144, 99],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [390, 126, -184],
            s: [64, 73, 88],
            c: 16563832,
            bo: 1
        }, {
            p: [406, 201, -184],
            s: [32, 32, 81],
            c: 16563832
        }, {
            p: [405, 132, -52],
            s: [8, 55, 30],
            c: 16563832,
            bo: 1
        }, {
            p: [104, 132, -185],
            s: [4, 42, 2],
            i: 3,
            c: "#fffbfb",
            t: 2,
            d: 3
        }, {
            p: [290, 132, -134],
            s: [16, 30, 63],
            c: 16760180
        }, {
            p: [166, 132, -9],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [234, 132, -59],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [179, 166, -42],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [290, 161, -134],
            s: [18, 2, 64],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-614, 132, 61],
            s: [2, 8, 32],
            c: 16563832
        }, {
            p: [-327, 132, 177],
            s: [114, 7, 68],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-532, 132, 149],
            s: [108, 8, 6],
            c: "#8c9875",
            t: 8
        }, {
            p: [-376, 133, -26],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-251, 133, -146],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-255, 180, -20],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [-715, 132, -151],
            s: [72, 88, 98],
            l: 1,
            c: 13475433
        }, {
            p: [-725, 136, 12],
            s: [72, 82, 88],
            l: 1,
            c: 16563832
        }, {
            p: [-768, 132, -28],
            s: [72, 110, 88],
            l: 1,
            c: 15909515
        }, {
            p: [-740, 132, -88],
            s: [2, 70, 36],
            l: 1,
            c: 16563832
        }, {
            p: [-725, 80, 183],
            s: [72, 132, 88],
            l: 1,
            c: 16563832
        }, {
            p: [-818, 78, 198],
            s: [72, 154, 88],
            l: 1,
            c: 16563832
        }, {
            p: [-901, 132, 178],
            s: [72, 68, 88],
            l: 1,
            c: 16563832
        }, {
            p: [-754, 132, -231],
            s: [68, 106, 100],
            l: 1,
            c: 15771994
        }, {
            p: [-884, 132, 96],
            s: [72, 86, 174],
            l: 1,
            c: 16563832
        }, {
            p: [-911, 123, -141],
            s: [72, 110, 148],
            l: 1,
            c: 16563832
        }, {
            p: [-913, 132, 165],
            s: [24, 154, 16],
            l: 1,
            c: 16567672
        }, {
            p: [-913, 276, 165],
            s: [30, 14, 22],
            l: 1,
            c: 16567672
        }, {
            p: [-913, 290, 165],
            s: [14, 26, 12],
            l: 1,
            c: 16567672
        }, {
            p: [-913, 316, 165],
            s: [16, 12, 20],
            l: 1,
            c: 16567672
        }, {
            p: [-913, 328, 165],
            s: [12, 4, 16],
            l: 1,
            c: 16567672
        }, {
            p: [-913, 332, 165],
            s: [10, 4, 14],
            l: 1,
            c: 16567672
        }, {
            p: [-913, 336, 165],
            s: [8, 4, 12],
            l: 1,
            c: 16567672
        }, {
            p: [-913, 344, 165],
            s: [2, 10, 2],
            l: 1,
            c: 16567672
        }, {
            p: [-913, 340, 165],
            s: [6, 4, 10],
            l: 1,
            c: 16567672
        }, {
            p: [-899, 218, 86],
            s: [72, 16, 112],
            l: 1,
            c: 16563832
        }, {
            p: [-899, 234, 85],
            s: [54, 16, 94],
            l: 1,
            c: 16563832
        }, {
            p: [-899, 250, 83],
            s: [38, 16, 62],
            l: 1,
            c: 16563832
        }, {
            p: [-913, 132, 2],
            s: [24, 154, 16],
            l: 1,
            c: 16567672
        }, {
            p: [-913, 276, 2],
            s: [30, 14, 22],
            l: 1,
            c: 16567672
        }, {
            p: [-913, 290, 2],
            s: [14, 26, 12],
            l: 1,
            c: 16567672
        }, {
            p: [-913, 316, 2],
            s: [16, 12, 20],
            l: 1,
            c: 16567672
        }, {
            p: [-913, 328, 2],
            s: [12, 4, 16],
            l: 1,
            c: 16567672
        }, {
            p: [-913, 332, 2],
            s: [10, 4, 14],
            l: 1,
            c: 16567672
        }, {
            p: [-913, 336, 2],
            s: [8, 4, 12],
            l: 1,
            c: 16567672
        }, {
            p: [-913, 340, 2],
            s: [6, 4, 10],
            l: 1,
            c: 16567672
        }, {
            p: [-913, 344, 2],
            s: [2, 10, 2],
            l: 1,
            c: 16567672
        }, {
            p: [540, 80, 191],
            s: [72, 160, 60],
            l: 1,
            c: 15909515
        }, {
            p: [493, 81, 180],
            s: [72, 124, 60],
            l: 1,
            c: 15909515
        }, {
            p: [488, 98, -85],
            s: [44, 126, 36],
            l: 1,
            c: 15909515
        }, {
            p: [488, 98, -13],
            s: [44, 104, 68],
            l: 1,
            c: 15909515
        }, {
            p: [573, 98, 6],
            s: [44, 126, 36],
            l: 1,
            c: 15909515
        }, {
            p: [604, 129, -30],
            s: [72, 110, 60],
            l: 1,
            c: 15909515
        }, {
            p: [636, 72, 180],
            s: [72, 144, 60],
            l: 1,
            c: 15909515
        }, {
            p: [676, 112, 171],
            s: [72, 148, 34],
            l: 1,
            c: 15909515
        }, {
            p: [777, 106, 114],
            s: [72, 92, 76],
            l: 1,
            c: 15909515
        }, {
            p: [514, 98, -180],
            s: [72, 126, 114],
            l: 1,
            c: 15909515
        }, {
            p: [540, 114, -226],
            s: [44, 126, 62],
            l: 1,
            c: 15909515
        }, {
            p: [604, 143, -135],
            s: [72, 188, 60],
            l: 1,
            c: 15909515
        }, {
            p: [797, 143, -63],
            s: [72, 134, 60],
            l: 1,
            c: 15909515
        }, {
            p: [730, 139, -191],
            s: [116, 124, 92],
            l: 1,
            c: 15909515
        }, {
            p: [765, 106, 173],
            s: [108, 104, 52],
            l: 1,
            c: 15909515
        }, {
            p: [-279, 158, -191],
            s: [35, 2, 15],
            r: [-.17, 0, 0],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-295, 132, -197],
            s: [2, 28, 2],
            pe: 1,
            t: 2
        }, {
            p: [-419, 163, -44],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [-495, 133, -96],
            s: [50, 8, 6],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-613, 167, -102],
            s: [18, 2, 74],
            l: 1,
            r: [0, 0, -.17],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-606, 131, -137],
            s: [2, 38, 2],
            t: 2
        }, {
            p: [-606, 131, -67],
            s: [2, 38, 2],
            t: 2
        }, {
            p: [-473, 164, -75],
            s: [4, 4, 48],
            pe: 1,
            t: 2
        }, {
            p: [-452, 166, -120],
            s: [34, 4, 4],
            pe: 1,
            t: 2
        }, {
            p: [-452, 166, -140],
            s: [34, 4, 4],
            pe: 1,
            t: 2
        }, {
            p: [-126, 132, 38],
            s: [138, 26, 4]
        }, {
            p: [-126, 132, -150],
            s: [106, 26, 4]
        }, {
            p: [-126, 132, -10],
            s: [106, 26, 4]
        }, {
            p: [-126, 132, -198],
            s: [106, 26, 4]
        }, {
            p: [-126, 170, 122],
            s: [4, 34, 2],
            i: 3,
            c: "#ff5151",
            t: 2,
            d: 1
        }, {
            p: [-126, 170, -292],
            s: [4, 34, 2],
            i: 3,
            c: "#ff5151",
            t: 2,
            d: 3
        }, {
            p: [279, 132, 60],
            s: [4, 2, 30],
            c: 16758390
        }, {
            p: [-165, 79, 370],
            s: [14, 34, 12],
            r: [0, 0, .17]
        }, {
            p: [-164, 75, 661],
            s: [14, 60, 12],
            l: 1,
            r: [0, 0, -.18]
        }, {
            p: [-164, 75, 1084],
            s: [14, 60, 12],
            l: 1,
            r: [0, 0, .17]
        }, {
            p: [-82, 77, 371],
            s: [14, 60, 12],
            r: [.35, 0, .17]
        }, {
            p: [-82, 72, 673],
            s: [14, 60, 12],
            l: 1,
            r: [-.18, -.06, .01]
        }, {
            p: [-110, 89, 1076],
            s: [14, 60, 12],
            r: [0, 0, -.35]
        }, {
            p: [-80, 124, 666],
            s: [10, 10, 70],
            l: 1,
            r: [.17, 0, 0]
        }, {
            p: [-133, 120, 384],
            s: [100, 10, 12],
            r: [0, -.35, .17]
        }, {
            p: [-117, 118, 669],
            s: [100, 10, 12],
            l: 1,
            r: [.12, -.02, -.16]
        }, {
            p: [-165, 79, 1603],
            s: [14, 60, 12],
            l: 1,
            r: [-.17, -.03, .17]
        }, {
            p: [-445, 131, 58],
            s: [40, 36, 34],
            c: "#645e58"
        }, {
            p: [-871, -100, -182],
            s: [396, 232, 764],
            l: 1,
            t: 1
        }, {
            p: [686, -100, -59],
            s: [526, 232, 518],
            l: 1,
            t: 1
        }, {
            p: [61, 131, 23],
            s: [104, 54, 104],
            c: "#645e58"
        }, {
            p: [-450, 168, -178],
            s: [24, 6, 6],
            c: "#f7b973"
        }, {
            p: [60, 132, -107],
            s: [102, 36, 148],
            c: "#645e58"
        }, {
            p: [23, 132, -183],
            s: [28, 60, 4],
            c: "#ffb676",
            bo: 1
        }, {
            p: [148, 132, -150],
            s: [74, 77, 70],
            c: "#ffb676"
        }, {
            p: [-323, 132, -183],
            s: [16, 46, 4],
            c: 16234867
        }, {
            p: [7, 131, -172],
            s: [4, 63, 26],
            c: "#ffb676",
            bo: 1
        }, {
            p: [200, 132, -51],
            s: [54, 38, 4],
            c: "#ffb676"
        }, {
            p: [171, 132, -16],
            s: [4, 38, 74],
            c: 16758390
        }, {
            p: [-126, 132, 147],
            s: [146, 28, 10]
        }, {
            p: [-112, 172, 83],
            s: [2, 24, 74],
            pe: 1,
            c: 15882585,
            t: 2
        }, {
            p: [-5, 85, 408],
            s: [3370, 13, 3882],
            l: 1,
            c: "#355184",
            o: .7000000000000001,
            t: 5
        }, {
            p: [-126, 172, 58],
            s: [26, 2, 124],
            c: 10329501,
            t: 2
        }, {
            p: [574, 331, -154],
            s: [12, 4, 22],
            l: 1,
            c: 15909515
        }, {
            p: [571, 331, -129],
            s: [6, 2, 12],
            l: 1,
            c: 15909515
        }, {
            p: [574, 331, -110],
            s: [12, 4, 10],
            l: 1,
            c: 15909515
        }, {
            p: [601, 331, -161],
            s: [22, 2, 8],
            l: 1,
            c: 15909515
        }, {
            p: [601, 331, -109],
            s: [20, 4, 8],
            l: 1,
            c: 15909515
        }, {
            p: [568, 285, -135],
            s: [2, 22, 8],
            l: 1,
            c: 0
        }, {
            p: [-126, 196, 58],
            s: [30, 6, 128],
            pe: 1,
            c: 10329501,
            t: 2
        }, {
            p: [86, 114, -293],
            s: [14, 128, 26],
            bo: 1
        }, {
            p: [363, 114, -286],
            s: [14, 128, 26]
        }, {
            p: [-339, 81, -392],
            s: [14, 160, 26]
        }, {
            p: [-614, 114, -293],
            s: [14, 128, 26]
        }, {
            p: [538, 114, -286],
            s: [14, 128, 26]
        }, {
            p: [363, 80, -407],
            s: [14, 162, 26]
        }, {
            p: [205, 80, -407],
            s: [14, 162, 26]
        }, {
            p: [89, 80, -407],
            s: [14, 162, 26]
        }, {
            p: [537, 80, -407],
            s: [14, 162, 26]
        }, {
            p: [-474, 114, -293],
            s: [14, 128, 26],
            bo: 1
        }, {
            p: [-766, 114, -293],
            s: [14, 128, 26]
        }, {
            p: [-474, 81, -393],
            s: [14, 160, 26]
        }, {
            p: [-614, 82, -393],
            s: [14, 160, 26]
        }, {
            p: [-766, 81, -393],
            s: [14, 160, 26]
        }, {
            p: [-339, 114, -293],
            s: [14, 128, 26],
            bo: 1
        }, {
            p: [289, 94, -486],
            s: [94, 260, 60],
            c: 15909515
        }, {
            p: [-17, 310, -456],
            s: [14, 6, 22],
            l: 1,
            c: 15116643
        }, {
            p: [141, 94, -500],
            s: [236, 103, 60],
            c: 15909515
        }, {
            p: [433, 82, -490],
            s: [568, 98, 100],
            c: 15771994
        }, {
            p: [543, 94, -518],
            s: [172, 184, 60],
            l: 1,
            c: 15909515
        }, {
            p: [504, 132, -284],
            s: [274, 56, 2],
            t: 2
        }, {
            p: [-265, 94, -500],
            s: [164, 114, 60],
            c: 15909515
        }, {
            p: [-370, 94, -486],
            s: [70, 206, 82],
            c: 15116643
        }, {
            p: [-615, 94, -486],
            s: [470, 84, 64],
            c: 14787162
        }, {
            p: [-851, 123, -466],
            s: [72, 110, 88],
            l: 1,
            c: 16563832
        }, {
            p: [-817, 123, -358],
            s: [72, 70, 154],
            l: 1,
            c: 16563832
        }, {
            p: [-570, 123, -515],
            s: [114, 78, 70],
            l: 1,
            c: 16563832
        }, {
            p: [82, 94, -845],
            s: [104, 216, 82],
            l: 1,
            c: 15116643
        }, {
            p: [-433, 94, -757],
            s: [170, 172, 82],
            l: 1,
            c: 14132073
        }, {
            p: [-781, 94, -1163],
            s: [104, 216, 82],
            l: 1,
            c: 15116643
        }, {
            p: [-1343, 94, -990],
            s: [104, 216, 82],
            l: 1,
            c: 15116643
        }, {
            p: [634, 331, -113],
            s: [12, 4, 16],
            l: 1,
            c: 15909515
        }, {
            p: [634, 331, -157],
            s: [12, 4, 16],
            l: 1,
            c: 15909515
        }, {
            p: [488, 218, -13],
            s: [44, 2, 68],
            l: 1,
            t: 2
        }, {
            p: [469, 199, -44],
            s: [2, 24, 2],
            l: 1,
            t: 2
        }, {
            p: [469, 199, 18],
            s: [2, 26, 2],
            l: 1,
            t: 2
        }, {
            p: [507, 199, 18],
            s: [2, 26, 2],
            l: 1,
            t: 2
        }, {
            p: [507, 199, -44],
            s: [2, 26, 2],
            l: 1,
            t: 2
        }, {
            p: [504, 215, 183],
            s: [2, 14, 8],
            l: 1,
            c: 0
        }, {
            p: [554, 215, 161],
            s: [6, 14, 2],
            l: 1,
            c: 0
        }, {
            p: [761, 242, -62],
            s: [2, 20, 8],
            l: 1,
            c: 0
        }, {
            p: [770, 277, -84],
            s: [18, 6, 18],
            l: 1,
            c: 15909515
        }, {
            p: [764, 277, -62],
            s: [6, 4, 18],
            l: 1,
            c: 15909515
        }, {
            p: [770, 277, -39],
            s: [18, 6, 12],
            l: 1,
            c: 15909515
        }, {
            p: [797, 277, -37],
            s: [18, 6, 8],
            l: 1,
            c: 15909515
        }, {
            p: [797, 277, -89],
            s: [18, 6, 8],
            l: 1,
            c: 15909515
        }, {
            p: [513, 240, 215],
            s: [18, 6, 12],
            l: 1,
            c: 15909515
        }, {
            p: [507, 240, 170],
            s: [6, 4, 18],
            l: 1,
            c: 15909515
        }, {
            p: [507, 240, 195],
            s: [6, 2, 18],
            l: 1,
            c: 15909515
        }, {
            p: [565, 240, 166],
            s: [22, 6, 10],
            l: 1,
            c: 15909515
        }, {
            p: [533, 240, 165],
            s: [18, 4, 8],
            l: 1,
            c: 15909515
        }, {
            p: [651, 260, 159],
            s: [22, 6, 10],
            l: 1,
            c: 15909515
        }, {
            p: [701, 260, 183],
            s: [22, 6, 10],
            l: 1,
            c: 15909515
        }, {
            p: [648, 260, 183],
            s: [16, 4, 10],
            l: 1,
            c: 15909515
        }, {
            p: [704, 260, 159],
            s: [16, 4, 10],
            l: 1,
            c: 15909515
        }, {
            p: [678, 260, 159],
            s: [16, 2, 10],
            l: 1,
            c: 15909515
        }, {
            p: [673, 260, 184],
            s: [16, 4, 10],
            l: 1,
            c: 15909515
        }, {
            p: [11, 94, -486],
            s: [70, 216, 82],
            c: 15116643
        }, {
            p: [41, 310, -516],
            s: [10, 6, 22],
            l: 1,
            c: 15116643
        }, {
            p: [36, 310, -450],
            s: [20, 6, 10],
            l: 1,
            c: 15116643
        }, {
            p: [9, 310, -450],
            s: [20, 4, 10],
            l: 1,
            c: 15116643
        }, {
            p: [-19, 310, -516],
            s: [10, 6, 20],
            l: 1,
            c: 15116643
        }, {
            p: [-19, 310, -487],
            s: [10, 4, 20],
            l: 1,
            c: 15116643
        }, {
            p: [41, 310, -483],
            s: [10, 4, 20],
            l: 1,
            c: 15116643
        }, {
            p: [10, 269, -445],
            s: [8, 22, 2],
            l: 1,
            c: 0
        }, {
            p: [253, 354, -461],
            s: [22, 6, 10],
            l: 1,
            c: 15909515
        }, {
            p: [325, 354, -461],
            s: [22, 6, 10],
            l: 1,
            c: 15909515
        }, {
            p: [290, 354, -461],
            s: [22, 4, 10],
            l: 1,
            c: 15909515
        }, {
            p: [247, 354, -484],
            s: [10, 4, 18],
            l: 1,
            c: 15909515
        }, {
            p: [331, 354, -484],
            s: [10, 4, 18],
            l: 1,
            c: 15909515
        }, {
            p: [325, 354, -511],
            s: [22, 6, 10],
            l: 1,
            c: 15909515
        }, {
            p: [253, 354, -511],
            s: [22, 6, 10],
            l: 1,
            c: 15909515
        }, {
            p: [242, 301, -483],
            s: [2, 22, 8],
            l: 1,
            c: 0
        }, {
            p: [-395, 300, -450],
            s: [20, 4, 10],
            l: 1,
            c: 15116643
        }, {
            p: [-400, 300, -487],
            s: [10, 4, 20],
            l: 1,
            c: 15116643
        }, {
            p: [-396, 300, -522],
            s: [18, 6, 10],
            l: 1,
            c: 15116643
        }, {
            p: [-340, 300, -519],
            s: [10, 4, 16],
            l: 1,
            c: 15116643
        }, {
            p: [-340, 300, -453],
            s: [10, 4, 16],
            l: 1,
            c: 15116643
        }, {
            p: [-365, 300, -450],
            s: [20, 2, 10],
            l: 1,
            c: 15116643
        }, {
            p: [-340, 300, -487],
            s: [10, 6, 20],
            l: 1,
            c: 15116643
        }, {
            p: [287, 300, -456],
            s: [8, 22, 2],
            l: 1,
            c: 0
        }, {
            p: [-1298, 310, -961],
            s: [14, 6, 24],
            l: 1,
            c: 15116643
        }, {
            p: [-1298, 310, -1019],
            s: [14, 6, 24],
            l: 1,
            c: 15116643
        }, {
            p: [-1388, 310, -961],
            s: [14, 6, 24],
            l: 1,
            c: 15116643
        }, {
            p: [-1326, 310, -956],
            s: [22, 4, 14],
            l: 1,
            c: 15116643
        }, {
            p: [-1361, 310, -956],
            s: [22, 4, 14],
            l: 1,
            c: 15116643
        }, {
            p: [-1298, 310, -990],
            s: [14, 4, 14],
            l: 1,
            c: 15116643
        }, {
            p: [-823, 310, -1129],
            s: [20, 8, 14],
            l: 1,
            c: 15116643
        }, {
            p: [-739, 310, -1129],
            s: [20, 4, 14],
            l: 1,
            c: 15116643
        }, {
            p: [-782, 310, -1129],
            s: [20, 2, 14],
            l: 1,
            c: 15116643
        }, {
            p: [-827, 310, -1195],
            s: [12, 4, 18],
            l: 1,
            c: 15116643
        }, {
            p: [-735, 310, -1163],
            s: [12, 4, 18],
            l: 1,
            c: 15116643
        }, {
            p: [-827, 310, -1163],
            s: [12, 4, 18],
            l: 1,
            c: 15116643
        }, {
            p: [-735, 310, -1195],
            s: [12, 4, 18],
            l: 1,
            c: 15116643
        }, {
            p: [-371, 255, -445],
            s: [8, 22, 2],
            l: 1,
            c: 0
        }, {
            p: [-784, 132, -192],
            s: [54, 128, 50],
            l: 1,
            c: 15771994
        }, {
            p: [-805, 260, -171],
            s: [12, 6, 8],
            l: 1,
            c: 15771994
        }, {
            p: [-784, 260, -171],
            s: [12, 2, 8],
            l: 1,
            c: 15771994
        }, {
            p: [-763, 260, -173],
            s: [12, 4, 12],
            l: 1,
            c: 15771994
        }, {
            p: [-761, 260, -211],
            s: [8, 4, 12],
            l: 1,
            c: 15771994
        }, {
            p: [-761, 260, -193],
            s: [8, 2, 12],
            l: 1,
            c: 15771994
        }, {
            p: [-780, 260, -213],
            s: [12, 4, 8],
            l: 1,
            c: 15771994
        }, {
            p: [-732, 215, -52],
            s: [2, 14, 8],
            l: 1,
            c: 0
        }, {
            p: [-720, 210, -217],
            s: [2, 14, 8],
            l: 1,
            c: 0
        }, {
            p: [-720, 210, -262],
            s: [2, 14, 8],
            l: 1,
            c: 0
        }, {
            p: [-335, 253, -483],
            s: [2, 22, 8],
            l: 1,
            c: 0
        }, {
            p: [-848, 192, 55],
            s: [2, 14, 8],
            l: 1,
            c: 0
        }, {
            p: [-848, 192, 123],
            s: [2, 14, 8],
            l: 1,
            c: 0
        }, {
            p: [-783, 220, -167],
            s: [6, 16, 2],
            l: 1,
            c: 0
        }, {
            p: [-784, 132, 208],
            s: [54, 134, 50],
            l: 1,
            c: 15771994
        }, {
            p: [-761, 266, 189],
            s: [8, 4, 12],
            l: 1,
            c: 15771994
        }, {
            p: [-761, 266, 227],
            s: [8, 4, 12],
            l: 1,
            c: 15771994
        }, {
            p: [-761, 266, 209],
            s: [8, 2, 12],
            l: 1,
            c: 15771994
        }, {
            p: [-804, 266, 187],
            s: [14, 4, 8],
            l: 1,
            c: 15771994
        }, {
            p: [-780, 266, 187],
            s: [14, 2, 8],
            l: 1,
            c: 15771994
        }, {
            p: [-757, 231, 209],
            s: [2, 14, 4],
            l: 1,
            c: 0
        }, {
            p: [-736, 242, 8],
            s: [8, 4, 16],
            l: 1,
            c: 15909515
        }, {
            p: [-736, 242, -64],
            s: [8, 6, 16],
            l: 1,
            c: 15909515
        }, {
            p: [-736, 242, -16],
            s: [8, 2, 16],
            l: 1,
            c: 15909515
        }, {
            p: [-736, 242, -39],
            s: [8, 4, 16],
            l: 1,
            c: 15909515
        }, {
            p: [-778, 242, 12],
            s: [14, 2, 8],
            l: 1,
            c: 15909515
        }, {
            p: [-755, 242, 12],
            s: [14, 4, 8],
            l: 1,
            c: 15909515
        }, {
            p: [-780, 242, -68],
            s: [14, 4, 8],
            l: 1,
            c: 15909515
        }, {
            p: [-757, 242, -68],
            s: [14, 2, 8],
            l: 1,
            c: 15909515
        }, {
            p: [-534, 220, 160],
            s: [10, 4, 16],
            l: 1,
            c: 16563832
        }, {
            p: [-534, 220, 204],
            s: [10, 4, 16],
            l: 1,
            c: 16563832
        }, {
            p: [-581, 220, 160],
            s: [16, 6, 16],
            l: 1,
            c: 16563832
        }, {
            p: [-584, 220, 204],
            s: [10, 4, 16],
            l: 1,
            c: 16563832
        }, {
            p: [-531, 220, 185],
            s: [4, 2, 12],
            l: 1,
            c: 16563832
        }, {
            p: [-587, 220, 180],
            s: [4, 4, 16],
            l: 1,
            c: 16563832
        }, {
            p: [-557, 220, 154],
            s: [14, 4, 4],
            l: 1,
            c: 16563832
        }, {
            p: [-560, 220, 210],
            s: [14, 4, 4],
            l: 1,
            c: 16563832
        }, {
            p: [674, 230, 154],
            s: [6, 14, 2],
            l: 1,
            c: 0
        }, {
            p: [-476, 204, -107],
            s: [20, 4, 18],
            l: 1,
            c: 16563832
        }, {
            p: [-473, 204, -191],
            s: [14, 4, 18],
            l: 1,
            c: 16563832
        }, {
            p: [-524, 204, -191],
            s: [20, 4, 18],
            l: 1,
            c: 16563832
        }, {
            p: [-527, 204, -107],
            s: [14, 4, 18],
            l: 1,
            c: 16563832
        }, {
            p: [-531, 204, -132],
            s: [6, 2, 18],
            l: 1,
            c: 16563832
        }, {
            p: [-469, 204, -131],
            s: [6, 2, 14],
            l: 1,
            c: 16563832
        }, {
            p: [-498, 204, -197],
            s: [20, 2, 6],
            l: 1,
            c: 16563832
        }, {
            p: [-503, 204, -101],
            s: [16, 2, 6],
            l: 1,
            c: 16563832
        }, {
            p: [540, 258, -226],
            s: [44, 2, 62],
            l: 1,
            t: 2
        }, {
            p: [540, 283, -226],
            s: [44, 2, 62],
            l: 1,
            t: 2
        }, {
            p: [520, 237, -197],
            s: [2, 52, 2],
            l: 1,
            t: 2
        }, {
            p: [520, 237, -255],
            s: [2, 50, 2],
            l: 1,
            t: 2
        }, {
            p: [560, 237, -197],
            s: [2, 50, 2],
            l: 1,
            t: 2
        }, {
            p: [560, 237, -255],
            s: [2, 52, 2],
            l: 1,
            t: 2
        }, {
            p: [766, 226, 173],
            s: [108, 2, 52],
            l: 1,
            t: 2
        }, {
            p: [766, 252, 173],
            s: [108, 2, 52],
            l: 1,
            t: 2
        }, {
            p: [817, 210, 149],
            s: [2, 46, 2],
            l: 1,
            t: 2
        }, {
            p: [714, 210, 149],
            s: [2, 46, 2],
            l: 1,
            t: 2
        }, {
            p: [818, 210, 197],
            s: [2, 46, 2],
            l: 1,
            t: 2
        }, {
            p: [714, 210, 197],
            s: [2, 46, 2],
            l: 1,
            t: 2
        }, {
            p: [226, 81, 383],
            s: [4, 32, 4],
            l: 1,
            t: 2
        }, {
            p: [276, 81, 373],
            s: [4, 34, 4],
            l: 1,
            r: [-.17, 0, 0],
            t: 2
        }, {
            p: [251, 106, 387],
            s: [52, 2, 110],
            l: 1,
            t: 2
        }, {
            p: [226, 81, 348],
            s: [4, 34, 4],
            l: 1,
            r: [.17, 0, 0],
            t: 2
        }, {
            p: [226, 81, 428],
            s: [4, 34, 4],
            l: 1,
            r: [-.17, 0, 0],
            t: 2
        }, {
            p: [267, 81, 463],
            s: [4, 20, 4],
            l: 1,
            r: [.17, 0, .17],
            t: 2
        }, {
            p: [226, 81, 463],
            s: [4, 20, 4],
            l: 1,
            t: 2
        }, {
            p: [220, 80, 498],
            s: [4, 10, 4],
            l: 1,
            r: [0, 0, .17],
            t: 2
        }, {
            p: [258, 106, 449],
            s: [24, 2, 14],
            l: 1,
            t: 2
        }, {
            p: [276, 81, 429],
            s: [4, 32, 4],
            l: 1,
            t: 2
        }, {
            p: [-125, 244, -294],
            s: [2064, 4, 2],
            l: 1
        }, {
            p: [-125, 238, -294],
            s: [4, 6, 2],
            l: 1
        }, {
            p: [-214, 238, -294],
            s: [4, 6, 2],
            l: 1
        }, {
            p: [-41, 238, -294],
            s: [4, 6, 2],
            l: 1
        }, {
            p: [-283, 238, -294],
            s: [4, 6, 2],
            l: 1
        }, {
            p: [47, 238, -294],
            s: [4, 6, 2],
            l: 1
        }, {
            p: [153, 238, -294],
            s: [4, 6, 2],
            l: 1
        }, {
            p: [289, 238, -294],
            s: [4, 6, 2],
            l: 1
        }, {
            p: [459, 238, -294],
            s: [4, 6, 2],
            l: 1
        }, {
            p: [-406, 238, -294],
            s: [4, 6, 2],
            l: 1
        }, {
            p: [-540, 238, -294],
            s: [4, 6, 2],
            l: 1
        }, {
            p: [-681, 238, -294],
            s: [4, 6, 2],
            l: 1
        }, {
            p: [-473, 204, -159],
            s: [14, 3, 18],
            l: 1,
            c: 16563832
        }, {
            p: [-527, 204, -159],
            s: [14, 3, 18],
            l: 1,
            c: 16563832
        }, {
            p: [-126, 160, -228],
            s: [30, 12, 128],
            pe: 1,
            v: 1,
            t: 2
        }, {
            p: [-267, 188, 190],
            s: [55, 2, 45],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [-324, 198, 185],
            s: [62, 2, 70],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [-267, 161, 190],
            s: [55, 2, 45],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-324, 161, 185],
            s: [62, 2, 68],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-267, 132, 190],
            s: [55, 3, 45],
            c: "#fcbe78"
        }, {
            p: [-414, 209, 192],
            s: [62, 2, 62],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [-501, 192, 198],
            s: [58, 2, 94],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [-414, 161, 192],
            s: [62, 2, 62],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-458, 181, 186],
            s: [30, 2, 39],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [-309, 135, 89],
            s: [10, 37, 21],
            c: 16234867
        }, {
            p: [-309, 135, 143],
            s: [10, 37, 21],
            c: 16234867
        }, {
            p: [-309, 162, 116],
            s: [10, 10, 33],
            c: 16234867
        }, {
            p: [-309, 171, 116],
            s: [12, 2, 75],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-508, 132, -148],
            s: [96, 1, 118],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-436, 132, -178],
            s: [4, 42, 6],
            c: "#f7b973"
        }, {
            p: [-464, 132, -178],
            s: [4, 42, 6],
            c: "#f7b973"
        }, {
            p: [-560, 192, 182],
            s: [60, 2, 62],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-643, 204, 172],
            s: [62, 2, 62],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [-349, 192, 153],
            s: [4, 4, 8],
            l: 1,
            t: 2
        }, {
            p: [-325, 192, 153],
            s: [4, 4, 8],
            l: 1,
            t: 2
        }, {
            p: [-300, 132, 100],
            s: [14, 30, 2],
            pe: 1,
            t: 2
        }, {
            p: [-306, 132, 126],
            s: [2, 30, 16],
            pe: 1,
            t: 2
        }, {
            p: [15, 188, 190],
            s: [55, 2, 45],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [72, 198, 182],
            s: [62, 2, 62],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [-126, 132, -80],
            s: [106, 14, 138],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-321, 131, 15],
            s: [123, 2, 151],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-531, 131, 60],
            s: [4, 3, 30],
            c: 16758390
        }, {
            p: [-527, 131, 60],
            s: [4, 5, 30],
            c: 16758390
        }, {
            p: [-523, 131, 60],
            s: [4, 7, 30],
            c: 16758390
        }, {
            p: [-519, 131, 60],
            s: [4, 9, 30],
            c: 16758390
        }, {
            p: [-515, 131, 60],
            s: [4, 11, 30],
            c: 16758390
        }, {
            p: [-511, 131, 60],
            s: [4, 13, 30],
            c: 16758390
        }, {
            p: [-507, 131, 60],
            s: [4, 15, 30],
            c: 16758390
        }, {
            p: [-503, 131, 60],
            s: [4, 17, 30],
            c: 16758390
        }, {
            p: [-499, 131, 60],
            s: [4, 19, 30],
            c: 16758390
        }, {
            p: [-495, 131, 60],
            s: [4, 21, 30],
            c: 16758390
        }, {
            p: [-491, 131, 60],
            s: [4, 23, 30],
            c: 16758390
        }, {
            p: [-487, 131, 60],
            s: [4, 25, 30],
            c: 16758390
        }, {
            p: [-483, 131, 60],
            s: [4, 27, 30],
            c: 16758390
        }, {
            p: [-479, 131, 60],
            s: [4, 29, 30],
            c: 16758390
        }, {
            p: [-475, 131, 60],
            s: [4, 31, 30],
            c: 16758390
        }, {
            p: [-471, 131, 60],
            s: [4, 33, 30],
            c: 16758390
        }, {
            p: [-467, 131, 60],
            s: [4, 35, 30],
            c: 16758390
        }, {
            p: [-497, 132, 43],
            s: [64, 38, 4],
            c: 16758390
        }, {
            p: [-367, 133, 51],
            s: [4, 30, 48],
            c: 16758390
        }, {
            p: [-374, 132, -88],
            s: [17, 1, 55],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-374, 205, -150],
            s: [4, 4, 80],
            pe: 1,
            c: "#ffffff",
            t: 2,
            bo: 1
        }, {
            p: [-426, 204, -150],
            s: [4, 4, 80],
            pe: 1,
            c: "#ffffff",
            t: 2,
            bo: 1
        }, {
            p: [-400, 205, -150],
            s: [4, 4, 80],
            pe: 1,
            c: "#ffffff",
            t: 2,
            bo: 1
        }, {
            p: [-398, 213, -150],
            s: [75, 2, 72],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [-642, 214, -8],
            s: [62, 2, 61],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [-286, 132, -192],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-286, 144, -192],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-642, 204, -105],
            s: [44, 2, 90],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [-642, 199, -184],
            s: [66, 2, 90],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [-658, 230, -184],
            s: [36, 3, 89],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-657, 199, -49],
            s: [10, 3, 24],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [-643, 161, 172],
            s: [62, 2, 62],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-642, 161, -8],
            s: [61, 2, 61],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-642, 161, -105],
            s: [43, 2, 89],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-657, 161, -49],
            s: [10, 2, 24],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-642, 161, -184],
            s: [66, 2, 90],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-624, 108, 61],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [0, 1.4, 0]
        }, {
            p: [-420, 132, 90],
            s: [10, 40, 22],
            c: 16234867
        }, {
            p: [-420, 132, 148],
            s: [10, 40, 30],
            c: 16234867
        }, {
            p: [-420, 172, 121],
            s: [10, 2, 84],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-420, 162, 117],
            s: [10, 10, 32],
            c: 16234867
        }, {
            p: [-418, 132, 108],
            s: [2, 30, 16],
            pe: 1,
            t: 2
        }, {
            p: [-427, 132, 133],
            s: [14, 30, 2],
            pe: 1,
            t: 2
        }, {
            p: [-623, 132, 60],
            s: [6, 90, 5],
            v: 1,
            c: "#86a253",
            t: 8
        }, {
            p: [-477, 183, -285],
            s: [270, 9, 1],
            t: 12
        }, {
            p: [-286, 182, -303],
            s: [114, 10, 1],
            t: 12
        }, {
            p: [-400, 132, -150],
            s: [71, 3, 71],
            c: "#f7b973"
        }, {
            p: [-311, 132, -110],
            s: [109, 3, 153],
            c: "#f7b973"
        }, {
            p: [-313, 131, 23],
            s: [104, 54, 104],
            c: "#645e58"
        }, {
            p: [-255, 180, 64],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [-255, 180, 39],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [-255, 180, 10],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [-477, 131, -11],
            s: [126, 2, 110],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-427, 133, -59],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-427, 145, -59],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-412, 132, -145],
            s: [59, 1, 79],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-394, 131, -104],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .52, 0]
        }, {
            p: [-436, 131, -114],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .17, 0]
        }, {
            p: [-466, 131, -95],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .87, 0]
        }, {
            p: [-519, 132, -57],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, 0, -3.14]
        }, {
            p: [-481, 132, -63],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .7, -3.14]
        }, {
            p: [-416, 132, -65],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .7, -3.14]
        }, {
            p: [-379, 131, -55],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.7, 0]
        }, {
            p: [-316, 131, -37],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -1.05, 3.14]
        }, {
            p: [-375, 131, -12],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -1.05, 3.14]
        }, {
            p: [-418, 132, 39],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -1.05, 3.14]
        }, {
            p: [-377, 131, 86],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.17, 0]
        }, {
            p: [-319, 131, 84],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.87, 0]
        }, {
            p: [-489, 164, -75],
            s: [4, 4, 48],
            pe: 1,
            t: 2
        }, {
            p: [-507, 164, -75],
            s: [4, 4, 48],
            pe: 1,
            t: 2
        }, {
            p: [-268, 130, 154],
            s: [4, 10, 28],
            c: 16758390
        }, {
            p: [-386, 130, 153],
            s: [4, 10, 18],
            c: 16758390
        }, {
            p: [-477, 131, -4],
            s: [113, 4, 99],
            c: "#ffb676"
        }, {
            p: [-479, 132, 77],
            s: [109, 3, 5],
            c: "#ffb676"
        }, {
            p: [-474, 132, 84],
            s: [99, 3, 17],
            c: 16758390
        }, {
            p: [-420, 132, 90],
            s: [11, 3, 23],
            c: "#ffb676"
        }, {
            p: [-423, 132, 64],
            s: [5, 3, 37],
            c: "#ffb676"
        }, {
            p: [-527, 132, -58],
            s: [9, 3, 15],
            c: "#ffb676"
        }, {
            p: [-527, 132, -95],
            s: [9, 3, 15],
            c: 16759936
        }, {
            p: [-500, 132, -149],
            s: [69, 3, 103],
            c: "#f7b973"
        }, {
            p: [-464, 132, -178],
            s: [5, 3, 7],
            c: "#f7b973"
        }, {
            p: [-436, 132, -178],
            s: [5, 3, 7],
            c: "#f7b973"
        }, {
            p: [-376, 132, 26],
            s: [14, 31, 6],
            c: "#ffb676"
        }, {
            p: [-418, 132, 25],
            s: [10, 31, 4],
            c: 16758390
        }, {
            p: [-376, 132, 26],
            s: [15, 3, 7],
            c: 16758390
        }, {
            p: [-418, 132, 25],
            s: [11, 3, 5],
            c: 16758390
        }, {
            p: [-411, 131, 19],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .7, 3.14]
        }, {
            p: [-642, 126, -184],
            s: [65, 9, 89],
            c: 16563832
        }, {
            p: [-642, 132, -105],
            s: [43, 3, 89],
            c: 16563832
        }, {
            p: [-657, 132, -49],
            s: [9, 3, 24],
            c: 16563832
        }, {
            p: [-642, 132, -8],
            s: [61, 3, 61],
            c: 16563832
        }, {
            p: [-604, 132, -19],
            s: [17, 3, 21],
            c: 16758390
        }, {
            p: [-666, 132, 47],
            s: [17, 3, 61],
            c: 16563832
        }, {
            p: [-666, 132, 135],
            s: [17, 3, 17],
            c: 16563832
        }, {
            p: [-643, 132, 172],
            s: [61, 3, 61],
            c: 16563832
        }, {
            p: [-602, 132, 202],
            s: [60, 3, 29],
            c: 16563832
        }, {
            p: [-531, 132, 182],
            s: [117, 3, 61],
            c: 16563832
        }, {
            p: [-503, 81, 228],
            s: [61, 54, 33],
            c: 16563832,
            bo: 1
        }, {
            p: [-458, 132, 173],
            s: [29, 3, 11],
            c: 16563832
        }, {
            p: [-414, 132, 192],
            s: [61, 3, 61],
            c: 16563832
        }, {
            p: [-420, 132, 148],
            s: [11, 3, 31],
            c: 16234867
        }, {
            p: [-404, 161, -150],
            s: [64, 2, 72],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-60, 132, -119],
            s: [26, 14, 18],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-207, 132, -80],
            s: [4, 15, 145]
        }, {
            p: [-251, 133, -134],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-251, 145, -139],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-576, 132, -264],
            s: [61, 83, 59],
            c: "#f7b973",
            bo: 1
        }, {
            p: [-513, 132, -272],
            s: [65, 51, 50],
            c: "#f7b973"
        }, {
            p: [-379, 112, 151],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [0, 1.4, 0]
        }, {
            p: [-379, 114, 151],
            s: [7, 106, 7],
            v: 1,
            r: [-3.14, 1.39, -3.14],
            c: 16234867
        }, {
            p: [-611, 132, -233],
            s: [76, 1, 92],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-517, 132, -264],
            s: [112, 1, 66],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-594, 131, -217],
            s: [34, 97, 46],
            c: "#f7b973",
            bo: 1
        }, {
            p: [-594, 228, -217],
            s: [36, 2, 48],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [-594, 161, -217],
            s: [35, 2, 47],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-594, 199, -217],
            s: [35, 2, 47],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-576, 215, -264],
            s: [63, 2, 61],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [-576, 161, -264],
            s: [62, 2, 60],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-513, 182, -272],
            s: [66, 2, 52],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [-513, 161, -272],
            s: [66, 2, 51],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-630, 132, -108],
            s: [53, 1, 158],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-272, 132, -129],
            s: [63, 1, 151],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-253, 132, 28],
            s: [13, 1, 125],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-543, 132, -37],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .7, -3.14]
        }, {
            p: [-552, 131, -93],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [.01, 1.39, -.01]
        }, {
            p: [-554, 131, -141],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .69, 0]
        }, {
            p: [-540, 132, -168],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .69, 0]
        }, {
            p: [-577, 131, -189],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .17, 0]
        }, {
            p: [-533, 131, -205],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .17, 0]
        }, {
            p: [-571, 131, -230],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.88, 0]
        }, {
            p: [-538, 131, -242],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.88, 0]
        }, {
            p: [-479, 131, -245],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .34, 0]
        }, {
            p: [-498, 131, -235],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .34, 0]
        }, {
            p: [-463, 131, -202],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .34, 0]
        }, {
            p: [-436, 131, -193],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.88, 0]
        }, {
            p: [-460, 131, -169],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.4, 0]
        }, {
            p: [-604, 131, -61],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .88, -3.14]
        }, {
            p: [-606, 131, -2],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .88, -3.14]
        }, {
            p: [-538, 131, 37],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [.14, 1.56, -.14]
        }, {
            p: [-529, 131, 84],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .69, 0]
        }, {
            p: [-587, 131, 141],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.18, 0]
        }, {
            p: [-651, 131, 134],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.7, 0]
        }, {
            p: [-475, 131, 140],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -1.05, -3.14]
        }, {
            p: [-429, 131, 97],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -1.05, -3.14]
        }, {
            p: [-431, 131, 155],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.53, -3.14]
        }, {
            p: [-390, 131, 139],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .17, -3.14]
        }, {
            p: [-314, 131, 127],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, 1.22, -3.14]
        }, {
            p: [-278, 131, 85],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .52, -3.14]
        }, {
            p: [-254, 131, 81],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [.01, 1.4, -.01]
        }, {
            p: [-253, 131, 54],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .7, 0]
        }, {
            p: [-232, 131, 191],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .34, -3.14]
        }, {
            p: [-250, 131, -29],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, 1.04, -3.14]
        }, {
            p: [-211, 131, -6],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .53, 0]
        }, {
            p: [-251, 131, -79],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.69, 0]
        }, {
            p: [-213, 131, -122],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.69, 0]
        }, {
            p: [-254, 132, -189],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.71, -3.14]
        }, {
            p: [-125, 212, -347],
            s: [1829, 18, 82],
            c: "#575757",
            t: 5
        }, {
            p: [-185, 132, -204],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-185, 144, -204],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-127, 132, -212],
            s: [136, 1, 45],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-527, 172, -75],
            s: [9, 2, 48],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-126, 132, 93],
            s: [162, 1, 132],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-506, 132, -23],
            s: [54, 80, 60],
            c: 16758905
        }, {
            p: [-506, 212, -23],
            s: [56, 3, 62],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [125, 132, 23],
            s: [16, 30, 4],
            c: 16758390
        }, {
            p: [168, 132, 23],
            s: [16, 30, 4],
            c: 16758390
        }, {
            p: [59, 135, 89],
            s: [10, 35, 21],
            c: 16234867
        }, {
            p: [59, 135, 143],
            s: [10, 36, 21],
            c: 16234867
        }, {
            p: [59, 161, 116],
            s: [10, 10, 33],
            c: 16234867
        }, {
            p: [59, 170, 116],
            s: [12, 2, 75],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [68, 131, 100],
            s: [14, 30, 2],
            pe: 1,
            t: 2
        }, {
            p: [62, 131, 125],
            s: [2, 30, 16],
            pe: 1,
            t: 2
        }, {
            p: [168, 131, 93],
            s: [10, 40, 28],
            c: 16234867
        }, {
            p: [168, 131, 151],
            s: [10, 40, 24],
            c: 16234867
        }, {
            p: [168, 161, 123],
            s: [10, 10, 32],
            c: 16234867
        }, {
            p: [167, 171, 121],
            s: [12, 2, 84],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [176, 131, 138],
            s: [14, 30, 2],
            pe: 1,
            t: 2
        }, {
            p: [171, 131, 113],
            s: [2, 30, 14],
            pe: 1,
            t: 2
        }, {
            p: [50, 190, 153],
            s: [4, 4, 8],
            l: 1,
            t: 2
        }, {
            p: [72, 190, 153],
            s: [4, 4, 8],
            l: 1,
            t: 2
        }, {
            p: [307, 206, 182],
            s: [60, 25, 60],
            c: 16563832,
            bo: 1
        }, {
            p: [285, 231, 161],
            s: [16, 6, 18],
            l: 1,
            c: 16563832
        }, {
            p: [331, 231, 161],
            s: [12, 6, 18],
            l: 1,
            c: 16563832
        }, {
            p: [285, 231, 206],
            s: [16, 6, 12],
            l: 1,
            c: 16563832
        }, {
            p: [329, 231, 202],
            s: [16, 6, 20],
            l: 1,
            c: 16563832
        }, {
            p: [281, 231, 185],
            s: [8, 4, 14],
            l: 1,
            c: 16563832
        }, {
            p: [308, 231, 156],
            s: [16, 4, 8],
            l: 1,
            c: 16563832
        }, {
            p: [308, 231, 208],
            s: [12, 4, 8],
            l: 1,
            c: 16563832
        }, {
            p: [333, 231, 181],
            s: [8, 4, 12],
            l: 1,
            c: 16563832
        }, {
            p: [162, 212, 192],
            s: [62, 2, 63],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [249, 206, 182],
            s: [58, 2, 62],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [279, 161, 182],
            s: [117, 2, 61],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [162, 161, 192],
            s: [61, 2, 61],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [206, 186, 186],
            s: [30, 2, 40],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [72, 161, 182],
            s: [62, 2, 62],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [16, 130, 154],
            s: [4, 10, 28],
            c: 16758390
        }, {
            p: [77, 130, 142],
            s: [118, 10, 4],
            c: 16758390
        }, {
            p: [134, 130, 153],
            s: [4, 10, 18],
            c: 16758390
        }, {
            p: [75, 132, 177],
            s: [115, 7, 68],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [15, 161, 190],
            s: [55, 2, 45],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [275, 132, 60],
            s: [4, 4, 30],
            c: 16758390
        }, {
            p: [271, 132, 60],
            s: [4, 6, 30],
            c: 16758390
        }, {
            p: [267, 132, 60],
            s: [4, 8, 30],
            c: 16758390
        }, {
            p: [263, 132, 60],
            s: [4, 10, 30],
            c: 16758390
        }, {
            p: [259, 132, 60],
            s: [4, 12, 30],
            c: 16758390
        }, {
            p: [255, 132, 60],
            s: [4, 14, 30],
            c: 16758390
        }, {
            p: [251, 132, 60],
            s: [4, 16, 30],
            c: 16758390
        }, {
            p: [247, 132, 60],
            s: [4, 18, 30],
            c: 16758390
        }, {
            p: [243, 132, 60],
            s: [4, 20, 30],
            c: 16758390
        }, {
            p: [239, 132, 60],
            s: [4, 22, 30],
            c: 16758390
        }, {
            p: [235, 132, 60],
            s: [4, 24, 30],
            c: 16758390
        }, {
            p: [231, 132, 60],
            s: [4, 26, 30],
            c: 16758390
        }, {
            p: [227, 132, 60],
            s: [4, 28, 30],
            c: 16758390
        }, {
            p: [223, 132, 60],
            s: [4, 30, 30],
            c: 16758390
        }, {
            p: [219, 132, 60],
            s: [4, 32, 30],
            c: 16758390
        }, {
            p: [195, 132, 58],
            s: [44, 34, 34],
            c: "#645e58"
        }, {
            p: [246, 132, 43],
            s: [62, 38, 4],
            c: 16758390
        }, {
            p: [254, 212, -23],
            s: [56, 2, 62],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [391, 161, -8],
            s: [64, 2, 62],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [391, 224, -8],
            s: [64, 2, 62],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [391, 196, -8],
            s: [64, 2, 62],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [226, 181, -286],
            s: [274, 11, 1],
            t: 12
        }, {
            p: [34, 181, -303],
            s: [91, 11, 1],
            t: 12
        }, {
            p: [325, 132, -264],
            s: [61, 83, 59],
            c: "#f7b973",
            bo: 1
        }, {
            p: [325, 215, -264],
            s: [63, 2, 61],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [325, 161, -264],
            s: [62, 2, 60],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [344, 131, -217],
            s: [34, 97, 46],
            c: "#f7b973",
            bo: 1
        }, {
            p: [344, 228, -217],
            s: [36, 2, 48],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [344, 161, -217],
            s: [35, 2, 47],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [344, 199, -217],
            s: [35, 2, 47],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [390, 199, -184],
            s: [67, 2, 90],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [406, 233, -184],
            s: [35, 2, 83],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [390, 132, -110],
            s: [42, 61, 88],
            c: 16563832,
            bo: 1
        }, {
            p: [371, 193, -111],
            s: [4, 4, 18],
            l: 1,
            c: 16563832
        }, {
            p: [391, 193, -68],
            s: [18, 4, 4],
            l: 1,
            c: 16563832
        }, {
            p: [373, 193, -76],
            s: [8, 4, 20],
            l: 1,
            c: 16563832
        }, {
            p: [373, 193, -144],
            s: [8, 4, 20],
            l: 1,
            c: 16563832
        }, {
            p: [405, 187, -52],
            s: [8, 3, 30],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [390, 161, -184],
            s: [65, 2, 89],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [248, 132, -149],
            s: [68, 72, 102],
            c: "#f7b973",
            bo: 1
        }, {
            p: [272, 204, -107],
            s: [20, 4, 18],
            l: 1,
            c: 16563832
        }, {
            p: [275, 204, -191],
            s: [14, 4, 18],
            l: 1,
            c: 16563832
        }, {
            p: [224, 204, -191],
            s: [20, 4, 18],
            l: 1,
            c: 16563832
        }, {
            p: [221, 204, -107],
            s: [14, 4, 18],
            l: 1,
            c: 16563832
        }, {
            p: [217, 204, -132],
            s: [6, 2, 18],
            l: 1,
            c: 16563832
        }, {
            p: [279, 204, -131],
            s: [6, 2, 14],
            l: 1,
            c: 16563832
        }, {
            p: [250, 204, -197],
            s: [20, 2, 6],
            l: 1,
            c: 16563832
        }, {
            p: [245, 204, -101],
            s: [16, 2, 6],
            l: 1,
            c: 16563832
        }, {
            p: [275, 204, -159],
            s: [14, 3, 18],
            l: 1,
            c: 16563832
        }, {
            p: [221, 204, -159],
            s: [14, 3, 18],
            l: 1,
            c: 16563832
        }, {
            p: [148, 208, -150],
            s: [77, 2, 73],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [219, 165, -79],
            s: [4, 4, 54],
            pe: 1,
            t: 2
        }, {
            p: [255, 165, -79],
            s: [4, 4, 54],
            pe: 1,
            t: 2
        }, {
            p: [238, 165, -79],
            s: [4, 4, 54],
            pe: 1,
            t: 2
        }, {
            p: [-419, 163, -15],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [-419, 163, 15],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [167, 163, 12],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [167, 163, -46],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [167, 163, -17],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [199, 167, -123],
            s: [33, 4, 4],
            pe: 1,
            t: 2
        }, {
            p: [199, 167, -163],
            s: [33, 4, 4],
            pe: 1,
            t: 2
        }, {
            p: [199, 167, -144],
            s: [33, 4, 4],
            pe: 1,
            t: 2
        }, {
            p: [263, 132, -272],
            s: [64, 51, 50],
            c: "#f7b973"
        }, {
            p: [263, 182, -272],
            s: [66, 2, 52],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [263, 161, -272],
            s: [65, 2, 51],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [271, 132, 176],
            s: [184, 1, 68],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [350, 188, 202],
            s: [61, 2, 29],
            c: "#2f2f2f",
            bo: 1
        }, {
            p: [320, 168, -19],
            s: [80, 8, 20],
            c: 16758390
        }, {
            p: [289, 132, -19],
            s: [16, 36, 20],
            c: 16758390
        }, {
            p: [352, 132, -19],
            s: [16, 36, 20],
            c: 16758390
        }, {
            p: [306, 132, -11],
            s: [22, 36, 2],
            pe: 1,
            t: 2
        }, {
            p: [335, 132, -25],
            s: [22, 36, 2],
            pe: 1,
            t: 2
        }, {
            p: [354, 176, -19],
            s: [12, 4, 20],
            c: 16758390
        }, {
            p: [286, 176, -19],
            s: [12, 4, 20],
            c: 16758390
        }, {
            p: [311, 176, -19],
            s: [12, 2, 20],
            c: 16758390
        }, {
            p: [332, 176, -19],
            s: [10, 4, 20],
            c: 16758390
        }, {
            p: [275, 174, -72],
            s: [9, 2, 53],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [199, 174, -180],
            s: [30, 2, 7],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [391, 75, 172],
            s: [60, 187, 60],
            c: "#fcbe78",
            bo: 1
        }, {
            p: [369, 262, 151],
            s: [16, 6, 18],
            l: 1,
            c: 16563832
        }, {
            p: [415, 262, 151],
            s: [12, 6, 18],
            l: 1,
            c: 16563832
        }, {
            p: [369, 262, 196],
            s: [16, 6, 12],
            l: 1,
            c: 16563832
        }, {
            p: [413, 262, 192],
            s: [16, 6, 20],
            l: 1,
            c: 16563832
        }, {
            p: [365, 262, 175],
            s: [8, 4, 14],
            l: 1,
            c: 16563832
        }, {
            p: [392, 262, 146],
            s: [16, 4, 8],
            l: 1,
            c: 16563832
        }, {
            p: [392, 262, 198],
            s: [12, 4, 8],
            l: 1,
            c: 16563832
        }, {
            p: [417, 262, 171],
            s: [8, 4, 12],
            l: 1,
            c: 16563832
        }, {
            p: [493, 205, 180],
            s: [74, 3, 62],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [62, 132, 18],
            s: [139, 1, 148],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [47, 132, -129],
            s: [98, 1, 146],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [249, 132, -149],
            s: [79, 1, 113],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [159, 132, -144],
            s: [58, 1, 78],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [249, 132, -10],
            s: [83, 1, 108],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [185, 132, 20],
            s: [49, 1, 168],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [249, 132, 90],
            s: [79, 1, 28],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [373, 132, -112],
            s: [56, 1, 169],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [332, 132, -213],
            s: [26, 1, 58],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [268, 132, -262],
            s: [102, 1, 59],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-126, 132, 191],
            s: [227, 1, 18],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-202, 132, 102],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .34, -3.14]
        }, {
            p: [-110, 131, 183],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .34, -3.14]
        }, {
            p: [-2, 131, 60],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .34, -3.14]
        }, {
            p: [-2, 132, -3],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .34, -3.14]
        }, {
            p: [0, 131, -32],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [2.98, 1.56, -2.98]
        }, {
            p: [1, 131, -85],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .69, -3.14]
        }, {
            p: [4, 132, -199],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.88, -3.14]
        }, {
            p: [-113, 132, -194],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.88, -3.14]
        }, {
            p: [210, 131, -186],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-.01, -1.39, -.01]
        }, {
            p: [189, 131, -142],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.53, -3.14]
        }, {
            p: [211, 131, -95],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.13, -1.4, -3.13]
        }, {
            p: [267, 131, -93],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.53, -3.14]
        }, {
            p: [267, 131, -57],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .87, -3.14]
        }, {
            p: [222, 132, -59],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.05, 0]
        }, {
            p: [163, 131, -60],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.69, 0]
        }, {
            p: [130, 131, -109],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.56, 0]
        }, {
            p: [169, 131, -111],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.51, 0]
        }, {
            p: [122, 131, -34],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.21, 0]
        }, {
            p: [163, 131, -15],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.71, 3.14]
        }, {
            p: [120, 131, 18],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.71, 3.14]
        }, {
            p: [166, 131, 71],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.71, 3.14]
        }, {
            p: [129, 131, 49],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.71, 3.14]
        }, {
            p: [127, 131, 84],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .69, 3.14]
        }, {
            p: [160, 131, 106],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .71, 0]
        }, {
            p: [74, 131, 84],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .01, 0]
        }, {
            p: [71, 131, 133],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .86, -3.14]
        }, {
            p: [160, 131, 158],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.71, -3.14]
        }, {
            p: [178, 131, 100],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.71, -3.14]
        }, {
            p: [223, 131, 101],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.71, -3.14]
        }, {
            p: [221, 131, 146],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .69, -3.14]
        }, {
            p: [254, 131, 103],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .69, -3.14]
        }, {
            p: [287, 131, 78],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .69, -3.14]
        }, {
            p: [284, 131, 41],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.18, -3.14]
        }, {
            p: [287, 131, -2],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .87, -3.14]
        }, {
            p: [371, 138, 68],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .88, 0]
        }, {
            p: [396, 131, 80],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .88, 0]
        }, {
            p: [397, 131, 136],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.21, 0]
        }, {
            p: [356, 131, 145],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -1.41, 3.14]
        }, {
            p: [296, 131, 149],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -1.06, 3.14]
        }, {
            p: [287, 131, -34],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -1.06, 3.14]
        }, {
            p: [283, 131, -60],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .51, 3.14]
        }, {
            p: [351, 131, -36],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .51, 3.14]
        }, {
            p: [359, 131, -72],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .51, 3.14]
        }, {
            p: [364, 131, -135],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.51, 0]
        }, {
            p: [347, 131, -145],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.56, 0]
        }, {
            p: [351, 131, -188],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.69, 0]
        }, {
            p: [323, 131, -187],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.69, 0]
        }, {
            p: [285, 131, -203],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .01, 0]
        }, {
            p: [290, 131, -243],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .01, 0]
        }, {
            p: [222, 131, -237],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .71, 0]
        }, {
            p: [234, 131, -203],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .71, 0]
        }, {
            p: [61, 131, 23],
            s: [113, 4, 113],
            c: "#ffb676"
        }, {
            p: [125, 132, 23],
            s: [17, 3, 5],
            c: "#ffb676"
        }, {
            p: [115, 132, 50],
            s: [4, 30, 50],
            c: 16758390
        }, {
            p: [124, 132, 79],
            s: [17, 3, 5],
            c: 16758390
        }, {
            p: [59, 131, 89],
            s: [11, 4, 22],
            c: 16234867
        }, {
            p: [59, 131, 143],
            s: [11, 4, 22],
            c: 16234867
        }, {
            p: [168, 131, 93],
            s: [11, 4, 29],
            c: 16234867
        }, {
            p: [164, 132, 79],
            s: [10, 3, 5],
            c: 16758390
        }, {
            p: [225, 132, -4],
            s: [113, 3, 99],
            c: "#ffb676"
        }, {
            p: [227, 132, 77],
            s: [109, 3, 5],
            c: 16758390
        }, {
            p: [221, 132, 85],
            s: [99, 3, 17],
            c: 16758390
        }, {
            p: [171, 132, 62],
            s: [5, 3, 33],
            c: 16758390
        }, {
            p: [275, 132, -57],
            s: [9, 3, 15],
            c: 16760180
        }, {
            p: [275, 132, -95],
            s: [9, 3, 15],
            c: 16760180
        }, {
            p: [248, 132, -149],
            s: [69, 3, 103],
            c: "#f7b973"
        }, {
            p: [290, 132, -134],
            s: [17, 3, 64],
            c: 16760180
        }, {
            p: [213, 132, -180],
            s: [5, 3, 7],
            c: 16762486
        }, {
            p: [185, 132, -180],
            s: [5, 3, 7],
            c: 16762486
        }, {
            p: [150, 132, -150],
            s: [71, 3, 71],
            c: "#ffb676"
        }, {
            p: [60, 132, -110],
            s: [111, 3, 153],
            c: "#ffb676"
        }, {
            p: [-263, 132, -197],
            s: [2, 28, 2],
            pe: 1,
            t: 2
        }, {
            p: [35, 132, -191],
            s: [12, 12, 12],
            i: 8
        }, {
            p: [27, 158, -191],
            s: [35, 2, 15],
            r: [-.17, 0, 0],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [11, 132, -197],
            s: [2, 28, 2],
            t: 2
        }, {
            p: [20, 132, -192],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [20, 144, -192],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [43, 132, -197],
            s: [2, 28, 2],
            t: 2
        }, {
            p: [15, 132, 190],
            s: [55, 3, 45],
            c: 16563832
        }, {
            p: [72, 132, 182],
            s: [60, 3, 61],
            c: 16563832
        }, {
            p: [126, 171, 210],
            s: [48, 2, 5],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [162, 132, 192],
            s: [61, 3, 61],
            c: 16563832
        }, {
            p: [279, 132, 182],
            s: [117, 3, 61],
            c: 16563832
        }, {
            p: [205, 132, 173],
            s: [31, 3, 11],
            c: 16563832
        }, {
            p: [350, 132, 202],
            s: [60, 3, 29],
            c: 16563832
        }, {
            p: [391, 75, 172],
            s: [61, 60, 61],
            c: "#fcbe78"
        }, {
            p: [414, 132, 135],
            s: [17, 3, 17],
            c: 16563832
        }, {
            p: [414, 132, 47],
            s: [17, 3, 61],
            c: 16563832
        }, {
            p: [391, 132, -8],
            s: [63, 3, 61],
            c: 16563832
        }, {
            p: [352, 132, -19],
            s: [17, 3, 21],
            c: 16758390
        }, {
            p: [289, 132, -19],
            s: [17, 3, 21],
            c: 16758390
        }, {
            p: [405, 132, -52],
            s: [9, 3, 30],
            c: 16563832
        }, {
            p: [390, 132, -110],
            s: [43, 3, 89],
            c: 16563832
        }, {
            p: [390, 126, -184],
            s: [65, 9, 89],
            c: 16563832
        }, {
            p: [344, 131, -217],
            s: [35, 4, 47],
            c: "#f7b973"
        }, {
            p: [325, 132, -264],
            s: [62, 3, 60],
            c: "#f7b973"
        }, {
            p: [263, 132, -272],
            s: [65, 3, 51],
            c: "#f7b973"
        }, {
            p: [126, 125, 150],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [-3.14, .53, -3.14]
        }, {
            p: [126, 125, 149],
            s: [7, 106, 7],
            pe: 1,
            v: 1,
            c: 16234867
        }, {
            p: [371, 110, 58],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [-3.14, .53, -3.14]
        }, {
            p: [370, 110, 58],
            s: [7, 106, 7],
            pe: 1,
            v: 1,
            r: [0, -.17, 0],
            c: 16234867
        }, {
            p: [24, 127, 150],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [0, -.01, 0]
        }, {
            p: [-541, 132, -19],
            s: [17, 3, 21],
            c: 16758390
        }, {
            p: [-575, 132, -56],
            s: [24, 36, 24],
            i: 23,
            l: 1,
            tm: 0
        }, {
            p: [319, 132, -55],
            s: [24, 36, 24],
            i: 23,
            l: 1,
            tm: "1"
        }, {
            p: [-82, 158, -10],
            s: [18, 3, 4]
        }, {
            p: [-75, 158, 14],
            s: [4, 3, 44]
        }, {
            p: [-85, 158, -150],
            s: [24, 3, 4]
        }, {
            p: [-75, 158, -176],
            s: [4, 3, 48]
        }, {
            p: [-170, 158, -10],
            s: [18, 3, 4]
        }, {
            p: [-177, 158, 14],
            s: [4, 3, 44]
        }, {
            p: [-167, 158, -150],
            s: [24, 3, 4]
        }, {
            p: [-171, 158, -192],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-.1, -1.56, -.1]
        }, {
            p: [-162, 159, -158],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.36, -3.14]
        }, {
            p: [-171, 158, -3],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.36, -3.14]
        }, {
            p: [-171, 158, 30],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-.13, -1.56, -.14]
        }, {
            p: [-78, 159, 40],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [.01, .18, 0]
        }, {
            p: [-82, 159, -4],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [.01, 1.41, 0]
        }, {
            p: [-82, 159, -157],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.05, 0]
        }, {
            p: [-83, 159, -244],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-106, 159, -295],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-142, 159, -258],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [179, 132, -59],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [179, 144, -59],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-401, 135, -193],
            s: [56, 26, 17],
            c: 16234867
        }, {
            p: [-401, 161, -194],
            s: [57, 2, 16],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-437, 132, -269],
            s: [57, 26, 25],
            i: 17
        }, {
            p: [-333, 132, -216],
            s: [33, 1, 60],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-404, 132, -195],
            s: [73, 1, 21],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-516, 135, -249],
            s: [8, 31, 34],
            c: 16234867
        }, {
            p: [-516, 135, -187],
            s: [8, 31, 38],
            c: 16234867
        }, {
            p: [-516, 161, -219],
            s: [8, 5, 26],
            c: 16234867
        }, {
            p: [-516, 166, -218],
            s: [9, 2, 96],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-372, 131, -204],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .34, 0]
        }, {
            p: [-34, 132, -275],
            s: [118, 27, 46],
            i: 9,
            c: "#ffffff",
            t: 1,
            d: 2
        }, {
            p: [78, 134, -295],
            s: [23, 32, 32],
            c: 16234867
        }, {
            p: [78, 161, -263],
            s: [23, 5, 32],
            c: 16234867
        }, {
            p: [78, 166, -244],
            s: [25, 2, 119],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [261, 131, -249],
            s: [8, 35, 34],
            c: 16234867
        }, {
            p: [261, 131, -187],
            s: [8, 35, 38],
            c: 16234867
        }, {
            p: [261, 161, -219],
            s: [8, 5, 26],
            c: 16234867
        }, {
            p: [261, 166, -218],
            s: [9, 2, 96],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [194, 132, -270],
            s: [57, 26, 25],
            i: 17
        }, {
            p: [-36, 132, -250],
            s: [123, 29, 4]
        }, {
            p: [287, 131, -94],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .51, 3.14]
        }, {
            p: [285, 131, -176],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .51, 3.14]
        }, {
            p: [-309, 132, 89],
            s: [11, 3, 22],
            c: 16234867
        }, {
            p: [-309, 132, 143],
            s: [11, 3, 22],
            c: 16234867
        }, {
            p: [168, 131, 151],
            s: [11, 4, 25],
            c: 16234867
        }, {
            p: [117, 131, -190],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.88, 0]
        }, {
            p: [149, 131, -190],
            s: [56, 30, 17],
            c: 16234867
        }, {
            p: [149, 161, -191],
            s: [57, 2, 16],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [182, 131, -192],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .34, 0]
        }, {
            p: [112, 132, -86],
            s: [36, 1, 60],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [143, 166, 50],
            s: [60, 19, 50],
            i: 9,
            c: "#645e58",
            d: 2
        }, {
            p: [170, 131, -205],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.39, 0]
        }, {
            p: [-395, 167, 51],
            s: [60, 18, 48],
            i: 9,
            c: "#645e58"
        }, {
            p: [-502, 134, 60],
            s: [66, 32, 30],
            i: 9,
            v: 1,
            c: "#645e58"
        }, {
            p: [-324, 132, 182],
            s: [60, 3, 61],
            c: 16563832
        }, {
            p: [252, 133, 60],
            s: [70, 33, 30],
            i: 9,
            v: 1,
            c: "#645e58",
            d: 2
        }, {
            p: [3, 180, 64],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [3, 180, -22],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [3, 180, 9],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [3, 180, 38],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [64, 131, -190],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.88, -3.14]
        }, {
            p: [64, 131, -209],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.04, 0]
        }, {
            p: [-286, 182, -303],
            s: [2, 11, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-240, 181, -303],
            s: [2, 12, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-331, 182, -303],
            s: [2, 11, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-347, 183, -285],
            s: [2, 10, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-466, 183, -285],
            s: [2, 10, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-388, 183, -285],
            s: [2, 10, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-482, 182, -285],
            s: [2, 10, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-544, 183, -285],
            s: [2, 10, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-10, 181, -303],
            s: [2, 12, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [78, 181, -303],
            s: [2, 12, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [35, 181, -303],
            s: [2, 12, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [94, 181, -285],
            s: [2, 12, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [201, 181, -285],
            s: [2, 12, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [131, 181, -285],
            s: [2, 12, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [167, 181, -285],
            s: [2, 12, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [217, 181, -285],
            s: [2, 12, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [293, 181, -285],
            s: [2, 12, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [255, 181, -285],
            s: [2, 12, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-513, 183, -285],
            s: [2, 10, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [35, 192, -303],
            s: [92, 1, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [194, 192, -285],
            s: [204, 1, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-286, 192, -303],
            s: [92, 1, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-448, 192, -285],
            s: [204, 1, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-428, 183, -285],
            s: [2, 10, 2],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-211, 131, -33],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .53, 0]
        }, {
            p: [-150, 131, -3],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .53, 0]
        }, {
            p: [-129, 131, 33],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .34, -3.14]
        }, {
            p: [-116, 131, -5],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .34, -3.14]
        }, {
            p: [-72, 131, -4],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .34, -3.14]
        }, {
            p: [-177, 132, -192],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .71, 0]
        }, {
            p: [-126, 132, -80],
            s: [114, 1, 161],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-178, 133, -156],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.69, 0]
        }, {
            p: [-108, 132, -155],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.69, 0]
        }, {
            p: [-68, 133, -242],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.23, 0]
        }, {
            p: [-210, 133, -155],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.71, 3.14]
        }, {
            p: [-384, 132, 210],
            s: [60, 3, 5],
            c: 16563832
        }, {
            p: [-594, 131, -217],
            s: [35, 4, 47],
            c: "#f7b973"
        }, {
            p: [-576, 132, -264],
            s: [62, 3, 60],
            c: "#f7b973"
        }, {
            p: [-513, 132, -272],
            s: [66, 3, 51],
            c: "#f7b973"
        }, {
            p: [-516, 131, -187],
            s: [9, 4, 39],
            c: 16234867
        }, {
            p: [-516, 131, -249],
            s: [9, 4, 35],
            c: 16234867
        }, {
            p: [-401, 131, -193],
            s: [57, 4, 18],
            c: 16234867
        }, {
            p: [78, 131, -217],
            s: [24, 4, 61],
            c: 16234867
        }, {
            p: [-333, 131, -290],
            s: [24, 3, 23],
            c: 16234867
        }, {
            p: [149, 131, -190],
            s: [57, 4, 18],
            c: 16234867
        }, {
            p: [126, 132, 210],
            s: [48, 3, 5],
            c: 16563832
        }, {
            p: [-95, 131, 155],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [2.98, 1.56, -2.98]
        }, {
            p: [-71, 131, 188],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [2.98, 1.56, -2.98]
        }, {
            p: [-35, 131, 191],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .36, 0]
        }, {
            p: [-183, 131, 192],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .34, -3.14]
        }, {
            p: [-207, 131, 187],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-.01, -1.39, -.01]
        }, {
            p: [-271, 99, -339],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [-3.14, .18, -3.14]
        }, {
            p: [-370, 99, -348],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [-3.14, .18, -3.14]
        }, {
            p: [-427, 107, -531],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [0, -1.05, 0]
        }, {
            p: [-494, 105, -538],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [0, -.18, 0]
        }, {
            p: [-533, 105, -326],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [0, -.18, 0]
        }, {
            p: [-446, 105, -319],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-435, 94, -426],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [0, -.35, 0]
        }, {
            p: [-273, 129, -543],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [0, -1.05, 0]
        }, {
            p: [74, 116, -544],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [3.14, -.87, 3.14]
        }, {
            p: [156, 112, -539],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [0, -1.05, 0]
        }, {
            p: [25, 108, -337],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [0, -.7, 0]
        }, {
            p: [174, 103, -328],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [0, .17, 0]
        }, {
            p: [123, 99, -386],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [-3.14, -.87, -3.14]
        }, {
            p: [291, 101, -316],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [-3.14, .18, -3.14]
        }, {
            p: [226, 106, -439],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [-3.14, .18, -3.14]
        }, {
            p: [-76, 133, -189],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .34, -3.14]
        }, {
            p: [-194, 145, -101],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .18, 0]
        }, {
            p: [-202, 145, -59],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .01, 0]
        }, {
            p: [-275, 137, 150],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.01, -3.14]
        }, {
            p: [-298, 138, 149],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .51, -3.14]
        }, {
            p: [-284, 138, 162],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .51, -3.14]
        }, {
            p: [-320, 138, 149],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .51, -3.14]
        }, {
            p: [-357, 138, 159],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -1.06, -3.14]
        }, {
            p: [-371, 138, 151],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -1.06, -3.14]
        }, {
            p: [-617, 131, 39],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, 1.05, 3.14]
        }, {
            p: [-651, 131, 27],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, 1.05, 3.14]
        }, {
            p: [-636, 131, 74],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, 1.05, 3.14]
        }, {
            p: [22, 139, 160],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .34, -3.14]
        }, {
            p: [48, 138, 149],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .53, 0]
        }, {
            p: [37, 138, 162],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, 1.04, -3.14]
        }, {
            p: [383, 131, 43],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .88, 0]
        }, {
            p: [69, 138, 148],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.01, 3.14]
        }, {
            p: [117, 138, 148],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.13, -1.41, 3.13]
        }, {
            p: [128, 138, 163],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.13, -1.41, 3.13]
        }, {
            p: [360, 131, 28],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .88, 0]
        }, {
            p: [-621, 137, 69],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-700, 117, -71],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [0, 1.4, 0]
        }, {
            p: [30, 133, 86],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.53, -3.14]
        }, {
            p: [-384, 166, 210],
            s: [60, 2, 6],
            c: "#2f2f2f",
            t: 5,
            bo: 1
        }, {
            p: [-397, 163, 25],
            s: [56, 26, 4],
            c: 16758390
        }, {
            p: [-397, 163, 53],
            s: [56, 2, 52],
            c: 16758390
        }, {
            p: [-5, 74, 408],
            s: [3370, 13, 3882],
            l: 1,
            c: "#355184",
            o: .8,
            t: 5
        }, {
            p: [-139, 159, -188],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.36, -3.14]
        }, {
            p: [-140, 159, -196],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.12, -1.49, -3.12]
        }, {
            p: [-105, 158, -5],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.36, -3.14]
        }, {
            p: [-143, 158, -1],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-.01, -1.39, -.01]
        }, {
            p: [-143, 158, 8],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-.01, -1.39, -.01]
        }, {
            p: [-142, 158, 111],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-.01, -1.39, -.01]
        }, {
            p: [-110, 160, 102],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-.01, -1.39, -.01]
        }, {
            p: [-110, 158, 32],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-.01, -1.39, -.01]
        }, {
            p: [-78, 144, -18],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.53, -3.14]
        }, {
            p: [-111, 158, 6],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .6, -3.14]
        }, {
            p: [-110, 160, -156],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .6, -3.14]
        }, {
            p: [-112, 160, -191],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .6, -3.14]
        }, {
            p: [-111, 159, -256],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-147, 159, -155],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.36, -3.14]
        }, {
            p: [-123, 159, -165],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.36, -3.14]
        }, {
            p: [-55, 133, 89],
            s: [4, 28, 106]
        }, {
            p: [-197, 133, 89],
            s: [4, 28, 106]
        }, {
            p: [-126, 158, 16],
            s: [98, 2, 48],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-116, 160, 106],
            s: [2, 2, 257],
            l: 1
        }, {
            p: [-136, 160, -236],
            s: [2, 2, 185],
            l: 1
        }, {
            p: [-136, 159, -138],
            s: [2, 2, 13],
            l: 1,
            r: [.17, 0, 0]
        }, {
            p: [-136, 156, -131],
            s: [2, 2, 6],
            l: 1,
            r: [.61, 0, 0]
        }, {
            p: [-116, 161, -133],
            s: [2, 2, 11],
            l: 1,
            r: [-.18, 0, 0]
        }, {
            p: [-123, 146, -127],
            s: [30, 2, 4],
            l: 1,
            r: [0, .26, 0],
            t: 2
        }, {
            p: [-127, 146, -26],
            s: [30, 2, 4],
            l: 1,
            r: [0, .17, 0],
            t: 2
        }, {
            p: [-116, 158, -27],
            s: [2, 2, 11],
            l: 1,
            r: [-.35, 0, 0]
        }, {
            p: [-136, 161, -25],
            s: [2, 2, 7],
            l: 1,
            r: [.17, 0, 0]
        }, {
            p: [-136, 163, -29],
            s: [2, 2, 4],
            l: 1,
            r: [.61, 0, 0]
        }, {
            p: [-127, 146, -37],
            s: [30, 2, 4],
            l: 1,
            r: [0, -.27, 0],
            t: 2
        }, {
            p: [-75, 132, -224],
            s: [4, 29, 48]
        }, {
            p: [-216, 132, -311],
            s: [124, 30, 26]
        }, {
            p: [-216, 132, -250],
            s: [123, 29, 4]
        }, {
            p: [-165, 158, -200],
            s: [20, 2, 96],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-177, 158, -176],
            s: [4, 3, 48]
        }, {
            p: [-177, 132, -224],
            s: [4, 29, 48]
        }, {
            p: [-191, 133, -211],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .1, 0]
        }, {
            p: [-181, 132, -243],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .97, 0]
        }, {
            p: [-108, 145, -135],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.53, -3.14]
        }, {
            p: [-137, 143, -129],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.53, -3.14]
        }, {
            p: [-180, 146, -143],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.53, -3.14]
        }, {
            p: [-73, 145, -141],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .34, -3.14]
        }, {
            p: [-84, 144, -143],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.13, 1.47, -3.13]
        }, {
            p: [-112, 144, -29],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.13, 1.47, -3.13]
        }, {
            p: [-68, 145, -102],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.13, 1.47, -3.13]
        }, {
            p: [-137, 145, -32],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.13, 1.47, -3.13]
        }, {
            p: [-118, 144, -117],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .8, 0]
        }, {
            p: [-95, 144, -50],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .8, 0]
        }, {
            p: [-171, 144, -29],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .8, 0]
        }, {
            p: [-151, 144, -93],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .68, -3.14]
        }, {
            p: [-127, 132, -243],
            s: [314, 1, 17],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-279, 133, -246],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .1, 0]
        }, {
            p: [-225, 133, -244],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .62, 0]
        }, {
            p: [-67, 132, -190],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-67, 144, -190],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-73, 133, -219],
            s: [2, 29, 4],
            i: 3,
            c: "#fffbfb",
            t: 2
        }, {
            p: [-180, 133, -225],
            s: [2, 29, 4],
            i: 3,
            c: "#fffbfb",
            t: 2,
            d: 2
        }, {
            p: [17, 133, -245],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.23, 0]
        }, {
            p: [-32, 133, -244],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .79, 0]
        }, {
            p: [-60, 140, -80],
            s: [26, 6, 52],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-45, 132, -80],
            s: [4, 15, 145]
        }, {
            p: [-60, 132, -108],
            s: [26, 15, 4]
        }, {
            p: [-71, 132, -140],
            s: [4, 15, 24]
        }, {
            p: [-60, 132, -52],
            s: [26, 15, 4]
        }, {
            p: [-192, 140, -80],
            s: [26, 6, 52],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-58, 132, -130],
            s: [22, 12, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-58, 132, -134],
            s: [22, 10, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-58, 132, -138],
            s: [22, 8, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-58, 132, -142],
            s: [22, 6, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-58, 132, -146],
            s: [22, 4, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-58, 132, -150],
            s: [22, 2, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-60, 132, -41],
            s: [26, 14, 18],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-71, 132, -20],
            s: [4, 15, 24]
        }, {
            p: [-58, 132, -30],
            s: [22, 12, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-58, 132, -26],
            s: [22, 10, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-58, 132, -22],
            s: [22, 8, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-58, 132, -18],
            s: [22, 6, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-58, 132, -14],
            s: [22, 4, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-58, 132, -10],
            s: [22, 2, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-192, 132, -52],
            s: [26, 15, 4]
        }, {
            p: [-192, 132, -108],
            s: [26, 15, 4]
        }, {
            p: [-192, 132, -119],
            s: [26, 14, 18],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-192, 132, -41],
            s: [26, 14, 18],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-194, 132, -30],
            s: [22, 12, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-181, 132, -20],
            s: [4, 15, 24]
        }, {
            p: [-181, 132, -140],
            s: [4, 15, 24]
        }, {
            p: [-194, 132, -26],
            s: [22, 10, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-194, 132, -22],
            s: [22, 8, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-194, 132, -18],
            s: [22, 6, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-194, 132, -14],
            s: [22, 4, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-194, 132, -10],
            s: [22, 2, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-194, 132, -130],
            s: [22, 12, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-194, 132, -134],
            s: [22, 10, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-194, 132, -138],
            s: [22, 8, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-194, 132, -142],
            s: [22, 6, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-194, 132, -146],
            s: [22, 4, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-194, 132, -150],
            s: [22, 2, 4],
            c: "#6e6e6e",
            t: 5
        }, {
            p: [-123, 146, -97],
            s: [30, 2, 4],
            l: 1,
            r: [-3.14, 1.31, -3.14],
            t: 2
        }, {
            p: [-72, 146, -65],
            s: [30, 2, 4],
            l: 1,
            r: [0, .96, 0],
            t: 2
        }, {
            p: [-184, 146, -65],
            s: [26, 2, 4],
            l: 1,
            r: [0, .09, 0],
            t: 2
        }, {
            p: [-104, 145, -93],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, 1.04, -3.14]
        }, {
            p: [-127, 145, -62],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, 1.04, -3.14]
        }, {
            p: [-148, 146, -142],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-151, 146, -18],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-194, 146, -85],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-193, 146, -73],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-193, 158, -79],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-42, 132, -80],
            s: [10, 1, 156],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-210, 132, -80],
            s: [10, 1, 156],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-41, 131, -7],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [2.98, 1.56, -2.98]
        }, {
            p: [-40, 131, -71],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .69, -3.14]
        }, {
            p: [-40, 131, -154],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .69, -3.14]
        }, {
            p: [2, 131, -131],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -1.14, -3.14]
        }, {
            p: [-211, 131, -71],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.69, 0]
        }, {
            p: [-248, 131, -123],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.69, 0]
        }, {
            p: [-297, 132, -198],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.71, -3.14]
        }, {
            p: [-55, 146, -87],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-55, 158, -80],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-55, 146, -75],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-305, 132, -298],
            s: [54, 1, 6],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [188, 132, -272],
            s: [58, 1, 43],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-310, 132, -191],
            s: [13, 1, 20],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-319, 131, -296],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .34, 0]
        }, {
            p: [-285, 131, -298],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.45, 0]
        }, {
            p: [-407, 131, -254],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .34, 0]
        }, {
            p: [-486, 130, -204],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .34, 0]
        }, {
            p: [-609, 131, -131],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .88, -3.14]
        }, {
            p: [-74, 131, -156],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .43, -3.14]
        }, {
            p: [-168, 131, 31],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.23, 0]
        }, {
            p: [53, 132, -298],
            s: [54, 1, 6],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-431, 132, -272],
            s: [60, 1, 46],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [75, 131, -297],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -.88, 3.14]
        }, {
            p: [30, 131, -298],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.78, 0]
        }, {
            p: [128, 131, -206],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.53, 0]
        }, {
            p: [93, 131, -204],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.53, 0]
        }, {
            p: [162, 131, -255],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.39, 0]
        }, {
            p: [98, 131, -281],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.39, 0]
        }, {
            p: [63, 132, -297],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.78, 0]
        }, {
            p: [-109, 160, -225],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .6, -3.14]
        }, {
            p: [-141, 159, -216],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-141, 159, -297],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-111, 159, -280],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [-119, 160, -240],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .6, -3.14]
        }, {
            p: [-80, 158, -189],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .87, 0]
        }, {
            p: [-170, 158, -243],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.04, 0]
        }, {
            p: [-157, 159, -245],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.57, 0]
        }, {
            p: [221, 132, -253],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.39, 0]
        }, {
            p: [-95, 132, -275],
            s: [4, 28, 48],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-157, 132, -275],
            s: [4, 28, 48],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-218, 132, -275],
            s: [118, 27, 46],
            i: 9,
            c: "#ffffff",
            t: 1
        }, {
            p: [-72, 131, 32],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [.01, -.69, 0]
        }, {
            p: [-49, 131, 74],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.13, .95, -3.14]
        }, {
            p: [-48, 130, 127],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.13, .43, -3.14]
        }, {
            p: [-203, 132, 54],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.13, .43, -3.14]
        }, {
            p: [-199, 131, 155],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.13, .43, -3.14]
        }, {
            p: [-142, 158, 57],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-.01, -1.39, -.01]
        }, {
            p: [-141, 158, 136],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-.01, -1.39, -.01]
        }, {
            p: [-162, 130, 155],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.13, .43, -3.14]
        }, {
            p: [-181, 132, 33],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.13, .43, -3.14]
        }, {
            p: [-202, 132, 124],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [2.93, 1.56, -2.92]
        }, {
            p: [25, 125, 150],
            s: [7, 106, 7],
            pe: 1,
            v: 1,
            c: 16234867
        }, {
            p: [-329, 130, 142],
            s: [118, 10, 4],
            c: 16758390
        }, {
            p: [-367, 131, 154],
            s: [216, 2, 37],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [94, 131, 154],
            s: [170, 2, 37],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [12, 132, 139],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.53, -3.14]
        }, {
            p: [138, 131, 139],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.71, -3.14]
        }, {
            p: [191, 131, 160],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .69, -3.14]
        }, {
            p: [-97, 159, 138],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-.01, -1.39, -.01]
        }, {
            p: [-94, 159, 36],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.69, 0]
        }, {
            p: [-95, 159, 69],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.17, 0]
        }, {
            p: [-182, 158, 136],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-.01, -1.39, -.01]
        }, {
            p: [-189, 158, 46],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.87, 0]
        }, {
            p: [-145, 158, 33],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.87, 0]
        }, {
            p: [-203, 131, 79],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.13, -.88, -3.14]
        }, {
            p: [-77, 160, 147],
            s: [48, 4, 10]
        }, {
            p: [-126, 156, 14],
            s: [106, 2, 44]
        }, {
            p: [-175, 160, 147],
            s: [48, 4, 10]
        }, {
            p: [-185, 158, 38],
            s: [20, 3, 4]
        }, {
            p: [-67, 158, 38],
            s: [20, 3, 4]
        }, {
            p: [-126, 158, 91],
            s: [139, 2, 102],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-192, 158, 96],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.95, 0]
        }, {
            p: [-142, 157, 85],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.95, 0]
        }, {
            p: [-60, 160, 138],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-59, 159, 44],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .96, 0]
        }, {
            p: [-73, 159, 138],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .96, 0]
        }, {
            p: [-67, 160, 83],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-67, 160, 71],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-67, 172, 80],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-199, 133, 122],
            s: [2, 29, 4],
            i: 3,
            c: "#fffbfb",
            t: 2,
            d: 2
        }, {
            p: [-53, 133, 119],
            s: [2, 29, 4],
            i: 3,
            c: "#fffbfb",
            t: 2
        }, {
            p: [-60, 160, 90],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.48, 0]
        }, {
            p: [-185, 160, 75],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-185, 160, 87],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-185, 172, 84],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-94, 146, -15],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-64, 160, 135],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-190, 160, 137],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-171, 160, -157],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-156, 133, -155],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-253, 133, -85],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [7, 133, -192],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [2, 133, 59],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-134, 133, 33],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-263, 131, 139],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .34, -3.14]
        }, {
            p: [-534, 131, 142],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .43, 0]
        }, {
            p: [-378, 131, 37],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.17, 0]
        }, {
            p: [384, 131, 27],
            s: [59, 2, 109],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-472, 131, 90],
            s: [130, 2, 31],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [-412, 131, 90],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.05, 0]
        }, {
            p: [-474, 131, 101],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -1.05, -3.14]
        }, {
            p: [-507, 131, 102],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .86, 0]
        }, {
            p: [-450, 131, 162],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -1.05, -3.14]
        }, {
            p: [-96, 211, 193],
            s: [10, 10, 82],
            pe: 1,
            t: 2,
            bo: 1
        }, {
            p: [-96, 163, 225],
            s: [8, 48, 10],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-156, 163, 219],
            s: [8, 48, 10],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-152, 91, 342],
            s: [8, 10, 62],
            l: 1,
            r: [0, .26, 0],
            c: 16776187,
            t: 2
        }, {
            p: [-59, 91, 473],
            s: [8, 10, 62],
            l: 1,
            r: [0, -.35, 0],
            c: 16776187,
            t: 2
        }, {
            p: [-102, 157, 113],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, 1.39, -3.14]
        }, {
            p: [-171, 115, 370],
            s: [11, 11, 71],
            r: [0, -.26, 0]
        }, {
            p: [14, 91, 321],
            s: [8, 10, 62],
            l: 1,
            r: [-3.14, 1.05, -3.14],
            c: 16776187,
            t: 2
        }, {
            p: [-99, 95, 270],
            s: [30, 2, 4],
            l: 1,
            r: [0, .7, 0],
            t: 2
        }, {
            p: [-91, 37, 276],
            s: [20, 49, 12]
        }, {
            p: [15, 185, -23],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [12, 185, 59],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [7, 191, -31],
            s: [3, 34, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [61, 219, -31],
            s: [105, 3, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [115, 189, -31],
            s: [3, 35, 3],
            pe: 1,
            c: "#fffbfb",
            t: 2,
            bo: 1
        }, {
            p: [115, 189, 23],
            s: [3, 35, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [7, 189, 23],
            s: [3, 34, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [61, 219, 23],
            s: [105, 3, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [7, 219, -4],
            s: [3, 3, 51],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [115, 219, -4],
            s: [3, 3, 51],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-259, 189, 25],
            s: [3, 34, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-259, 191, -31],
            s: [3, 34, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-367, 189, 25],
            s: [3, 35, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-367, 189, -31],
            s: [3, 34, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-313, 219, 25],
            s: [105, 3, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-313, 219, -31],
            s: [105, 3, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-259, 219, -3],
            s: [3, 3, 53],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-367, 219, -3],
            s: [3, 3, 53],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [12, 222, -27],
            s: [3, 1, 18],
            l: 1,
            pe: 1,
            r: [0, -.87, 0],
            c: 16776187,
            t: 2
        }, {
            p: [111, 222, 20],
            s: [3, 1, 21],
            l: 1,
            pe: 1,
            r: [0, -.87, 0],
            c: 16776187,
            t: 2
        }, {
            p: [-263, 222, 22],
            s: [3, 1, 18],
            l: 1,
            pe: 1,
            r: [0, -.87, 0],
            c: 16776187,
            t: 2
        }, {
            p: [-434, 167, -38],
            s: [3, 1, 18],
            l: 1,
            pe: 1,
            r: [3.14, -.88, 3.14],
            c: 16776187,
            t: 2
        }, {
            p: [-267, 185, -23],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-268, 185, 68],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-362, 185, 25],
            s: [3, 1, 18],
            l: 1,
            pe: 1,
            r: [0, -.09, 0],
            c: 16776187,
            t: 2
        }, {
            p: [-50, 133, 70],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-49, 132, 35],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.13, .43, -3.14]
        }, {
            p: [-61, 159, 62],
            s: [7, 6, 8],
            i: 18,
            l: 1
        }, {
            p: [-55, 161, 60],
            s: [4, 2, 22]
        }, {
            p: [-55, 161, 133],
            s: [4, 2, 13]
        }, {
            p: [-285, 91, 384],
            s: [8, 10, 62],
            l: 1,
            r: [-3.14, -.26, -3.14],
            c: 16776187,
            t: 2
        }, {
            p: [-230, 95, 261],
            s: [30, 2, 4],
            l: 1,
            r: [-3.14, .87, -3.14],
            t: 2
        }, {
            p: [-204, 91, 518],
            s: [8, 10, 62],
            l: 1,
            r: [3.14, .7, -3.14],
            c: 16776187,
            t: 2
        }, {
            p: [-202, 133, 111],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-272, 180, 80],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [-299, 180, 80],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [-325, 180, 80],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [-351, 180, 80],
            s: [4, 4, 4],
            t: 2
        }, {
            p: [-55, 161, 98],
            s: [4, 2, 12]
        }, {
            p: [-197, 161, 100],
            s: [4, 2, 12]
        }, {
            p: [-197, 161, 53],
            s: [4, 2, 16]
        }, {
            p: [-197, 161, 136],
            s: [4, 2, 9]
        }, {
            p: [-170, 144, -119],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .68, -3.14]
        }, {
            p: [-362, 222, -26],
            s: [4, 1, 22],
            l: 1,
            pe: 1,
            r: [0, -.87, 0],
            c: 16776187,
            t: 2
        }, {
            p: [124, 199, -150],
            s: [4, 4, 79],
            pe: 1,
            t: 2,
            bo: 1
        }, {
            p: [149, 199, -150],
            s: [4, 4, 79],
            pe: 1,
            t: 2,
            bo: 1
        }, {
            p: [175, 199, -150],
            s: [4, 4, 78],
            pe: 1,
            t: 2,
            bo: 1
        }, {
            p: [150, 199, -173],
            s: [77, 4, 4],
            pe: 1,
            t: 2,
            bo: 1
        }, {
            p: [150, 199, -150],
            s: [77, 4, 4],
            t: 2,
            bo: 1
        }, {
            p: [150, 199, -127],
            s: [77, 4, 4],
            pe: 1,
            t: 2,
            bo: 1
        }, {
            p: [-400, 205, -150],
            s: [87, 4, 4],
            pe: 1,
            t: 2,
            bo: 1
        }, {
            p: [-400, 205, -126],
            s: [86, 4, 4],
            pe: 1,
            t: 2,
            bo: 1
        }, {
            p: [-400, 204, -173],
            s: [85, 4, 4],
            pe: 1,
            t: 2,
            bo: 1
        }, {
            p: [-472, 126, -255],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [-3.14, -.87, -3.14]
        }, {
            p: [-465, 131, -251],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .34, 0]
        }, {
            p: [-417, 132, -23],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .18, -3.14]
        }, {
            p: [-373, 132, -103],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .18, -3.14]
        }, {
            p: [-464, 131, -129],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -1.4, 0]
        }, {
            p: [-267, 185, 53],
            s: [3, 1, 18],
            l: 1,
            pe: 1,
            r: [0, -.26, 0],
            c: 16776187,
            t: 2
        }, {
            p: [-197, 178, -301],
            s: [76, 32, 3],
            c: "#3e3e3e",
            t: 5,
            bo: 1
        }, {
            p: [-197, 177, -300],
            s: [78, 1, 4],
            c: "#3e3e3e",
            t: 5,
            bo: 1
        }, {
            p: [-53, 177, -301],
            s: [76, 32, 3],
            c: "#3e3e3e",
            t: 5,
            bo: 1
        }, {
            p: [-53, 176, -300],
            s: [78, 1, 4],
            c: "#3e3e3e",
            t: 5,
            bo: 1
        }, {
            p: [-437, 132, -274],
            s: [53, 24, 30],
            c: "#000000",
            t: 5
        }, {
            p: [194, 132, -274],
            s: [53, 24, 30],
            c: "#000000",
            t: 5
        }, {
            p: [-25, 133, -245],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [253, 132, -238],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .45, 0]
        }, {
            p: [351, 131, -97],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .51, 3.14]
        }, {
            p: [393, 131, -45],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, .07, 3.14]
        }, {
            p: [384, 132, 132],
            s: [68, 1, 20],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [371, 131, 127],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -1.41, 3.14]
        }, {
            p: [358, 132, 77],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, -1.41, 3.14]
        }, {
            p: [280, 168, 152],
            s: [76, 32, 3],
            c: "#3e3e3e",
            t: 5,
            bo: 1
        }, {
            p: [280, 167, 150],
            s: [78, 1, 4],
            c: "#3e3e3e",
            t: 5,
            bo: 1
        }, {
            p: [279, 131, 98],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [3.14, .69, -3.14]
        }, {
            p: [17, 222, 12],
            s: [4, 1, 36],
            l: 1,
            pe: 1,
            r: [0, .7, 0],
            c: 16776187,
            t: 2
        }, {
            p: [-268, 222, -20],
            s: [4, 1, 36],
            l: 1,
            pe: 1,
            r: [0, .7, 0],
            c: 16776187,
            t: 2
        }, {
            p: [-177, 161, -181],
            s: [4, 2, 13]
        }, {
            p: [-165, 161, -150],
            s: [10, 2, 4]
        }, {
            p: [-83, 161, -150],
            s: [10, 2, 4]
        }, {
            p: [-75, 161, -167],
            s: [4, 2, 13]
        }, {
            p: [-75, 161, -236],
            s: [4, 2, 13]
        }, {
            p: [-75, 161, -194],
            s: [4, 2, 10]
        }, {
            p: [-45, 147, -29],
            s: [4, 2, 14]
        }, {
            p: [-45, 147, -92],
            s: [4, 2, 14]
        }, {
            p: [-45, 147, -131],
            s: [4, 2, 14]
        }, {
            p: [-207, 147, -29],
            s: [4, 2, 14]
        }, {
            p: [-207, 147, -90],
            s: [4, 2, 14]
        }, {
            p: [-207, 147, -125],
            s: [4, 2, 14]
        }, {
            p: [3, 132, -186],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-.14, -1.56, -.14]
        }, {
            p: [-344, 168, -33],
            s: [2, 23, 4],
            i: 3,
            c: "#fffbfb",
            t: 2,
            d: 3
        }, {
            p: [-125, -100, -59],
            s: [1096, 232, 518],
            t: 1
        }, {
            p: [120, 131, -76],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.51, 0]
        }, {
            p: [97, 168, -33],
            s: [2, 22, 4],
            i: 3,
            c: "#fffbfb",
            t: 2,
            d: 3
        }, {
            p: [79, 168, -39],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [227, 125, -257],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [-3.14, -.87, -3.14]
        }, {
            p: [161, 132, -278],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, 1.39, 0]
        }, {
            p: [68, 132, -253],
            s: [1, 29, 14],
            pe: 1,
            t: 2
        }, {
            p: [86, 133, -278],
            s: [17, 28, 2],
            pe: 1,
            t: 2
        }, {
            p: [78, 131, -295],
            s: [24, 3, 33],
            c: 16234867
        }, {
            p: [-259, 193, -113],
            s: [3, 10, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-259, 190, -183],
            s: [3, 12, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-317, 177, -183],
            s: [3, 25, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-317, 168, -113],
            s: [3, 35, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-317, 198, -148],
            s: [3, 3, 67],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-259, 198, -107],
            s: [3, 3, 149],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-288, 198, -113],
            s: [55, 3, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-288, 198, -183],
            s: [55, 3, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [65, 168, -113],
            s: [3, 36, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [65, 181, -183],
            s: [3, 21, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [7, 191, -183],
            s: [3, 10, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [7, 175, -113],
            s: [3, 27, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [7, 197, -107],
            s: [3, 3, 149],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [65, 197, -148],
            s: [3, 3, 67],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [36, 197, -183],
            s: [55, 3, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-59, 133, -198],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, 1.56, -3.14]
        }, {
            p: [-266, 201, -175],
            s: [4, 1, 31],
            l: 1,
            pe: 1,
            r: [0, .7, 0],
            c: 16776187,
            t: 2
        }, {
            p: [-310, 201, -114],
            s: [4, 1, 31],
            l: 1,
            pe: 1,
            r: [0, .96, 0],
            c: 16776187,
            t: 2
        }, {
            p: [14, 200, -177],
            s: [4, 1, 31],
            l: 1,
            pe: 1,
            r: [-3.14, .7, -3.14],
            c: 16776187,
            t: 2
        }, {
            p: [110, 132, -286],
            s: [98, 1, 21],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [78, 132, -224],
            s: [36, 1, 44],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [93, 131, -239],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, -.01, 0]
        }, {
            p: [16, 185, 68],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-333, 134, -295],
            s: [23, 32, 32],
            c: 16234867
        }, {
            p: [-333, 166, -244],
            s: [25, 2, 119],
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-333, 131, -217],
            s: [24, 4, 61],
            c: 16234867
        }, {
            p: [78, 135, -216],
            s: [23, 31, 62],
            c: 16234867
        }, {
            p: [-333, 135, -216],
            s: [23, 31, 62],
            c: 16234867
        }, {
            p: [-340, 133, -278],
            s: [17, 28, 2],
            pe: 1,
            t: 2
        }, {
            p: [-323, 132, -253],
            s: [1, 29, 14],
            pe: 1,
            t: 2
        }, {
            p: [-333, 161, -263],
            s: [23, 5, 32],
            c: 16234867
        }, {
            p: [-259, 135, -172],
            s: [4, 55, 26],
            c: 16234867,
            bo: 1
        }, {
            p: [-288, 135, -183],
            s: [54, 59, 4],
            c: 16234867,
            bo: 1
        }, {
            p: [-259, 135, -135],
            s: [4, 58, 48],
            c: 16234867,
            bo: 1
        }, {
            p: [-310, 168, -109],
            s: [3, 1, 18],
            l: 1,
            pe: 1,
            r: [-3.14, 1.39, -3.14],
            c: 16776187,
            t: 2
        }, {
            p: [-266, 168, -155],
            s: [3, 1, 12],
            l: 1,
            pe: 1,
            c: 16776187,
            t: 2
        }, {
            p: [-346, 132, -183],
            s: [30, 42, 4],
            c: 16234867
        }, {
            p: [-357, 168, -117],
            s: [3, 1, 12],
            l: 1,
            pe: 1,
            r: [0, -.08, 0],
            c: 16776187,
            t: 2
        }, {
            p: [7, 131, -135],
            s: [4, 60, 48],
            c: "#ffb676",
            bo: 1
        }, {
            p: [7, 131, -62],
            s: [4, 64, 58],
            c: "#ffb676",
            bo: 1
        }, {
            p: [52, 132, -183],
            s: [30, 57, 4],
            c: "#ffb676",
            bo: 1
        }, {
            p: [89, 132, -183],
            s: [44, 41, 4],
            c: "#ffb676"
        }, {
            p: [65, 168, -137],
            s: [4, 26, 44],
            c: "#ffb676",
            bo: 1
        }, {
            p: [65, 168, -170],
            s: [4, 24, 22],
            c: "#ffb676",
            bo: 1
        }, {
            p: [-317, 168, -158],
            s: [4, 28, 46],
            c: 16234867,
            bo: 1
        }, {
            p: [-317, 168, -123],
            s: [4, 26, 24],
            c: 16234867,
            bo: 1
        }, {
            p: [55, 201, -172],
            s: [4, 1, 36],
            l: 1,
            pe: 1,
            r: [0, .7, 0],
            c: 16776187,
            t: 2
        }, {
            p: [-365, 132, -68],
            s: [4, 43, 2],
            i: 3,
            c: "#fffbfb",
            t: 2,
            d: 2
        }, {
            p: [-356, 168, -41],
            s: [3, 1, 12],
            l: 1,
            pe: 1,
            r: [0, .26, 0],
            c: 16776187,
            t: 2
        }, {
            p: [113, 132, -67],
            s: [4, 42, 48],
            c: "#f7b973"
        }, {
            p: [113, 133, -38],
            s: [4, 46, 10],
            c: 16234867
        }, {
            p: [113, 129, -103],
            s: [4, 49, 24],
            c: 16234867
        }, {
            p: [115, 132, -71],
            s: [4, 43, 2],
            i: 3,
            c: "#fffbfb",
            t: 2
        }, {
            p: [151, 132, -196],
            s: [74, 1, 26],
            c: "#d7e3c1",
            t: 8
        }, {
            p: [105, 168, -146],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [7, 131, -101],
            s: [4, 58, 20],
            c: "#ffb676",
            bo: 1
        }, {
            p: [-259, 131, -63],
            s: [4, 64, 60],
            c: "#ffb676",
            bo: 1
        }, {
            p: [-355, 168, -131],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-259, 131, -102],
            s: [4, 62, 18],
            c: "#ffb676",
            bo: 1
        }, {
            p: [-78, 120, -142],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [3.14, .96, -3.14]
        }, {
            p: [-198, 121, -100],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [3.14, .44, -3.14]
        }, {
            p: [-186, 130, 101],
            s: [65, 109, 54],
            i: 15,
            l: 1,
            r: [3.14, -.08, -3.14]
        }, {
            p: [7, 194, -67],
            s: [3, 10, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [30, 132, -31],
            s: [42, 77, 4],
            c: 16758390,
            bo: 1
        }, {
            p: [51, 189, -31],
            s: [3, 30, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [65, 168, -113],
            s: [4, 14, 4],
            c: "#ffb676",
            bo: 1
        }, {
            p: [108, 222, -23],
            s: [4, 1, 36],
            l: 1,
            pe: 1,
            r: [0, .7, 0],
            c: 16776187,
            t: 2
        }, {
            p: [24, 209, -31],
            s: [13, 2, 4],
            c: 16758390
        }, {
            p: [-363, 130, -67],
            s: [4, 44, 48],
            c: 16234867
        }, {
            p: [-363, 133, -38],
            s: [4, 46, 10],
            c: 16234867
        }, {
            p: [-363, 129, -103],
            s: [4, 49, 24],
            c: 16234867
        }, {
            p: [36, 197, -113],
            s: [55, 3, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [59, 200, -122],
            s: [4, 1, 31],
            l: 1,
            pe: 1,
            r: [-3.14, .79, -3.14],
            c: 16776187,
            t: 2
        }, {
            p: [-259, 194, -64],
            s: [3, 9, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-282, 132, -31],
            s: [42, 77, 4],
            c: 16758390,
            bo: 1
        }, {
            p: [-303, 188, -31],
            s: [3, 31, 3],
            pe: 1,
            c: 16776187,
            t: 2,
            bo: 1
        }, {
            p: [-264, 185, -14],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [-1, 132, 50],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-1, 132, 38],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [2, 133, -117],
            s: [6, 8, 6],
            i: 2
        }, {
            p: [7, 132, -17],
            s: [4, 77, 32],
            c: "#ffb676",
            bo: 1
        }, {
            p: [-259, 132, -17],
            s: [4, 77, 32],
            c: "#ffb676",
            bo: 1
        }, {
            p: [-259, 132, 37],
            s: [4, 57, 76],
            c: "#ffb676"
        }, {
            p: [7, 214, 23],
            s: [2, 9, 2],
            l: 1,
            r: [-.79, 0, 0],
            c: 16776187,
            t: 2
        }, {
            p: [-259, 214, 24],
            s: [2, 9, 2],
            l: 1,
            r: [-.79, 0, 0],
            c: 16776187,
            t: 2
        }, {
            p: [-245, 132, -157],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [-3.14, -.45, -3.14]
        }, {
            p: [-107, 221, 171],
            s: [7, 1, 50],
            l: 1,
            pe: 1,
            r: [0, .87, 0],
            c: 16776187,
            t: 2
        }, {
            p: [-1, 181, -136],
            s: [12, 3, 3],
            t: 2
        }, {
            p: [2, 178, -136],
            s: [11, 2, 2],
            l: 1,
            r: [0, 0, -.7],
            t: 2
        }, {
            p: [-1, 132, -92],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-1, 144, -92],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-199, 146, -101],
            s: [6, 61, 6],
            v: 1,
            bo: 1
        }, {
            p: [-79, 146, -142],
            s: [6, 61, 6],
            v: 1,
            bo: 1
        }, {
            p: [-187, 160, 101],
            s: [6, 61, 6],
            v: 1,
            bo: 1
        }, {
            p: [-416, 131, -204],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .78, 0]
        }, {
            p: [-348, 131, -238],
            s: [7, 6, 8],
            i: 18,
            l: 1,
            r: [0, .78, 0]
        }, {
            p: [-365, 161, -115],
            s: [15, 2, 2],
            l: 1,
            c: "#2f2f2f",
            t: 5
        }, {
            p: [-124, 146, -78],
            s: [80, 50, 104],
            i: 14,
            l: 1
        }, {
            p: [59, 168, -72],
            s: [94, 50, 73],
            i: 14,
            l: 1
        }, {
            p: [57, 168, -127],
            s: [12, 12, 12],
            i: 1
        }, {
            p: [-312, 168, -72],
            s: [94, 50, 73],
            i: 14,
            l: 1
        }, {
            p: [-197, 194, -299],
            s: [74, 0, 30],
            i: 11,
            l: 1,
            r: [1.57, 0, 0],
            bb: 5
        }, {
            p: [-53, 193, -299],
            s: [74, 0, 30],
            i: 11,
            l: 1,
            r: [1.57, 0, 0],
            bb: 3
        }, {
            p: [280, 184, 150],
            s: [74, 0, 30],
            i: 11,
            l: 1,
            r: [1.57, 0, 3.14],
            bb: 3
        }, {
            p: [-535, 155, 152],
            s: [76, 32, 3],
            c: "#3e3e3e",
            t: 5,
            bo: 1
        }, {
            p: [-535, 154, 150],
            s: [78, 1, 4],
            c: "#3e3e3e",
            t: 5,
            bo: 1
        }, {
            p: [-535, 171, 150],
            s: [74, 0, 30],
            i: 11,
            l: 1,
            r: [1.57, 0, 3.14],
            bb: 5
        }]
    }], p = 0; p < l.length; ++p)
        for (var h = 0; h < l[p].objects.length; ++h)
            l[p].objects[h].i = i.prefabIDS[l[p].objects[h].i || l[p].objects[h].id || 0],
            l[p].objects[h].t = i.textureIDS[l[p].objects[h].t || ("LADDER" == l[p].objects[h].i ? 2 : 0)];
    t.exports.maps = l,
    t.exports.manager = function(t, e, i, p) {
        var h, u;
        this.manager = new (n(67).manager)(t,i,p),
        this.maps = l,
        this.modes = o,
        this.rotationModes = c,
        this.spawns = [],
        this.lastGen = null,
        this.terrain = null,
        this.zone = null,
        this.deathY = p.deathY,
        this.setMaps = function(t) {
            this.maps = t || l
        }
        ,
        this.getRandomMap = function() {
            return i.randInt(0, this.maps.length - 1)
        }
        ;
        var f = "";
        this.generate = function(n, o, c) {
            var l = this.maps[n];
            if (l.dthY && i.isNumber(l.dthY) && (this.deathY = l.dthY),
            t)
                try {
                    mapInfo.innerHTML = o.alias + "_" + l.name,
                    gameMessage.innerHTML = specGameMessage.innerHTML = "",
                    curGameInfo.innerHTML = o.name + "<div style='color:rgba(255,255,255,0.6)'>on " + l.name + "</div>" + (l.creator ? "<div style='color:#fff'><span style='color:rgba(255,255,255,0.6)'>by</span> " + l.creator + "</div>" : ""),
                    specGameInfo.innerHTML = o.name
                } catch (t) {}
            t && f != l.modURL && ((f = l.modURL) && "" != f && loadModPack(f, !0));
            var d = n;
            if (c || this.lastGen !== d) {
                this.lastGen = d,
                this.manager.removeAll(),
                t && t.init(l),
                e && (e.reset(),
                t.scene.add(e.ExplosionManager)),
                l.terrainSeed && l.terrainWidth && l.terrainHeight ? (this.terrain = r.fromConfig(l),
                this.terrain.rotation.x = -Math.PI / 2,
                t && t.scene.add(this.terrain)) : this.terrain = null,
                l.zone && l.zoneSize && l.zoneSpeed ? (this.zone = s.fromConfig(l, t),
                t && t.scene.add(this.zone)) : this.zone = null;
                for (var m = 0, g = 0, v = 0, y = 0, b = 0; b < l.objects.length; ++b) {
                    var w = (h = l.objects[b]).p[0]
                      , x = h.p[1]
                      , M = h.p[2];
                    if (h.l || h.col || "CUBE" != h.i || (w - h.s[0] < m && (m = w - h.s[0]),
                    w + h.s[0] > g && (g = w + h.s[0]),
                    M - h.s[2] < v && (v = M - h.s[2]),
                    M + h.s[2] > y && (y = M + h.s[2])),
                    "CUBE" == h.i) {
                        for (var _ = 1, S = 0; S < l.objects.length; ++S)
                            if ("CUBE" == (u = l.objects[S]).i && h != u && x <= u.p[1] + u.s[1] && x >= u.p[1] && w + h.s[0] / 2 < u.p[0] + u.s[0] / 2 && w - h.s[0] / 2 > u.p[0] - u.s[0] / 2 && M + h.s[2] / 2 < u.p[2] + u.s[2] / 2 && M - h.s[2] / 2 > u.p[2] - u.s[2] / 2) {
                                _ = 0;
                                break
                            }
                        this.manager.addBlock(w, x, M, h.s[0], h.s[2], h.s[1], [1, 1, 1, _, 1, 1], {
                            src: h.t.toLowerCase() + "_" + ("GRASS" == h.t ? 1 : 0),
                            colr: h.c,
                            emissive: h.e || 0,
                            opacity: 1 != h.o && null != h.o ? h.o : 1,
                            transparent: 1 != h.o && null != h.o,
                            penetrable: h.pe,
                            health: h.h || h.hp,
                            amb: l.nAmb ? null : p.ambientVal,
                            yR: h.r ? h.r[0] : 0,
                            xR: h.r ? h.r[1] : 0,
                            zR: h.r ? h.r[2] : 0,
                            noCol: h.l || h.col,
                            isBorder: h.bo,
                            noVis: h.v
                        })
                    } else if ("OBJECTIVE" == h.i)
                        this.manager.addObjective(w, x, M, h.s[0], h.s[2], h.s[1]);
                    else if ("FLAG" == h.i)
                        this.manager.addFlag(w, x, M, parseInt(h.tm || 0) + 1);
                    else if ("WEAPON_PICKUP" == h.i)
                        this.manager.addWeapon(w, x, M, h.r ? h.r[2] : 0, h.r ? h.r[0] : 0, h.r ? h.r[1] : 0, parseInt(h.w || h.wid || 0), a[parseInt(h.w || h.wid || 0)], h.wr);
                    else if ("PARTICLES" != h.i)
                        "PLANE" == h.i || "BILLBOARD" == h.i ? this.manager.addPlane(w, x, M, h.s[2] / 2, h.s[0] / 2, {
                            src: "BILLBOARD" == h.i ? "pubs/b_" + (h.bb || i.randInt(1, p.billboardCnt)) : h.t.toLowerCase() + "_0",
                            emissive: h.e || 0,
                            noise: h.en || 0,
                            opacity: 1 != h.o && null != h.o ? h.o : 1,
                            penetrable: h.pe,
                            health: h.h || h.hp,
                            colr: h.c,
                            col: !(h.l || h.col),
                            noVis: h.v,
                            side: "BILLBOARD" == h.i ? 2 : 0
                        }, h.r ? h.r[2] : 0, (h.r ? h.r[0] : 0) - Math.PI / 2, h.r ? h.r[1] : 0) : "RAMP" == h.i ? this.manager.addRamp(w, x, M, h.s[0], h.s[1], h.s[2], (h.d || 0) * Math.PI / 2, h.b, h.t ? h.t.toLowerCase() + "_0" : "grey_0", h.v, h.c, p.ambScale) : "SCORE_ZONE" == h.i ? this.manager.addScoreZone(w, x, M, h.s[0], h.s[2], h.s[1], h.sp || 1) : "DEATH_ZONE" == h.i ? this.manager.addDeathZone(w, x, M, h.s[0], h.s[2], h.s[1]) : "CHECK_POINT" == h.i ? this.manager.addCheckPoint(w, x, M, h.s[0], h.s[2], h.s[1], h.su || !1, h.d || 0) : "LADDER" == h.i ? this.manager.addLadder(w, x, M, h.s[1], (h.d || 0) * Math.PI / 2, h.v, h.t ? h.t.toLowerCase() + "_0" : "floor_0", h.c) : this.manager.addMesh(w, x, M, h.r, h.s[0] / 2, h.s[1] / 2, h.s[2] / 2, h.i.toLowerCase(), h.l || h.col);
                    else if (e) {
                        var T = e.prefabs[parseInt(h.pr || 0)];
                        T.count = Math.round((h.s[0] + h.s[2] + h.s[1]) / T.cnt),
                        e.area(w, x, M, h.s[0], h.s[1], h.s[2], T)
                    }
                }
                if (this.manager.addNoisePlanes(),
                l.shadLength = Math.round(Math.abs(g - m) / 2.5),
                l.shadWidth = Math.round(Math.abs(y - v) / 2.5),
                t && t.updateLightMap(l),
                this.manager.aoOpac = 1,
                t) {
                    var E, k = p.ambScale;
                    for (b = 0; b < this.manager.objects.length; ++b)
                        if (!(h = this.manager.objects[b]).noVis && !h.complexMesh && !h.health)
                            for (S = b + 1; S < this.manager.objects.length; ++S)
                                if (!(u = this.manager.objects[S]).noVis && !u.health && !u.complexMesh && this.manager.collision(h, u, 0)) {
                                    if (E = i.boxIntersection(h, u, "x", "z", [Math.PI, 0, Math.PI / 2, -Math.PI / 2]))
                                        for (var A = 0; A < E.length; ++A)
                                            if (!E[A].dontUse) {
                                                for (var L = i.getIntersection(h, u, "y"), P = k * (h.aoMlt || 1) * (u.aoMlt || 1), C = 0; 2 > C; C++)
                                                    I = (E[A].d + Math.PI / 2 * C) % (2 * Math.PI),
                                                    P = Math.min(P, this.manager.limitAmb(k, E[A], I, "x", "z", h, u));
                                                for (C = 0; 2 > C; C++)
                                                    if (I = (E[A].d + Math.PI / 2 * C) % (2 * Math.PI),
                                                    this.manager.addAmbient(E[A].x + P * Math.cos(I), L.y, E[A].z + P * Math.sin(I), -I + Math.PI, 0, 0, L.height, P + p.ambOff, 1),
                                                    I == Math.PI / 2 || I == -Math.PI / 2 || I == 1.5 * Math.PI) {
                                                        var R = i.limitRect(E[A].z + P * Math.sin(I), L.y + P + L.height + p.ambOff, P, P, 0, [h, u], "z", "y");
                                                        this.manager.addAmbient(E[A].x + P * Math.cos(I), R.y, R.z, -I + Math.PI, Math.PI, 0, R.length, R.height, 0, [h, u], "g1-" + C + "-" + A, [E[A].x, L.y + L.height, E[A].z]),
                                                        R = i.limitRect(E[A].z + P * Math.sin(I), L.y - P - L.height - p.ambOff, P, P, 0, [h, u], "z", "y"),
                                                        this.manager.addAmbient(E[A].x + P * Math.cos(I), R.y, R.z, -I + Math.PI, 0, 0, R.length, R.height, 0, [h, u], "g2-" + C + "-" + A, [E[A].x, L.y - L.height, E[A].z])
                                                    } else {
                                                        R = i.limitRect(E[A].x + P * Math.cos(I), L.y + P + L.height + p.ambOff, P, P, 0, [h, u], "x", "y");
                                                        this.manager.addAmbient(R.x, R.y, E[A].z + P * Math.sin(I), -I + Math.PI, Math.PI, 0, R.width, R.height, 0, [h, u], "g1-" + C + "-" + A, [E[A].x, L.y + L.height, E[A].z]),
                                                        R = i.limitRect(E[A].x + P * Math.cos(I), L.y - P - L.height - p.ambOff, P, P, 0, [h, u], "x", "y"),
                                                        this.manager.addAmbient(R.x, R.y, E[A].z + P * Math.sin(I), -I + Math.PI, 0, 0, R.width, R.height, 0, [h, u], "g2-" + C + "-" + A, [E[A].x, L.y - L.height, E[A].z])
                                                    }
                                            }
                                    if (E = i.boxIntersection(h, u, "z", "y", [Math.PI, 0, -Math.PI / 2, Math.PI / 2]))
                                        for (A = 0; A < E.length; ++A)
                                            if (!E[A].dontUse) {
                                                for (L = i.getIntersection(h, u, "x"),
                                                P = k * (h.aoMlt || 1) * (u.aoMlt || 1),
                                                C = 0; 2 > C; C++)
                                                    I = E[A].d + Math.PI / 2 * (C ? 0 : 1),
                                                    P = Math.min(P, this.manager.limitAmb(k, E[A], -I + Math.PI / 2, "z", "y", h, u));
                                                for (C = 0; 2 > C; C++) {
                                                    I = E[A].d + Math.PI / 2 * (C ? 0 : 1),
                                                    this.manager.addAmbient(L.x, E[A].y + P * Math.cos(I), E[A].z + P * Math.sin(I), 0, I, -Math.PI / 2, L.width, P + p.ambOff, 1);
                                                    R = i.limitRect(L.x + L.width + P + p.ambOff, E[A].z + P * Math.sin(I), P, P, 0, [h, u], "x", "z");
                                                    this.manager.addAmbient(R.x, E[A].y + P * Math.cos(I), E[A].z + P * Math.sin(I), Math.PI, I == Math.PI ? I : -I % Math.PI, I == 1.5 * Math.PI ? 0 : -Math.PI / 2, I == 1.5 * Math.PI ? P : R.length, I == 1.5 * Math.PI ? R.length : P, 0, [h, u], "g3-" + C + "-" + A, [L.x + L.width, E[A].y, E[A].z]),
                                                    R = i.limitRect(L.x - L.width - P - p.ambOff, E[A].z + P * Math.sin(I), P, P, Math.PI / 2, [h, u], "x", "z"),
                                                    this.manager.addAmbient(R.x, E[A].y + P * Math.cos(I), E[A].z + P * Math.sin(I), Math.PI, -I % Math.PI, I == Math.PI || I == 1.5 * Math.PI ? Math.PI / 2 : Math.PI, I == Math.PI || I == 1.5 * Math.PI ? R.width : P, I == Math.PI || I == 1.5 * Math.PI ? P : R.width, 0, [h, u], "g4-" + C + "-" + A, [L.x - L.width, E[A].y, E[A].z])
                                                }
                                            }
                                    if (E = i.boxIntersection(h, u, "x", "y", [Math.PI, 0, -Math.PI / 2, Math.PI / 2]))
                                        for (A = 0; A < E.length; ++A)
                                            if (!E[A].dontUse) {
                                                for (L = i.getIntersection(h, u, "z"),
                                                P = k * (h.aoMlt || 1) * (u.aoMlt || 1),
                                                C = 0; 2 > C; C++)
                                                    I = E[A].d + Math.PI / 2 * (C ? 0 : 1),
                                                    P = Math.min(P, this.manager.limitAmb(k, E[A], -I + Math.PI / 2, "x", "y", h, u));
                                                var I;
                                                for (C = 0; 2 > C; C++)
                                                    if (I = E[A].d + Math.PI / 2 * (C ? 0 : 1),
                                                    this.manager.addAmbient(E[A].x + P * Math.sin(I), E[A].y + P * Math.cos(I), L.z, Math.PI / 2, I, -Math.PI / 2, L.length, P + p.ambOff, 1),
                                                    I == Math.PI || 0 == I) {
                                                        R = i.limitRect(E[A].z + P * Math.sin(I), L.z + L.length + P + p.ambOff, P, P, Math.PI / 2, [h, u], "x", "z");
                                                        this.manager.addAmbient(E[A].x + P * Math.sin(I), E[A].y + P * Math.cos(I), R.z, Math.PI / 2, I, -Math.PI / 2, R.length, R.width, 0, [h, u], "g5-" + C + "-" + A, [E[A].x, E[A].y, L.z + L.length]),
                                                        R = i.limitRect(E[A].z + P * Math.sin(I), L.z - L.length - P - p.ambOff, P, P, Math.PI / 2, [h, u], "x", "z"),
                                                        this.manager.addAmbient(E[A].x + P * Math.sin(I), E[A].y + P * Math.cos(I), R.z, Math.PI / 2, I, Math.PI, R.width, R.length, 0, [h, u], "g6-" + C + "-" + A, [E[A].x, E[A].y, L.z - L.length])
                                                    } else {
                                                        R = i.limitRect(E[A].x + P * Math.sin(I), L.z + L.length + P + p.ambOff, P, P, Math.PI / 2, [h, u], "x", "z");
                                                        this.manager.addAmbient(R.x, E[A].y + P * Math.cos(I), R.z, Math.PI / 2, I, -Math.PI / 2, R.length, R.width, 0, [h, u], "g5-" + C + "-" + A, [E[A].x, E[A].y, L.z + L.length]),
                                                        R = i.limitRect(E[A].x + P * Math.sin(I), L.z - L.length - P - p.ambOff, P, P, Math.PI / 2, [h, u], "x", "z"),
                                                        this.manager.addAmbient(R.x, E[A].y + P * Math.cos(I), R.z, Math.PI / 2, I, Math.PI, R.width, R.length, 0, [h, u], "g6-" + C + "-" + A, [E[A].x, E[A].y, L.z - L.length])
                                                    }
                                            }
                                }
                    this.manager.addPendingAOs()
                }
                this.spawns.length = 0;
                for (b = 0; b < l.spawns.length; ++b)
                    this.spawns.push({
                        x: l.spawns[b][0],
                        y: l.spawns[b][1],
                        z: l.spawns[b][2],
                        team: l.spawns[b][3],
                        dir: parseInt(l.spawns[b][4]) || 0
                    });
                t && t.addMeshGroups()
            }
            this.manager.resetAll()
        }
    }
}
, function(t, e, n) {
    e.encode = n(25).encode,
    e.decode = n(30).decode,
    e.Encoder = n(52).Encoder,
    e.Decoder = n(53).Decoder,
    e.createCodec = n(54).createCodec,
    e.codec = n(55).codec
}
, function(t, e, n) {
    (function(e) {
        function n(t) {
            return t && t.isBuffer && t
        }
        t.exports = n(void 0 !== e && e) || n(this.Buffer) || n("undefined" != typeof window && window.Buffer) || this.Buffer
    }
    ).call(this, n(27).Buffer)
}
, function(t, e, n) {
    e.byteLength = function(t) {
        var e = l(t)
          , n = e[0]
          , i = e[1];
        return 3 * (n + i) / 4 - i
    }
    ,
    e.toByteArray = function(t) {
        for (var e, n = l(t), i = n[0], a = n[1], o = new s(function(t, e, n) {
            return 3 * (e + n) / 4 - n
        }(0, i, a)), c = 0, p = 0 < a ? i - 4 : i, h = 0; h < p; h += 4)
            e = r[t.charCodeAt(h)] << 18 | r[t.charCodeAt(h + 1)] << 12 | r[t.charCodeAt(h + 2)] << 6 | r[t.charCodeAt(h + 3)],
            o[c++] = 255 & e >> 16,
            o[c++] = 255 & e >> 8,
            o[c++] = 255 & e;
        return 2 === a && (e = r[t.charCodeAt(h)] << 2 | r[t.charCodeAt(h + 1)] >> 4,
        o[c++] = 255 & e),
        1 === a && (e = r[t.charCodeAt(h)] << 10 | r[t.charCodeAt(h + 1)] << 4 | r[t.charCodeAt(h + 2)] >> 2,
        o[c++] = 255 & e >> 8,
        o[c++] = 255 & e),
        o
    }
    ,
    e.fromByteArray = function(t) {
        for (var e, n = t.length, r = n % 3, s = [], a = 16383, o = 0, c = n - r; o < c; o += a)
            s.push(h(t, o, o + a > c ? c : o + a));
        return 1 === r ? (e = t[n - 1],
        s.push(i[e >> 2] + i[63 & e << 4] + "==")) : 2 === r && (e = (t[n - 2] << 8) + t[n - 1],
        s.push(i[e >> 10] + i[63 & e >> 4] + i[63 & e << 2] + "=")),
        s.join("")
    }
    ;
    for (var i = [], r = [], s = "undefined" == typeof Uint8Array ? Array : Uint8Array, a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", o = 0, c = a.length; o < c; ++o)
        i[o] = a[o],
        r[a.charCodeAt(o)] = o;
    function l(t) {
        var e = t.length;
        if (0 < e % 4)
            throw new Error("Invalid string. Length must be a multiple of 4");
        var n = t.indexOf("=");
        return -1 === n && (n = e),
        [n, n === e ? 0 : 4 - n % 4]
    }
    function p(t) {
        return i[63 & t >> 18] + i[63 & t >> 12] + i[63 & t >> 6] + i[63 & t]
    }
    function h(t, e, n) {
        for (var i, r = [], s = e; s < n; s += 3)
            i = (16711680 & t[s] << 16) + (65280 & t[s + 1] << 8) + (255 & t[s + 2]),
            r.push(p(i));
        return r.join("")
    }
    r[45] = 62,
    r[95] = 63
}
, function(t, e, n) {
    var i = n(3);
    function r(t) {
        return Array(t)
    }
    (e = t.exports = r(0)).alloc = r,
    e.concat = i.concat,
    e.from = function(t) {
        if (!i.isBuffer(t) && i.isView(t))
            t = i.Uint8Array.from(t);
        else if (i.isArrayBuffer(t))
            t = new Uint8Array(t);
        else {
            if ("string" == typeof t)
                return i.from.call(e, t);
            if ("number" == typeof t)
                throw new TypeError('"value" argument must not be a number')
        }
        return Array.prototype.slice.call(t)
    }
}
, function(t, e, n) {
    var i = n(3)
      , r = i.global;
    function s(t) {
        return new r(t)
    }
    (e = t.exports = i.hasBuffer ? s(0) : []).alloc = i.hasBuffer && r.alloc || s,
    e.concat = i.concat,
    e.from = function(t) {
        if (!i.isBuffer(t) && i.isView(t))
            t = i.Uint8Array.from(t);
        else if (i.isArrayBuffer(t))
            t = new Uint8Array(t);
        else {
            if ("string" == typeof t)
                return i.from.call(e, t);
            if ("number" == typeof t)
                throw new TypeError('"value" argument must not be a number')
        }
        return r.from && 1 !== r.from.length ? r.from(t) : new r(t)
    }
}
, function(t, e, n) {
    var i = n(3);
    function r(t) {
        return new Uint8Array(t)
    }
    (e = t.exports = i.hasArrayBuffer ? r(0) : []).alloc = r,
    e.concat = i.concat,
    e.from = function(t) {
        if (i.isView(t)) {
            var n = t.byteOffset
              , r = t.byteLength;
            (t = t.buffer).byteLength !== r && (t.slice ? t = t.slice(n, n + r) : (t = new Uint8Array(t)).byteLength !== r && (t = Array.prototype.slice.call(t, n, n + r)))
        } else {
            if ("string" == typeof t)
                return i.from.call(e, t);
            if ("number" == typeof t)
                throw new TypeError('"value" argument must not be a number')
        }
        return new Uint8Array(t)
    }
}
, function(t, e) {
    e.copy = function(t, e, n, i) {
        var r;
        n || (n = 0),
        i || 0 === i || (i = this.length),
        e || (e = 0);
        var s = i - n;
        if (t === this && n < e && e < i)
            for (r = s - 1; 0 <= r; r--)
                t[r + e] = this[r + n];
        else
            for (r = 0; r < s; r++)
                t[r + e] = this[r + n];
        return s
    }
    ,
    e.toString = function(t, e, n) {
        var i = this
          , r = 0 | e;
        n || (n = i.length);
        for (var s = "", a = 0; r < n; )
            128 > (a = i[r++]) ? s += String.fromCharCode(a) : (192 == (224 & a) ? a = (31 & a) << 6 | 63 & i[r++] : 224 == (240 & a) ? a = (15 & a) << 12 | (63 & i[r++]) << 6 | 63 & i[r++] : 240 == (248 & a) && (a = (7 & a) << 18 | (63 & i[r++]) << 12 | (63 & i[r++]) << 6 | 63 & i[r++]),
            65536 <= a ? (a -= 65536,
            s += String.fromCharCode(55296 + (a >>> 10), 56320 + (1023 & a))) : s += String.fromCharCode(a));
        return s
    }
    ,
    e.write = function(t, e) {
        for (var n = this, i = e || (e |= 0), r = t.length, s = 0, a = 0; a < r; )
            128 > (s = t.charCodeAt(a++)) ? n[i++] = s : 2048 > s ? (n[i++] = 192 | s >>> 6,
            n[i++] = 128 | 63 & s) : 55296 > s || 57343 < s ? (n[i++] = 224 | s >>> 12,
            n[i++] = 128 | 63 & s >>> 6,
            n[i++] = 128 | 63 & s) : (s = 65536 + (s - 55296 << 10 | t.charCodeAt(a++) - 56320),
            n[i++] = 240 | s >>> 18,
            n[i++] = 128 | 63 & s >>> 12,
            n[i++] = 128 | 63 & s >>> 6,
            n[i++] = 128 | 63 & s);
        return i - e
    }
}
, function(t, e, n) {
    e.setExtPackers = function(t) {
        t.addExtPacker(14, Error, [h, c]),
        t.addExtPacker(1, EvalError, [h, c]),
        t.addExtPacker(2, RangeError, [h, c]),
        t.addExtPacker(3, ReferenceError, [h, c]),
        t.addExtPacker(4, SyntaxError, [h, c]),
        t.addExtPacker(5, TypeError, [h, c]),
        t.addExtPacker(6, URIError, [h, c]),
        t.addExtPacker(10, RegExp, [p, c]),
        t.addExtPacker(11, Boolean, [l, c]),
        t.addExtPacker(12, String, [l, c]),
        t.addExtPacker(13, Date, [Number, c]),
        t.addExtPacker(15, Number, [l, c]),
        "undefined" != typeof Uint8Array && (t.addExtPacker(17, Int8Array, a),
        t.addExtPacker(18, Uint8Array, a),
        t.addExtPacker(19, Int16Array, a),
        t.addExtPacker(20, Uint16Array, a),
        t.addExtPacker(21, Int32Array, a),
        t.addExtPacker(22, Uint32Array, a),
        t.addExtPacker(23, Float32Array, a),
        "undefined" != typeof Float64Array && t.addExtPacker(24, Float64Array, a),
        "undefined" != typeof Uint8ClampedArray && t.addExtPacker(25, Uint8ClampedArray, a),
        t.addExtPacker(26, ArrayBuffer, a),
        t.addExtPacker(29, DataView, a)),
        r.hasBuffer && t.addExtPacker(27, s, r.from)
    }
    ;
    var i, r = n(3), s = r.global, a = r.Uint8Array.from, o = {
        name: 1,
        message: 1,
        stack: 1,
        columnNumber: 1,
        fileName: 1,
        lineNumber: 1
    };
    function c(t) {
        return i || (i = n(25).encode),
        i(t)
    }
    function l(t) {
        return t.valueOf()
    }
    function p(t) {
        (t = RegExp.prototype.toString.call(t).split("/")).shift();
        var e = [t.pop()];
        return e.unshift(t.join("/")),
        e
    }
    function h(t) {
        var e = {};
        for (var n in o)
            e[n] = t[n];
        return e
    }
}
, function(t, e, n) {
    var i = n(11)
      , r = n(19)
      , s = r.Uint64BE
      , a = r.Int64BE
      , o = n(3)
      , c = n(18)
      , l = n(49)
      , p = n(28).uint8
      , h = n(16).ExtBuffer
      , u = "undefined" != typeof Uint8Array
      , f = "undefined" != typeof Map
      , d = [];
    d[1] = 212,
    d[2] = 213,
    d[4] = 214,
    d[8] = 215,
    d[16] = 216,
    e.getWriteType = function(t) {
        function e(t, e) {
            if (null === e)
                return n(t, e);
            if (b(e))
                return w(t, e);
            if (i(e))
                return function(t, e) {
                    var n = e.length;
                    g[16 > n ? 144 + n : 65535 >= n ? 220 : 221](t, n);
                    for (var i = t.codec.encode, r = 0; r < n; r++)
                        i(t, e[r])
                }(t, e);
            if (s.isUint64BE(e))
                return function(t, e) {
                    g[207](t, e.toArray())
                }(t, e);
            if (a.isInt64BE(e))
                return function(t, e) {
                    g[211](t, e.toArray())
                }(t, e);
            var r = t.codec.getExtPacker(e);
            return r && (e = r(e)),
            e instanceof h ? function(t, e) {
                var n = e.buffer
                  , i = n.length
                  , r = d[i] || (255 > i ? 199 : 65535 >= i ? 200 : 201);
                g[r](t, i),
                p[e.type](t),
                t.send(n)
            }(t, e) : void x(t, e)
        }
        function n(t, e) {
            g[192](t, e)
        }
        function r(t, e) {
            var n = e.length
              , i = 255 > n ? 196 : 65535 >= n ? 197 : 198;
            g[i](t, n),
            t.send(e)
        }
        function m(t, e) {
            var n = Object.keys(e)
              , i = n.length
              , r = 16 > i ? 128 + i : 65535 >= i ? 222 : 223;
            g[r](t, i);
            var s = t.codec.encode;
            n.forEach(function(n) {
                s(t, n),
                s(t, e[n])
            })
        }
        var g = l.getWriteToken(t)
          , v = t && t.useraw
          , y = u && t && t.binarraybuffer
          , b = y ? o.isArrayBuffer : o.isBuffer
          , w = y ? function(t, e) {
            r(t, new Uint8Array(e))
        }
        : r
          , x = f && t && t.usemap ? function(t, e) {
            if (!(e instanceof Map))
                return m(t, e);
            var n = e.size
              , i = 16 > n ? 128 + n : 65535 >= n ? 222 : 223;
            g[i](t, n);
            var r = t.codec.encode;
            e.forEach(function(e, n) {
                r(t, n),
                r(t, e)
            })
        }
        : m;
        return {
            boolean: function(t, e) {
                var n = e ? 195 : 194;
                g[n](t, e)
            },
            function: n,
            number: function(t, e) {
                var n = 0 | e;
                e === n ? g[-32 <= n && 127 >= n ? 255 & n : 0 <= n ? 255 >= n ? 204 : 65535 >= n ? 205 : 206 : -128 <= n ? 208 : -32768 <= n ? 209 : 210](t, n) : g[203](t, e)
            },
            object: v ? function(t, n) {
                return b(n) ? function(t, e) {
                    var n = e.length;
                    g[32 > n ? 160 + n : 65535 >= n ? 218 : 219](t, n),
                    t.send(e)
                }(t, n) : void e(t, n)
            }
            : e,
            string: function(t) {
                return function(e, n) {
                    var i = n.length
                      , r = 5 + 3 * i;
                    e.offset = e.reserve(r);
                    var s = e.buffer
                      , a = t(i)
                      , o = e.offset + a;
                    i = c.write.call(s, n, o);
                    var l = t(i);
                    if (a !== l) {
                        var p = o + i;
                        c.copy.call(s, s, o + l - a, o, p)
                    }
                    var h = 1 === l ? 160 + i : 3 >= l ? 215 + l : 219;
                    g[h](e, i),
                    e.offset += i
                }
            }(v ? function(t) {
                return 32 > t ? 1 : 65535 >= t ? 3 : 5
            }
            : function(t) {
                return 32 > t ? 1 : 255 >= t ? 2 : 65535 >= t ? 3 : 5
            }
            ),
            symbol: n,
            undefined: n
        }
    }
}
, function(t, e, n) {
    var i = n(17)
      , r = n(19)
      , s = r.Uint64BE
      , a = r.Int64BE
      , o = n(28).uint8
      , c = n(3)
      , l = c.global
      , p = c.hasBuffer && "TYPED_ARRAY_SUPPORT"in l && !l.TYPED_ARRAY_SUPPORT
      , h = c.hasBuffer && l.prototype || {};
    function u() {
        var t = o.slice();
        return t[196] = f(196),
        t[197] = d(197),
        t[198] = m(198),
        t[199] = f(199),
        t[200] = d(200),
        t[201] = m(201),
        t[202] = g(202, 4, h.writeFloatBE || b, !0),
        t[203] = g(203, 8, h.writeDoubleBE || w, !0),
        t[204] = f(204),
        t[205] = d(205),
        t[206] = m(206),
        t[207] = g(207, 8, v),
        t[208] = f(208),
        t[209] = d(209),
        t[210] = m(210),
        t[211] = g(211, 8, y),
        t[217] = f(217),
        t[218] = d(218),
        t[219] = m(219),
        t[220] = d(220),
        t[221] = m(221),
        t[222] = d(222),
        t[223] = m(223),
        t
    }
    function f(t) {
        return function(e, n) {
            var i = e.reserve(2)
              , r = e.buffer;
            r[i++] = t,
            r[i] = n
        }
    }
    function d(t) {
        return function(e, n) {
            var i = e.reserve(3)
              , r = e.buffer;
            r[i++] = t,
            r[i++] = n >>> 8,
            r[i] = n
        }
    }
    function m(t) {
        return function(e, n) {
            var i = e.reserve(5)
              , r = e.buffer;
            r[i++] = t,
            r[i++] = n >>> 24,
            r[i++] = n >>> 16,
            r[i++] = n >>> 8,
            r[i] = n
        }
    }
    function g(t, e, n, i) {
        return function(r, s) {
            var a = r.reserve(e + 1);
            r.buffer[a++] = t,
            n.call(r.buffer, s, a, i)
        }
    }
    function v(t, e) {
        new s(this,e,t)
    }
    function y(t, e) {
        new a(this,e,t)
    }
    function b(t, e) {
        i.write(this, t, e, !1, 23, 4)
    }
    function w(t, e) {
        i.write(this, t, e, !1, 52, 8)
    }
    e.getWriteToken = function(t) {
        return t && t.uint8array ? function() {
            var t = u();
            return t[202] = g(202, 4, b),
            t[203] = g(203, 8, w),
            t
        }() : p || c.hasBuffer && t && t.safe ? function() {
            var t = o.slice();
            return t[196] = g(196, 1, l.prototype.writeUInt8),
            t[197] = g(197, 2, l.prototype.writeUInt16BE),
            t[198] = g(198, 4, l.prototype.writeUInt32BE),
            t[199] = g(199, 1, l.prototype.writeUInt8),
            t[200] = g(200, 2, l.prototype.writeUInt16BE),
            t[201] = g(201, 4, l.prototype.writeUInt32BE),
            t[202] = g(202, 4, l.prototype.writeFloatBE),
            t[203] = g(203, 8, l.prototype.writeDoubleBE),
            t[204] = g(204, 1, l.prototype.writeUInt8),
            t[205] = g(205, 2, l.prototype.writeUInt16BE),
            t[206] = g(206, 4, l.prototype.writeUInt32BE),
            t[207] = g(207, 8, v),
            t[208] = g(208, 1, l.prototype.writeInt8),
            t[209] = g(209, 2, l.prototype.writeInt16BE),
            t[210] = g(210, 4, l.prototype.writeInt32BE),
            t[211] = g(211, 8, y),
            t[217] = g(217, 1, l.prototype.writeUInt8),
            t[218] = g(218, 2, l.prototype.writeUInt16BE),
            t[219] = g(219, 4, l.prototype.writeUInt32BE),
            t[220] = g(220, 2, l.prototype.writeUInt16BE),
            t[221] = g(221, 4, l.prototype.writeUInt32BE),
            t[222] = g(222, 2, l.prototype.writeUInt16BE),
            t[223] = g(223, 4, l.prototype.writeUInt32BE),
            t
        }() : u()
    }
}
, function(t, e, n) {
    e.setExtUnpackers = function(t) {
        t.addExtUnpacker(14, [o, l(Error)]),
        t.addExtUnpacker(1, [o, l(EvalError)]),
        t.addExtUnpacker(2, [o, l(RangeError)]),
        t.addExtUnpacker(3, [o, l(ReferenceError)]),
        t.addExtUnpacker(4, [o, l(SyntaxError)]),
        t.addExtUnpacker(5, [o, l(TypeError)]),
        t.addExtUnpacker(6, [o, l(URIError)]),
        t.addExtUnpacker(10, [o, c]),
        t.addExtUnpacker(11, [o, p(Boolean)]),
        t.addExtUnpacker(12, [o, p(String)]),
        t.addExtUnpacker(13, [o, p(Date)]),
        t.addExtUnpacker(15, [o, p(Number)]),
        "undefined" != typeof Uint8Array && (t.addExtUnpacker(17, p(Int8Array)),
        t.addExtUnpacker(18, p(Uint8Array)),
        t.addExtUnpacker(19, [h, p(Int16Array)]),
        t.addExtUnpacker(20, [h, p(Uint16Array)]),
        t.addExtUnpacker(21, [h, p(Int32Array)]),
        t.addExtUnpacker(22, [h, p(Uint32Array)]),
        t.addExtUnpacker(23, [h, p(Float32Array)]),
        "undefined" != typeof Float64Array && t.addExtUnpacker(24, [h, p(Float64Array)]),
        "undefined" != typeof Uint8ClampedArray && t.addExtUnpacker(25, p(Uint8ClampedArray)),
        t.addExtUnpacker(26, h),
        t.addExtUnpacker(29, [h, p(DataView)])),
        r.hasBuffer && t.addExtUnpacker(27, p(s))
    }
    ;
    var i, r = n(3), s = r.global, a = {
        name: 1,
        message: 1,
        stack: 1,
        columnNumber: 1,
        fileName: 1,
        lineNumber: 1
    };
    function o(t) {
        return i || (i = n(30).decode),
        i(t)
    }
    function c(t) {
        return RegExp.apply(null, t)
    }
    function l(t) {
        return function(e) {
            var n = new t;
            for (var i in a)
                n[i] = e[i];
            return n
        }
    }
    function p(t) {
        return function(e) {
            return new t(e)
        }
    }
    function h(t) {
        return new Uint8Array(t).buffer
    }
}
, function(t, e, n) {
    var i = n(32);
    function r(t) {
        var e, n = Array(256);
        for (e = 0; 127 >= e; e++)
            n[e] = s(e);
        for (e = 128; 143 >= e; e++)
            n[e] = o(e - 128, t.map);
        for (e = 144; 159 >= e; e++)
            n[e] = o(e - 144, t.array);
        for (e = 160; 191 >= e; e++)
            n[e] = o(e - 160, t.str);
        for (n[192] = s(null),
        n[193] = null,
        n[194] = s(!1),
        n[195] = s(!0),
        n[196] = a(t.uint8, t.bin),
        n[197] = a(t.uint16, t.bin),
        n[198] = a(t.uint32, t.bin),
        n[199] = a(t.uint8, t.ext),
        n[200] = a(t.uint16, t.ext),
        n[201] = a(t.uint32, t.ext),
        n[202] = t.float32,
        n[203] = t.float64,
        n[204] = t.uint8,
        n[205] = t.uint16,
        n[206] = t.uint32,
        n[207] = t.uint64,
        n[208] = t.int8,
        n[209] = t.int16,
        n[210] = t.int32,
        n[211] = t.int64,
        n[212] = o(1, t.ext),
        n[213] = o(2, t.ext),
        n[214] = o(4, t.ext),
        n[215] = o(8, t.ext),
        n[216] = o(16, t.ext),
        n[217] = a(t.uint8, t.str),
        n[218] = a(t.uint16, t.str),
        n[219] = a(t.uint32, t.str),
        n[220] = a(t.uint16, t.array),
        n[221] = a(t.uint32, t.array),
        n[222] = a(t.uint16, t.map),
        n[223] = a(t.uint32, t.map),
        e = 224; 255 >= e; e++)
            n[e] = s(e - 256);
        return n
    }
    function s(t) {
        return function() {
            return t
        }
    }
    function a(t, e) {
        return function(n) {
            var i = t(n);
            return e(n, i)
        }
    }
    function o(t, e) {
        return function(n) {
            return e(n, t)
        }
    }
    e.getReadToken = function(t) {
        var e = i.getReadFormat(t);
        return t && t.useraw ? function(t) {
            var e, n = r(t).slice();
            for (n[217] = n[196],
            n[218] = n[197],
            n[219] = n[198],
            e = 160; 191 >= e; e++)
                n[e] = o(e - 160, t.bin);
            return n
        }(e) : r(e)
    }
}
, function(t, e, n) {
    e.Encoder = s;
    var i = n(33)
      , r = n(26).EncodeBuffer;
    function s(t) {
        return this instanceof s ? void r.call(this, t) : new s(t)
    }
    s.prototype = new r,
    i.mixin(s.prototype),
    s.prototype.encode = function(t) {
        this.write(t),
        this.emit("data", this.read())
    }
    ,
    s.prototype.end = function(t) {
        arguments.length && this.encode(t),
        this.flush(),
        this.emit("end")
    }
}
, function(t, e, n) {
    e.Decoder = s;
    var i = n(33)
      , r = n(31).DecodeBuffer;
    function s(t) {
        return this instanceof s ? void r.call(this, t) : new s(t)
    }
    s.prototype = new r,
    i.mixin(s.prototype),
    s.prototype.decode = function(t) {
        arguments.length && this.write(t),
        this.flush()
    }
    ,
    s.prototype.push = function(t) {
        this.emit("data", t)
    }
    ,
    s.prototype.end = function(t) {
        this.decode(t),
        this.emit("end")
    }
}
, function(t, e, n) {
    n(20),
    n(15),
    e.createCodec = n(12).createCodec
}
, function(t, e, n) {
    n(20),
    n(15),
    e.codec = {
        preset: n(12).preset
    }
}
, function(t, e, n) {
    var i, r = n(7), s = n(4), a = n(57);
    t.exports = function(e, r, s, o) {
        e.ImageUtils.crossOrigin = "";
        var c = n(23)
          , l = new e.LoadingManager
          , p = new e.OBJLoader(l);
        this.cubeGeo = new e.BoxGeometry(1,1,1),
        this.getCubeMesh = function() {
            return new e.Mesh(this.cubeGeo)
        }
        ;
        var h = new e.PlaneGeometry(1,1);
        new e.CylinderGeometry(.1,1,1,4,1,!1,Math.PI / 4).computeFlatVertexNormals();
        var u = new e.TextureLoader
          , f = new e.MeshBasicMaterial({
            color: 16777215
        })
          , d = new e.MeshBasicMaterial({
            color: 65280
        })
          , m = {}
          , g = {}
          , v = {};
        this.movTextures = [];
        var y, b = this, w = {};
        this.frustum = new e.Frustum;
        var x = new e.Matrix4;
        this.camera = new e.PerspectiveCamera(0,window.innerWidth / window.innerHeight,.1,6e3),
        this.fpsCamera = new e.PerspectiveCamera(s.fov,window.innerWidth / window.innerHeight,.1,300),
        this.fpsCamera.layers.set(1),
        this.camera.add(this.fpsCamera),
        this.weaponLean = 1,
        this.init = function(n) {
            this.clearPendingMeshes(),
            this.scene = new e.Scene,
            this.backgroundScene = new e.Scene,
            n.skyDome && (this.skyDome = a.fromConfig(n),
            this.backgroundScene.add(this.skyDome)),
            t.exports.initScene.call(this, n)
        }
        ;
        var M = 0;
        this.flash = function(t, e) {
            o.showFlash = !0,
            o.flashX = t,
            o.flashY = 1 - e,
            M = 1
        }
        ,
        this.updateLightMap = function(t) {
            this.skyLight && (this.skyLight.shadow.camera.right = t.shadWidth,
            this.skyLight.shadow.camera.left = -t.shadWidth,
            this.skyLight.shadow.camera.top = t.shadLength,
            this.skyLight.shadow.camera.bottom = -t.shadLength)
        }
        ,
        this.useDepthMap = 0,
        this.toggleDepthMap = function(n) {
            if (this.useDepthMap = n,
            this.scene) {
                var r = n && "0" != n;
                this.scene.overrideMaterial = r ? f : null,
                r ? (this.scene.fog = new e.Fog(0,0,n),
                this.renderer.setClearColor(0)) : t.exports.initScene.call(this, i)
            }
        }
        ,
        this.greenScreen = !1,
        this.updateGreenScreen = function(t) {
            b.greenScreen && !t.noGreen ? (t.realMat = t.material,
            t.material = d) : t.material = t.realMat || t.material
        }
        ,
        this.toggleGreenscreen = function(t) {
            this.greenScreen = t,
            this.scene && (t ? (this.renderer.setClearColor(65280),
            this.scene.fog.near = .1,
            this.scene.fog.far = 0) : (this.scene.fog.near = 1,
            this.scene.fog.far = i.fogD,
            this.renderer.setClearColor(i.sky)),
            this.scene.traverse(function(t) {
                b.updateGreenScreen(t)
            }))
        }
        ,
        this.renderer = new e.WebGLRenderer({
            precision: "mediump",
            powerPreference: "high-performance",
            antialias: !1
        }),
        this.renderer.shadowMap.enabled = !0,
        this.renderer.shadowMap.autoUpdate = !1,
        this.renderer.shadowMap.type = e.BasicShadowMap,
        this.renderer.setPixelRatio(window.devicePixelRatio),
        this.renderer.setSize(window.innerWidth, window.innerHeight),
        this.renderer.autoClear = !1,
        document.body.appendChild(this.renderer.domElement),
        this.updateShadowMap = function() {
            this.renderer.shadowMap.needsUpdate = !0
        }
        ,
        window.effectComposer,
        this.bloomPass,
        this.postprocessing = {
            enabled: !1
        },
        this.initShaders = function() {
            var t = new e.RenderPass(this.scene,this.camera);
            this.bloomPass = new e.UnrealBloomPass(new e.Vector2(window.innerWidth,window.innerHeight),1.5,.4,.85),
            this.bloomPass.renderToScreen = !0,
            this.bloomPass.strength = this.postprocessing.bloomStrength,
            this.bloomPass.radius = this.postprocessing.bloomRadius,
            this.bloomPass.threshold = this.postprocessing.bloomTresh,
            window.effectComposer = new e.EffectComposer(this.renderer),
            window.effectComposer.addPass(t),
            window.effectComposer.addPass(this.bloomPass),
            this.resizeShaders()
        }
        ,
        this.resizeShaders = function() {
            if (this.bloomPass && this.bloomPass.setSize(window.innerWidth, window.innerHeight),
            window.effectComposer) {
                var t = this.renderer.getPixelRatio()
                  , e = Math.floor(window.innerWidth / t) || 1
                  , n = Math.floor(window.innerHeight / t) || 1;
                window.effectComposer.setSize(e, n)
            }
        }
        ,
        this.zoomVal = 1,
        this.zoom = function(t) {
            this.zoomVal = t,
            this.updateCamFOV(),
            this.fpsCamera.fov = this.fpsFov / t,
            this.fpsCamera.updateProjectionMatrix()
        }
        ,
        this.setFPSFov = function(t) {
            this.fpsFov = t,
            this.fpsCamera.fov = t,
            this.fpsCamera.updateProjectionMatrix()
        }
        ,
        this.setFPSFov(s.fov),
        this.fovMult = function(t) {
            this.fovMlt != t && (this.fovMlt = t,
            this.updateCamFOV())
        }
        ,
        this.fovMlt = 1,
        this.updateCamFOV = function() {
            this.camera.fov = this.fov / this.zoomVal * this.fovMlt,
            this.camera.updateProjectionMatrix()
        }
        ,
        this.setFov = function(t) {
            this.fov = t,
            this.updateCamFOV()
        }
        ,
        this.setFov(s.fov),
        this.resize = function() {
            this.camera.aspect = window.innerWidth / window.innerHeight,
            this.camera.updateProjectionMatrix(),
            this.fpsCamera.aspect = window.innerWidth / window.innerHeight,
            this.fpsCamera.updateProjectionMatrix(),
            this.renderer.setSize(window.innerWidth, window.innerHeight),
            this.resizeShaders()
        }
        ,
        this.setResMlt = function(t) {
            this.renderer.setPixelRatio(window.devicePixelRatio * t),
            this.renderer.setSize(window.innerWidth, window.innerHeight)
        }
        ,
        this.updateFrustum = function() {
            this.frustum.setFromMatrix(x.multiplyMatrices(this.camera.projectionMatrix, this.camera.matrixWorldInverse))
        }
        ;
        var _ = 0
          , S = 0;
        this.shakeX = 0,
        this.shakeY = 0,
        this.updateShake = function(t) {
            _ && (_ *= Math.pow(.99, t),
            S += r.randFloat(-Math.PI, Math.PI),
            this.shakeX = Math.cos(S) * _,
            this.shakeY = Math.sin(S) * _,
            .01 >= _ && (_ = 0,
            this.shakeX = this.shakeY = 0))
        }
        ,
        this.shake = function(t) {
            _ = t
        }
        ,
        this.render = function(t) {
            if (this.scene) {
                for (var e = 0; e < this.movTextures.length; ++e)
                    (y = this.movTextures[e]).tex.offset.x += y.mov * t;
                this.postprocessing.enabled || (this.renderer.clear(),
                this.camera.layers.set(0),
                this.skyDome && (this.camera.getWorldPosition(this.skyDome.position),
                this.renderer.render(this.backgroundScene, this.camera),
                this.renderer.clearDepth()),
                this.renderer.render(this.scene, this.camera),
                this.camera.layers.set(2),
                this.renderer.clearDepth(),
                this.renderer.render(this.scene, this.camera),
                this.renderer.clearDepth(),
                this.renderer.render(this.scene, this.fpsCamera)),
                o.showFlash && (0 >= M && (M = 0,
                o.showFlash = !1),
                M -= t),
                this.updateShake(t)
            }
        }
        ,
        this.updateTexture = function(t, n) {
            var i = v[t];
            i ? i.image = n : (i = new e.Texture(n),
            v[t] = i),
            i.needsUpdate = !0
        }
        ,
        this.loadTexture = function(t, n, i, s) {
            return v[n] ? v[n].mats ? v[n].mats.push({
                t: s,
                m: t
            }) : (t[s || "map"] = v[n],
            t.needsUpdate = !0) : (v[n] = {
                mats: [{
                    t: s,
                    m: t
                }]
            },
            i = i || {},
            u.load(r.versionifyUrl("textures/" + n + ".png"), t=>{
                t.wrapS = e.RepeatWrapping,
                t.wrapT = e.RepeatWrapping,
                t.repeat.set(i.repeatX || 1, i.repeatY || 1),
                t.minFilter = i.tFilter || e.NearestFilter,
                t.magFilter = i.tFilter || e.NearestFilter,
                t.needsUpdate = !0;
                for (var r = 0; r < v[n].mats.length; ++r)
                    v[n].mats[r].m[v[n].mats[r].t || "map"] = t,
                    v[n].mats[r].m.needsUpdate = !0;
                v[n] = t,
                i.movT && this.movTextures.push({
                    tex: t,
                    mov: i.movT
                })
            }
            )),
            t
        }
        ,
        this.getMat = function(t, n) {
            var i = (n && n.texSrc || t) + (n ? (n.rotation || "x") + (n.noFog || "y") + (n.opacity || "z") + (n.color || "b") + (n.mat ? "ma" : "nm") + (n.ao || "a") + (n.emissive || "e") + (n.glowText || "g") + (null == n.depthWrite ? "d" : n.depthWrite) : "")
              , r = g[i];
            return r || (r = new ((n = n || {}).mat ? n.mat : e.StrippedLambertMaterial)(n),
            t && "default" != t && this.loadTexture(r, n.texSrc || t, n),
            n && n.emissive && this.loadTexture(r, (n.glowText && n.texSrc || t) + (n.sameGlow ? "" : "_e"), n, "emissiveMap"),
            n && n.ao && (this.loadTexture(r, t + "_ao", n, "aoMap"),
            r.aoMapIntensity = 1.3),
            n && n.normal && this.loadTexture(r, t + "_n", n, "normalMap"),
            "default" == t && (r.vertexColors = e.VertexColors),
            n && n.noFog && (r.fog = !1),
            r.shading = e.SmoothShading,
            g[i] = r),
            r
        }
        ,
        this.offsetMesh = function(t, e) {
            t.translateZ(e)
        }
        ,
        this.genColorCube = function(t, n, i, r, s, a) {
            for (var o = (a = a || {}).us ? "us" : "ns", l = 0; l < r.length; ++l) {
                for (var p = 0; p < r[l].length; ++p)
                    o += r[l][p] + "_";
                o += "|"
            }
            var h = m[o];
            if (!h) {
                h = new e.Geometry;
                var u = .5 + (s || 0);
                for (l = 0; l < r.length; ++l) {
                    var f = r[l][1]
                      , d = r[l][2] || 1;
                    if (a.us) {
                        g = c.generateCube([1, 1, 1, 1, 1, 1], 1, 1, 1, {
                            colr: r[l][0],
                            fAmb: r[l][4],
                            amb: r[l][3]
                        });
                        (v = new e.Mesh(g)).scale.set(d, f, d),
                        this.moveMesh(v, 0, u - f, 0)
                    } else {
                        var g = new e.BoxGeometry(d,f,d);
                        c.colorize(g, r[l][0]),
                        v = new e.Mesh(g),
                        this.moveMesh(v, 0, u - f / 2, 0)
                    }
                    this.merge(h, v),
                    u -= f
                }
                m[o] = h
            }
            var v = new e.Mesh(h,this.getMat("default"));
            return this.scaleMesh(v, t, n, i),
            v
        }
        ;
        var T = {};
        this.genBody = function(t, n, i, r, a) {
            var o = T[t];
            if (!o) {
                o = new e.Geometry;
                var c = s.playerHeight - s.headScale - s.legHeight
                  , l = this.genColorCube(s.chestWidth, c, s.chestScale, [[t, .8, 1, .8], [n, .2, 1.05]], 0, {
                    us: a
                });
                this.moveMesh(l, 0, c / 2, 0),
                this.merge(o, l);
                var p = this.genColorCube(s.headScale, s.headScale, s.headScale, [[i, .2, 1, .6], [r, .8]], 0, {
                    us: a
                });
                this.moveMesh(p, 0, s.playerHeight - s.headScale / 2 - s.legHeight, 0),
                this.merge(o, p),
                o = (new e.BufferGeometry).fromGeometry(o),
                T[t] = o
            }
            var h = new e.Mesh(o,this.getMat("default"));
            return h.receiveShadow = !0,
            h.noGreen = !0,
            h
        }
        ;
        var E = {};
        this.genLeg = function(t, n, i, r, a) {
            var o = s.legScale
              , c = null;
            if (r) {
                var l = n + "-" + (r || "");
                if (!(c = E[l])) {
                    var p = s.legHeight / 2
                      , h = o / 2
                      , u = [.5, 2]
                      , f = this.genColorCube(o, p, o, [[n, 1]], 0, {
                        us: a
                    });
                    this.moveMesh(f, 0, -p / 2 * Math.cos(u[1]), -p / 2 * Math.sin(u[1])),
                    this.rotateMesh(f, 0, u[1], 0);
                    var d = Math.sqrt(h * h + h * h - 2 * h * h * Math.cos(u[0] - u[1]))
                      , m = 2 * Math.sqrt(h * h - d / 2 * (d / 2))
                      , g = this.genColorCube(o, d, m, [[n, 1]], 0, {
                        us: a
                    });
                    this.moveMesh(g, 0, -p * Math.cos(u[1]), -p * Math.sin(u[1])),
                    this.rotateMesh(g, 0, (u[1] + u[0]) / 2, 0);
                    var v = this.genColorCube(o, p, o, [[n, .5, 1, .8], [i, .5]], 0, {
                        us: a
                    });
                    this.moveMesh(v, 0, -p * Math.cos(u[1]) - p / 2 * Math.cos(u[0]), -p * Math.sin(u[1]) - p / 2 * Math.sin(u[0])),
                    this.rotateMesh(v, 0, u[0], 0);
                    c = new e.Geometry;
                    this.merge(c, f),
                    this.merge(c, g),
                    this.merge(c, v),
                    E[l] = c
                }
                c = (new e.BufferGeometry).fromGeometry(c),
                c = new e.Mesh(c,this.getMat("default")),
                this.moveMesh(c, s.legScale / 2 * (t ? -1 : 1), s.legHeight - s.crouchDst + .5, 0)
            } else
                c = this.genColorCube(o, s.legHeight, o, [[n, .75, 1], [i, .25]], -.5, {
                    us: a
                }),
                this.moveMesh(c, s.legScale / 2 * (t ? -1 : 1), s.legHeight, 0);
            return c.receiveShadow = !0,
            c.noGreen = !0,
            c
        }
        ;
        var k = {};
        this.genArms = function(t, n, i, r, a, o) {
            var c = k[t.name + "-" + i + "-" + o + "-" + (a || 0)];
            if (!c) {
                c = new e.Geometry;
                var l = (-s.chestWidth + s.armScale / 2 - s.armInset) * (o ? t.holdW || .4 : 1);
                a && 1 != a || this.merge(c, this.genArm(l, s.armOff, t, !0, n, i, r, o)),
                a && 2 != a || this.merge(c, this.genArm(-l, s.armOff, t, !1, n, i, r, o)),
                c = (new e.BufferGeometry).fromGeometry(c),
                k[t.name + "-" + i + "-" + o + "-" + (a || 0)] = c
            }
            return (c = new e.Mesh(c,this.getMat("default"))).noGreen = !0,
            c.receiveShadow = !0,
            c
        }
        ,
        this.genArm = function(t, n, i, a, o, c, l, p) {
            var h = a ? i.leftHoldY : i.rightHoldY
              , u = a ? i.leftHoldZ : i.rightHoldZ
              , f = a ? i.leftHoldX || 0 : i.rightHoldX || 0
              , d = s.armScale * (p ? .7 : 1)
              , m = Math.min(s.uArmLength + s.lArmLength - .01, r.getDistance3D(t, n, 0, (i.xOff - f) * (a && i.akimbo ? -1 : 1), i.yOff + h, i.zOff - u))
              , g = r.getAnglesSSS(m, s.uArmLength, s.lArmLength)
              , v = Math.PI / 2;
            if (!p) {
                var y = this.genColorCube(d, s.uArmLength, d, [[o, 1]], 0, {
                    us: p
                });
                this.moveMesh(y, 0, -s.uArmLength / 2 * Math.cos(v), -s.uArmLength / 2 * Math.sin(v)),
                this.rotateMesh(y, 0, v, 0);
                var b = d / 2
                  , w = Math.sqrt(b * b + b * b - 2 * b * b * Math.cos(Math.PI + g[0] + Math.PI / 2))
                  , x = 2 * Math.sqrt(b * b - w / 2 * (w / 2))
                  , M = this.genColorCube(d, w, x, [[o, 1]], 0, {
                    us: p
                });
                this.moveMesh(M, 0, -s.uArmLength * Math.cos(v), -s.uArmLength * Math.sin(v)),
                this.rotateMesh(M, 0, (v + g[0]) / 2, 0)
            }
            var _ = this.genColorCube(d, s.lArmLength, d, [[o, .65, 1, .6], [c, .15, 1.1], [l, .2, 1, .5, !0]], 0, {
                us: p
            })
              , S = s.lArmLength / 2;
            this.moveMesh(_, 0, -s.uArmLength * Math.cos(v) - S * Math.cos(g[0]), -s.uArmLength * Math.sin(v) - S * Math.sin(g[0])),
            this.rotateMesh(_, 0, g[0], 0);
            var T = new e.Geometry;
            if (p) {
                var E = this.genColorCube(d, 20, d, [[o, 1]], 0, {
                    us: p
                });
                this.moveMesh(E, 0, -s.uArmLength * Math.cos(v) - -10 * Math.cos(g[0]), -s.uArmLength * Math.sin(v) - -10 * Math.sin(g[0])),
                this.rotateMesh(E, 0, g[0], 0),
                this.merge(T, E)
            } else
                this.merge(T, y),
                this.merge(T, M);
            return this.merge(T, _),
            T = new e.Mesh(T),
            this.moveMesh(T, t - i.xOff, n - i.yOff, -i.zOff),
            T.rotation.order = "YXZ",
            T.rotation.x = -g[1] - r.getDirection(0, n, i.zOff - u, i.yOff + h),
            T.rotation.y = r.getDirection(-t, 0, (a && i.akimbo ? 1 : -1) * (i.xOff - f), i.zOff - u) - Math.PI / 2,
            T
        }
        ,
        this.addCube = function(t, n, i, r, s, a, o, l) {
            l = l || {};
            var p = new e.Mesh(c.generateCube(o, r, s, a, l));
            return this.moveMesh(p, t, n, i),
            p.rotation.set(l.yR || 0, l.xR || 0, l.zR || 0),
            p.scale.set(r, s, a),
            l.src && !l.noGroup ? this.meshGroup(p, l) : this.add(p, l),
            p
        }
        ;
        var A = [];
        this.addSpray = function(t, n, i, a, o, c, l, p) {
            y = null;
            for (var u = 0; u < A.length; ++u)
                if (A[u].sid == t) {
                    y = A[u];
                    break
                }
            y || ((y = new e.Mesh(h)).sid = t,
            y.scale.set(s.sprayScale, s.sprayScale, 1),
            y.receiveShadow = !0,
            A.push(y),
            this.add(y)),
            this.moveMesh(y, i, a, o),
            y.rotation.y = r.toRad(c),
            y.rotation.x = r.toRad(l),
            y.material = this.getMat("sprays/" + n, {
                depthWrite: !1,
                opacity: p,
                transparent: !0
            })
        }
        ,
        this.clearSprays = function() {
            for (var t = 0; t < A.length; ++t)
                A[t] && A[t].material.map && A[t].material.map.dispose(),
                this.scene.remove(A[t]);
            A.length = 0
        }
        ,
        this.addPlane = function(t, n, i, r, s, a, o, l, p) {
            (a = a || {}).premultipliedAlpha = !0;
            var h = new e.Mesh(c.generatePlane(s, r, a, t, n, i));
            return a.euler && (h.rotation.order = a.euler),
            this.moveMesh(h, t, n, i),
            h.rotateY(o || 0),
            h.rotateX((l || 0) - Math.PI / 2),
            h.rotateZ(p || 0),
            h.scale.set(2 * r, 2 * s, 1),
            a.dontAdd ? a.src && (h.material = this.getMat(a.src, a)) : a.src && !a.noGroup ? this.meshGroup(h, a, 1) : this.add(h, a),
            h
        }
        ,
        this.addRamp = function(t, n, i, r, s, a, o, l, p) {
            l = l || {};
            var h = new e.Mesh(c.generatePlane(2 * a, r, l));
            this.moveMesh(h, t, n + s / 2, i),
            a *= 2;
            var u = Math.sqrt(s * s + a * a);
            return h.scale.set(r, u, 2),
            h.rotateY(-Math.PI / 2 - o),
            h.rotateX(Math.asin(s / u) - Math.PI / 2),
            h.rotateZ(p || 0),
            l.src ? this.meshGroup(h, l, 1) : this.add(h, l),
            h
        }
        ,
        this.addGrass = function(t, n, i, r, s, a, o) {
            o = o || {};
            let l = new e.Geometry
              , p = 2 * Math.PI * Math.random()
              , h = new e.Mesh(c.generatePlane(r, s, o));
            h.rotateY(p * (Math.PI / 2)),
            this.merge(l, h);
            let u = new e.Mesh(c.generatePlane(r, s, o));
            u.rotateY((p + 1) * (Math.PI / 2)),
            this.merge(l, u);
            let f = new e.Mesh(l);
            return this.moveMesh(f, t, n + s / 2, i),
            f.rotation.set(o.yR || 0, o.xR || 0, o.zR || 0),
            f.scale.set(r, s, a),
            o.src && !o.noGroup ? this.meshGroup(f, o) : this.add(f, o),
            f
        }
        ;
        var L = []
          , P = [];
        this.loadMesh = function(t, n, i, s, a, o, c, l) {
            var h = this.getMat(t.src, t)
              , u = L[t.src];
            if (u) {
                if (t.centerZ) {
                    u.computeBoundingBox();
                    var f = u.boundingBox.getCenter();
                    c.translateZ(f.x * o)
                }
            } else
                u = l ? new e.Geometry : new e.BufferGeometry,
                L[t.src] = u,
                p.load(r.versionifyUrl("models/" + t.src + ".obj"), function(n) {
                    if (u.copy(l ? (new e.Geometry).fromBufferGeometry(n.children[0].geometry) : n.children[0].geometry),
                    t.uv2 && u.addAttribute("uv2", new e.BufferAttribute(u.attributes.uv.array,2)),
                    l) {
                        for (var i = new e.Geometry, r = 0; r < P[t.src].length; ++r)
                            b.merge(i, P[t.src][r]);
                        b.add(new e.Mesh((new e.BufferGeometry).fromGeometry(i),h), t),
                        P[t.src].length = 0,
                        P[t.src].loaded = !0
                    }
                    if (t.centerZ) {
                        u.computeBoundingBox();
                        var s = u.boundingBox.getCenter();
                        c.translateZ(s.x * o)
                    }
                });
            var d = new e.Mesh(u,h);
            return d.receiveShadow = !t.noShadow,
            d.noGreen = t.noGreen,
            d.castShadow = t.shadows,
            "object" == typeof a ? (d.rotation.x = a[0] || 0,
            d.rotation.y = a[1] || 0,
            d.rotation.z = a[2] || 0) : d.rotation.y = a || 0,
            b.moveMesh(d, n, i, s),
            b.scaleMesh(d, o || 1, o || 1, o || 1),
            l ? P[t.src] ? P[t.src].loaded ? this.meshGroup(d, t) : P[t.src].push(d) : P[t.src] = [d] : c.add(d),
            d
        }
        ,
        this.clearPendingMeshes = function() {
            for (var t in P)
                P.hasOwnProperty(t) && P[t] && (P[t].length = 0)
        }
        ,
        this.updateMesh = function(t, n) {
            var i = p.parse(n)
              , r = new e.BufferGeometry;
            L[t] = r,
            r.copy(i.children[0].geometry),
            r.needsUpdate = !0
        }
        ,
        this.genObj3D = function(t, n, i) {
            var r = new e.Object3D;
            return this.moveMesh(r, t || 0, n || 0, i || 0),
            r
        }
        ,
        this.merge = function(t, e, n) {
            e.updateMatrix(),
            t.merge(e.geometry, e.matrix, n)
        }
        ,
        this.meshGroup = function(t, n) {
            var i = n.src + "-" + (n.shadowsR || "a") + (n.emissive || "e") + (n.opacity || "o");
            w[i] || (w[i] = new e.Geometry,
            w[i].data = n),
            t.updateMatrix(),
            w[i].merge(t.geometry, t.matrix)
        }
        ,
        this.addMeshGroups = function() {
            for (var t in w)
                if (w.hasOwnProperty(t)) {
                    var n = new e.Mesh((new e.BufferGeometry).fromGeometry(w[t]));
                    n.groupSrc = w[t].data.src,
                    n.visible = !C[n.groupSrc],
                    n.matrixAutoUpdate = !1,
                    this.add(n, w[t].data)
                }
            w = {}
        }
        ;
        var C = {};
        this.toggleMeshGroup = function(t, n) {
            C[t] = !n,
            this.scene && this.scene.traverse(function(i) {
                i instanceof e.Mesh && i.groupSrc == t && (i.visible = n)
            })
        }
        ,
        this.add = function(t, e) {
            e && (t.castShadow = e.shadows,
            t.receiveShadow = e.shadows || e.shadowsR,
            t.material = this.getMat(e.src, e)),
            this.updateGreenScreen(t),
            this.scene.add(t),
            this.updateShadowMap()
        }
        ,
        this.remove = function(t) {
            this.scene.remove(t)
        }
        ,
        this.moveMesh = function(t, e, n, i) {
            null != e && (t.position.x = e),
            null != n && (t.position.y = n),
            null != i && (t.position.z = i)
        }
        ,
        this.scaleMesh = function(t, e, n, i) {
            t.scale.set(e, n, i)
        }
        ,
        this.rotateMesh = function(t, e, n, i) {
            (e || 0 == e) && (t.rotation.y = e),
            (n || 0 == n) && (t.rotation.x = n),
            (i || 0 == i) && (t.rotation.z = i)
        }
        ,
        this.reset = function() {
            L = [],
            P = [],
            w = {},
            g = {},
            v = {},
            this.movTextures = []
        }
    }
    ,
    t.exports.initScene = function(t) {
        if (i = t,
        t.ambient && (this.ambientLight = new s.AmbientLight(t.ambient),
        this.ambientLight.layers.enable(1),
        this.ambientLight.layers.enable(2),
        this.ambientLight.name = "ambLight",
        !this.scene.getObjectByName("ambLight") && this.scene.add(this.ambientLight)),
        t.light) {
            this.skyLight = new s.DirectionalLight(t.light,1),
            this.skyLight.name = "skyLight",
            this.skyLight.layers.enable(1),
            this.skyLight.layers.enable(2),
            this.scene.getObjectByName("skyLight") || this.scene.add(this.skyLight);
            var e = -.3 * Math.PI
              , n = 2 * Math.PI * -.25;
            this.skyLight.position.x = r.lightDistance * Math.cos(n),
            this.skyLight.position.y = r.lightDistance * Math.sin(n) * Math.sin(e),
            this.skyLight.position.z = r.lightDistance * Math.sin(n) * Math.cos(e),
            this.skyLight.castShadow = !0,
            this.skyLight.shadow.mapSize.width = t.shadowR || r.shadowRes,
            this.skyLight.shadow.mapSize.height = t.shadowR || r.shadowRes,
            this.skyLight.shadow.camera.far = r.shadowDst
        }
        this.scene.fog = new s.Fog(t.fog,1,t.fogD),
        this.renderer.setClearColor(t.sky),
        this.useDepthMap && "0" != this.useDepthMap && this.toggleDepthMap(this.useDepthMap),
        this.greenScreen && this.toggleGreenscreen(this.greenScreen)
    }
}
, function(t, e, n) {
    const i = n(4)
      , r = new i.MeshBasicMaterial({
        color: 16777215,
        flatShading: !1,
        vertexColors: i.VertexColors,
        side: i.BackSide
    })
      , s = 32
      , a = !0
      , o = "y"
      , c = [{
        stp: 0,
        col: null
    }, {
        stp: .5,
        col: null
    }, {
        stp: 1,
        col: null
    }];
    class l extends i.Object3D {
        static fromConfig(t) {
            return new l(t.skyDomeCol0,t.skyDomeCol1,t.skyDomeCol2)
        }
        constructor(t, e, n) {
            super(),
            c[0].col = new i.Color(t || "#3FB1B7"),
            c[1].col = new i.Color(e || "#6FE1CD"),
            c[2].col = new i.Color(n || "#FFFFFF");
            let l = new i.SphereGeometry(50,s,s);
            l.computeBoundingBox();
            let p = l.boundingBox
              , h = (new i.Vector3).subVectors(p.max, p.min)
              , u = ["a", "b", "c"]
              , f = new i.Vector3
              , d = 0;
            for (let t, e = 0; e < c.length - 1; e++) {
                t = c[e + 1].stp - c[e].stp;
                for (let n, i = 0; i < l.faces.length; i++) {
                    n = l.faces[i];
                    for (var m = 0; 3 > m; m++)
                        d = f.subVectors(l.vertices[n[u[m]]], p.min).divide(h)[o],
                        a && (d = 1 - d),
                        d >= c[e].stp && d <= c[e + 1].stp && (n.vertexColors[m] = c[e].col.clone().lerp(c[e + 1].col, (d - c[e].stp) / t))
                }
            }
            l.computeVertexNormals(!0),
            l.computeFaceNormals(),
            this.baseMesh = new i.Mesh(l,r),
            this.baseMesh.doubleSided = !1,
            this.add(this.baseMesh)
        }
    }
    t.exports = l
}
, function(t, e, n) {
    const i = n(4)
      , r = (n(8),
    n(65))
      , s = n(66).easing;
    let a, o = "undefined" != typeof location;
    o && (a = new i.StrippedLambertMaterial({
        color: 9211020,
        flatShading: !1,
        vertexColors: i.VertexColors
    }));
    const c = {
        GRASS: 0,
        MOUNTAIN: 1
    }
      , l = Object.keys(c).length
      , p = {
        [c.GRASS]: [56, 226, 102],
        [c.MOUNTAIN]: [160, 160, 160]
    }
      , h = {
        DIRT: [140, 104, 53],
        GRASS: [155, 186, 46],
        MOUNTAIN: [160, 160, 160]
    }
      , u = t=>t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, (t,e,n,i)=>"#" + e + e + n + n + i + i).substring(1).match(/.{2}/g).map(t=>parseInt(t, 16))
      , f = 60
      , d = 3;
    class m extends i.Object3D {
        static fromConfig(t) {
            return new m(t.terrainSeed,t.terrainWidth,t.terrainHeight,t.sizeMlt,t.terrainMntMlt,t.terrainDrtCol,t.terrainGrsCol,t.terrainMntCol)
        }
        constructor(t, e, n, s, c, p, m, g) {
            super(),
            s = d,
            this.sizeMlt = s,
            this.sizeX = e,
            this.sizeY = n,
            this.edgeSize = 500,
            this.mntMlt = c,
            h.DIRT = u(p),
            h.MOUNTAIN = u(g),
            h.GRASS = u(m),
            this.simplex = new r(t);
            let v = Math.floor(e / f)
              , y = Math.floor(n / f);
            this.xSegmentCount = v,
            this.ySegmentCount = y;
            let b = e / v
              , w = n / y;
            this.xSegmentSize = b,
            this.ySegmentSize = w;
            let x = new i.BufferGeometry
              , M = v * y * 6
              , _ = new i.BufferAttribute(new Float32Array(3 * M),3);
            x.addAttribute("position", _);
            let S = new i.BufferAttribute(new Uint8Array(3 * M),3,!0);
            x.addAttribute("color", S),
            this.vertPositions = _,
            this.terrainPoints = (v + 1) * (y + 1),
            this.terrainHeights = new Float32Array(this.terrainPoints),
            this.terrainBiomes = new Float32Array(this.terrainPoints * l);
            for (let t = 0; t < v + 1; t++)
                for (let i = 0; i < y + 1; i++) {
                    let r = t + i * (v + 1)
                      , s = this._vertPos(t, b, e)
                      , a = this._vertPos(i, w, n)
                      , [o,c] = this.evaluate(s, a);
                    this.terrainHeights[r] = o,
                    this.terrainBiomes.set(c, r * l)
                }
            for (let t = 0; t < v; t++)
                for (let i = 0; i < y; i++) {
                    let r = 6 * (t + i * v)
                      , s = this._vertPos(t, b, e)
                      , a = this._vertPos(i, w, n)
                      , o = [s, a, this.terrainHeight(t, i)]
                      , c = [s + b, a, this.terrainHeight(t + 1, i)]
                      , l = [s + b, a + w, this.terrainHeight(t + 1, i + 1)]
                      , p = [s, a + w, this.terrainHeight(t, i + 1)]
                      , h = this.calcAOWeight(t, i)
                      , u = this.calcAOWeight(t + 1, i)
                      , f = this.calcAOWeight(t + 1, i + 1)
                      , d = this.calcAOWeight(t, i + 1);
                    _.setXYZ(r, ...o),
                    _.setXYZ(r + 1, ...c),
                    _.setXYZ(r + 2, ...l),
                    _.setXYZ(r + 3, ...l),
                    _.setXYZ(r + 4, ...p),
                    _.setXYZ(r + 5, ...o);
                    let m = this._centroid3D(o, c, l)
                      , g = this._centroid3D(l, p, o)
                      , y = this._normal3D(o, c, l)
                      , x = this._normal3D(l, p, o)
                      , M = this.terrainBiomeAt(m)
                      , T = this.terrainBiomeAt(g)
                      , E = this.evaluateColor(m, y, M)
                      , k = this.evaluateColor(g, x, T);
                    S.setXYZ(r, ...this._weightColor(E, h)),
                    S.setXYZ(r + 1, ...this._weightColor(E, u)),
                    S.setXYZ(r + 2, ...this._weightColor(E, f)),
                    S.setXYZ(r + 3, ...this._weightColor(k, f)),
                    S.setXYZ(r + 4, ...this._weightColor(k, d)),
                    S.setXYZ(r + 5, ...this._weightColor(k, h))
                }
            o && (x.computeVertexNormals(!0),
            x.computeFaceNormals(),
            this.baseMesh = new i.Mesh(x,a),
            this.baseMesh.receiveShadow = !0,
            this.baseMesh.scale.set(s, s, 1),
            this.add(this.baseMesh)),
            this._raycastRay = new i.Ray,
            this._raycastTriA = new i.Vector3,
            this._raycastTriB = new i.Vector3,
            this._raycastTriC = new i.Vector3,
            this._raycastTriangle = new i.Triangle,
            this._raycastNormal = new i.Vector3,
            this._raycastTarget = new i.Vector3,
            this._raycastClosestTarget = new i.Vector3
        }
        terrainIndex(t, e) {
            let n = t + e * (this.xSegmentCount + 1);
            return 0 > n || n >= this.terrainHeights.length ? 0 : n
        }
        terrainHeight(t, e) {
            return this.terrainHeights[this.terrainIndex(t, e)]
        }
        terrainBiome(t, e) {
            let n = this.terrainIndex(t, e) * l;
            return this.terrainBiomes.slice(n, n + l)
        }
        terrainBiomeAt(t, e) {
            let n = Math.floor(t / this.xSegmentSize)
              , i = Math.ceil(t / this.xSegmentSize)
              , r = Math.floor(e / this.ySegmentSize)
              , s = Math.ceil(e / this.ySegmentSize);
            return (this.terrainBiome(n, r) + this.terrainBiome(i, r) + this.terrainBiome(n, s) + this.terrainBiome(i, s)) / 4
        }
        calcAOWeight(t, e) {
            let n = this._vertPos(t, this.xSegmentSize, this.sizeX)
              , i = this._vertPos(e, this.ySegmentSize, this.sizeY)
              , r = this._topAngleOnTerrain(n - this.xSegmentSize, this.terrainHeight(t - 1, e), n, this.terrainHeight(t, e), n + this.xSegmentSize, this.terrainHeight(t + 1, e))
              , s = this._topAngleOnTerrain(i - this.xSegmentSize, this.terrainHeight(t, e - 1), i, this.terrainHeight(t, e), i + this.ySegmentSize, this.terrainHeight(t, e + 1))
              , a = Math.PI
              , o = 1 - (1 - Math.max(a - r, 0) / a) * (1 - Math.max(a - s, 0) / a);
            return .5 <= o ? o = .65 : .2 <= o ? o = .3 : .1 <= o && (o = .25),
            o
        }
        _worldToLocal(t, e, n) {
            return (t + e / 2) / n
        }
        raycast(t, e, n, i, r, s, a=!1) {
            t /= this.sizeMlt,
            e /= this.sizeMlt,
            i /= this.sizeMlt,
            r /= this.sizeMlt;
            let o = Math.sqrt(i * i + r * r + s * s);
            this._raycastRay.origin.set(t, e, n),
            this._raycastRay.direction.set(i, r, s);
            let c, l, p, h = this._worldToLocal(t, this.sizeX, this.xSegmentSize), u = this._worldToLocal(e, this.sizeY, this.ySegmentSize), f = h + i / this.xSegmentSize, d = u + r / this.ySegmentSize, m = Math.abs(f - h), g = Math.abs(d - u), v = Math.floor(h), y = Math.floor(u), b = 1;
            for (0 == m ? (c = 0,
            p = Number.POSITIVE_INFINITY) : f > h ? (c = 1,
            b += Math.floor(f) - v,
            p = (Math.floor(h) + 1 - h) * g) : (c = -1,
            b += v - Math.floor(f),
            p = (h - Math.floor(h)) * g),
            0 == g ? (l = 0,
            p -= Number.POSITIVE_INFINITY) : d > u ? (l = 1,
            b += Math.floor(d) - y,
            p -= (Math.floor(u) + 1 - u) * m) : (l = -1,
            b += y - Math.floor(d),
            p -= (u - Math.floor(u)) * m); 0 < b; b--) {
                if (this._raycastVisit(v, y, t, e, n, i, r, s, o, a)) {
                    let t = this._raycastClosestTarget;
                    return t.x *= this.sizeMlt,
                    t.y *= this.sizeMlt,
                    t
                }
                0 < p ? (y += l,
                p -= m) : (v += c,
                p += g)
            }
        }
        _raycastVisit(t, e, n, i, r, s, a, o, c, l) {
            let p = t + e * this.xSegmentCount
              , h = Number.POSITIVE_INFINITY
              , u = !1;
            for (let t, e = 0; 2 > e; e++) {
                t = 6 * p + 3 * e,
                this._raycastTriA.set(this.vertPositions.getX(t), this.vertPositions.getY(t), this.vertPositions.getZ(t)),
                this._raycastTriB.set(this.vertPositions.getX(t + 1), this.vertPositions.getY(t + 1), this.vertPositions.getZ(t + 1)),
                this._raycastTriC.set(this.vertPositions.getX(t + 2), this.vertPositions.getY(t + 2), this.vertPositions.getZ(t + 2));
                let n = this._raycastRay.intersectTriangle(this._raycastTriA, this._raycastTriB, this._raycastTriC, !0, this._raycastTarget);
                if (n) {
                    let t = n.distanceTo(this._raycastRay.origin);
                    t < h && t < c && (h = t,
                    u = !0,
                    this._raycastClosestTarget.copy(n),
                    this._raycastTriangle.set(this._raycastTriA, this._raycastTriB, this._raycastTriC))
                }
            }
            return l && u && this._raycastTriangle.getNormal(this._raycastNormal),
            u
        }
        evaluate(t, e) {
            let n = 0;
            this.sampleIndex = 0;
            let i = [];
            for (let n = 0; n < l; n++)
                i.push(this._sample(t, e, 1300));
            let r = i.reduce((t,e)=>t + e, 0);
            i = (i = i.map((t,e)=>[e, t / r])).sort((t,e)=>e[1] - t[1]);
            let s = {}
              , [a,o] = i[0];
            s[a] = this._easeTerrain(o / (o + i[1][1]));
            for (let t = 1; t < i.length; t++) {
                let[e,n] = i[t];
                s[e] = this._easeTerrain(n / (o + n))
            }
            let p = this._sample(t, e, 300);
            n += 25 * (p = Math.floor(3 * p) / 3) * s[c.GRASS] * this.sizeMlt;
            let h = .4 + .3 * this._sample(t, e, 200);
            n += (1 - 2 * Math.abs(h - this._sample(t, e, 500))) * (.4 + 1.4 * this._sample(t, e, 400)) * (220 * this.mntMlt) * s[c.MOUNTAIN] * this.sizeMlt;
            let u = this._calcEdgeFade(t, this.sizeX) * this._calcEdgeFade(e, this.sizeY);
            return n *= u,
            n += 2e3 * (u - 1),
            (Math.abs(t) >= this.sizeX / 2 || Math.abs(e) >= this.sizeY / 2) && (n = -1e3),
            [n, s]
        }
        evaluateColor(t, e, n) {
            let i, r = t[2], s = Math.atan2(Math.abs(e[0]), Math.abs(e[2])), a = Math.atan2(Math.abs(e[1]), Math.abs(e[2]));
            return i = .85 >= (1 - s / (2 * Math.PI)) * (1 - a / (2 * Math.PI)) ? h.MOUNTAIN : 100 < r ? h.MOUNTAIN : 5 < r ? h.GRASS : h.DIRT
        }
        _sample(t, e, n) {
            return this.sampleIndex++,
            this.simplex.noise3D(t / n, e / n, 1e4 * this.sampleIndex) / 2 + .5
        }
        _easeTerrain(t) {
            return s.easeInOutQuint(s.easeInOutQuint(t))
        }
        _calcEdgeFade(t, e) {
            if (Math.abs(t) >= e / 2)
                return 0;
            let n = (Math.abs(t) - e / 2 + this.edgeSize) / this.edgeSize;
            return n = 1 - Math.max(n, 0),
            s.easeOutQuint(n)
        }
        _blendColors(t) {
            let e = Object.values(t).reduce((t,e)=>t + e, 0)
              , n = [0, 0, 0];
            for (let i in t) {
                let r = p[i]
                  , s = t[i] / e;
                for (let t = 0; 3 > t; t++)
                    n[t] += r[t] * s
            }
            return n
        }
        _vertPos(t, e, n) {
            return t * e - n / 2
        }
        _avgPos(t, e) {
            return [(t[0] + e[0]) / 2, (t[1] + e[1]) / 2, (t[2] + e[2]) / 2]
        }
        _centroid3D(t, e, n) {
            return [(t[0] + e[0] + n[0]) / 3, (t[1] + e[1] + n[1]) / 3, (t[2] + e[2] + n[2]) / 3]
        }
        _normal3D(t, e, n) {
            let i = n[0] - e[0]
              , r = n[1] - e[1]
              , s = n[2] - e[2]
              , a = t[0] - e[0]
              , o = t[1] - e[1]
              , c = t[2] - e[2]
              , l = r * c - s * o
              , p = s * a - i * c
              , h = i * o - r * a
              , u = Math.sqrt(l * l + p * p + h + h);
            return [l / u, p / u, h / u]
        }
        _topAngleOnTerrain(t, e, n, i, r, s) {
            let a = Math.atan2(e - i, t - n)
              , o = Math.atan2(s - i, r - n);
            return 0 > a && (a += 2 * Math.PI),
            a - o
        }
        _weightColor(t, e) {
            return t.map(t=>t * (1 - e))
        }
    }
    t.exports = m
}
, function(t, e, n) {
    const i = n(4)
      , r = n(8)
      , s = 32;
    var a, o;
    const c = !0
      , l = "y"
      , p = [{
        stp: 0,
        col: null
    }, {
        stp: .5,
        col: null
    }, {
        stp: 1,
        col: null
    }]
      , h = 2.5
      , u = 1e3;
    class f extends i.Object3D {
        static fromConfig(t, e) {
            return new f(t.zoneSize,t.zoneSpeed,t.zoneCol0,t.zoneCol1,t.zoneCol2,e)
        }
        constructor(t, e, n, u, f, d) {
            if (super(),
            this._size = t || 50,
            this._shrink = h * (e || 1),
            d) {
                a || (a = (new i.TextureLoader).load(r.versionifyUrl("textures/zone_0.png"), t=>{
                    t.wrapS = i.RepeatWrapping,
                    t.wrapT = i.RepeatWrapping,
                    t.minFilter = i.NearestFilter,
                    t.magFilter = i.NearestFilter,
                    t.repeat.set(20, 20),
                    t.needsUpdate = !0
                }
                )),
                o || (o = new i.MeshBasicMaterial({
                    color: 16777215,
                    depthWrite: !1,
                    flatShading: !1,
                    map: a,
                    vertexColors: i.VertexColors,
                    side: i.DoubleSide,
                    transparent: !0,
                    opacity: .5
                })),
                p[0].col = new i.Color(n || "#3FB1B7"),
                p[1].col = new i.Color(u || "#6FE1CD"),
                p[2].col = new i.Color(f || "#FFFFFF");
                let t = new i.SphereGeometry(1,s,s);
                t.computeBoundingBox();
                let e = t.boundingBox
                  , h = (new i.Vector3).subVectors(e.max, e.min)
                  , d = ["a", "b", "c"]
                  , g = new i.Vector3
                  , v = 0;
                for (let n, i = 0; i < p.length - 1; i++) {
                    n = p[i + 1].stp - p[i].stp;
                    for (let r, s = 0; s < t.faces.length; s++) {
                        r = t.faces[s];
                        for (var m = 0; 3 > m; m++)
                            v = g.subVectors(t.vertices[r[d[m]]], e.min).divide(h)[l],
                            c && (v = 1 - v),
                            v >= p[i].stp && v <= p[i + 1].stp && (r.vertexColors[m] = p[i].col.clone().lerp(p[i + 1].col, (v - p[i].stp) / n))
                    }
                }
                t.computeVertexNormals(!0),
                t.computeFaceNormals(),
                this.baseMesh = new i.Mesh(t,o)
            }
            this.reset(),
            d && this.add(this.baseMesh)
        }
        shrink() {
            0 >= this.scale.x ? this.visible = !1 : (this.scale.x -= this._shrink,
            this.scale.z -= this._shrink)
        }
        animate(t) {
            this.baseMesh && this.baseMesh.material.map && (this.baseMesh.material.map.offset.y += 3e-5 * t)
        }
        update(t) {
            this.scale.set(t.x, u, t.z),
            0 >= this.scale.x && (this.visible = !1)
        }
        reset() {
            this.scale.set(this._size, u, this._size),
            this.visible = !0
        }
        isOutside(t) {
            return r.getDistance(t.x, t.z, this.position.x, this.position.z) > this.scale.x
        }
    }
    t.exports = f
}
, , function(t, e, n) {
    n(71)
}
, function(t, e) {
    t.exports = function(t) {
        if (!t.webpackPolyfill) {
            var e = Object.create(t);
            e.children || (e.children = []),
            Object.defineProperty(e, "loaded", {
                enumerable: !0,
                get: function() {
                    return e.l
                }
            }),
            Object.defineProperty(e, "id", {
                enumerable: !0,
                get: function() {
                    return e.i
                }
            }),
            Object.defineProperty(e, "exports", {
                enumerable: !0
            }),
            e.webpackPolyfill = 1
        }
        return e
    }
}
, function(t, e) {
    t.exports = function(t) {
        return function() {
            function e() {
                var t = {
                    objects: [],
                    object: {},
                    vertices: [],
                    normals: [],
                    colors: [],
                    uvs: [],
                    materialLibraries: [],
                    startObject: function(t, e) {
                        if (this.object && !1 === this.object.fromDeclaration)
                            return this.object.name = t,
                            void (this.object.fromDeclaration = !1 !== e);
                        var n = this.object && "function" == typeof this.object.currentMaterial ? this.object.currentMaterial() : void 0;
                        if (this.object && "function" == typeof this.object._finalize && this.object._finalize(!0),
                        this.object = {
                            name: t || "",
                            fromDeclaration: !1 !== e,
                            geometry: {
                                vertices: [],
                                normals: [],
                                colors: [],
                                uvs: []
                            },
                            materials: [],
                            smooth: !0,
                            startMaterial: function(t, e) {
                                var n = this._finalize(!1);
                                n && (n.inherited || 0 >= n.groupCount) && this.materials.splice(n.index, 1);
                                var i = {
                                    index: this.materials.length,
                                    name: t || "",
                                    mtllib: Array.isArray(e) && 0 < e.length ? e[e.length - 1] : "",
                                    smooth: void 0 === n ? this.smooth : n.smooth,
                                    groupStart: void 0 === n ? 0 : n.groupEnd,
                                    groupEnd: -1,
                                    groupCount: -1,
                                    inherited: !1,
                                    clone: function(t) {
                                        var e = {
                                            index: "number" == typeof t ? t : this.index,
                                            name: this.name,
                                            mtllib: this.mtllib,
                                            smooth: this.smooth,
                                            groupStart: 0,
                                            groupEnd: -1,
                                            groupCount: -1,
                                            inherited: !1
                                        };
                                        return e.clone = this.clone.bind(e),
                                        e
                                    }
                                };
                                return this.materials.push(i),
                                i
                            },
                            currentMaterial: function() {
                                return 0 < this.materials.length ? this.materials[this.materials.length - 1] : void 0
                            },
                            _finalize: function(t) {
                                var e = this.currentMaterial();
                                if (e && -1 === e.groupEnd && (e.groupEnd = this.geometry.vertices.length / 3,
                                e.groupCount = e.groupEnd - e.groupStart,
                                e.inherited = !1),
                                t && 1 < this.materials.length)
                                    for (var n = this.materials.length - 1; 0 <= n; n--)
                                        0 >= this.materials[n].groupCount && this.materials.splice(n, 1);
                                return t && 0 === this.materials.length && this.materials.push({
                                    name: "",
                                    smooth: this.smooth
                                }),
                                e
                            }
                        },
                        n && n.name && "function" == typeof n.clone) {
                            var i = n.clone(0);
                            i.inherited = !0,
                            this.object.materials.push(i)
                        }
                        this.objects.push(this.object)
                    },
                    finalize: function() {
                        this.object && "function" == typeof this.object._finalize && this.object._finalize(!0)
                    },
                    parseVertexIndex: function(t, e) {
                        var n = parseInt(t, 10);
                        return 3 * (0 <= n ? n - 1 : n + e / 3)
                    },
                    parseNormalIndex: function(t, e) {
                        var n = parseInt(t, 10);
                        return 3 * (0 <= n ? n - 1 : n + e / 3)
                    },
                    parseUVIndex: function(t, e) {
                        var n = parseInt(t, 10);
                        return 2 * (0 <= n ? n - 1 : n + e / 2)
                    },
                    addVertex: function(t, e, n) {
                        var i = this.vertices
                          , r = this.object.geometry.vertices;
                        r.push(i[t + 0], i[t + 1], i[t + 2]),
                        r.push(i[e + 0], i[e + 1], i[e + 2]),
                        r.push(i[n + 0], i[n + 1], i[n + 2])
                    },
                    addVertexPoint: function(t) {
                        var e = this.vertices;
                        this.object.geometry.vertices.push(e[t + 0], e[t + 1], e[t + 2])
                    },
                    addVertexLine: function(t) {
                        var e = this.vertices;
                        this.object.geometry.vertices.push(e[t + 0], e[t + 1], e[t + 2])
                    },
                    addNormal: function(t, e, n) {
                        var i = this.normals
                          , r = this.object.geometry.normals;
                        r.push(i[t + 0], i[t + 1], i[t + 2]),
                        r.push(i[e + 0], i[e + 1], i[e + 2]),
                        r.push(i[n + 0], i[n + 1], i[n + 2])
                    },
                    addColor: function(t, e, n) {
                        var i = this.colors
                          , r = this.object.geometry.colors;
                        r.push(i[t + 0], i[t + 1], i[t + 2]),
                        r.push(i[e + 0], i[e + 1], i[e + 2]),
                        r.push(i[n + 0], i[n + 1], i[n + 2])
                    },
                    addUV: function(t, e, n) {
                        var i = this.uvs
                          , r = this.object.geometry.uvs;
                        r.push(i[t + 0], i[t + 1]),
                        r.push(i[e + 0], i[e + 1]),
                        r.push(i[n + 0], i[n + 1])
                    },
                    addUVLine: function(t) {
                        var e = this.uvs;
                        this.object.geometry.uvs.push(e[t + 0], e[t + 1])
                    },
                    addFace: function(t, e, n, i, r, s, a, o, c) {
                        var l = this.vertices.length
                          , p = this.parseVertexIndex(t, l)
                          , h = this.parseVertexIndex(e, l)
                          , u = this.parseVertexIndex(n, l);
                        if (this.addVertex(p, h, u),
                        void 0 !== i && "" !== i) {
                            var f = this.uvs.length;
                            p = this.parseUVIndex(i, f),
                            h = this.parseUVIndex(r, f),
                            u = this.parseUVIndex(s, f),
                            this.addUV(p, h, u)
                        }
                        if (void 0 !== a && "" !== a) {
                            var d = this.normals.length;
                            p = this.parseNormalIndex(a, d),
                            h = a === o ? p : this.parseNormalIndex(o, d),
                            u = a === c ? p : this.parseNormalIndex(c, d),
                            this.addNormal(p, h, u)
                        }
                        0 < this.colors.length && this.addColor(p, h, u)
                    },
                    addPointGeometry: function(t) {
                        this.object.geometry.type = "Points";
                        for (var e = this.vertices.length, n = 0, i = t.length; n < i; n++)
                            this.addVertexPoint(this.parseVertexIndex(t[n], e))
                    },
                    addLineGeometry: function(t, e) {
                        this.object.geometry.type = "Line";
                        for (var n = this.vertices.length, i = this.uvs.length, r = 0, s = t.length; r < s; r++)
                            this.addVertexLine(this.parseVertexIndex(t[r], n));
                        var a = 0;
                        for (s = e.length; a < s; a++)
                            this.addUVLine(this.parseUVIndex(e[a], i))
                    }
                };
                return t.startObject("", !1),
                t
            }
            function n(e) {
                this.manager = void 0 === e ? t.DefaultLoadingManager : e,
                this.materials = null
            }
            var i = /^[og]\s*(.+)?/
              , r = /^mtllib /
              , s = /^usemtl /;
            return n.prototype = {
                constructor: n,
                load: function(e, n, i, r) {
                    var s = this
                      , a = new t.FileLoader(s.manager);
                    a.setPath(this.path),
                    a.load(e, function(t) {
                        n(s.parse(t))
                    }, i, r)
                },
                setPath: function(t) {
                    return this.path = t,
                    this
                },
                setMaterials: function(t) {
                    return this.materials = t,
                    this
                },
                parse: function(n) {
                    console.time("OBJLoader");
                    var a = new e;
                    -1 !== n.indexOf("\r\n") && (n = n.replace(/\r\n/g, "\n")),
                    -1 !== n.indexOf("\\\n") && (n = n.replace(/\\\n/g, ""));
                    for (var o = n.split("\n"), c = "", l = "", p = [], h = "function" == typeof "".trimLeft, u = 0, f = o.length; u < f; u++)
                        if (c = o[u],
                        0 !== (c = h ? c.trimLeft() : c.trim()).length && "#" !== (l = c.charAt(0)))
                            if ("v" === l) {
                                var d = c.split(/\s+/);
                                switch (d[0]) {
                                case "v":
                                    a.vertices.push(parseFloat(d[1]), parseFloat(d[2]), parseFloat(d[3])),
                                    8 === d.length && a.colors.push(parseFloat(d[4]), parseFloat(d[5]), parseFloat(d[6]));
                                    break;
                                case "vn":
                                    a.normals.push(parseFloat(d[1]), parseFloat(d[2]), parseFloat(d[3]));
                                    break;
                                case "vt":
                                    a.uvs.push(parseFloat(d[1]), parseFloat(d[2]))
                                }
                            } else if ("f" === l) {
                                for (var m, g = c.substr(1).trim().split(/\s+/), v = [], y = 0, b = g.length; y < b; y++)
                                    if (0 < (m = g[y]).length) {
                                        var w = m.split("/");
                                        v.push(w)
                                    }
                                var x = v[0];
                                for (y = 1,
                                b = v.length - 1; y < b; y++) {
                                    var M = v[y]
                                      , _ = v[y + 1];
                                    a.addFace(x[0], M[0], _[0], x[1], M[1], _[1], x[2], M[2], _[2])
                                }
                            } else if ("l" === l) {
                                var S = c.substring(1).trim().split(" ")
                                  , T = []
                                  , E = [];
                                if (-1 === c.indexOf("/"))
                                    T = S;
                                else
                                    for (var k, A = 0, L = S.length; A < L; A++)
                                        "" !== (k = S[A].split("/"))[0] && T.push(k[0]),
                                        "" !== k[1] && E.push(k[1]);
                                a.addLineGeometry(T, E)
                            } else if ("p" === l) {
                                var P = c.substr(1).trim().split(" ");
                                a.addPointGeometry(P)
                            } else if (null !== (p = i.exec(c))) {
                                var C = (" " + p[0].substr(1).trim()).substr(1);
                                a.startObject(C)
                            } else if (s.test(c))
                                a.object.startMaterial(c.substring(7).trim(), a.materialLibraries);
                            else if (r.test(c))
                                a.materialLibraries.push(c.substring(7).trim());
                            else {
                                if ("s" !== l) {
                                    if ("\0" === c)
                                        continue;
                                    throw new Error('THREE.OBJLoader: Unexpected line: "' + c + '"')
                                }
                                if (1 < (p = c.split(" ")).length) {
                                    var R = p[1].trim().toLowerCase();
                                    a.object.smooth = "0" !== R && "off" !== R
                                } else
                                    a.object.smooth = !0;
                                (Y = a.object.currentMaterial()) && (Y.smooth = a.object.smooth)
                            }
                    a.finalize();
                    var I = new t.Group;
                    I.materialLibraries = [].concat(a.materialLibraries);
                    for (u = 0,
                    f = a.objects.length; u < f; u++) {
                        var O = a.objects[u]
                          , D = O.geometry
                          , z = O.materials
                          , B = "Line" === D.type
                          , N = "Points" === D.type
                          , j = !1;
                        if (0 !== D.vertices.length) {
                            var U, F = new t.BufferGeometry;
                            F.addAttribute("position", new t.Float32BufferAttribute(D.vertices,3)),
                            0 < D.normals.length ? F.addAttribute("normal", new t.Float32BufferAttribute(D.normals,3)) : F.computeVertexNormals(),
                            0 < D.colors.length && (j = !0,
                            F.addAttribute("color", new t.Float32BufferAttribute(D.colors,3))),
                            0 < D.uvs.length && F.addAttribute("uv", new t.Float32BufferAttribute(D.uvs,2));
                            for (var H = [], G = 0, V = z.length; G < V; G++) {
                                var W = z[G]
                                  , Y = void 0;
                                if (null !== this.materials)
                                    if (Y = this.materials.create(W.name),
                                    !B || !Y || Y instanceof t.LineBasicMaterial) {
                                        if (N && Y && !(Y instanceof t.PointsMaterial)) {
                                            var q = new t.PointsMaterial({
                                                size: 10,
                                                sizeAttenuation: !1
                                            });
                                            X.copy(Y),
                                            Y = q
                                        }
                                    } else {
                                        var X = new t.LineBasicMaterial;
                                        X.copy(Y),
                                        X.lights = !1,
                                        Y = X
                                    }
                                Y || ((Y = B ? new t.LineBasicMaterial : N ? new t.PointsMaterial({
                                    size: 1,
                                    sizeAttenuation: !1
                                }) : new t.MeshPhongMaterial).name = W.name),
                                Y.flatShading = !W.smooth,
                                Y.vertexColors = j ? t.VertexColors : t.NoColors,
                                H.push(Y)
                            }
                            if (1 < H.length) {
                                for (G = 0,
                                V = z.length; G < V; G++)
                                    W = z[G],
                                    F.addGroup(W.groupStart, W.groupCount, G);
                                U = B ? new t.LineSegments(F,H) : N ? new t.Points(F,H) : new t.Mesh(F,H)
                            } else
                                U = B ? new t.LineSegments(F,H[0]) : N ? new t.Points(F,H[0]) : new t.Mesh(F,H[0]);
                            U.name = O.name,
                            I.add(U)
                        }
                    }
                    return console.timeEnd("OBJLoader"),
                    I
                }
            },
            n
        }()
    }
}
, function(t, e) {
    t.exports = function(t) {
        t.THREEx = {},
        t.THREEx.RendererStats = function() {
            var e = document.createElement("div");
            e.style.cssText = "width:80px;opacity:0.9;cursor:pointer";
            var n = document.createElement("div");
            n.style.cssText = "padding:0 0 3px 3px;text-align:left;background-color:#200;",
            e.appendChild(n);
            var i = document.createElement("div");
            i.style.cssText = "color:#f00;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px",
            i.innerHTML = "WebGLRenderer",
            n.appendChild(i);
            var r = [];
            for (i = 0; 9 > i; i++)
                r[i] = document.createElement("div"),
                r[i].style.cssText = "color:#f00;background-color:#311;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px",
                n.appendChild(r[i]),
                r[i].innerHTML = "-";
            var s = Date.now();
            return {
                domElement: e,
                update: function(e) {
                    if (console.assert(e instanceof t.WebGLRenderer),
                    !(Date.now() - s < 1e3 / 30)) {
                        s = Date.now();
                        var n = 0;
                        r[n++].textContent = "== Memory =====",
                        r[n++].textContent = "Programs: " + e.info.memory.programs,
                        r[n++].textContent = "Geometries: " + e.info.memory.geometries,
                        r[n++].textContent = "Textures: " + e.info.memory.textures,
                        r[n++].textContent = "== Render =====",
                        r[n++].textContent = "Calls: " + e.info.render.calls,
                        r[n++].textContent = "Vertices: " + e.info.render.vertices,
                        r[n++].textContent = "Faces: " + e.info.render.faces,
                        r[n++].textContent = "Points: " + e.info.render.points
                    }
                }
            }
        }
        ,
        t.SSAOShader = {
            uniforms: {
                tDiffuse: {
                    value: null
                },
                tDepth: {
                    value: null
                },
                size: {
                    value: new t.Vector2(64,64)
                },
                cameraNear: {
                    value: 1
                },
                cameraFar: {
                    value: 100
                },
                radius: {
                    value: 40
                },
                onlyAO: {
                    value: 0
                },
                aoClamp: {
                    value: 1
                },
                lumInfluence: {
                    value: .7
                }
            },
            vertexShader: "varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
            fragmentShader: "uniform float cameraNear;\nuniform float cameraFar;\n#ifdef USE_LOGDEPTHBUF\nuniform float logDepthBufFC;\n#endif\nuniform float radius;\nuniform bool onlyAO;\nuniform vec2 size;\nuniform float aoClamp;\nuniform float lumInfluence;\nuniform sampler2D tDiffuse;\nuniform sampler2D tDepth;\nvarying vec2 vUv;\n#define DL 2.399963229728653\n#define EULER 2.718281828459045\nconst int samples = 8;\nconst bool useNoise = true;\nconst float noiseAmount = 0.0004;\nconst float diffArea = 0.4;\nconst float gDisplace = 0.4;\n#include <packing>\nvec2 rand( const vec2 coord ) {\nvec2 noise;\nif ( useNoise ) {\nfloat nx = dot ( coord, vec2( 12.9898, 78.233 ) );\nfloat ny = dot ( coord, vec2( 12.9898, 78.233 ) * 2.0 );\nnoise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );\n} else {\nfloat ff = fract( 1.0 - coord.s * ( size.x / 2.0 ) );\nfloat gg = fract( coord.t * ( size.y / 2.0 ) );\nnoise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;\n}\nreturn ( noise * 2.0  - 1.0 ) * noiseAmount;\n}\nfloat readDepth( const in vec2 coord ) {\nfloat cameraFarPlusNear = cameraFar + cameraNear;\nfloat cameraFarMinusNear = cameraFar - cameraNear;\nfloat cameraCoef = 2.0 * cameraNear;\n#ifdef USE_LOGDEPTHBUF\nfloat logz = unpackRGBAToDepth( texture2D( tDepth, coord ) );\nfloat w = pow(2.0, (logz / logDepthBufFC)) - 1.0;\nfloat z = (logz / w) + 1.0;\n#else\nfloat z = unpackRGBAToDepth( texture2D( tDepth, coord ) );\n#endif\nreturn cameraCoef / ( cameraFarPlusNear - z * cameraFarMinusNear );\n}\nfloat compareDepths( const in float depth1, const in float depth2, inout int far ) {\nfloat garea = 8.0;\nfloat diff = ( depth1 - depth2 ) * 100.0;\nif ( diff < gDisplace ) {\ngarea = diffArea;\n} else {\nfar = 1;\n}\nfloat dd = diff - gDisplace;\nfloat gauss = pow( EULER, -2.0 * ( dd * dd ) / ( garea * garea ) );\nreturn gauss;\n}\nfloat calcAO( float depth, float dw, float dh ) {\nvec2 vv = vec2( dw, dh );\nvec2 coord1 = vUv + radius * vv;\nvec2 coord2 = vUv - radius * vv;\nfloat temp1 = 0.0;\nfloat temp2 = 0.0;\nint far = 0;\ntemp1 = compareDepths( depth, readDepth( coord1 ), far );\nif ( far > 0 ) {\ntemp2 = compareDepths( readDepth( coord2 ), depth, far );\ntemp1 += ( 1.0 - temp1 ) * temp2;\n}\nreturn temp1;\n}\nvoid main() {\nvec2 noise = rand( vUv );\nfloat depth = readDepth( vUv );\nfloat tt = clamp( depth, aoClamp, 1.0 );\nfloat w = ( 1.0 / size.x ) / tt + ( noise.x * ( 1.0 - noise.x ) );\nfloat h = ( 1.0 / size.y ) / tt + ( noise.y * ( 1.0 - noise.y ) );\nfloat ao = 0.0;\nfloat dz = 1.0 / float( samples );\nfloat l = 0.0;\nfloat z = 1.0 - dz / 2.0;\nfor ( int i = 0; i <= samples; i ++ ) {\nfloat r = sqrt( 1.0 - z );\nfloat pw = cos( l ) * r;\nfloat ph = sin( l ) * r;\nao += calcAO( depth, pw * w, ph * h );\nz = z - dz;\nl = l + DL;\n}\nao /= float( samples );\nao = 1.0 - ao;\nvec3 color = texture2D( tDiffuse, vUv ).rgb;\nvec3 lumcoeff = vec3( 0.299, 0.587, 0.114 );\nfloat lum = dot( color.rgb, lumcoeff );\nvec3 luminance = vec3( lum );\nvec3 final = vec3( color * mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\nif ( onlyAO ) {\nfinal = vec3( mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\n}\ngl_FragColor = vec4( final, 0.5 );\n}"
        },
        t.CopyShader = {
            uniforms: {
                tDiffuse: {
                    value: null
                },
                opacity: {
                    value: 1
                }
            },
            vertexShader: "varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
            fragmentShader: "uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\ngl_FragColor = opacity * texel;\n}"
        },
        t.EffectComposer = function(e, n) {
            if (this.renderer = e,
            void 0 === n) {
                var i = {
                    minFilter: t.LinearFilter,
                    magFilter: t.LinearFilter,
                    format: t.RGBAFormat,
                    stencilBuffer: !1
                }
                  , r = e.getDrawingBufferSize();
                (n = new t.WebGLRenderTarget(r.width,r.height,i)).texture.name = "EffectComposer.rt1"
            }
            this.renderTarget1 = n,
            this.renderTarget2 = n.clone(),
            this.renderTarget2.texture.name = "EffectComposer.rt2",
            this.writeBuffer = this.renderTarget1,
            this.readBuffer = this.renderTarget2,
            this.passes = [],
            void 0 === t.CopyShader && console.error("THREE.EffectComposer relies on THREE.CopyShader"),
            void 0 === t.ShaderPass && console.error("THREE.EffectComposer relies on THREE.ShaderPass"),
            this.copyPass = new t.ShaderPass(t.CopyShader)
        }
        ,
        Object.assign(t.EffectComposer.prototype, {
            swapBuffers: function() {
                var t = this.readBuffer;
                this.readBuffer = this.writeBuffer,
                this.writeBuffer = t
            },
            addPass: function(t) {
                this.passes.push(t);
                var e = this.renderer.getDrawingBufferSize();
                t.setSize(e.width, e.height)
            },
            insertPass: function(t, e) {
                this.passes.splice(e, 0, t)
            },
            render: function(e) {
                var n, i = !1, r = this.passes.length;
                for (n = 0; n < r; n++) {
                    var s = this.passes[n];
                    if (!1 !== s.enabled) {
                        if (s.render(this.renderer, this.writeBuffer, this.readBuffer, e, i),
                        s.needsSwap) {
                            if (i) {
                                var a = this.renderer.context;
                                a.stencilFunc(a.NOTEQUAL, 1, 4294967295),
                                this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, e),
                                a.stencilFunc(a.EQUAL, 1, 4294967295)
                            }
                            this.swapBuffers()
                        }
                        void 0 !== t.MaskPass && (s instanceof t.MaskPass ? i = !0 : s instanceof t.ClearMaskPass && (i = !1))
                    }
                }
            },
            reset: function(t) {
                if (void 0 === t) {
                    var e = this.renderer.getDrawingBufferSize();
                    (t = this.renderTarget1.clone()).setSize(e.width, e.height)
                }
                this.renderTarget1.dispose(),
                this.renderTarget2.dispose(),
                this.renderTarget1 = t,
                this.renderTarget2 = t.clone(),
                this.writeBuffer = this.renderTarget1,
                this.readBuffer = this.renderTarget2
            },
            setSize: function(t, e) {
                this.renderTarget1.setSize(t, e),
                this.renderTarget2.setSize(t, e);
                for (var n = 0; n < this.passes.length; n++)
                    this.passes[n].setSize(t, e)
            }
        }),
        t.Pass = function() {
            this.needsSwap = this.enabled = !0,
            this.renderToScreen = this.clear = !1
        }
        ,
        Object.assign(t.Pass.prototype, {
            setSize: function() {},
            render: function() {
                console.error("THREE.Pass: .render() must be implemented in derived pass.")
            }
        }),
        t.RenderPass = function(e, n, i, r, s) {
            t.Pass.call(this),
            this.scene = e,
            this.camera = n,
            this.overrideMaterial = i,
            this.clearColor = r,
            this.clearAlpha = void 0 === s ? 0 : s,
            this.clear = !0,
            this.needsSwap = this.clearDepth = !1
        }
        ,
        t.RenderPass.prototype = Object.assign(Object.create(t.Pass.prototype), {
            constructor: t.RenderPass,
            render: function(t, e, n) {
                if (e = t.autoClear,
                t.autoClear = !1,
                this.scene.overrideMaterial = this.overrideMaterial,
                this.clearColor) {
                    var i = t.getClearColor().getHex()
                      , r = t.getClearAlpha();
                    t.setClearColor(this.clearColor, this.clearAlpha)
                }
                this.clearDepth && t.clearDepth(),
                t.render(this.scene, this.camera, this.renderToScreen ? null : n, this.clear),
                this.clearColor && t.setClearColor(i, r),
                this.scene.overrideMaterial = null,
                t.autoClear = e
            }
        }),
        t.ShaderPass = function(e, n) {
            t.Pass.call(this),
            this.textureID = void 0 === n ? "tDiffuse" : n,
            e instanceof t.ShaderMaterial ? (this.uniforms = e.uniforms,
            this.material = e) : e && (this.uniforms = t.UniformsUtils.clone(e.uniforms),
            this.material = new t.ShaderMaterial({
                defines: Object.assign({}, e.defines),
                uniforms: this.uniforms,
                vertexShader: e.vertexShader,
                fragmentShader: e.fragmentShader
            })),
            this.camera = new t.OrthographicCamera(-1,1,1,-1,0,1),
            this.scene = new t.Scene,
            this.quad = new t.Mesh(new t.PlaneBufferGeometry(2,2),null),
            this.quad.frustumCulled = !1,
            this.scene.add(this.quad)
        }
        ,
        t.ShaderPass.prototype = Object.assign(Object.create(t.Pass.prototype), {
            constructor: t.ShaderPass,
            render: function(t, e, n) {
                this.uniforms[this.textureID] && (this.uniforms[this.textureID].value = n.texture),
                this.quad.material = this.material,
                this.renderToScreen ? t.render(this.scene, this.camera) : t.render(this.scene, this.camera, e, this.clear)
            }
        }),
        t.MaskPass = function(e, n) {
            t.Pass.call(this),
            this.scene = e,
            this.camera = n,
            this.clear = !0,
            this.inverse = this.needsSwap = !1
        }
        ,
        t.MaskPass.prototype = Object.assign(Object.create(t.Pass.prototype), {
            constructor: t.MaskPass,
            render: function(t, e, n, i, r) {
                if (i = t.context,
                (r = t.state).buffers.color.setMask(!1),
                r.buffers.depth.setMask(!1),
                r.buffers.color.setLocked(!0),
                r.buffers.depth.setLocked(!0),
                this.inverse)
                    var s = 0
                      , a = 1;
                else
                    s = 1,
                    a = 0;
                r.buffers.stencil.setTest(!0),
                r.buffers.stencil.setOp(i.REPLACE, i.REPLACE, i.REPLACE),
                r.buffers.stencil.setFunc(i.ALWAYS, s, 4294967295),
                r.buffers.stencil.setClear(a),
                t.render(this.scene, this.camera, n, this.clear),
                t.render(this.scene, this.camera, e, this.clear),
                r.buffers.color.setLocked(!1),
                r.buffers.depth.setLocked(!1),
                r.buffers.stencil.setFunc(i.EQUAL, 1, 4294967295),
                r.buffers.stencil.setOp(i.KEEP, i.KEEP, i.KEEP)
            }
        }),
        t.ClearMaskPass = function() {
            t.Pass.call(this),
            this.needsSwap = !1
        }
        ,
        t.ClearMaskPass.prototype = Object.create(t.Pass.prototype),
        Object.assign(t.ClearMaskPass.prototype, {
            render: function(t) {
                t.state.buffers.stencil.setTest(!1)
            }
        }),
        t.SSAOPass = function(e, n, i, r) {
            return void 0 === t.SSAOShader ? (console.warn("THREE.SSAOPass depends on THREE.SSAOShader"),
            new t.ShaderPass) : (t.ShaderPass.call(this, t.SSAOShader),
            this.width = void 0 === i ? 128 : i,
            this.height = void 0 === r ? 128 : r,
            this.renderToScreen = !1,
            this.camera2 = n,
            this.scene2 = e,
            this.depthMaterial = new t.MeshDepthMaterial,
            this.depthMaterial.depthPacking = t.RGBADepthPacking,
            this.depthMaterial.blending = t.NoBlending,
            this.depthRenderTarget = new t.WebGLRenderTarget(this.width,this.height,{
                minFilter: t.LinearFilter,
                magFilter: t.LinearFilter
            }),
            this.uniforms.tDepth.value = this.depthRenderTarget.texture,
            this.uniforms.size.value.set(this.width, this.height),
            this.uniforms.cameraNear.value = this.camera2.near,
            this.uniforms.cameraFar.value = this.camera2.far,
            this.uniforms.radius.value = 4,
            this.uniforms.onlyAO.value = !1,
            this.uniforms.aoClamp.value = .25,
            this.uniforms.lumInfluence.value = .7,
            void Object.defineProperties(this, {
                radius: {
                    get: function() {
                        return this.uniforms.radius.value
                    },
                    set: function(t) {
                        this.uniforms.radius.value = t
                    }
                },
                onlyAO: {
                    get: function() {
                        return this.uniforms.onlyAO.value
                    },
                    set: function(t) {
                        this.uniforms.onlyAO.value = t
                    }
                },
                aoClamp: {
                    get: function() {
                        return this.uniforms.aoClamp.value
                    },
                    set: function(t) {
                        this.uniforms.aoClamp.value = t
                    }
                },
                lumInfluence: {
                    get: function() {
                        return this.uniforms.lumInfluence.value
                    },
                    set: function(t) {
                        this.uniforms.lumInfluence.value = t
                    }
                }
            }))
        }
        ,
        t.SSAOPass.prototype = Object.create(t.ShaderPass.prototype),
        t.SSAOPass.prototype.render = function(e, n, i, r, s) {
            this.scene2.overrideMaterial = this.depthMaterial,
            e.render(this.scene2, this.camera2, this.depthRenderTarget, !0),
            this.scene2.overrideMaterial = null,
            t.ShaderPass.prototype.render.call(this, e, n, i, r, s)
        }
        ,
        t.SSAOPass.prototype.setScene = function(t) {
            this.scene2 = t
        }
        ,
        t.SSAOPass.prototype.setCamera = function(t) {
            this.camera2 = t,
            this.uniforms.cameraNear.value = this.camera2.near,
            this.uniforms.cameraFar.value = this.camera2.far
        }
        ,
        t.SSAOPass.prototype.setSize = function(t, e) {
            this.width = t,
            this.height = e,
            this.uniforms.size.value.set(this.width, this.height),
            this.depthRenderTarget.setSize(this.width, this.height)
        }
        ,
        t.LuminosityHighPassShader = {
            shaderID: "luminosityHighPass",
            uniforms: {
                tDiffuse: {
                    type: "t",
                    value: null
                },
                luminosityThreshold: {
                    type: "f",
                    value: 1
                },
                smoothWidth: {
                    type: "f",
                    value: 1
                },
                defaultColor: {
                    type: "c",
                    value: new t.Color(0)
                },
                defaultOpacity: {
                    type: "f",
                    value: 0
                }
            },
            vertexShader: "varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
            fragmentShader: "uniform sampler2D tDiffuse;\nuniform vec3 defaultColor;\nuniform float defaultOpacity;\nuniform float luminosityThreshold;\nuniform float smoothWidth;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat v = dot( texel.xyz, luma );\nvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\nfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\ngl_FragColor = mix( outputColor, texel, alpha );\n}"
        },
        t.UnrealBloomPass = function(e, n, i, r) {
            t.Pass.call(this),
            this.strength = void 0 === n ? 1 : n,
            this.radius = i,
            this.threshold = r,
            this.resolution = void 0 === e ? new t.Vector2(256,256) : new t.Vector2(e.x,e.y),
            this.clearColor = new t.Color(0,0,0);
            var s = {
                minFilter: t.LinearFilter,
                magFilter: t.LinearFilter,
                format: t.RGBAFormat
            };
            this.renderTargetsHorizontal = [],
            this.renderTargetsVertical = [],
            this.nMips = 5,
            e = Math.round(this.resolution.x / 2),
            i = Math.round(this.resolution.y / 2),
            this.renderTargetBright = new t.WebGLRenderTarget(e,i,s),
            this.renderTargetBright.texture.name = "UnrealBloomPass.bright",
            this.renderTargetBright.texture.generateMipmaps = !1;
            for (var a, o = 0; o < this.nMips; o++)
                (a = new t.WebGLRenderTarget(e,i,s)).texture.name = "UnrealBloomPass.h" + o,
                a.texture.generateMipmaps = !1,
                this.renderTargetsHorizontal.push(a),
                (a = new t.WebGLRenderTarget(e,i,s)).texture.name = "UnrealBloomPass.v" + o,
                a.texture.generateMipmaps = !1,
                this.renderTargetsVertical.push(a),
                e = Math.round(e / 2),
                i = Math.round(i / 2);
            for (void 0 === t.LuminosityHighPassShader && console.error("THREE.UnrealBloomPass relies on THREE.LuminosityHighPassShader"),
            e = t.LuminosityHighPassShader,
            this.highPassUniforms = t.UniformsUtils.clone(e.uniforms),
            this.highPassUniforms.luminosityThreshold.value = r,
            this.highPassUniforms.smoothWidth.value = .01,
            this.materialHighPassFilter = new t.ShaderMaterial({
                uniforms: this.highPassUniforms,
                vertexShader: e.vertexShader,
                fragmentShader: e.fragmentShader,
                defines: {}
            }),
            this.separableBlurMaterials = [],
            r = [3, 5, 7, 9, 11],
            e = Math.round(this.resolution.x / 2),
            i = Math.round(this.resolution.y / 2),
            o = 0; o < this.nMips; o++)
                this.separableBlurMaterials.push(this.getSeperableBlurMaterial(r[o])),
                this.separableBlurMaterials[o].uniforms.texSize.value = new t.Vector2(e,i),
                e = Math.round(e / 2),
                i = Math.round(i / 2);
            this.compositeMaterial = this.getCompositeMaterial(this.nMips),
            this.compositeMaterial.uniforms.blurTexture1.value = this.renderTargetsVertical[0].texture,
            this.compositeMaterial.uniforms.blurTexture2.value = this.renderTargetsVertical[1].texture,
            this.compositeMaterial.uniforms.blurTexture3.value = this.renderTargetsVertical[2].texture,
            this.compositeMaterial.uniforms.blurTexture4.value = this.renderTargetsVertical[3].texture,
            this.compositeMaterial.uniforms.blurTexture5.value = this.renderTargetsVertical[4].texture,
            this.compositeMaterial.uniforms.bloomStrength.value = n,
            this.compositeMaterial.uniforms.bloomRadius.value = .1,
            this.compositeMaterial.needsUpdate = !0,
            this.compositeMaterial.uniforms.bloomFactors.value = [1, .8, .6, .4, .2],
            this.bloomTintColors = [new t.Vector3(1,1,1), new t.Vector3(1,1,1), new t.Vector3(1,1,1), new t.Vector3(1,1,1), new t.Vector3(1,1,1)],
            this.compositeMaterial.uniforms.bloomTintColors.value = this.bloomTintColors,
            void 0 === t.CopyShader && console.error("THREE.BloomPass relies on THREE.CopyShader"),
            n = t.CopyShader,
            this.copyUniforms = t.UniformsUtils.clone(n.uniforms),
            this.copyUniforms.opacity.value = 1,
            this.materialCopy = new t.ShaderMaterial({
                uniforms: this.copyUniforms,
                vertexShader: n.vertexShader,
                fragmentShader: n.fragmentShader,
                blending: t.AdditiveBlending,
                depthTest: !1,
                depthWrite: !1,
                transparent: !0
            }),
            this.enabled = !0,
            this.needsSwap = !1,
            this.oldClearColor = new t.Color,
            this.oldClearAlpha = 1,
            this.camera = new t.OrthographicCamera(-1,1,1,-1,0,1),
            this.scene = new t.Scene,
            this.basic = new t.MeshBasicMaterial,
            this.quad = new t.Mesh(new t.PlaneBufferGeometry(2,2),null),
            this.quad.frustumCulled = !1,
            this.scene.add(this.quad)
        }
        ,
        t.UnrealBloomPass.prototype = Object.assign(Object.create(t.Pass.prototype), {
            constructor: t.UnrealBloomPass,
            dispose: function() {
                for (var t = 0; t < this.renderTargetsHorizontal.length; t++)
                    this.renderTargetsHorizontal[t].dispose();
                for (t = 0; t < this.renderTargetsVertical.length; t++)
                    this.renderTargetsVertical[t].dispose();
                this.renderTargetBright.dispose()
            },
            setSize: function(e, n) {
                var i = Math.round(e / 2)
                  , r = Math.round(n / 2);
                this.renderTargetBright.setSize(i, r);
                for (var s = 0; s < this.nMips; s++)
                    this.renderTargetsHorizontal[s].setSize(i, r),
                    this.renderTargetsVertical[s].setSize(i, r),
                    this.separableBlurMaterials[s].uniforms.texSize.value = new t.Vector2(i,r),
                    i = Math.round(i / 2),
                    r = Math.round(r / 2)
            },
            render: function(e, n, i, r, s) {
                this.oldClearColor.copy(e.getClearColor()),
                this.oldClearAlpha = e.getClearAlpha(),
                n = e.autoClear,
                e.autoClear = !1,
                e.setClearColor(this.clearColor, 0),
                s && e.context.disable(e.context.STENCIL_TEST),
                this.renderToScreen && (this.quad.material = this.basic,
                this.basic.map = i.texture,
                e.render(this.scene, this.camera, void 0, !0)),
                this.highPassUniforms.tDiffuse.value = i.texture,
                this.highPassUniforms.luminosityThreshold.value = this.threshold,
                this.quad.material = this.materialHighPassFilter,
                e.render(this.scene, this.camera, this.renderTargetBright, !0),
                r = this.renderTargetBright;
                for (var a = 0; a < this.nMips; a++)
                    this.quad.material = this.separableBlurMaterials[a],
                    this.separableBlurMaterials[a].uniforms.colorTexture.value = r.texture,
                    this.separableBlurMaterials[a].uniforms.direction.value = t.UnrealBloomPass.BlurDirectionX,
                    e.render(this.scene, this.camera, this.renderTargetsHorizontal[a], !0),
                    this.separableBlurMaterials[a].uniforms.colorTexture.value = this.renderTargetsHorizontal[a].texture,
                    this.separableBlurMaterials[a].uniforms.direction.value = t.UnrealBloomPass.BlurDirectionY,
                    e.render(this.scene, this.camera, this.renderTargetsVertical[a], !0),
                    r = this.renderTargetsVertical[a];
                this.quad.material = this.compositeMaterial,
                this.compositeMaterial.uniforms.bloomStrength.value = this.strength,
                this.compositeMaterial.uniforms.bloomRadius.value = this.radius,
                this.compositeMaterial.uniforms.bloomTintColors.value = this.bloomTintColors,
                e.render(this.scene, this.camera, this.renderTargetsHorizontal[0], !0),
                this.quad.material = this.materialCopy,
                this.copyUniforms.tDiffuse.value = this.renderTargetsHorizontal[0].texture,
                s && e.context.enable(e.context.STENCIL_TEST),
                this.renderToScreen ? e.render(this.scene, this.camera, void 0, !1) : e.render(this.scene, this.camera, i, !1),
                e.setClearColor(this.oldClearColor, this.oldClearAlpha),
                e.autoClear = n
            },
            getSeperableBlurMaterial: function(e) {
                return new t.ShaderMaterial({
                    defines: {
                        KERNEL_RADIUS: e,
                        SIGMA: e
                    },
                    uniforms: {
                        colorTexture: {
                            value: null
                        },
                        texSize: {
                            value: new t.Vector2(.5,.5)
                        },
                        direction: {
                            value: new t.Vector2(.5,.5)
                        }
                    },
                    vertexShader: "varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",
                    fragmentShader: "#include <common>\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec2 direction;\t\t\t\t\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\t\t\t\t}\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tfloat fSigma = float(SIGMA);\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\t\t\t\t\t\tfloat x = float(i);\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\t\t\t\t\t\tweightSum += 2.0 * w;\t\t\t\t\t}\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"
                })
            },
            getCompositeMaterial: function(e) {
                return new t.ShaderMaterial({
                    defines: {
                        NUM_MIPS: e
                    },
                    uniforms: {
                        blurTexture1: {
                            value: null
                        },
                        blurTexture2: {
                            value: null
                        },
                        blurTexture3: {
                            value: null
                        },
                        blurTexture4: {
                            value: null
                        },
                        blurTexture5: {
                            value: null
                        },
                        dirtTexture: {
                            value: null
                        },
                        bloomStrength: {
                            value: 1
                        },
                        bloomFactors: {
                            value: null
                        },
                        bloomTintColors: {
                            value: null
                        },
                        bloomRadius: {
                            value: 0
                        }
                    },
                    vertexShader: "varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",
                    fragmentShader: "varying vec2 vUv;\t\t\t\tuniform sampler2D blurTexture1;\t\t\t\tuniform sampler2D blurTexture2;\t\t\t\tuniform sampler2D blurTexture3;\t\t\t\tuniform sampler2D blurTexture4;\t\t\t\tuniform sampler2D blurTexture5;\t\t\t\tuniform sampler2D dirtTexture;\t\t\t\tuniform float bloomStrength;\t\t\t\tuniform float bloomRadius;\t\t\t\tuniform float bloomFactors[NUM_MIPS];\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\t\t\t\t\t\t\t\tfloat lerpBloomFactor(const in float factor) { \t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\t\t\t\t}\t\t\t\t\t\t\t\tvoid main() {\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\t\t\t\t}"
                })
            }
        }),
        t.UnrealBloomPass.BlurDirectionX = new t.Vector2(1,0),
        t.UnrealBloomPass.BlurDirectionY = new t.Vector2(0,1),
        t.StrippedLambertMaterial = function(e) {
            let n = new t.ShaderMaterial({
                name: "lambert-stripped",
                uniforms: t.UniformsUtils.merge([t.ShaderLib.lambert.uniforms]),
                lights: !0,
                fog: !0,
                vertexShader: "\n#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n    varying vec3 vLightBack;\n    varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n// #include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n// #include <morphtarget_pars_vertex>\n// #include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n// #include <logdepthbuf_pars_vertex>\n// #include <clipping_planes_pars_vertex>\nvoid main() {\n    #include <uv_vertex>\n    #include <uv2_vertex>\n    #include <color_vertex>\n    #include <beginnormal_vertex>\n    // #include <morphnormal_vertex>\n    // #include <skinbase_vertex>\n    // #include <skinnormal_vertex>\n    #include <defaultnormal_vertex>\n    #include <begin_vertex>\n    // #include <morphtarget_vertex>\n    // #include <skinning_vertex>\n    #include <project_vertex>\n    // #include <logdepthbuf_vertex>\n    // #include <clipping_planes_vertex>\n    #include <worldpos_vertex>\n    // #include <envmap_vertex>\n    #include <lights_lambert_vertex>\n    #include <shadowmap_vertex>\n    #include <fog_vertex>\n}\n",
                fragmentShader: "\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n    varying vec3 vLightBack;\n    varying vec3 vIndirectBack;\n#endif\n\n\n#include <common>\n#include <packing>\n// #include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n// #include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n// #include <envmap_pars_fragment>\n#include <bsdfs>  // Shading functions\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n// #include <specularmap_pars_fragment>\n// #include <logdepthbuf_pars_fragment>\n// #include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n    // #include <clipping_planes_fragment>\n\n    vec4 diffuseColor = vec4( diffuse, opacity );\n    ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n    vec3 totalEmissiveRadiance = emissive;\n\n    // #include <logdepthbuf_fragment>\n    #include <map_fragment>\n    #include <color_fragment>\n    // #include <alphamap_fragment>\n    #include <alphatest_fragment>\n    // #include <specularmap_fragment>\n    #include <emissivemap_fragment>\n\n    // accumulation\n    reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\n    #ifdef DOUBLE_SIDED\n\n        reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\n    #else\n\n        reflectedLight.indirectDiffuse += vIndirectFront;\n\n    #endif\n\n    #include <lightmap_fragment>\n\n    reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\n    #ifdef DOUBLE_SIDED\n\n        reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\n    #else\n\n        reflectedLight.directDiffuse = vLightFront;\n\n    #endif\n\n    reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\n    // modulation\n    #include <aomap_fragment>\n\n    vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n    // #include <envmap_fragment>\n\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n    // #include <tonemapping_fragment>\n    // #include <encodings_fragment>\n    #include <fog_fragment>\n    #include <premultiplied_alpha_fragment>\n    // #include <dithering_fragment>\n}\n    "
            });
            return Object.assign(n, new t.MeshLambertMaterial(e)),
            n.isMeshLambertMaterial = !0,
            n.setValues(e),
            n
        }
    }
}
, function(t, e, n) {
    var i;
    !function() {
        "use strict";
        function r(t) {
            var e;
            e = "function" == typeof t ? t : t ? a(t) : Math.random,
            this.p = s(e),
            this.perm = new Uint8Array(512),
            this.permMod12 = new Uint8Array(512);
            for (var n = 0; 512 > n; n++)
                this.perm[n] = this.p[255 & n],
                this.permMod12[n] = this.perm[n] % 12
        }
        function s(t) {
            var e, n = new Uint8Array(256);
            for (e = 0; 256 > e; e++)
                n[e] = e;
            for (e = 0; 255 > e; e++) {
                var i = e + ~~(t() * (256 - e))
                  , r = n[e];
                n[e] = n[i],
                n[i] = r
            }
            return n
        }
        function a() {
            var t = 0
              , e = 0
              , n = 0
              , i = 1
              , r = function() {
                var t = 4022871197;
                return function(e) {
                    e = e.toString();
                    for (var n = 0; n < e.length; n++) {
                        var i = .02519603282416938 * (t += e.charCodeAt(n));
                        i -= t = i >>> 0,
                        t = (i *= t) >>> 0,
                        t += 4294967296 * (i -= t)
                    }
                    return 2.3283064365386963e-10 * (t >>> 0)
                }
            }();
            t = r(" "),
            e = r(" "),
            n = r(" ");
            for (var s = 0; s < arguments.length; s++)
                0 > (t -= r(arguments[s])) && (t += 1),
                0 > (e -= r(arguments[s])) && (e += 1),
                0 > (n -= r(arguments[s])) && (n += 1);
            return r = null,
            function() {
                var r = 2091639 * t + 2.3283064365386963e-10 * i;
                return t = e,
                e = n,
                n = r - (i = 0 | r)
            }
        }
        var o = .5 * (Math.sqrt(3) - 1)
          , c = (3 - Math.sqrt(3)) / 6
          , l = 1 / 6
          , p = (Math.sqrt(5) - 1) / 4
          , h = (5 - Math.sqrt(5)) / 20;
        r.prototype = {
            grad3: new Float32Array([1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1, 0, 1, 0, 1, -1, 0, 1, 1, 0, -1, -1, 0, -1, 0, 1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1]),
            grad4: new Float32Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1, -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1, 1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1, -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]),
            noise2D: function(t, e) {
                var n, i, r = this.permMod12, s = this.perm, a = this.grad3, l = 0, p = 0, h = 0, u = (t + e) * o, f = Math.floor(t + u), d = Math.floor(e + u), m = (f + d) * c, g = t - (f - m), v = e - (d - m);
                g > v ? (n = 1,
                i = 0) : (n = 0,
                i = 1);
                var y = g - n + c
                  , b = v - i + c
                  , w = g - 1 + 2 * c
                  , x = v - 1 + 2 * c
                  , M = 255 & f
                  , _ = 255 & d
                  , S = .5 - g * g - v * v;
                if (0 <= S) {
                    var T = 3 * r[M + s[_]];
                    l = (S *= S) * S * (a[T] * g + a[T + 1] * v)
                }
                var E = .5 - y * y - b * b;
                if (0 <= E) {
                    var k = 3 * r[M + n + s[_ + i]];
                    p = (E *= E) * E * (a[k] * y + a[k + 1] * b)
                }
                var A = .5 - w * w - x * x;
                if (0 <= A) {
                    var L = 3 * r[M + 1 + s[_ + 1]];
                    h = (A *= A) * A * (a[L] * w + a[L + 1] * x)
                }
                return 70 * (l + p + h)
            },
            noise3D: function(t, e, n) {
                var i, r, s, a, o, c, p, h, u, f, d = this.permMod12, m = this.perm, g = this.grad3, v = (t + e + n) * (1 / 3), y = Math.floor(t + v), b = Math.floor(e + v), w = Math.floor(n + v), x = (y + b + w) * l, M = t - (y - x), _ = e - (b - x), S = n - (w - x);
                M >= _ ? _ >= S ? (o = 1,
                c = 0,
                p = 0,
                h = 1,
                u = 1,
                f = 0) : M >= S ? (o = 1,
                c = 0,
                p = 0,
                h = 1,
                u = 0,
                f = 1) : (o = 0,
                c = 0,
                p = 1,
                h = 1,
                u = 0,
                f = 1) : _ < S ? (o = 0,
                c = 0,
                p = 1,
                h = 0,
                u = 1,
                f = 1) : M < S ? (o = 0,
                c = 1,
                p = 0,
                h = 0,
                u = 1,
                f = 1) : (o = 0,
                c = 1,
                p = 0,
                h = 1,
                u = 1,
                f = 0);
                var T = M - o + l
                  , E = _ - c + l
                  , k = S - p + l
                  , A = M - h + 2 * l
                  , L = _ - u + 2 * l
                  , P = S - f + 2 * l
                  , C = M - 1 + .5
                  , R = _ - 1 + .5
                  , I = S - 1 + .5
                  , O = 255 & y
                  , D = 255 & b
                  , z = 255 & w
                  , B = .6 - M * M - _ * _ - S * S;
                if (0 > B)
                    i = 0;
                else {
                    var N = 3 * d[O + m[D + m[z]]];
                    i = (B *= B) * B * (g[N] * M + g[N + 1] * _ + g[N + 2] * S)
                }
                var j = .6 - T * T - E * E - k * k;
                if (0 > j)
                    r = 0;
                else {
                    var U = 3 * d[O + o + m[D + c + m[z + p]]];
                    r = (j *= j) * j * (g[U] * T + g[U + 1] * E + g[U + 2] * k)
                }
                var F = .6 - A * A - L * L - P * P;
                if (0 > F)
                    s = 0;
                else {
                    var H = 3 * d[O + h + m[D + u + m[z + f]]];
                    s = (F *= F) * F * (g[H] * A + g[H + 1] * L + g[H + 2] * P)
                }
                var G = .6 - C * C - R * R - I * I;
                if (0 > G)
                    a = 0;
                else {
                    var V = 3 * d[O + 1 + m[D + 1 + m[z + 1]]];
                    a = (G *= G) * G * (g[V] * C + g[V + 1] * R + g[V + 2] * I)
                }
                return 32 * (i + r + s + a)
            },
            noise4D: function(t, e, n, i) {
                var r, s, a, o, c, l, u, f, d, m, g, v, y, b, w, x, M, _ = this.perm, S = this.grad4, T = (t + e + n + i) * p, E = Math.floor(t + T), k = Math.floor(e + T), A = Math.floor(n + T), L = Math.floor(i + T), P = (E + k + A + L) * h, C = t - (E - P), R = e - (k - P), I = n - (A - P), O = i - (L - P), D = 0, z = 0, B = 0, N = 0;
                C > R ? D++ : z++,
                C > I ? D++ : B++,
                C > O ? D++ : N++,
                R > I ? z++ : B++,
                R > O ? z++ : N++,
                I > O ? B++ : N++;
                var j = C - (l = 3 <= D ? 1 : 0) + h
                  , U = R - (u = 3 <= z ? 1 : 0) + h
                  , F = I - (f = 3 <= B ? 1 : 0) + h
                  , H = O - (d = 3 <= N ? 1 : 0) + h
                  , G = C - (m = 2 <= D ? 1 : 0) + 2 * h
                  , V = R - (g = 2 <= z ? 1 : 0) + 2 * h
                  , W = I - (v = 2 <= B ? 1 : 0) + 2 * h
                  , Y = O - (y = 2 <= N ? 1 : 0) + 2 * h
                  , q = C - (b = 1 <= D ? 1 : 0) + 3 * h
                  , X = R - (w = 1 <= z ? 1 : 0) + 3 * h
                  , Z = I - (x = 1 <= B ? 1 : 0) + 3 * h
                  , K = O - (M = 1 <= N ? 1 : 0) + 3 * h
                  , J = C - 1 + 4 * h
                  , $ = R - 1 + 4 * h
                  , Q = I - 1 + 4 * h
                  , tt = O - 1 + 4 * h
                  , et = 255 & E
                  , nt = 255 & k
                  , it = 255 & A
                  , rt = 255 & L
                  , st = .6 - C * C - R * R - I * I - O * O;
                if (0 > st)
                    r = 0;
                else {
                    var at = _[et + _[nt + _[it + _[rt]]]] % 32 * 4;
                    r = (st *= st) * st * (S[at] * C + S[at + 1] * R + S[at + 2] * I + S[at + 3] * O)
                }
                var ot = .6 - j * j - U * U - F * F - H * H;
                if (0 > ot)
                    s = 0;
                else {
                    var ct = _[et + l + _[nt + u + _[it + f + _[rt + d]]]] % 32 * 4;
                    s = (ot *= ot) * ot * (S[ct] * j + S[ct + 1] * U + S[ct + 2] * F + S[ct + 3] * H)
                }
                var lt = .6 - G * G - V * V - W * W - Y * Y;
                if (0 > lt)
                    a = 0;
                else {
                    var pt = _[et + m + _[nt + g + _[it + v + _[rt + y]]]] % 32 * 4;
                    a = (lt *= lt) * lt * (S[pt] * G + S[pt + 1] * V + S[pt + 2] * W + S[pt + 3] * Y)
                }
                var ht = .6 - q * q - X * X - Z * Z - K * K;
                if (0 > ht)
                    o = 0;
                else {
                    var ut = _[et + b + _[nt + w + _[it + x + _[rt + M]]]] % 32 * 4;
                    o = (ht *= ht) * ht * (S[ut] * q + S[ut + 1] * X + S[ut + 2] * Z + S[ut + 3] * K)
                }
                var ft = .6 - J * J - $ * $ - Q * Q - tt * tt;
                if (0 > ft)
                    c = 0;
                else {
                    var dt = _[et + 1 + _[nt + 1 + _[it + 1 + _[rt + 1]]]] % 32 * 4;
                    c = (ft *= ft) * ft * (S[dt] * J + S[dt + 1] * $ + S[dt + 2] * Q + S[dt + 3] * tt)
                }
                return 27 * (r + s + a + o + c)
            }
        },
        r._buildPermutationTable = s,
        void 0 !== (i = function() {
            return r
        }
        .call(e, n, e, t)) && (t.exports = i),
        e.SimplexNoise = r,
        t.exports = r
    }()
}
, function(t, e) {
    t.exports.easing = {
        linear: function(t) {
            return t
        },
        easeInQuad: function(t) {
            return t * t
        },
        easeOutQuad: function(t) {
            return t * (2 - t)
        },
        easeInOutQuad: function(t) {
            return .5 > t ? 2 * t * t : (4 - 2 * t) * t - 1
        },
        easeInCubic: function(t) {
            return t * t * t
        },
        easeOutCubic: function(t) {
            return --t * t * t + 1
        },
        easeInOutCubic: function(t) {
            return .5 > t ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1
        },
        easeInQuart: function(t) {
            return t * t * t * t
        },
        easeOutQuart: function(t) {
            return 1 - --t * t * t * t
        },
        easeInOutQuart: function(t) {
            return .5 > t ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t
        },
        easeInQuint: function(t) {
            return t * t * t * t * t
        },
        easeOutQuint: function(t) {
            return 1 + --t * t * t * t * t
        },
        easeInOutQuint: function(t) {
            return .5 > t ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t
        }
    }
}
, function(t, e, n) {
    var i, r, s = 0, a = function(t) {
        this.sid = s++,
        this.uid = t.uid,
        this.width = t.w,
        this.length = t.l,
        this.height = t.h,
        this.active = !0,
        this.x = t.x,
        this.orgX = this.x,
        this.y = t.y,
        this.orgY = this.y,
        this.z = t.z,
        this.orgZ = this.z,
        this.dir = t.d,
        this.src = t.src,
        this.ramp = t.ramp,
        this.ladder = t.ladder,
        this.jumpPad = t.jumpPad,
        this.noShoot = t.noShoot,
        this.stepSrc = t.s,
        this.score = t.score,
        this.scoreP = t.scoreP,
        this.kill = t.kill,
        this.dummy = t.dummy,
        this.noVis = t.noVis,
        this.complexMesh = t.complexMesh,
        this.penetrable = t.penetrable,
        this.health = t.health,
        this.startHealth = t.health,
        this.transparent = t.transparent,
        this.boost = t.boost,
        this.boostDr = t.boostDr,
        this.aoMlt = t.aoM,
        this.team = t.team,
        this.flag = t.flag,
        this.trigger = t.trigger,
        this.pickup = t.pickup,
        this.orgPickup = t.orgPickup,
        this.pickupRep = t.pickupRep,
        this.meshRef = t.meshRef,
        this.checkpoint = t.checkpoint,
        this.singleUse = t.singleUse,
        this.isBorder = t.isBorder
    };
    t.exports.manager = function(t, e, s) {
        var o, c;
        t && (i = n(37).prefabs,
        r = n(4)),
        this.aoOpac = 0,
        this.objects = [],
        this.objectives = [],
        this.flags = [],
        this.pickups = [],
        this.collision = function(t, e, n) {
            return t.x - t.width - n <= e.x + e.width && t.x + t.width + n >= e.x - e.width && t.z - t.length - n <= e.z + e.length && t.z + t.length + n >= e.z - e.length && t.y - t.height - n <= e.y + e.height && t.y + t.height + n >= e.y - e.height
        }
        ,
        this.checkPos = function(t, n, i, r, s) {
            for (var a = 0; a < this.objects.length; ++a)
                if (this.objects[a] != r && this.objects[a] != s && !this.objects[a].ramp && e.pointInBox3D(t, n, i, this.objects[a]))
                    return !1;
            return !0
        }
        ,
        this.addCylinder = function(e, n, i, r, s, a) {
            t && (a.shadows = !0,
            t.addCylinder(e, n, i, r, s, a))
        }
        ,
        this.getZoneDat = function(t, e) {
            return {
                src: "zone_r",
                texSrc: "zone_" + (e && t == e.team ? "b" : "r"),
                noGroup: !0,
                mat: r.MeshBasicMaterial,
                transparent: !0,
                depthWrite: !1,
                side: 2
            }
        }
        ,
        this.getFlagDat = function(t, e) {
            var n = e && t == e.team ? "1" : "0";
            return {
                src: "crystal_0",
                texSrc: "crystal_" + n,
                noGroup: !0,
                noShadow: !0,
                noFog: !0,
                emissive: "0" == n ? 8729652 : 4360861
            }
        }
        ,
        this.addFlag = function(e, n, i, r) {
            var o = null;
            t && ((o = t.loadMesh(this.getFlagDat(r), e, n + s.flagOff, i, 0, s.flagScale, t.scene)).layers.set(2),
            o.zoneMesh = t.addCube(e, n, i, s.flagZoneS, s.flagZoneH, s.flagZoneS, [1, 1, 0, 0, 1, 1], this.getZoneDat(r)));
            var c = new a({
                uid: this.objects.length,
                meshRef: o,
                x: e,
                z: i,
                y: n + s.flagScale / 2 + s.flagOff,
                w: s.flagScale,
                l: s.flagScale,
                h: s.flagScale / 2,
                team: r,
                flag: !0,
                noShoot: !0,
                complexMesh: !0
            });
            this.flags.push(c),
            this.objects.push(c);
            var l = new a({
                x: e,
                z: i,
                y: n + s.flagZoneH / 2,
                w: s.flagZoneS / 2,
                l: s.flagZoneS / 2,
                h: s.flagZoneH / 2,
                team: r,
                trigger: !0,
                noShoot: !0,
                complexMesh: !0
            });
            l.flagObj = c,
            this.objects.push(l)
        }
        ,
        this.addWeapon = function(e, n, i, r, o, c, l, p, h) {
            var u = null;
            t && ((u = t.loadMesh({
                src: "weapons/" + p.src,
                texSrc: "weapons/" + p.src,
                noGroup: !0,
                noShadow: !0,
                transparent: !0,
                noFog: !0
            }, e, n + s.pickupOff, i, 0, p.scale, t.scene)).rotateY(r || 0),
            u.rotateX((o || 0) - Math.PI / 2),
            u.rotateZ(c || 0));
            var f = new a({
                uid: this.objects.length,
                meshRef: u,
                x: e,
                z: i,
                y: n + s.pickupZoneH / 2,
                w: s.pickupZoneX,
                l: s.pickupZoneZ,
                h: 2 * s.pickupZoneH,
                pickup: l,
                pickupRep: !h,
                orgPickup: l,
                trigger: !0,
                noShoot: !0,
                complexMesh: !0
            });
            this.pickups.push(f),
            this.objects.push(f)
        }
        ,
        this.addObjective = function(e, n, i, s, a, o) {
            var c;
            t && ((c = t.addCube(e, n, i, s, o, a, [1, 1, 0, 0, 1, 1], {
                src: "objective_0",
                noGroup: !0,
                mat: r.MeshBasicMaterial,
                transparent: !0,
                depthWrite: !1,
                side: 2
            })).visible = !1),
            this.objectives.push({
                x: e,
                z: i,
                y: n + o / 2,
                mesh: c,
                width: s / 2,
                length: a / 2,
                height: o / 2
            })
        }
        ,
        this.addDeathZone = function(t, e, n, i, r, s) {
            this.objects.push(new a({
                x: t,
                z: n,
                y: e + s / 2,
                w: i / 2,
                l: r / 2,
                h: s / 2,
                kill: !0,
                noShoot: !0,
                complexMesh: !0
            }))
        }
        ,
        this.addScoreZone = function(t, e, n, i, r, s, o) {
            this.objects.push(new a({
                x: t,
                z: n,
                y: e + s / 2,
                w: i / 2,
                l: r / 2,
                h: s / 2,
                score: !0,
                scoreP: o,
                noShoot: !0,
                complexMesh: !0
            }))
        }
        ,
        this.addCheckPoint = function(t, e, n, i, r, s, o, c) {
            this.objects.push(new a({
                x: t,
                z: n,
                y: e + s / 2,
                w: i / 2,
                l: r / 2,
                h: s / 2,
                d: parseInt(c) || 0,
                checkpoint: !0,
                singleUse: o,
                noShoot: !0,
                complexMesh: !0
            }))
        }
        ,
        this.addGrass = function(e, n, i, s, a, o, c) {
            c = c || {},
            t && !c.noVis && (c.side = r.DoubleSide,
            c.transparent = !0,
            c.alphaTest = .2,
            c.vertexColors = r.VertexColors,
            c.shadowsR = !0,
            c.noGroup = !!c.health,
            t.addGrass(e, n, i, s, a, o, c))
        }
        ,
        this.addLadder = function(n, i, c, l, p, h, u, f) {
            var d = s.ladderScale
              , m = s.ladderScale;
            if (0 == p || p == Math.PI ? m = s.ladderWidth : d = s.ladderWidth,
            o = new a({
                ladder: !0,
                complexMesh: !0,
                noShoot: !0,
                d: p,
                x: n + s.ladderScale * Math.cos(p),
                z: c + s.ladderScale * Math.sin(p),
                y: i,
                w: d,
                l: m,
                h: l
            }),
            this.objects.push(o),
            t && !h) {
                var g = {
                    src: u || "floor_0",
                    vertexColors: r.VertexColors,
                    colr: f,
                    scale: .02,
                    amb: s.ambientVal,
                    shadows: !0
                };
                t.addCube(o.x + s.ladderWidth * Math.sin(p), o.y, o.z + s.ladderWidth * Math.cos(p), 2 * s.ladderScale, l + 2, 2 * s.ladderScale, [1, 1, 1, 1, 1, 1], g),
                t.addCube(o.x - s.ladderWidth * Math.sin(p), o.y, o.z - s.ladderWidth * Math.cos(p), 2 * s.ladderScale, l + 2, 2 * s.ladderScale, [1, 1, 1, 1, 1, 1], g);
                for (var v = Math.floor(l / 6), y = 0; y < v; ++y)
                    g.dark = .6 + y / v * .4,
                    t.addPlane(o.x, i + 6 * (y + 1) + e.randFloat(-1, 1), o.z, s.ladderWidth, s.ladderScale, g, -p + Math.PI / 2, Math.PI / 2, e.randFloat(-.1, .1))
            }
        }
        ,
        this.addRamp = function(e, n, i, o, c, l, p, h, u, f, d, m) {
            var g = 0 != p && p != Math.PI
              , v = (g ? l : o) / 2
              , y = Math.sqrt(c * c + l * l)
              , b = Math.asin(c / y);
            if (this.objects.push(new a({
                x: e,
                z: i,
                y: n + c / 2,
                w: o / 2,
                l: l / 2,
                h: c / 2,
                d: p,
                noShoot: !0,
                complexMesh: !0,
                boostDr: h ? b : null,
                boost: h || null,
                ramp: {
                    sX: e - v * Math.cos(p),
                    sZ: i - v * Math.sin(p),
                    eX: e + v * Math.cos(p),
                    eZ: i + v * Math.sin(p)
                }
            })),
            t && !f) {
                t.addRamp(e, n, i, g ? o : l, c, (g ? l : o) / 2, p, {
                    src: u || "default",
                    vertexColors: r.VertexColors,
                    colr: d,
                    scale: 1,
                    shadowsR: !0
                }),
                n += s.ambOff;
                var w = (g ? o : l) / 2 - m;
                g ? o = 2 * m : l = 2 * m;
                for (var x, M = 0; 2 > M; ++M)
                    x = M ? 1 : -1,
                    t.addRamp(e + w * x * Math.cos(p + Math.PI / 2), n, i + w * x * Math.sin(p + Math.PI / 2), g ? o : l, c, (g ? l : o) / 2, p, {
                        src: "ambient_1",
                        euler: "ZYX",
                        depthWrite: !1,
                        side: r.DoubleSide,
                        transparent: !0
                    }, M ? 0 : Math.PI)
            }
        }
        ,
        this.addBlock = function(e, n, i, s, o, c, l, p) {
            if ((p = p || {}).src = p.src || "wall_0",
            p.noCol || this.objects.push(new a({
                x: e,
                z: i,
                y: n + c / 2,
                w: s / 2,
                l: o / 2,
                h: c / 2,
                uid: this.objects.length,
                s: p.sound,
                src: p.src,
                noVis: p.noVis,
                health: p.health,
                transparent: p.transparent,
                penetrable: p.penetrable,
                isBorder: p.isBorder,
                complexMesh: p.xR || p.yR || p.zR || "link_0" == p.src,
                ter: !0,
                trigger: p.trig,
                event: p.ev,
                func: p.func
            })),
            t && !p.noVis) {
                p.transparent = "link_0" == p.src || 1 != p.opacity,
                p.depthWrite = 1 == p.opacity,
                p.alphaTest = p.transparent ? .02 : 0,
                p.vertexColors = r.VertexColors,
                p.scale = null == p.scale ? 1 : p.scale,
                p.shadows = !p.shadowsR && 1 == p.opacity,
                p.noFog = !!p.emissive,
                p.noGroup = !!p.health;
                var h = t.addCube(e, n, i, s, c, o, l, p);
                p.health && !p.noCol && (this.objects[this.objects.length - 1].meshRef = h)
            }
        }
        ,
        this.addMesh = function(n, o, c, l, p, h, u, f, d) {
            o += h,
            d || this.objects.push(new a({
                complexMesh: !!i && i[f.toUpperCase()].complex,
                aoM: i && i[f.toUpperCase()].aoMlt || 0,
                x: n,
                z: c,
                y: o,
                w: p,
                l: u,
                h: h,
                ter: !0
            })),
            i && i[f.toUpperCase()].transparent && (o += e.randFloat(-.01, .01)),
            t && t.loadMesh({
                src: f + "_0",
                emissive: i[f.toUpperCase()].emiss ? 16777215 : null,
                side: i[f.toUpperCase()].doubleSide ? r.DoubleSide : r.FrontSide,
                transparent: i[f.toUpperCase()].transparent,
                shadows: i[f.toUpperCase()].castShadow,
                shadowsR: i[f.toUpperCase()].receiveShadow
            }, n, o, c, l, s[f + "Scale"], t.scene, !0)
        }
        ;
        var l = [];
        this.addNoisePlanes = function() {
            for (var e = 0; e < l.length; ++e)
                l[e][5].objects = this.objects,
                t.addPlane(...l[e]);
            l.length = 0
        }
        ,
        this.addPlane = function(e, n, i, s, o, c, p, h, u) {
            if ((c = c || {}).col && this.objects.push(new a({
                x: e,
                z: i,
                y: n,
                w: o,
                l: s,
                h: 0,
                s: c.sound,
                health: c.health,
                transparent: c.transparent,
                penetrable: c.penetrable,
                noVis: c.noVis
            })),
            t && !c.noVis) {
                c.transparent = !0,
                c.side = r.DoubleSide,
                c.vertexColors = r.VertexColors,
                c.noise && (c.pinEdges = !0,
                c.margin = 1,
                c.tilesX = Math.round(o / 5),
                c.tilesZ = Math.round(s / 5));
                var f = [e, n, i, o, s, c, p, (h || 0) + Math.PI / 2, u];
                if (!c.noise)
                    return t.addPlane(...f);
                l.push(f)
            }
        }
        ,
        this.pointInObjs = function(t, n, i) {
            for (var r = 0; r < this.objects.length; ++r)
                if (!(o = this.objects[r]).noVis && !o.complexMesh && !o.health && 0 > n.indexOf(o.sid) && e.pointInBox3D(t[0], t[1], t[2], o, i || 0))
                    return !0;
            return !1
        }
        ,
        this.setMaxAO = function(t, e, n) {
            t.maxAOS = t.maxAOS || {},
            t.maxAOS[e.sid] = Math.max(n, t.maxAOS[e.sid] || 0),
            e.maxAOS = e.maxAOS || {},
            e.maxAOS[t.sid] = Math.max(n, e.maxAOS[t.sid] || 0)
        }
        ,
        this.aosToAdd = {},
        this.addAmbient = function(t, n, i, r, a, o, c, l, p, h, u) {
            var f = !h;
            if (h)
                for (var d = 0; d < h.length; ++d)
                    if (e.pointInBox3D(t, n, i, h[d], 2 * s.ambOff)) {
                        f = !0;
                        break
                    }
            if (f)
                if (h) {
                    var m = h[0].sid + "-" + h[1].sid;
                    this.aosToAdd[m] || (this.aosToAdd[m] = []),
                    this.aosToAdd[m].push({
                        vals: [t, n, i, r, a, o, c + s.ambOff, l + s.ambOff, p],
                        group: u
                    })
                } else
                    this.addPlane(t, n, i, c, l, {
                        src: "ambient_" + (p || 0),
                        euler: "ZYX",
                        depthWrite: !1
                    }, r, a, o)
        }
        ;
        var p = [["g6-1-2", "g4-1-2"], ["g5-1-2", "g4-0-1"], ["g6-0-1", "g3-1-2"], ["g5-0-1", "g3-0-1"], ["g6-0-3", "g2-0-3"], ["g5-0-3", "g2-1-1"], ["g6-1-1", "g1-0-3"], ["g5-1-1", "g1-1-1"], ["g6-0-2", "g1-1-0"], ["g5-0-2", "g1-0-2"], ["g6-1-0", "g2-1-0"], ["g5-1-0", "g2-0-2"], ["g4-0-2", "g1-0-0"], ["g3-0-2", "g1-1-3"], ["g4-1-0", "g2-0-0"], ["g3-1-0", "g2-1-3"], ["g4-0-3", "g2-1-2"], ["g3-0-3", "g2-0-1"], ["g4-1-1", "g1-1-2"], ["g3-1-1", "g1-0-1"], ["g6-1-3", "g3-0-0"], ["g5-1-3", "g3-1-3"], ["g6-0-0", "g4-0-0"], ["g5-0-0", "g4-1-3"]];
        this.groupsMatch = function(t, e) {
            for (var n = 0; n < p.length; ++n)
                if (0 <= p[n].indexOf(t) && 0 <= p[n].indexOf(e))
                    return !0;
            return !1
        }
        ,
        this.clearAOGroup = function(t) {
            for (var e = t.length - 1; 0 <= e; --e) {
                o = t[e];
                for (var n = t.length - 1; 0 <= n; --n)
                    if (c = t[n],
                    !o.dontAdd && !c.dontAdd && o != c && this.groupsMatch(o.group, c.group)) {
                        o.vals[6] + o.vals[7] >= c.vals[6] + c.vals[7] ? c.dontAdd = !0 : o.dontAdd = !0;
                        break
                    }
            }
        }
        ,
        this.addPendingAOs = function() {
            for (var t in this.aosToAdd)
                if (this.aosToAdd.hasOwnProperty(t)) {
                    this.clearAOGroup(this.aosToAdd[t]);
                    for (var e = 0; e < this.aosToAdd[t].length; ++e)
                        this.aosToAdd[t][e].dontAdd || this.addAmbient(...this.aosToAdd[t][e].vals)
                }
            this.aosToAdd = {}
        }
        ,
        this.limitAmb = function(t, n, i, r, s, a, o) {
            var c = [e.cdv[r]]
              , l = [e.cdv[s]];
            return t = i == -Math.PI / 2 || i == Math.PI + Math.PI / 2 ? Math.min(t, (n[s] - Math.min(a[s] - a[l], o[s] - o[l])) / 2) : i == Math.PI / 2 ? Math.min(t, (Math.max(a[s] + a[l], o[s] + o[l]) - n[s]) / 2) : 0 == i ? Math.min(t, (Math.max(a[r] + a[c], o[r] + o[c]) - n[r]) / 2) : Math.min(t, (n[r] - Math.min(a[r] - a[c], o[r] - o[c])) / 2)
        }
        ,
        this.resetAll = function() {
            this.aosToAdd = {};
            for (var e = 0; e < this.objects.length; ++e)
                this.objects[e].active = !0,
                this.objects[e].startHealth && (this.objects[e].health = this.objects[e].startHealth),
                this.objects[e].meshRef && (this.objects[e].meshRef.visible = !0);
            t && t.updateShadowMap()
        }
        ,
        this.removeAll = function() {
            this.objects.length = 0,
            this.objectives.length = 0,
            this.flags.length = 0,
            this.pickups.length = 0
        }
    }
}
, function(t, e) {
    t.exports = [{
        name: "Triggerman",
        loadout: [1],
        secondary: !0,
        colors: [10975328, 4013373, 2302755, 2631720, 7098434, 12566463],
        health: 100,
        segs: 6,
        speed: 1.05
    }, {
        name: "Hunter",
        loadout: [0],
        secondary: !0,
        colors: [10975328, 8083261, 6506290, 2631720, 6506290, 4008733],
        health: 60,
        segs: 5,
        speed: 1.05
    }, {
        name: "Run N Gun",
        loadout: [3],
        colors: [10975328, 4088706, 3099491, 2631720, 6506290, 1715002],
        health: 100,
        segs: 6,
        speed: 1.18
    }, {
        name: "Spray N Pray",
        loadout: [6],
        txts: ["Calling in the Big Guns?", "Remember - No russian.", "Pesky Snipers..."],
        colors: [10975328, 5793865, 4806204, 2631720, 2631720, 3160103],
        health: 170,
        segs: 7,
        regen: .05,
        speed: 1
    }, {
        name: "Vince",
        loadout: [5],
        secondary: !0,
        colors: [8412234, 5526119, 4144461, 2631720, 2631720, 2697267],
        health: 100,
        segs: 6,
        speed: 1
    }, {
        name: "Detective",
        loadout: [4],
        colors: [10975328, 7360054, 4410462, 2631720, 6506290, 4140062],
        health: 100,
        segs: 6,
        speed: 1
    }, {
        name: "Marksman",
        loadout: [7],
        secondary: !0,
        colors: [10975328, 5793865, 4806204, 2631720, 2631720, 2699298],
        health: 90,
        segs: 6,
        speed: 1
    }, {
        name: "Rocketeer",
        loadout: [8],
        secondary: !0,
        txts: ["..."],
        colors: [10975328, 5793865, 4806204, 2631720, 7098434, 2831140],
        health: 130,
        segs: 7,
        speed: .86
    }, {
        name: "Agent",
        loadout: [9],
        colors: [10975328, 4013373, 2302755, 2631720, 2631720, 12566463],
        health: 100,
        segs: 6,
        speed: 1.2
    }, {
        name: "Runner",
        txts: ["You sure about this?", "...", "Oh boy", "I don't know about this...", "Not me again..."],
        loadout: [12],
        colors: [10975328, 4013373, 2302755, 2631720, 2631720, 2302755],
        health: 100,
        segs: 6,
        regen: .2,
        speed: 1
    }, {
        name: "Deagler",
        hide: !0,
        loadout: [10],
        colors: [10975328, 4013373, 2302755, 2631720, 2631720, 2302755],
        health: 60,
        segs: 5,
        speed: 1
    }, {
        name: "Bowman",
        loadout: [13],
        secondary: !0,
        colors: [10975328, 9530450, 6308654, 2631720, 2631720, 4666663],
        health: 100,
        segs: 6,
        speed: 1
    }]
}
, function(t, e) {
    t.exports.wheels = [{
        name: "Starter",
        lab: {
            nm: "Any",
            col: "#E040FB"
        },
        price: 50,
        rarities: [75, 22, 3, 0, 0, 0]
    }, {
        name: "Elite",
        lab: {
            nm: "Any",
            col: "#E040FB"
        },
        price: 100,
        rarities: [50, 30, 15, 5, 0, 0]
    }, {
        name: "Heroic",
        lab: {
            nm: "Any",
            col: "#E040FB"
        },
        price: 500,
        rarities: [0, 48, 35, 14, 2.5, .5]
    }, {
        name: "Hunter",
        lab: {
            nm: "Snipers Only!",
            col: "#fab640"
        },
        itemTypes: [0],
        weaponType: 1,
        price: 600,
        rarities: [43, 33, 17, 6, 1, 0]
    }, {
        name: "Attire",
        lab: {
            nm: "Outfits Only!",
            col: "#ed4242"
        },
        itemTypes: [1, 2],
        price: 750,
        rarities: [43, 33, 16, 6, 2, 0]
    }, {
        name: "Free",
        free: !0,
        openURL: !0,
        minLvl: 5,
        price: 0,
        priceT: "Follow for a free Spin",
        rarities: [43, 33, 17, 6, 1, 0]
    }],
    t.exports.types = ["weapons/weapon_", "hats/hat_", "body/body_", "weapons/melee_"],
    t.exports.purchases = [{
        val: 300,
        price: .99
    }, {
        val: 600,
        price: 1.79
    }, {
        val: 2600,
        tag: "Popular!",
        tagCol: "#ed4242",
        price: 7.49
    }, {
        val: 7e3,
        tag: "20% Off",
        tagCol: "#E040FB",
        price: 15.99
    }, {
        val: 2e4,
        tag: "30% Off",
        tagCol: "#fab640",
        price: 34.99
    }],
    t.exports.rarities = [{
        name: "Uncommon",
        rar: 60,
        color: "#b2f252"
    }, {
        name: "Rare",
        rar: 40,
        color: "#2196F3"
    }, {
        name: "Epic",
        rar: 25,
        color: "#E040FB"
    }, {
        name: "Legendary",
        rar: 10,
        color: "#FBC02D"
    }, {
        name: "Relic",
        rar: 2.5,
        color: "#ed4242"
    }, {
        name: "Contraband",
        rar: .5,
        color: "#292929"
    }, {
        name: "Unobtainable",
        noSpin: !0,
        rar: 0,
        color: "#fff53d"
    }],
    t.exports.previews = {
        1: {
            xOff: -2,
            yOff: -2.6,
            zRota: .2,
            scl: .001376794727638135
        },
        2: {
            xOff: -1.4,
            yOff: -.8,
            scl: .001148941748743716
        },
        3: {
            xOff: 0,
            yOff: 1,
            scl: .000676917226130652
        },
        4: {
            xOff: -1.5,
            yOff: .5,
            scl: .000940741507537686
        },
        5: {
            xOff: -.8,
            yOff: .5,
            scl: 2
        },
        6: {
            xOff: -1,
            scl: .00099521137688442
        },
        7: {
            xOff: -1,
            yOff: -.9,
            scl: .001221518472361808
        },
        8: {
            xOff: -1,
            yOff: -.6,
            scl: .0012179208743718641
        },
        9: {
            xOff: -1.2,
            yOff: -1,
            scl: .0010676876984924638
        },
        10: {
            scl: 1.6
        }
    },
    t.exports.skins = [{
        name: "Arctic Hunt",
        id: 0,
        weapon: 1,
        rarity: 1
    }, {
        name: "Autumn Hunt",
        id: 1,
        weapon: 1,
        rarity: 1
    }, {
        name: "Reticle Blaze",
        id: 2,
        weapon: 1,
        rarity: 2
    }, {
        name: "Digital Hunt",
        id: 3,
        weapon: 1,
        rarity: 0
    }, {
        name: "Moon Dragon",
        id: 4,
        weapon: 1,
        rarity: 3
    }, {
        name: "Scharfschütze",
        id: 5,
        weapon: 1,
        rarity: 1
    }, {
        name: "Woodland Sniper",
        id: 6,
        weapon: 1,
        rarity: 0
    }, {
        name: "Hazard Reticle",
        id: 7,
        weapon: 1,
        rarity: 1
    }, {
        name: "Kodac Reticle",
        id: 8,
        weapon: 1,
        rarity: 1
    }, {
        name: "Seafarer",
        id: 9,
        weapon: 1,
        rarity: 0
    }, {
        name: "Acid Breath",
        id: 10,
        weapon: 1,
        rarity: 3
    }, {
        name: "Trail Scout",
        id: 11,
        weapon: 1,
        rarity: 0
    }, {
        name: "Arctic AK",
        id: 0,
        weapon: 2,
        rarity: 1
    }, {
        name: "Autumn AK",
        id: 1,
        weapon: 2,
        rarity: 1
    }, {
        name: "Blaze AK",
        id: 2,
        weapon: 2,
        rarity: 2
    }, {
        name: "Digital AK",
        id: 3,
        weapon: 2,
        rarity: 0
    }, {
        name: "Luna Dragon",
        id: 4,
        weapon: 2,
        rarity: 3
    }, {
        name: "Flecken AK",
        id: 5,
        weapon: 2,
        rarity: 1
    }, {
        name: "Woodland AK",
        id: 6,
        weapon: 2,
        rarity: 0
    }, {
        name: "Hazard AK",
        id: 7,
        weapon: 2,
        rarity: 1
    }, {
        name: "Kodac AK",
        id: 8,
        weapon: 2,
        rarity: 1
    }, {
        name: "Seafarer AK",
        id: 9,
        weapon: 2,
        rarity: 0
    }, {
        name: "Trail AK",
        id: 10,
        weapon: 2,
        rarity: 0
    }, {
        name: "SMG Arctic",
        id: 0,
        weapon: 4,
        rarity: 1
    }, {
        name: "SMG Autumn",
        id: 1,
        weapon: 4,
        rarity: 1
    }, {
        name: "SMG Blaze",
        id: 2,
        weapon: 4,
        rarity: 2
    }, {
        name: "SMG Digital",
        id: 3,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Flecken",
        id: 4,
        weapon: 4,
        rarity: 1
    }, {
        name: "SMG Woodland",
        id: 5,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Hazard",
        id: 6,
        weapon: 4,
        rarity: 1
    }, {
        name: "SMG Kodac",
        id: 7,
        weapon: 4,
        rarity: 1
    }, {
        name: "SMG Seafarer",
        id: 8,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Trail",
        id: 9,
        weapon: 4,
        rarity: 0
    }, {
        name: "Arctic Python",
        id: 0,
        weapon: 5,
        rarity: 1
    }, {
        name: "Autumn Python",
        id: 1,
        weapon: 5,
        rarity: 1
    }, {
        name: "Blaze Python",
        id: 2,
        weapon: 5,
        rarity: 2
    }, {
        name: "Digital Python",
        id: 3,
        weapon: 5,
        rarity: 0
    }, {
        name: "Flecken Python",
        id: 4,
        weapon: 5,
        rarity: 1
    }, {
        name: "Woodland",
        id: 5,
        weapon: 5,
        rarity: 0
    }, {
        name: "Hazard Python",
        id: 6,
        weapon: 5,
        rarity: 1
    }, {
        name: "Kodac Python",
        id: 7,
        weapon: 5,
        rarity: 1
    }, {
        name: "Seafarer",
        id: 8,
        weapon: 5,
        rarity: 0
    }, {
        name: "Trail Python",
        id: 9,
        weapon: 5,
        rarity: 0
    }, {
        name: "Arctic Slug",
        id: 0,
        weapon: 6,
        rarity: 1
    }, {
        name: "Autumn Slug",
        id: 1,
        weapon: 6,
        rarity: 1
    }, {
        name: "Twin Blaze",
        id: 2,
        weapon: 6,
        rarity: 2
    }, {
        name: "SG Digital",
        id: 3,
        weapon: 6,
        rarity: 0
    }, {
        name: "Flecken",
        id: 4,
        weapon: 6,
        rarity: 1
    }, {
        name: "Woodland",
        id: 5,
        weapon: 6,
        rarity: 0
    }, {
        name: "Hazard Slug",
        id: 6,
        weapon: 6,
        rarity: 1
    }, {
        name: "Kodac Slug",
        id: 7,
        weapon: 6,
        rarity: 1
    }, {
        name: "Buccaneer",
        id: 8,
        weapon: 6,
        rarity: 0
    }, {
        name: "SG Trail",
        id: 9,
        weapon: 6,
        rarity: 0
    }, {
        name: "Arctic LMG",
        id: 0,
        weapon: 7,
        rarity: 1
    }, {
        name: "Autumn LMG",
        id: 1,
        weapon: 7,
        rarity: 1
    }, {
        name: "Blaze LMG",
        id: 2,
        weapon: 7,
        rarity: 2
    }, {
        name: "Digital LMG",
        id: 3,
        weapon: 7,
        rarity: 0
    }, {
        name: "Flecken LMG",
        id: 4,
        weapon: 7,
        rarity: 1
    }, {
        name: "Woodland LMG",
        id: 5,
        weapon: 7,
        rarity: 0
    }, {
        name: "Hazard LMG",
        id: 6,
        weapon: 7,
        rarity: 1
    }, {
        name: "Kodac LMG",
        id: 7,
        weapon: 7,
        rarity: 1
    }, {
        name: "Seafarer LMG",
        id: 8,
        weapon: 7,
        rarity: 0
    }, {
        name: "Trail LMG",
        id: 9,
        weapon: 7,
        rarity: 0
    }, {
        name: "Arctic Auto",
        id: 0,
        weapon: 8,
        rarity: 1
    }, {
        name: "Autumn Auto",
        id: 1,
        weapon: 8,
        rarity: 1
    }, {
        name: "Blaze Auto",
        id: 2,
        weapon: 8,
        rarity: 2
    }, {
        name: "Digital Auto",
        id: 3,
        weapon: 8,
        rarity: 0
    }, {
        name: "Flecken Auto",
        id: 4,
        weapon: 8,
        rarity: 1
    }, {
        name: "Woodland Auto",
        id: 5,
        weapon: 8,
        rarity: 0
    }, {
        name: "Hazard Auto",
        id: 6,
        weapon: 8,
        rarity: 1
    }, {
        name: "Kodac Auto",
        id: 7,
        weapon: 8,
        rarity: 1
    }, {
        name: "Seafarer Auto",
        id: 8,
        weapon: 8,
        rarity: 0
    }, {
        name: "Trail Auto",
        id: 9,
        weapon: 8,
        rarity: 0
    }, {
        name: "Mach Auto",
        id: 10,
        creator: "AtarSt",
        weapon: 8,
        rarity: 1
    }, {
        name: "Arctic RL",
        id: 0,
        weapon: 9,
        rarity: 1
    }, {
        name: "Autumn RL",
        id: 1,
        weapon: 9,
        rarity: 1
    }, {
        name: "Blaze RL",
        id: 2,
        weapon: 9,
        rarity: 2
    }, {
        name: "Digital RL",
        id: 3,
        weapon: 9,
        rarity: 0
    }, {
        name: "Flecken RL",
        id: 4,
        weapon: 9,
        rarity: 1
    }, {
        name: "Woodland RL",
        id: 5,
        weapon: 9,
        rarity: 0
    }, {
        name: "Hazard RL",
        id: 6,
        weapon: 9,
        rarity: 1
    }, {
        name: "Kodac RL",
        id: 7,
        weapon: 9,
        rarity: 1
    }, {
        name: "Seafarer RL",
        id: 8,
        weapon: 9,
        rarity: 0
    }, {
        name: "Trail RL",
        id: 9,
        weapon: 9,
        rarity: 0
    }, {
        name: "101 Skullbreaker",
        id: 12,
        weapon: 1,
        rarity: 3
    }, {
        name: "Reticle Faded",
        id: 13,
        weapon: 1,
        rarity: 0
    }, {
        name: "Puma Sniper",
        id: 14,
        weapon: 1,
        rarity: 1
    }, {
        name: "Scoped Elite",
        id: 15,
        weapon: 1,
        rarity: 2
    }, {
        name: "Faded AK",
        id: 11,
        weapon: 2,
        rarity: 0
    }, {
        name: "Puma AR",
        id: 12,
        weapon: 2,
        rarity: 1
    }, {
        name: "SMG Fade",
        id: 10,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Puma",
        id: 11,
        weapon: 4,
        rarity: 1
    }, {
        name: "Faded Python",
        id: 10,
        weapon: 5,
        rarity: 0
    }, {
        name: "Puma Python",
        id: 11,
        weapon: 5,
        rarity: 1
    }, {
        name: "SG Fade",
        id: 10,
        weapon: 6,
        rarity: 0
    }, {
        name: "Slug Puma",
        id: 11,
        weapon: 6,
        rarity: 1
    }, {
        name: "Faded LMG",
        id: 10,
        weapon: 7,
        rarity: 0
    }, {
        name: "Puma LMG",
        id: 11,
        weapon: 7,
        rarity: 1
    }, {
        name: "Faded MMR",
        id: 11,
        weapon: 8,
        rarity: 0
    }, {
        name: "Puma MMR",
        id: 12,
        weapon: 8,
        rarity: 1
    }, {
        name: "Faded RTL",
        id: 10,
        weapon: 9,
        rarity: 0
    }, {
        name: "Puma RTL",
        id: 11,
        weapon: 9,
        rarity: 1
    }, {
        name: "Scoped Carbon",
        id: 16,
        weapon: 1,
        rarity: 0
    }, {
        name: "Carbon AK",
        id: 13,
        weapon: 2,
        rarity: 0
    }, {
        name: "SMG Carbon",
        id: 12,
        weapon: 4,
        rarity: 0
    }, {
        name: "Carbon Python",
        id: 12,
        weapon: 5,
        rarity: 0
    }, {
        name: "SG Carbon",
        id: 12,
        weapon: 6,
        rarity: 0
    }, {
        name: "Carbon LMG",
        id: 12,
        weapon: 7,
        rarity: 0
    }, {
        name: "Carbon MMR",
        id: 13,
        weapon: 8,
        rarity: 0
    }, {
        name: "Carbon RTL",
        id: 12,
        weapon: 9,
        rarity: 0
    }, {
        name: "Neon Ripper",
        id: 14,
        glow: !0,
        weapon: 2,
        rarity: 4
    }, {
        name: "Top Hat",
        type: 1,
        scl: 2.5,
        sitOff: .4,
        yOff: -4,
        id: 1,
        rarity: 2
    }, {
        name: "SMG Spitfire",
        id: 13,
        weapon: 4,
        rarity: 3
    }, {
        name: "Cowboy Hat",
        type: 1,
        scl: 2.5,
        sitOff: .4,
        yOff: -3,
        id: 0,
        rarity: 0
    }, {
        name: "Flame Tamer",
        id: 13,
        weapon: 5,
        glow: !0,
        rarity: 4
    }, {
        name: "Cool Cap",
        type: 1,
        scl: 2.5,
        sitOff: .4,
        yOff: -3,
        xOff: 2,
        id: 2,
        rarity: 1
    }, {
        name: "Jack O' Lantern",
        type: 1,
        scl: 2.8,
        glow: !0,
        sclMlt: 1.4,
        sitOff: 2.05,
        yOff: -4,
        id: 3,
        rarity: 3
    }, {
        name: "Medic Helmet",
        type: 1,
        scl: 2.8,
        sclMlt: 1,
        sitOff: .65,
        yOff: -2.5,
        id: 4,
        rarity: 2
    }, {
        name: "Neon Reaver",
        creator: "Electrode_",
        id: 17,
        glow: !0,
        weapon: 1,
        rarity: 4
    }, {
        name: "Sun Glasses",
        type: 1,
        scl: 2.8,
        sclMlt: 1,
        sitOff: 2.3,
        yOff: -5,
        xOff: 2,
        id: 5,
        rarity: 0
    }, {
        name: "Afro",
        type: 1,
        scl: 2,
        sclMlt: .9,
        sitOff: 1.4,
        yOff: -4,
        id: 6,
        rarity: 0
    }, {
        name: "Hard Hat",
        type: 1,
        scl: 3,
        sitOff: .4,
        yOff: -3,
        id: 7,
        rarity: 0
    }, {
        name: "Zombie Head",
        type: 1,
        scl: 2.8,
        glow: !0,
        sclMlt: 1.2,
        sitOff: 2.05,
        yOff: -4,
        id: 8,
        rarity: 3
    }, {
        name: "Barbed Rifle",
        id: 18,
        weapon: 1,
        rarity: 2
    }, {
        name: "Blushed Sniper",
        id: 19,
        weapon: 1,
        rarity: 0
    }, {
        name: "AWP Mech",
        id: 20,
        weapon: 1,
        rarity: 1
    }, {
        name: "Olympus Rifle",
        id: 21,
        weapon: 1,
        rarity: 2
    }, {
        name: "Scoped Tuscan",
        id: 22,
        weapon: 1,
        rarity: 1
    }, {
        name: "AWP Pacemaker",
        id: 23,
        weapon: 1,
        rarity: 4,
        glow: !0
    }, {
        name: "AR Wired",
        id: 15,
        weapon: 2,
        rarity: 2
    }, {
        name: "Blushed AK",
        id: 16,
        weapon: 2,
        rarity: 0
    }, {
        name: "Mach Rifle",
        id: 17,
        weapon: 2,
        rarity: 1
    }, {
        name: "Olympus Rifle",
        id: 18,
        weapon: 2,
        rarity: 2
    }, {
        name: "AR Tuscan",
        id: 19,
        weapon: 2,
        rarity: 1
    }, {
        name: "SMG Barbed",
        id: 14,
        weapon: 4,
        rarity: 2
    }, {
        name: "SMG Blossom",
        id: 15,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Machinist",
        id: 16,
        weapon: 4,
        rarity: 1
    }, {
        name: "SMG Lazarus",
        id: 17,
        weapon: 4,
        rarity: 2
    }, {
        name: "SMG Tuscan",
        id: 18,
        weapon: 4,
        rarity: 1
    }, {
        name: "Barbed Python",
        id: 14,
        weapon: 5,
        rarity: 2
    }, {
        name: "Blushed Revolver",
        id: 15,
        weapon: 5,
        rarity: 0
    }, {
        name: "Machinist Python",
        id: 16,
        weapon: 5,
        rarity: 1
    }, {
        name: "REV Olympus",
        id: 17,
        weapon: 5,
        rarity: 2
    }, {
        name: "Tuscan Revolver",
        id: 18,
        weapon: 5,
        rarity: 1
    }, {
        name: "Coach Barb",
        id: 13,
        weapon: 6,
        rarity: 2
    }, {
        name: "Blossom",
        id: 14,
        weapon: 6,
        rarity: 0
    }, {
        name: "MD Frag",
        id: 15,
        weapon: 6,
        rarity: 1
    }, {
        name: "SG Olympus",
        id: 16,
        weapon: 6,
        rarity: 2
    }, {
        name: "SG Tuscan",
        id: 17,
        weapon: 6,
        rarity: 1
    }, {
        name: "Blushed LMG",
        id: 13,
        weapon: 7,
        rarity: 0
    }, {
        name: "Machinist LMG",
        id: 14,
        weapon: 7,
        rarity: 1
    }, {
        name: "Olympus LMG",
        id: 15,
        weapon: 7,
        rarity: 2
    }, {
        name: "Tuscan LMG",
        id: 16,
        weapon: 7,
        rarity: 1
    }, {
        name: "Barbed Auto",
        id: 14,
        weapon: 8,
        rarity: 2
    }, {
        name: "Blushed MMA",
        id: 15,
        weapon: 8,
        rarity: 0
    }, {
        name: "Auto Machinist",
        id: 16,
        weapon: 8,
        rarity: 1
    }, {
        name: "Olympus MMA",
        id: 17,
        weapon: 8,
        rarity: 2
    }, {
        name: "Tuscan MMA",
        id: 18,
        weapon: 8,
        rarity: 1
    }, {
        name: "Barbed Laucher",
        id: 13,
        weapon: 9,
        rarity: 2
    }, {
        name: "Blushed Laucher",
        id: 14,
        weapon: 9,
        rarity: 0
    }, {
        name: "Machinist Laucher",
        id: 15,
        weapon: 9,
        rarity: 1
    }, {
        name: "Olympus Laucher",
        id: 16,
        weapon: 9,
        rarity: 2
    }, {
        name: "Tuscan Laucher",
        id: 17,
        weapon: 9,
        rarity: 1
    }, {
        name: "Omen",
        id: 24,
        creator: "Zino",
        weapon: 1,
        rarity: 3
    }, {
        name: "Scoped Moss",
        id: 25,
        weapon: 1,
        rarity: 1
    }, {
        name: "Swamped Scope",
        id: 26,
        weapon: 1,
        rarity: 0
    }, {
        name: "Tiger Bolt",
        id: 27,
        weapon: 1,
        rarity: 2
    }, {
        name: "Zebra Bolt",
        id: 28,
        weapon: 1,
        rarity: 2
    }, {
        name: "Necron Bolt",
        id: 29,
        weapon: 1,
        rarity: 4,
        glow: !0
    }, {
        name: "Lava Bolt",
        id: 30,
        weapon: 1,
        rarity: 3
    }, {
        name: "Sky Bolt",
        id: 31,
        weapon: 1,
        rarity: 2
    }, {
        name: "Bark Bolt",
        id: 32,
        weapon: 1,
        rarity: 0
    }, {
        name: "Bolt Wanderer",
        id: 33,
        weapon: 1,
        rarity: 0
    }, {
        name: "Mossy Rifle",
        id: 20,
        weapon: 2,
        rarity: 1
    }, {
        name: "Swamped AK",
        id: 21,
        weapon: 2,
        rarity: 0
    }, {
        name: "Tiger Rifle",
        id: 22,
        weapon: 2,
        rarity: 2
    }, {
        name: "Zebra Rifle",
        id: 23,
        weapon: 2,
        rarity: 2
    }, {
        name: "Plasma Rifle",
        id: 24,
        weapon: 2,
        rarity: 4,
        glow: !0
    }, {
        name: "Lava Rifle",
        id: 25,
        weapon: 2,
        glow: !0,
        rarity: 3
    }, {
        name: "Sky Rifle",
        id: 26,
        weapon: 2,
        rarity: 2
    }, {
        name: "Bark AK",
        id: 27,
        weapon: 2,
        rarity: 0
    }, {
        name: "Rifle Wanderer",
        id: 28,
        weapon: 2,
        rarity: 0
    }, {
        name: "SMG Growth",
        id: 19,
        weapon: 4,
        rarity: 1
    }, {
        name: "SMG Marsh",
        id: 20,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Tigris",
        id: 21,
        weapon: 4,
        rarity: 2
    }, {
        name: "SMG Safari",
        id: 22,
        weapon: 4,
        rarity: 2
    }, {
        name: "Rapid Plasma",
        id: 23,
        weapon: 4,
        rarity: 4,
        glow: !0
    }, {
        name: "Lava SMG",
        id: 24,
        weapon: 4,
        rarity: 3,
        glow: !0
    }, {
        name: "UMP Atmos",
        id: 25,
        weapon: 4,
        rarity: 2
    }, {
        name: "Birch SMG",
        id: 26,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Wanderer",
        id: 27,
        weapon: 4,
        rarity: 0
    }, {
        name: "Mossy Python",
        id: 19,
        weapon: 5,
        rarity: 1
    }, {
        name: "Swamped Revolver",
        id: 20,
        weapon: 5,
        rarity: 0
    }, {
        name: "Tiger Python",
        id: 21,
        weapon: 5,
        rarity: 2
    }, {
        name: "Zebra Python",
        id: 22,
        weapon: 5,
        rarity: 2
    }, {
        name: "Venomous",
        creator: "Rengar",
        glow: !0,
        id: 23,
        weapon: 5,
        rarity: 3
    }, {
        name: "Lava Revolver",
        id: 24,
        weapon: 5,
        rarity: 3
    }, {
        name: "Sky Python",
        id: 25,
        weapon: 5,
        rarity: 2,
        glow: !0
    }, {
        name: "Bark Python",
        id: 26,
        weapon: 5,
        rarity: 0
    }, {
        name: "Wanderer Python",
        id: 27,
        weapon: 5,
        rarity: 0
    }, {
        name: "Gabrand",
        id: 19,
        weapon: 6,
        rarity: 1
    }, {
        name: "Tennessee",
        id: 20,
        weapon: 6,
        rarity: 0
    }, {
        name: "SG Tigris",
        id: 21,
        weapon: 6,
        rarity: 2
    }, {
        name: "Safaris",
        id: 22,
        weapon: 6,
        rarity: 2
    }, {
        name: "Neuromance",
        id: 23,
        weapon: 6,
        rarity: 4,
        glow: !0
    }, {
        name: "Anatomis",
        id: 24,
        weapon: 6,
        rarity: 3,
        glow: !0
    }, {
        name: "Sky Pump",
        id: 25,
        weapon: 6,
        rarity: 2
    }, {
        name: "Bark Slug",
        id: 26,
        weapon: 6,
        rarity: 0
    }, {
        name: "Slug Wanderer",
        id: 27,
        weapon: 6,
        rarity: 0
    }, {
        name: "Mossy LMG",
        id: 17,
        weapon: 7,
        rarity: 1
    }, {
        name: "Swamped LMG",
        id: 18,
        weapon: 7,
        rarity: 0
    }, {
        name: "Tiger LMG",
        id: 19,
        weapon: 7,
        rarity: 2
    }, {
        name: "Zebra LMG",
        id: 20,
        weapon: 7,
        rarity: 2
    }, {
        name: "Heavy Plasma",
        id: 21,
        weapon: 7,
        rarity: 4,
        glow: !0
    }, {
        name: "Lava LMG",
        id: 22,
        weapon: 7,
        rarity: 3
    }, {
        name: "Sky LMG",
        id: 23,
        weapon: 7,
        rarity: 2,
        glow: !0
    }, {
        name: "Bark LMG",
        id: 24,
        weapon: 7,
        rarity: 0
    }, {
        name: "LMG Wanderer",
        id: 25,
        weapon: 7,
        rarity: 0
    }, {
        name: "Overgrowth",
        id: 19,
        weapon: 8,
        rarity: 1
    }, {
        name: "Marshland",
        id: 20,
        weapon: 8,
        rarity: 0
    }, {
        name: "Tiger MMA",
        id: 21,
        weapon: 8,
        rarity: 2
    }, {
        name: "Zebra MMA",
        id: 22,
        weapon: 8,
        rarity: 2
    }, {
        name: "MMA Plasma",
        id: 23,
        weapon: 8,
        rarity: 4,
        glow: !0
    }, {
        name: "Magnis",
        id: 24,
        weapon: 8,
        rarity: 3,
        glow: !0
    }, {
        name: "Sky AUTO",
        id: 25,
        weapon: 8,
        rarity: 2
    }, {
        name: "Bark AUTO",
        id: 26,
        weapon: 8,
        rarity: 0
    }, {
        name: "MMA Wanderer",
        id: 27,
        weapon: 8,
        rarity: 0
    }, {
        name: "Mossy Rocket",
        id: 18,
        weapon: 9,
        rarity: 1
    }, {
        name: "Swamped Laucher",
        id: 19,
        weapon: 9,
        rarity: 0
    }, {
        name: "Tiger Rocket",
        id: 20,
        weapon: 9,
        rarity: 2
    }, {
        name: "Zebra Laucher",
        id: 21,
        weapon: 9,
        rarity: 2
    }, {
        name: "Plasma Nuke",
        id: 22,
        weapon: 9,
        rarity: 4,
        glow: !0
    }, {
        name: "Lava Rocket",
        id: 23,
        weapon: 9,
        rarity: 3
    }, {
        name: "Sky Laucher",
        id: 24,
        weapon: 9,
        rarity: 2
    }, {
        name: "Bark Laucher",
        id: 25,
        weapon: 9,
        rarity: 0
    }, {
        name: "Wanderer Rocket",
        id: 26,
        weapon: 9,
        rarity: 0
    }, {
        name: "Purple Cap",
        id: 2,
        tex: 1,
        type: 1,
        scl: 2.5,
        sitOff: .4,
        yOff: -3,
        xOff: 2,
        rarity: 0
    }, {
        name: "Bear Mask",
        id: 9,
        type: 1,
        scl: 2.5,
        sclMlt: 1.3,
        sitOff: 2.05,
        yOff: -4,
        xOff: 1,
        rarity: 2
    }, {
        name: "Panda Mask",
        id: 9,
        tex: 1,
        type: 1,
        scl: 2.5,
        sclMlt: 1.3,
        sitOff: 2.05,
        yOff: -4,
        xOff: 1,
        rarity: 2
    }, {
        name: "Brown Beard",
        id: 11,
        type: 1,
        scl: 2.8,
        sclMlt: .9,
        sitOff: 2,
        yOff: -3,
        rarity: 2
    }, {
        name: "Blonde Beard",
        id: 11,
        tex: 1,
        type: 1,
        scl: 2.8,
        sclMlt: .9,
        sitOff: 2,
        yOff: -3,
        rarity: 2
    }, {
        name: "Skull Mask",
        id: 12,
        type: 1,
        scl: 3,
        glow: !0,
        sclMlt: 1.05,
        sitOff: 2.5,
        sitOffZ: 1.1,
        yOff: -4.5,
        xOff: -3,
        tex: 0,
        rarity: 3
    }, {
        name: "Red Beanie",
        id: 13,
        type: 1,
        scl: 3,
        sclMlt: 1.1,
        sitOff: .4,
        yOff: -3,
        tex: 0,
        rarity: 0
    }, {
        name: "Blue Beanie",
        id: 13,
        type: 1,
        scl: 3,
        sclMlt: 1.1,
        sitOff: .4,
        yOff: -3,
        tex: 1,
        rarity: 0
    }, {
        name: "Krunk Headset",
        id: 14,
        type: 1,
        scl: 2,
        sclMlt: 1.1,
        sitOff: 1.4,
        yOff: -4,
        rarity: 2
    }, {
        name: "Cherry Headset",
        id: 14,
        type: 1,
        tex: 1,
        scl: 2,
        sclMlt: 1.1,
        sitOff: 1.4,
        yOff: -4,
        rarity: 2
    }, {
        name: "Demonic Wings",
        id: 0,
        type: 2,
        glow: !0,
        scl: 3.5,
        sclMlt: 3,
        xOff: -1.5,
        sitOff: -1.3,
        sitOffZ: -1.4,
        yOff: -2,
        rarity: 4
    }, {
        name: "Bass Guitar",
        id: 1,
        type: 2,
        scl: 4,
        sclMlt: 3.8,
        sitOff: -1.3,
        sitOffZ: -1,
        yOff: -2,
        rarity: 2
    }, {
        name: "Samurai Blades",
        id: 2,
        type: 2,
        glow: !0,
        scl: .00048112055276382,
        sclMlt: .000406279577889448,
        sitOff: -1.3,
        sitOffZ: -.95,
        yOff: -1,
        xOff: -.5,
        rarity: 3
    }, {
        name: "Blood Harvest",
        id: 3,
        type: 2,
        glow: !0,
        scl: 5.1,
        sclMlt: 5,
        sitOff: -1.3,
        sitOffZ: -.95,
        yOff: -1,
        rarity: 3
    }, {
        name: "Panda Body",
        id: 4,
        type: 2,
        scl: 2.1,
        sclMlt: 1.3,
        sitOff: 2.2,
        sitOffZ: 0,
        yOff: -5,
        rarity: 3
    }, {
        name: "Bear Body",
        id: 4,
        tex: 1,
        type: 2,
        scl: 2.1,
        sclMlt: 1.3,
        sitOff: 2.2,
        sitOffZ: 0,
        yOff: -5,
        rarity: 3
    }, {
        name: "Angelic Wings",
        id: 5,
        type: 2,
        glow: !0,
        scl: 3.5,
        sclMlt: 3.6,
        xOff: -1.5,
        sitOff: -1.3,
        sitOffZ: -1.4,
        yOff: -2,
        rarity: 4
    }, {
        name: "Ninja Mask",
        id: 15,
        glow: !0,
        type: 1,
        scl: 2.5,
        sclMlt: 1.1,
        sitOff: 2.05,
        yOff: -4,
        xOff: 0,
        rarity: 3
    }, {
        name: "Halo",
        id: 16,
        glow: !0,
        type: 1,
        scl: 3.5,
        sclMlt: 1.1,
        sitOff: -.65,
        yOff: -1,
        rarity: 3
    }, {
        name: "Welder Mask",
        type: 1,
        scl: 2.5,
        sitOff: 2.1,
        yOff: -3,
        xOff: 1,
        id: 17,
        rarity: 1
    }, {
        name: "Diver Goggles",
        type: 1,
        scl: 2.5,
        sclMlt: .9,
        sitOff: 1,
        yOff: -1,
        id: 18,
        rarity: 1
    }, {
        name: "Mad Cap",
        type: 1,
        tex: 2,
        scl: 2.5,
        sitOff: .4,
        yOff: -3,
        xOff: 2,
        id: 2,
        rarity: 1
    }, {
        name: "Ace Cap",
        type: 1,
        tex: 3,
        scl: 2.5,
        sitOff: .4,
        yOff: -3,
        xOff: 2,
        id: 2,
        rarity: 1
    }, {
        name: "Ice Cap",
        type: 1,
        tex: 4,
        scl: 2.5,
        sitOff: .4,
        yOff: -3,
        xOff: 2,
        id: 2,
        rarity: 1
    }, {
        name: "Soldier Pack",
        id: 6,
        type: 2,
        glow: !0,
        scl: 2.6,
        sclMlt: 1.8,
        xOff: 1,
        sitOff: 1.3,
        sitOffZ: -1.75,
        yOff: -5,
        rarity: 1
    }, {
        name: "Robo Wings",
        id: 7,
        type: 2,
        glow: !0,
        scl: 5,
        sclMlt: 3.9,
        xOff: -3.5,
        sitOff: -1.3,
        sitOffZ: -.75,
        yOff: -4,
        rarity: 4
    }, {
        name: "Basket",
        id: 8,
        type: 2,
        scl: 3.5,
        sclMlt: 2,
        xOff: -1.5,
        sitOff: .75,
        sitOffZ: -.8,
        yOff: -4,
        rarity: 1
    }, {
        name: "Baby Panda",
        id: 9,
        type: 2,
        scl: 3.5,
        sclMlt: 2,
        xOff: 1,
        sitOff: .75,
        sitOffZ: -.8,
        yOff: -5,
        xRot: Math.PI,
        rarity: 3
    }, {
        name: "Sturm Helmet",
        type: 1,
        tex: 1,
        scl: 2.8,
        sclMlt: 1,
        sitOff: .65,
        yOff: -2.5,
        id: 4,
        rarity: 1
    }, {
        name: "Brown Afro",
        type: 1,
        tex: 1,
        scl: 2,
        sclMlt: .9,
        sitOff: 1.4,
        yOff: -4,
        id: 6,
        rarity: 0
    }, {
        name: "Acid Skull",
        id: 12,
        type: 1,
        tex: 1,
        scl: 3,
        glow: !0,
        sclMlt: 1.05,
        sitOff: 2.5,
        sitOffZ: 1.1,
        yOff: -4.5,
        xOff: -3,
        rarity: 3
    }, {
        name: "Uranium",
        type: 1,
        tex: 1,
        scl: 2.5,
        sitOff: 2.1,
        yOff: -3,
        xOff: 1,
        id: 17,
        rarity: 2
    }, {
        name: "Panda King",
        id: 19,
        glow: !0,
        type: 1,
        scl: 2.5,
        sclMlt: 1.3,
        sitOff: 2.05,
        yOff: -4,
        xOff: 1,
        rarity: 3
    }, {
        name: "Kolt Rifle",
        creator: "iSpy",
        id: 35,
        weapon: 1,
        rarity: 3
    }, {
        name: "Pace Dore",
        creator: "hoodgail",
        id: 34,
        glow: !0,
        weapon: 1,
        rarity: 4
    }, {
        name: "Shot Element",
        creator: "Electrode_",
        glow: !0,
        id: 28,
        weapon: 6,
        rarity: 3
    }, {
        name: "Warp Sequence",
        creator: "Electrode_",
        id: 28,
        glow: !0,
        weapon: 4,
        rarity: 4
    }, {
        name: "Radioactive",
        creator: "Electrode_",
        glow: !0,
        id: 29,
        weapon: 5,
        rarity: 4
    }, {
        name: "Targeted",
        creator: "Subza",
        glow: !0,
        id: 28,
        weapon: 5,
        rarity: 3
    }, {
        name: "Robot Helmet",
        type: 1,
        glow: !0,
        scl: 2.4,
        sclMlt: 1,
        sitOff: 2,
        yOff: -3.4,
        id: 20,
        rarity: 3
    }, {
        name: "Knight Helmet",
        type: 1,
        scl: 2.3,
        sclMlt: 1,
        sitOff: 2,
        yOff: -3.2,
        id: 21,
        rarity: 3
    }, {
        name: "Cat Ears",
        type: 1,
        scl: 2.5,
        sclMlt: 1.2,
        sitOff: 1.65,
        yOff: -3.2,
        id: 22,
        rarity: 2
    }, {
        name: "Snowman",
        type: 1,
        scl: 2.2,
        sclMlt: 1,
        sitOff: 2.05,
        yOff: -3.2,
        id: 23,
        rarity: 2
    }, {
        name: "Trendy Biker",
        type: 1,
        scl: 2.2,
        sclMlt: 1,
        sitOff: 1.8,
        yOff: -3.2,
        id: 24,
        rarity: 3
    }, {
        name: "Golden Crown",
        type: 1,
        glow: !0,
        scl: 2.4,
        sclMlt: 1,
        sitOff: .65,
        yOff: -3.2,
        id: 25,
        rarity: 3
    }, {
        name: "Master Drinker",
        type: 1,
        scl: 2.4,
        sclMlt: 1,
        sitOff: .65,
        yOff: -2.7,
        id: 26,
        rarity: 3
    }, {
        name: "Pig Head",
        type: 1,
        scl: 2.5,
        sclMlt: 1,
        sitOff: 2.05,
        yOff: -3.2,
        id: 27,
        rarity: 3
    }, {
        name: "Red Bandana",
        type: 1,
        scl: 2.2,
        sclMlt: 1,
        sitOff: 1.6,
        yOff: -3.2,
        id: 28,
        rarity: 1
    }, {
        name: "Sheriff",
        type: 1,
        scl: 2.2,
        sclMlt: 1,
        sitOff: 2.05,
        yOff: -3.2,
        id: 29,
        rarity: 4
    }, {
        name: "Bandit",
        type: 1,
        glow: !0,
        scl: 2.2,
        sclMlt: 1,
        sitOff: 2.05,
        yOff: -3.2,
        id: 30,
        rarity: 4
    }, {
        name: "Vlaine",
        creator: "Hoodgail",
        id: 36,
        weapon: 1,
        rarity: 1
    }, {
        name: "K-Mas",
        creator: "Hoodgail",
        id: 37,
        weapon: 1,
        rarity: 2
    }, {
        name: "Reine",
        creator: "Hoodgail",
        id: 38,
        weapon: 1,
        rarity: 3
    }, {
        name: "Melted",
        creator: "Hoodgail",
        glow: !0,
        id: 39,
        weapon: 1,
        rarity: 4
    }, {
        name: "Viper",
        creator: "Hoodgail",
        glow: !0,
        id: 40,
        weapon: 1,
        rarity: 3
    }, {
        name: "Razor",
        creator: "Hoodgail",
        glow: !0,
        id: 41,
        weapon: 1,
        rarity: 4
    }, {
        name: "Lazor",
        creator: "Hoodgail",
        id: 29,
        glow: !0,
        weapon: 2,
        rarity: 4
    }, {
        name: "Uzera",
        creator: "Hoodgail",
        id: 2,
        glow: !0,
        weapon: 10,
        rarity: 4
    }, {
        name: "Tazor",
        creator: "Hoodgail",
        glow: !0,
        id: 7,
        weapon: 10,
        rarity: 3
    }, {
        name: "Dual Woodland",
        id: 0,
        weapon: 10,
        rarity: 1
    }, {
        name: "Flecken Uzi",
        id: 1,
        weapon: 10,
        rarity: 1
    }, {
        name: "Dual Seafarer",
        id: 3,
        weapon: 10,
        rarity: 2
    }, {
        name: "Rapid Digital",
        id: 4,
        weapon: 10,
        rarity: 1
    }, {
        name: "Sap Uzi",
        id: 5,
        weapon: 10,
        rarity: 0
    }, {
        name: "Torn Dual",
        id: 6,
        weapon: 10,
        rarity: 1
    }, {
        name: "Haste",
        glow: !0,
        id: 42,
        weapon: 1,
        rarity: 4
    }, {
        name: "Leine",
        creator: "Hoodgail",
        id: 43,
        weapon: 1,
        rarity: 3
    }, {
        name: "Lore",
        creator: "Hoodgail",
        glow: !0,
        id: 44,
        weapon: 1,
        rarity: 4
    }, {
        name: "Reaver",
        creator: "Hoodgail",
        glow: !0,
        id: 45,
        weapon: 1,
        rarity: 4
    }, {
        name: "Splixen",
        glow: !0,
        id: 46,
        weapon: 1,
        rarity: 4
    }, {
        name: "AWP Stream",
        creator: "Electrode_",
        glow: !0,
        id: 47,
        weapon: 1,
        rarity: 4
    }, {
        name: "Circuit",
        creator: "Electrode_",
        glow: !0,
        id: 30,
        weapon: 2,
        rarity: 4
    }, {
        name: "SMG Iris",
        id: 29,
        weapon: 4,
        rarity: 2
    }, {
        name: "SMG Venom",
        id: 30,
        weapon: 4,
        rarity: 2,
        glow: !0
    }, {
        name: "SMG Wingman",
        id: 31,
        weapon: 4,
        rarity: 2
    }, {
        name: "x0n-voX",
        creator: "???",
        pat: 0,
        tex: "weapons/pat/0",
        dot: "dot_1",
        sameGlow: !0,
        movT: 1e-4,
        weapon: 4,
        rarity: 5
    }, {
        name: "1Ad-dA0",
        creator: "???",
        pat: 0,
        tex: "weapons/pat/0",
        dot: "dot_1",
        sameGlow: !0,
        movT: 1e-4,
        weapon: 2,
        rarity: 5
    }, {
        name: "Raynb0w",
        creator: "???",
        pat: 1,
        tex: "weapons/pat/1",
        dot: "dot_1",
        sameGlow: !0,
        movT: .0015,
        weapon: 2,
        rarity: 5
    }, {
        name: "Raynb0w",
        creator: "???",
        pat: 1,
        tex: "weapons/pat/1",
        dot: "dot_1",
        sameGlow: !0,
        movT: .0015,
        weapon: 4,
        rarity: 5
    }, {
        name: "UMP Saphire",
        id: 32,
        weapon: 4,
        rarity: 1
    }, {
        name: "UMP Jade",
        id: 33,
        weapon: 4,
        rarity: 1
    }, {
        name: "UMP Plexus",
        id: 34,
        weapon: 4,
        rarity: 1
    }, {
        name: "UMP Lapis",
        id: 35,
        weapon: 4,
        rarity: 0
    }, {
        name: "Perplex",
        id: 36,
        weapon: 4,
        rarity: 0
    }, {
        name: "UMP Torpe",
        id: 37,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Como",
        id: 38,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Liquid",
        id: 39,
        weapon: 4,
        rarity: 0
    }, {
        name: "Clementine",
        id: 40,
        weapon: 4,
        rarity: 1
    }, {
        name: "Dropper",
        id: 41,
        weapon: 4,
        rarity: 0
    }, {
        name: "SMG Auburn",
        id: 42,
        weapon: 4,
        rarity: 1
    }, {
        name: "UMP Laurel",
        id: 43,
        weapon: 4,
        rarity: 1
    }, {
        name: "UMP Crimson",
        id: 44,
        weapon: 4,
        rarity: 1
    }, {
        name: "UMP Azure",
        id: 45,
        weapon: 4,
        rarity: 1
    }, {
        name: "Laguna",
        id: 46,
        weapon: 4,
        rarity: 1
    }, {
        name: "UMP Cygenta",
        id: 47,
        weapon: 4,
        rarity: 1
    }, {
        name: "UMP Cygentro",
        id: 48,
        weapon: 4,
        rarity: 2
    }, {
        name: "Chartreuse",
        id: 49,
        weapon: 4,
        rarity: 2
    }, {
        name: "UMP Tortobe",
        id: 50,
        weapon: 4,
        rarity: 2
    }, {
        name: "UMP Octo",
        id: 51,
        weapon: 4,
        rarity: 2
    }, {
        name: "UMP Versate",
        id: 52,
        weapon: 4,
        rarity: 2
    }, {
        name: "SMG Purpur",
        id: 53,
        weapon: 4,
        rarity: 2
    }, {
        name: "Leaf",
        id: 54,
        weapon: 4,
        rarity: 0
    }, {
        name: "Flame",
        id: 55,
        weapon: 4,
        rarity: 0
    }, {
        name: "Aqua",
        id: 56,
        weapon: 4,
        rarity: 0
    }, {
        name: "Gravel",
        id: 57,
        weapon: 4,
        rarity: 0
    }, {
        name: "AR Saphire",
        id: 31,
        weapon: 2,
        rarity: 1
    }, {
        name: "AR Jade",
        id: 32,
        weapon: 2,
        rarity: 1
    }, {
        name: "AR Plexis",
        id: 33,
        weapon: 2,
        rarity: 1
    }, {
        name: "AR Lapis",
        id: 34,
        weapon: 2,
        rarity: 1
    }, {
        name: "Perplex",
        id: 35,
        weapon: 2,
        rarity: 0
    }, {
        name: "Trople",
        id: 36,
        weapon: 2,
        rarity: 0
    }, {
        name: "AR Altis",
        id: 37,
        weapon: 2,
        rarity: 1
    }, {
        name: "Liquid",
        id: 38,
        weapon: 2,
        rarity: 1
    }, {
        name: "Clementine",
        id: 39,
        weapon: 2,
        rarity: 1
    }, {
        name: "Dropper",
        id: 40,
        weapon: 2,
        rarity: 0
    }, {
        name: "Laurel",
        id: 41,
        weapon: 2,
        rarity: 1
    }, {
        name: "Crimson",
        id: 42,
        weapon: 2,
        rarity: 1
    }, {
        name: "Azure",
        id: 43,
        weapon: 2,
        rarity: 1
    }, {
        name: "Laguna",
        id: 44,
        weapon: 2,
        rarity: 1
    }, {
        name: "Cygenta",
        id: 45,
        weapon: 2,
        rarity: 1
    }, {
        name: "Cygento",
        id: 46,
        weapon: 2,
        rarity: 2
    }, {
        name: "Chartreuse",
        id: 47,
        weapon: 2,
        rarity: 2
    }, {
        name: "Tortobe",
        id: 48,
        weapon: 2,
        rarity: 2
    }, {
        name: "AK Octo",
        id: 49,
        weapon: 2,
        rarity: 2
    }, {
        name: "Versate",
        id: 50,
        weapon: 2,
        rarity: 2
    }, {
        name: "Purpur",
        id: 51,
        weapon: 2,
        rarity: 2
    }, {
        name: "Leaf",
        id: 52,
        weapon: 2,
        rarity: 0
    }, {
        name: "Flame",
        id: 53,
        weapon: 2,
        rarity: 0
    }, {
        name: "Aqua",
        id: 54,
        weapon: 2,
        rarity: 0
    }, {
        name: "Gravel",
        id: 55,
        weapon: 2,
        rarity: 0
    }, {
        name: "Spahire",
        id: 28,
        weapon: 8,
        rarity: 1
    }, {
        name: "Jade",
        id: 29,
        weapon: 8,
        rarity: 1
    }, {
        name: "Plexus",
        id: 30,
        weapon: 8,
        rarity: 1
    }, {
        name: "Lapis",
        id: 31,
        weapon: 8,
        rarity: 1
    }, {
        name: "Perplexum",
        id: 32,
        weapon: 8,
        rarity: 0
    }, {
        name: "Torped",
        id: 33,
        weapon: 8,
        rarity: 0
    }, {
        name: "Commo",
        id: 34,
        weapon: 8,
        rarity: 0
    }, {
        name: "MMA Liquid",
        id: 35,
        weapon: 8,
        rarity: 1
    }, {
        name: "Dropper",
        id: 36,
        weapon: 8,
        rarity: 0
    }, {
        name: "MMA Auburn",
        id: 37,
        weapon: 8,
        rarity: 1
    }, {
        name: "MMA Laurel",
        id: 38,
        weapon: 8,
        rarity: 1
    }, {
        name: "MMA Crimson",
        id: 39,
        weapon: 8,
        rarity: 1
    }, {
        name: "MMA Azure",
        id: 40,
        weapon: 8,
        rarity: 1
    }, {
        name: "MMA Laguna",
        id: 41,
        weapon: 8,
        rarity: 1
    }, {
        name: "MMA Cygneta",
        id: 42,
        weapon: 8,
        rarity: 1
    }, {
        name: "MMA Cygneto",
        id: 43,
        weapon: 8,
        rarity: 2
    }, {
        name: "M14 Chartreuse",
        id: 44,
        weapon: 8,
        rarity: 2
    }, {
        name: "MMA Tortobe",
        id: 45,
        weapon: 8,
        rarity: 2
    }, {
        name: "MMA Octo",
        id: 46,
        weapon: 8,
        rarity: 2
    }, {
        name: "MMA Versate",
        id: 47,
        weapon: 8,
        rarity: 2
    }, {
        name: "MMA Purpur",
        id: 48,
        weapon: 8,
        rarity: 2
    }, {
        name: "Nature",
        id: 49,
        weapon: 8,
        rarity: 0
    }, {
        name: "Flame",
        id: 50,
        weapon: 8,
        rarity: 0
    }, {
        name: "Aqua",
        id: 51,
        weapon: 8,
        rarity: 0
    }, {
        name: "Earth",
        id: 52,
        weapon: 8,
        rarity: 0
    }, {
        name: "Black Ice",
        creator: "Electrode_",
        id: 53,
        weapon: 8,
        rarity: 2
    }, {
        name: "Mach 3",
        creator: "Jytesh",
        id: 54,
        weapon: 8,
        rarity: 1
    }, {
        name: "Bloodripper",
        creator: "Jytesh",
        id: 55,
        weapon: 8,
        rarity: 1
    }, {
        name: "Theta",
        creator: "Floatingpoint",
        id: 48,
        weapon: 1,
        rarity: 3
    }, {
        name: "Raynb0w",
        creator: "???",
        pat: 1,
        tex: "weapons/pat/1",
        dot: "dot_1",
        sameGlow: !0,
        movT: .0015,
        weapon: 1,
        rarity: 5
    }, {
        name: "Diablo Wings",
        id: 10,
        type: 2,
        scl: .0005593478391959849,
        sclMlt: .0006552360402010109,
        xOff: -3,
        sitOff: -1.3,
        sitOffZ: -1.4,
        yOff: -2,
        rarity: 4
    }, {
        name: "AK Gold Rush",
        creator: "_irizu",
        id: 56,
        weapon: 2,
        rarity: 3
    }, {
        name: "AK Mortal",
        creator: "_irizu",
        glow: !0,
        id: 57,
        weapon: 2,
        rarity: 4
    }, {
        name: "nV Dragon",
        creator: "nightly-build7",
        id: 51,
        weapon: 1,
        rarity: 3
    }, {
        name: "Cherry Blossom",
        creator: "jonschmiddy",
        id: 50,
        weapon: 1,
        rarity: 2
    }, {
        name: "Vapormoon",
        creator: "jonschmiddy",
        id: 58,
        weapon: 2,
        rarity: 2
    }, {
        name: "Tesselate",
        creator: "jonschmiddy",
        id: 59,
        weapon: 2,
        rarity: 2
    }, {
        name: "Polydrive",
        creator: "Ziggy",
        id: 49,
        weapon: 1,
        rarity: 2
    }, {
        name: "Safran",
        id: 29,
        weapon: 6,
        rarity: 2
    }, {
        name: "Purple Rain",
        id: 30,
        weapon: 6,
        rarity: 2
    }, {
        name: "Cobra",
        id: 31,
        weapon: 6,
        rarity: 2
    }, {
        name: "Spectrum",
        id: 32,
        weapon: 6,
        rarity: 2
    }, {
        name: "Anodized",
        creator: "Blitz-.",
        id: 33,
        weapon: 6,
        rarity: 3
    }, {
        name: "Blunderbuss",
        creator: "Blitz-.",
        id: 34,
        weapon: 6,
        rarity: 2
    }, {
        name: "Tv Tron A",
        type: 1,
        glow: !0,
        scl: 1,
        sclMlt: .6,
        sitOff: 2.05,
        yOff: -3.2,
        id: 32,
        rarity: 4
    }, {
        name: "Tv Tron B",
        tex: 1,
        type: 1,
        glow: !0,
        scl: 1,
        sclMlt: .6,
        sitOff: 2.05,
        yOff: -3.2,
        id: 32,
        rarity: 4
    }]
}
, function(t, e, n) {
    var i;
    try {
        window && (i = n(4))
    } catch (t) {}
    var r = function(t, e, n, i, r) {
        var s;
        this.id = t,
        this.sentTo = [],
        this.inputs = [],
        this.spins = [],
        this.stateHistory = [],
        this.weaponMeshes = [],
        this.legMeshes = [],
        this.armMeshes = [],
        this.lastInput = [],
        this.lastDeltas = [],
        this.reloads = [],
        this.ammos = [],
        this.ping = 0,
        this.pings = [],
        this.score = 0,
        this.scoreObjs = {},
        this.checkPoint = null,
        this.checkPointList = [],
        this.killList = [],
        this.convs = 0,
        this.timer = null,
        this.gameTimer = null,
        this.kills = 0,
        this.deaths = 0,
        this.assists = 0,
        this.caps = 0,
        this.deathStreak = 0,
        this.level = 0,
        this.lives = r.waitTimers && r.config && r.config.lives || 0,
        this.deltaAdd = 0,
        this.deltaDiv = 1,
        this.sprayIndex = 0,
        this.hatIndex = -1,
        this.backIndex = -1,
        this.lastSpray = 0,
        this.lastPickup = 0,
        this.lastPicked = [],
        this.playTime = 0,
        this.hackSus = 0,
        this.lastCheck = 0,
        this.streaks = {},
        this.init = function(t, e, n, s, a, o) {
            this.x = t,
            this.y = e,
            this.z = n,
            this.stepSrc = null,
            this.name = s || "unknown",
            this.xVel = 0,
            this.yVel = 0,
            this.zVel = 0,
            this.hackSus--,
            0 > this.hackSus && (this.hackSus = 0),
            this.renderMinimal = !1,
            this.spins.length = 0,
            this.noMovTimer = 0,
            this.xDire = 0,
            this.yDire = 0,
            this.hitTimer = 0,
            this.ticker = 0,
            this.spread = 0,
            this.spreadPlus = 0,
            this.aimVal = 1,
            this.aimDir = 0,
            this.aimTime = 0,
            this.streak = 0,
            this.killStreak = 0,
            this.lastKill = 0,
            this.stateHistory.length = 0,
            this.lastInput.length = 0,
            this.swapTweenA = 0,
            this.dmgReceived = {},
            this.landBobY = 0,
            this.landBobYR = 0,
            this.jumpBobY = 0,
            this.slideTimer = 0,
            this.canSlide = !0,
            this.leanAnimX = 0,
            this.leanAnimY = 0,
            this.leanAnimZ = 0,
            this.bobAnimZ = 0,
            this.bobAnimY = 0,
            this.idleAnim = 0,
            this.inspecting = !1,
            this.inspectX = !1,
            this.stepVal = 0,
            this.stepChase = 0,
            this.stepDir = 1,
            this.stepDirR = 1,
            this.reward = 0,
            this.recoilAnim = 0,
            this.recoilAnimY = 0,
            this.recoilForce = 0,
            this.recoilTweenY = 0,
            this.recoilTweenYM = 0,
            this.recoilTweenZ = 0,
            this.jumpRot = 0,
            this.jumpRotM = 0,
            this.recoilX = 0,
            this.recoilZ = 0,
            this.crouchVal = 0,
            this.onGround = !0,
            this.onLadder = !1,
            this.terrainSlipping = !1,
            this.rampFix = null,
            this.didJump = !1,
            this.jumpCooldown = 0,
            this.didShoot = !1,
            this.lodActive = !1,
            this.locked = !1,
            this.latestData = !1,
            this.airTime = 0,
            this.height = i.playerHeight,
            this.headScale = i.cameraHeight,
            this.scale = i.playerScale,
            this.active = !0,
            this.interpolate = !1,
            this.isYou = a,
            this.sentTo.length = 0,
            this.inputSN = 0,
            this.inputs.length = 0,
            this.weaponIndex = 0,
            this.swapTime = 0,
            this.recon = !1,
            this.inView = !1,
            this.isHacker = o,
            this.customLoadout = null,
            this.lastCheck = r.now,
            this.lastPicked.length = 0
        }
        ,
        this.setClass = function(t, e, r, s) {
            s || (t.config && 0 > t.config.classes.indexOf(e) && (e != t.config.classes[0] && (this.skins = [-1, -1]),
            e = t.config.classes[0]),
            t.mode && (t.mode.noWeap && (e = 9),
            t.mode.teamClass && t.mode.teamClass[this.team] && (e = t.mode.teamClass[this.team],
            this.skins = [-1, -1]))),
            (null == e || null == e) && (e = t.classes.length - 1),
            this.classIndex = e,
            this.reloads.length = 0,
            this.ammos.length = 0,
            this.loadout = [t.classes[e].loadout[0]],
            t.classes[e].secondary ? n.isNumber(r) && this.loadout.push(r) : this.secIndex = null,
            this.speed = t.classes[e].speed || 1;
            for (var a = 0; a < this.loadout.length; ++a)
                this.reloads.push(0),
                this.ammos.push(t.weapons[this.loadout[a]].ammo);
            this.reloadTimer = 0,
            this.regenDelay = t.classes[e].regenDelay || i.regenDelay,
            this.maxHealth = t.classes[e].health * (t.config && t.config.healthMlt || 1),
            this.health = this.maxHealth,
            this.hpChase = this.health,
            this.regen = t.mode && t.mode.noRegen ? 0 : t.classes[e].regen || i.regenVal
        }
        ,
        this.updateLoadout = function(t, i, r, s, a=!0) {
            this.weaponIndex = i,
            this.reloads.length = 0,
            this.ammos.length = 0,
            this.loadout = [r],
            this.skins = [-1, -1],
            n.isNumber(s) && this.loadout.push(s),
            n.isNumber(s) && (this.secIndex = s);
            for (var o = 0; o < this.loadout.length; ++o)
                this.reloads.push(0),
                this.ammos.push(t.weapons[this.loadout[o]].ammo);
            this.customLoadout = [...this.loadout],
            a && e.regenMeshes(this)
        }
        ,
        this.resetInputs = function() {
            this.inputs.length = 0
        }
        ,
        this.procInputs = function(t, r, a) {
            this.recon = a;
            var o = Math.min(t[1], i.dltMx) / this.deltaDiv;
            this.inputSN = t[0];
            var c = n.getAngleDist(t[2], this.xDire);
            e.saveSpin(this, c);
            var l = !a && this.isYou;
            if (l && (this.leanAnimX -= c * i.leanSens,
            this.leanAnimX = n.limit(this.leanAnimX, i.leanMax),
            this.leanAnimY -= n.getAngleDist(t[3], this.yDire) * i.leanSens,
            this.leanAnimY = n.limit(this.leanAnimY, i.leanMax),
            this.leanAnimX && (this.leanAnimX *= Math.pow(i.leanPull, o)),
            this.leanAnimY && (this.leanAnimY *= Math.pow(i.leanPull, o)),
            this.leanAnimZ && (this.leanAnimZ *= Math.pow(i.leanPullZ, o)),
            this.bobAnimZ && (this.bobAnimZ *= Math.pow(i.bobPullZ, o)),
            this.bobAnimY && (this.bobAnimY *= Math.pow(i.bobPullY, o)),
            this.recoilX && (this.recoilX *= Math.pow(i.leanPull, o)),
            this.recoilZ && (this.recoilZ *= Math.pow(i.leanPull, o)),
            this.inspecting && this.inspectX < Math.PI / 2.8 && (this.inspectX += .1 * (Math.PI / 2.8 - this.inspectX))),
            t[10] && e.swapWeapon(this, t[10]),
            a || (this.recoilForce && (this.recoilAnim += this.recoilForce * o,
            this.recoilAnimY += this.recoilForce * (this.weapon.recoilY || 1) * (1 - .3 * this.crouchVal) * o,
            this.recoilForce *= Math.pow(this.weapon.recoverF, o)),
            this.recoilAnim && (this.recoilAnim *= Math.pow(this.weapon.recover, o)),
            this.recoilAnimY && (this.recoilAnimY *= Math.pow(this.weapon.recoverY || this.weapon.recover, o))),
            this.xDire = (t[2] || 0).round(3),
            this.yDire = (t[3] || 0).round(3),
            this.oldX = this.x,
            this.oldY = this.y,
            this.oldZ = this.z,
            this.weapon.zoom && (!this.weapon.noAim || 0 < this.swapTime)) {
                var p = 0 >= this.reloadTimer && 0 >= this.swapTime;
                t[6] && 0 < this.aimVal && p ? (e.cancelInspect(this),
                this.aimDir = 0,
                this.aimVal -= 1 / (this.weapon.aimSpeed / o),
                0 >= this.aimVal && (this.aimVal = 0,
                this.isYou && !a && e.toggleAim(this, 1)),
                this.isYou && !a && !this.weapon.scope && e.updateAim(this, 1 - this.aimVal)) : (!p || !t[6] && 1 > this.aimVal) && (this.aimDir = 1,
                !this.aimVal && this.isYou && !a && e.toggleAim(this, 0),
                this.aimVal += 1 / (this.weapon.aimSpeed / o),
                1 <= this.aimVal && (this.aimVal = 1),
                this.isYou && !a && !this.weapon.scope && e.updateAim(this, 1 - this.aimVal)),
                0 == this.aimVal ? this.aimTime += o : this.aimTime = 0
            }
            t[8] && 1 > this.crouchVal && !this.onLadder ? (this.crouchVal += i.crouchSpeed * o,
            1 <= this.crouchVal && (this.crouchVal = 1),
            this.onGround ? l && (this.bobAnimY -= 1.4 * i.crouchAnim * o) : this.y += i.crouchSpeed * o) : !t[8] && 0 < this.crouchVal && (this.crouchVal -= i.crouchSpeed * o,
            0 >= this.crouchVal && (this.crouchVal = 0),
            this.onGround ? l && (this.bobAnimY += i.crouchAnim * o) : this.y -= i.crouchSpeed * o),
            this.crouchVal && (this.crouchVal = this.crouchVal.round(3)),
            e.updateHeight(this);
            var h, u = this.onGround || this.onLadder;
            h = u ? (this.terrainSlipping ? i.slippingSpeed : i.playerSpeed) * this.speed : i.airSpeed,
            h *= this.aimVal ? 1 : i.aimSlow,
            h *= r.mode.spdMlt && r.mode.spdMlt[this.team] || 1,
            h *= this.crouchVal ? i.crouchSlow : 1,
            h *= this.weapon.spdMlt * o;
            var f = 0;
            if (f = this.onLadder ? i.ladderDecel : this.terrainSlipping ? i.terrainSlipDecel : this.onTerrain ? i.terrainDecel : this.onGround ? i.groundDecel : i.airDecel,
            .5 >= this.crouchVal && (this.canSlide = !0),
            this.onGround && this.crouchVal || (this.slideTimer = 0),
            this.slideTimer)
                if (this.slideTimer -= o,
                0 >= this.slideTimer)
                    this.slideTimer = 0;
                else {
                    h *= .25,
                    f = this.onTerrain ? i.terrainSlideDecel : i.slideDecel;
                    var d = n.getDistance(this.xVel, this.zVel, 0, 0)
                      , m = n.getDirection(0, 0, this.xVel, this.zVel)
                      , g = n.getDirection(Math.sin(this.xDire), Math.cos(this.xDire), 0, 0)
                      , v = .03 * n.getAngleDist(g, m);
                    this.xVel = d * Math.cos(m + Math.PI - v),
                    this.zVel = d * Math.sin(m + Math.PI - v)
                }
            r.lockMove && (h *= 0),
            this.jumpCooldown = Math.max(this.jumpCooldown - o, 0),
            this.onGround && 0 >= this.jumpCooldown && e.tryJump(this, t[7]),
            u || (this.yVel -= o * (i.gravity * (r.config ? r.config.gravMlt : 1)));
            var y = i.movDirs[t[4]];
            y != Math.PI && 0 != y && y != Math.PI / 2 && y != -Math.PI / 2 && (h *= r.config ? r.config.strafeSpd : 1),
            void 0 !== y && (this.xVel += h * Math.cos(y - this.xDire),
            this.zVel += h * Math.sin(y - this.xDire)),
            this.xVel && (this.x += this.xVel * o,
            this.xVel *= Math.pow(f, o),
            this.xVel = n.cropVal(this.xVel, i.decelMin)),
            this.yVel && (this.y += this.yVel * o,
            this.yVel *= Math.pow(f, o)),
            this.zVel && (this.z += this.zVel * o,
            this.zVel *= Math.pow(f, o),
            this.zVel = n.cropVal(this.zVel, i.decelMin));
            var b = this.onGround && !this.didJump
              , w = !1;
            this.onGround = !1,
            this.onLadder = !1;
            for (var x = !1, M = 0; M < r.map.manager.objects.length; ++M)
                if ((s = r.map.manager.objects[M]).active && this.collides(s))
                    if (s.onEnter && s.onEnter(player, r),
                    s.score)
                        this.scoreObjs[s.sid] || (this.scoreObjs[s.sid] = 1,
                        e.score(this, s.scoreP));
                    else if (s.checkpoint)
                        r.setCheckPoint(this, s);
                    else if (null != s.pickup)
                        x = !0;
                    else if (s.flag)
                        r.pickupFlag(this, s);
                    else if (s.trigger)
                        this.flag && s.team == this.team && s.flagObj && !s.flagObj.carrier && s.flagObj.x == s.flagObj.orgX && s.flagObj.y == s.flagObj.orgY && s.flagObj.z == s.flagObj.orgZ && r.capFlag(this, this.flag);
                    else if (s.kill)
                        this.flag && (r.resetFlag(this.flag),
                        this.flag = null),
                        e.hasServer && e.kill(this);
                    else if (s.ladder) {
                        if (this.y < s.y + s.height && 0 == this.crouchVal && (this.yVel = 0,
                        this.onLadder = !0,
                        this.onTerrain = !1,
                        this.stepSrc = null,
                        void 0 !== y)) {
                            var _ = (Math.abs(n.getAngleDist(s.dir, y - this.xDire)) - Math.PI / 2) / (Math.PI / 2);
                            0 < _ && (this.y += i.ladderSpeed * this.weapon.spdMlt * o * _,
                            this.y <= s.y - s.height ? this.y = s.y - s.height : this.y >= s.y + s.height && (this.y = s.y + s.height))
                        }
                    } else if (s.ramp) {
                        if (this.y < s.y + s.height) {
                            var S = Math.max(0, Math.min(1, n.progressOnLine(s.ramp.sX, s.ramp.sZ, s.ramp.eX, s.ramp.eZ, this.x + this.scale * Math.cos(s.dir), this.z + this.scale * Math.sin(s.dir))))
                              , T = s.y - s.height + 2 * s.height * S;
                            if (this.y <= T || b)
                                if (s.boost) {
                                    this.y = T;
                                    var E = s.boost * i.boosterSpd * o;
                                    this.xVel += E * Math.sin(-s.dir + Math.PI / 2) * Math.cos(s.boostDr),
                                    this.zVel += E * Math.cos(-s.dir + Math.PI / 2) * Math.cos(s.boostDr),
                                    this.yVel += E * Math.sin(s.boostDr)
                                } else
                                    this.oldY > this.y && e.resetStep(this, a),
                                    this.y = T,
                                    this.yVel = 0,
                                    this.onGround = !0,
                                    this.onTerrain = !1,
                                    w = !0,
                                    this.rampFix = s.y - s.height + 2 * s.height * Math.round(S)
                        }
                    } else
                        !s.isBorder && this.y < s.y + s.height && s.y + s.height - this.y <= i.climbHeight && this.oldY < s.y + s.height && b ? (this.y += .3 * (s.y + s.height - this.y),
                        this.onGround = !0,
                        this.onTerrain = !1) : this.oldY >= s.y + s.height + (s.isBorder ? i.borderH : 0) ? (this.stepSrc = s.stepSrc,
                        this.oldY > this.y && e.resetStep(this, a),
                        this.y = s.y + s.height + (s.isBorder ? i.borderH : 0),
                        this.yVel = 0,
                        this.onGround = !0,
                        this.onTerrain = !1) : this.oldX - this.scale >= s.x + s.width - 1e-5 ? (this.x = s.x + s.width + this.scale,
                        this.xVel = 0) : this.oldX + this.scale <= s.x - s.width + 1e-5 ? (this.x = s.x - s.width - this.scale,
                        this.xVel = 0) : this.oldZ - this.scale >= s.z + s.length - 1e-5 ? (this.z = s.z + s.length + this.scale,
                        this.zVel = 0) : this.oldZ + this.scale <= s.z - s.length + 1e-5 ? (this.z = s.z - s.length - this.scale,
                        this.zVel = 0) : this.oldY + this.height <= s.y - s.height && (this.y = s.y - s.height - this.height,
                        this.yVel = 0);
            !this.didJump && null != this.rampFix && Math.abs(this.y - this.rampFix) <= i.climbHeight ? !w && (this.y = this.rampFix,
            this.onGround = !0,
            this.yVel = 0,
            this.rampFix = null) : this.rampFix = null;
            var k = r.map.terrain;
            if (k) {
                var A = k.raycast(this.x, -this.z, 1e4, 0, 0, -2e4, !0);
                if (A) {
                    var L = A.z;
                    if (this.y <= L && (this.oldY > this.y && e.resetStep(this, a),
                    this.onTerrain = !0),
                    this.onTerrain) {
                        this.onGround = !0;
                        var P = k._raycastNormal;
                        P.set(P.x, P.z, -P.y),
                        this.y = L;
                        var C = P.x
                          , R = -1 + P.y
                          , I = P.z
                          , O = Math.sqrt(C * C + R * R + I * I);
                        if (this.terrainSlipping = O > i.terrainSlideThreshold,
                        this.terrainSlipping = !1,
                        this.terrainSlipping)
                            O *= i.gravity * (r.config ? r.config.gravMlt : 1) * i.terrainGravityMlt * o,
                            this.xVel += C * O,
                            this.yVel += R * O,
                            this.zVel += I * O;
                        else
                            this.yVel = 0,
                            this.jumpCooldown = 0
                    }
                }
                this.onTerrain || (this.terrainSlipping = !1)
            }
            if (this.onGround ? this.airTime = 0 : this.airTime += o,
            !a) {
                var D = n.getDistance3D(this.oldX, this.oldY, this.oldZ, this.x, this.y, this.z);
                if (this.isYou && (this.onLadder && (D *= 1.4),
                n.getDirection(this.oldX, this.oldZ, this.x, this.z),
                this.bobAnimZ += n.getDistance(this.oldX, this.oldZ, this.x, this.z) * i.bobMltZ,
                this.bobAnimY -= (this.oldY - this.y) * i.bobMltY,
                u && void 0 !== y ? (e.playerStep(this, D),
                this.leanAnimZ -= D * i.leanMltZ * (this.weapon.zLnM || 1) * Math.cos(y)) : this.stepVal *= Math.pow(i.stepPull, o),
                this.stepChase != this.stepVal && (this.stepChase += .15 * (this.stepVal - this.stepChase))),
                this.spreadPlus += D * i.spreadMove + Math.abs(this.oldY - this.y) * i.spreadFall,
                this.spreadPlus *= Math.pow(i.spreadRecover, o),
                this.spread = Math.max(this.weapon.minSpread || 0, (this.weapon.spread - this.weapon.spread * i.crouchSpread * this.crouchVal + this.recoilAnim * (this.weapon.spreadInc || 1) * i.spreadMlt + this.spreadPlus) * this.aimVal),
                t[9] && e.reload(this),
                0 < this.reloadTimer) {
                    var z = this.reloadTimer;
                    this.reloadTimer -= o,
                    this.isYou && z >= this.weapon.reload / 2 && this.reloadTimer < this.weapon.reload / 2 && e.endReload(this.weapon),
                    0 >= this.reloadTimer && (this.reloadTimer = 0,
                    this.didShoot = !1,
                    this.ammos[this.weaponIndex] = this.weapon.ammo,
                    e.updatePlayerAmmo(this))
                }
                0 < this.swapTime && (this.swapTime -= o,
                0 > this.swapTime && (this.swapTime = 0));
                for (M = 0; M < this.reloads.length; ++M)
                    0 < this.reloads[M] && (this.reloads[M] -= o,
                    0 > this.reloads[M] && (this.reloads[M] = 0));
                if (this.weapon) {
                    var B = !this.weapon.nAuto && t[5];
                    this.didShoot && !t[5] && (this.didShoot = !1),
                    !this.didShoot && t[5] && (B = !0),
                    B && 0 >= this.reloads[this.weaponIndex] && 0 >= this.swapTime && 0 >= this.reloadTimer && (this.noMovTimer = 0,
                    this.weapon.melee ? e.melee(this) : 0 < this.ammos[this.weaponIndex] ? e.shoot(this, t) : e.reload(this))
                }
            }
            a && t.velObj && (this.xVel -= t.velObj.x,
            this.zVel -= t.velObj.y,
            this.yVel -= t.velObj.z,
            this.onGround = !1),
            e.playerCollisions(this),
            e.updateInteract(this, x)
        }
        ,
        this.collides = function(t) {
            return this.x - this.scale < t.x + t.width && this.x + this.scale > t.x - t.width && this.z - this.scale < t.z + t.length && this.z + this.scale > t.z - t.length && this.y <= t.y + t.height + (t.isBorder ? i.borderH : 0) && this.y + this.height >= t.y - t.height
        }
        ,
        this.update = function(t, r) {
            if (this.active) {
                if (this.inputs.length) {
                    for (var s = 0; s < this.inputs.length; ++s)
                        this.procInputs(this.inputs[s], t);
                    this.resetInputs()
                }
                if (this.idleAnim += i.idleAnimS * r,
                this.hpChase > this.health ? (this.hpChase -= .035 * r,
                this.hpChase <= this.health && (this.hpChase = this.health)) : this.hpChase = this.health,
                this.interpolate) {
                    this.dt += r;
                    var a = Math.min(1.6, this.dt / (i.serverSendRate * i.interpolation));
                    a /= t.config ? t.config.deltaMlt : 1,
                    this.oldX = this.x,
                    this.oldY = this.y,
                    this.oldZ = this.z,
                    this.x = this.x1 + (this.x2 - this.x1) * a,
                    this.y = this.y1 + (this.y2 - this.y1) * a,
                    this.z = this.z1 + (this.z2 - this.z1) * a,
                    this.onGround && e.playerStep(this, n.getDistance(this.oldX, this.oldZ, this.x, this.z)),
                    this.xDire = Math.lerpAngle(this.xDir2, this.xDir1, Math.min(1, a)),
                    this.yDire = Math.lerpAngle(this.yDir2, this.yDir1, Math.min(1, a))
                }
            }
        }
        ,
        this.reset = function() {
            this.checkPoint = null,
            this.checkPointList.length = 0,
            this.killList.length = 0,
            this.customLoadout = null,
            this.lastPicked.length = 0
        }
    };
    t.exports.Player = r,
    t.exports.manager = function(t, e, s, a, o, c, l) {
        this.list = [];
        var p, h, u, f = n(78);
        this.hasServer = l ? 1 : 0,
        this.setTeam = function(e) {
            if (!t.waitTimers && t.mode.convTeam)
                e.team = t.mode.convTeam;
            else if (t.mode.startTeam)
                e.team = t.mode.startTeam;
            else if (t.mode.friendly)
                e.team = 1;
            else if (t.mode.clanWar)
                e.team = e.account && e.account.clan ? e.account.clan : 1;
            else if (!e.team && t.mode.teams && !e.spectating) {
                for (var n = 0, i = 0, r = 0; r < this.list.length; ++r)
                    this.list[r].spectating || (1 == this.list[r].team && n++,
                    2 == this.list[r].team && i++);
                e.team = n >= i ? 2 : 1
            }
        }
        ,
        this.update = function(n) {
            for (var i = 0; i < this.list.length; ++i)
                (p = this.list[i]).active && (p.update(t, n),
                l && (this.tickPlayer(p, n),
                this.storeState(p),
                p.y <= t.map.deathY && (p.flag && (t.resetFlag(p.flag),
                p.flag = null),
                this.kill(p))),
                e && (this.updateMesh(p),
                this.updateHeight(p)))
        }
        ,
        this.playerCollisions = function(e) {
            if (l && t.mode.convTeam && !t.waitTimers)
                for (var n = 0; n < this.list.length; ++n)
                    if (e.active && this.list[n].active && e.team == t.mode.convTeam && e.team != this.list[n].team) {
                        var i = c.playerHeight / 2;
                        o.getDistance3D(e.x, e.y + i, e.z, this.list[n].x, this.list[n].y + i, this.list[n].z) <= 2.4 * i && (l.broadcast("game" + t.sid, "ac", e.sid, this.list[n].sid, t.mode.convWord),
                        this.score(e, 100),
                        e.convs++,
                        t.updateTeam(this.list[n], e.team),
                        t.mode.killConv && this.kill(this.list[n], null, null, !0),
                        t.gameTimer && (t.gameTimer += 1e4))
                    }
        }
        ,
        this.activeCount = function() {
            for (var t = 0, e = 0; e < this.list.length; ++e)
                this.list[e].active && t++;
            return t
        }
        ,
        this.forcePos = function() {
            for (var t = 0; t < this.list.length; ++t)
                this.list[t].forcePos = !0,
                this.list[t].objInstances && (this.list[t].objInstances.visible = !1,
                this.list[t].inView = !1)
        }
        ,
        this.saveSpin = function(t, e) {
            l && (t.spins.unshift(e),
            t.spins.length > c.spinTimer / c.serverTickRate && (t.spins.length = Math.round(c.spinTimer / c.serverTickRate)))
        }
        ,
        this.getSpin = function(t) {
            for (var e = 0, n = 0; n < t.spins.length; ++n)
                e += t.spins[n];
            return Math.abs(e * (180 / Math.PI))
        }
        ,
        this.storeState = function(e) {
            e.stateHistory.unshift({
                time: t.now,
                x: e.x,
                y: e.y,
                z: e.z
            });
            for (var n = e.stateHistory.length - 1; 0 <= n; --n)
                t.now - e.stateHistory[n].time >= c.stateHistory && e.stateHistory.splice(n, 1)
        }
        ,
        this.fetchState = function(e, n) {
            for (var i = t.now - (n + c.serverSendRate * c.interpolation), r = 0; r < e.stateHistory.length; ++r)
                if (e.stateHistory[r].time <= i)
                    return e.stateHistory[r];
            return e.stateHistory[e.stateHistory.length - 1]
        }
        ,
        this.updateMesh = function(n, i) {
            if (n.objInstances) {
                var r = n.weapon.animWhileAim ? 1 : n.aimVal
                  , s = (1 - (1 - c.aimAnimMlt) * (1 - n.aimVal)) * c.animMult * e.weaponLean
                  , a = 1 - .8 * n.crouchVal
                  , o = (1 - (1 - n.aimVal)) * c.animMult;
                n.isYou || (o = 0);
                var l = 1 - (n.weapon.recoilZM || .5) * (1 - r)
                  , p = (1 - (n.weapon.zRot || .3) * (1 - r)) * e.weaponLean
                  , h = 1 - (n.weapon.jYMlt || 1) * (1 - r)
                  , u = 1 - .45 * (1 - r)
                  , f = .9 * n.bobAnimY * h * e.weaponLean * o
                  , d = n.landBobY * (n.weapon.landBob || 1) * .6 * (1 - .75 * (1 - r)) * e.weaponLean;
                n.landBobYR != d && (n.landBobYR += .1 * (d - n.landBobYR));
                var m = n.landBobY * (n.weapon.landBob || 1) * .1
                  , g = 1 - .5 * n.crouchVal
                  , v = (n.crouchVal,
                n.jumpRot * g * o * e.weaponLean);
                n.jumpRotM != v && (n.jumpRotM += .08 * (v - n.jumpRotM));
                var y = n.jumpBobY * (n.weapon.jumpYM || 1) * o * g * e.weaponLean
                  , b = 1 - .89 * (1 - r)
                  , w = 1 - (n.weapon.aimRecMlt || 1) * (1 - r)
                  , x = i ? .05 : c.stepAnim
                  , M = Math.sin(n.stepVal) * x
                  , _ = Math.cos(2 * n.stepVal) / 2 * x
                  , S = -Math.sin(n.stepChase) * x
                  , T = -Math.cos(2 * n.stepChase) / 2 * x
                  , E = t.config.thirdPerson ? 0 : 1 - n.aimVal
                  , k = .5 * (.5 >= E ? E : .5 - (E - .5))
                  , A = n.swapTime / n.weapon.swapTime
                  , L = n.weapon.xOff
                  , P = 0;
                0 < n.reloadTimer && (P = .5 < (P = 1 - n.reloadTimer / n.weapon.reload) ? .5 - (P - .5) : P);
                var C = 1.5 * (1 - .88 * (1 - n.aimVal)) * e.weaponLean;
                e.moveMesh(n.objInstances, n.x, n.y + (n.isYou && !t.config.thirdPerson ? 0 : Math.abs(3.5 * M)), n.z),
                e.rotateMesh(n.objInstances, n.xDire + (n.isYou ? t.config.thirdPerson ? .5 * -M : 0 : 2 * -M)),
                _ -= _ * (n.crouchVal * c.crouchAnimMlt),
                M -= M * (n.crouchVal * c.crouchAnimMlt);
                for (var R = 0; R < n.legMeshes.length; ++R)
                    n.legMeshes[R].rotation.x = M * (1 == R || 3 == R ? 1 : -1) * 7 + (1 < R ? -.6 : 0);
                var I;
                for (R = 0; R < n.armMeshes.length; ++R)
                    I = -(n[(0 == R ? "l" : "r") + "HndTweenA"] || 0),
                    n.armMeshes[R].position.z = I || M * (R ? -1 : 1) * 12,
                    n.armMeshes[R].rotation.x = .1 * I,
                    n.armMeshes[R].rotation.z = .1 * I * (R ? -1 : 1),
                    n.armMeshes[R].position.x = -.3 * I * (R ? -1 : 1);
                var O = t.attach[n.weapon.attach]
                  , D = O && O.aimOffY || 0;
                n.weaponMeshes[n.weaponIndex].flapMesh && n.weapon.flap && (fRot = 3 * T + 2.8 * n.recoilAnim - n.leanAnimZ - 3 * n.leanAnimX - 1.8 * n.landBobYR + f + .1 * n.crouchVal,
                e.rotateMesh(n.weaponMeshes[n.weaponIndex].flapMesh, n.weapon.flap.rot * n.swapTweenA + fRot, null, null));
                var z = t.config.thirdPerson ? .4 : 1;
                e.rotateMesh(n.upperBody, P * (-1 * z), -.2 * f + +m + P * (-2.8 * z) + n.yDire * (n.isYou && !t.config.thirdPerson ? 1 : .5) + (-Math.PI / 4 * A + n.recoilAnimY * c.recoilMlt) + (n.weapon.yRot || 0)),
                e.moveMesh(n.upperBody, 0, n.recoilAnimY * (n.weapon.recoilYM || .3) * o + (n.height - c.cameraHeight - c.legHeight), 0),
                e.rotateMesh(n.weaponMeshes[n.weaponIndex], n.inspectX + .2 * n.jumpRotM + n.recoilX * b + n.leanAnimX * u * e.weaponLean * (n.weapon.leanMlt || 1) + (.16 * -S * o * a + .2 * n.leanAnimZ) * s, -Math.cos(n.idleAnim) * g * .01 * C + .6 * -n.landBobYR + n.recoilTweenY * w + n.leanAnimY * u * e.weaponLean * (n.weapon.leanMlt || 1) + -.9 * T * s, v + k + n.recoilX * b + n.leanAnimZ * p + -n.inspectX * (n.weapon.inspectR || 0) + ((n.weapon.cLean || 0) * n.crouchVal * o + 0 * -S) * s),
                e.moveMesh(n.weaponMeshes[n.weaponIndex], -n.jumpRotM * o * 1.3 + -n.inspectX * (n.weapon.inspectM || 0) + (.35 * n.leanAnimZ - (n.weapon.cRot || 0) * n.crouchVal * o + .5 * M * a * o) * n.aimVal * s + L - (L - n.weapon.xOrg) * E, .02 * Math.sin(n.idleAnim) * C + n.recoilTweenYM * w + y + .7 * d - 1.5 * f + (.85 * _ - (n.weapon.cDrop || 0) * n.crouchVal * o) * s + n.weapon.yOff - (n.weapon.yOff - n.weapon.yOrg + D) * E, n.weapon.zOff - (n.weapon.zOff - n.weapon.zOrg) * E + n.bobAnimZ * s + n.recoilAnim * (n.weapon.recoilZ || 0) * l)
            }
        }
        ,
        this.updateHeight = function(n) {
            var i = c.crouchDst * n.crouchVal;
            if (!e || n.isYou && !t.config.thirdPerson)
                n.height = c.playerHeight - i;
            else {
                var r = c.crouchLean * n.crouchVal;
                e.rotateMesh(n.lowerBody, 0, r + .5 * n.yDire, 0),
                n.upperBody.rotation.x -= r,
                e.moveMesh(n.lowerBody, 0, c.legHeight - i, 0);
                for (var s = 0; 4 > s; ++s)
                    n.legMeshes[s] && (n.legMeshes[s].visible = 1 >= s ? !n.crouchVal : !!n.crouchVal)
            }
        }
        ,
        this.generateMeshes = function(n, r, s=!1) {
            var o = t.classes[n.classIndex].colors
              , l = t.config.thirdPerson || !r;
            if (n.objInstances = e.genObj3D(n.x, n.y, n.z),
            n.lowerBody = e.genObj3D(0, c.legHeight, 0),
            l && n.lowerBody.add(e.genBody(o[1], o[2], o[4], o[0], n.isPreview || n.isYou)),
            n.upperBody = e.genObj3D(0, 0, 0),
            n.lowerBody.add(n.upperBody),
            0 <= n.backIndex && l && (n.backMesh = e.genObj3D(0, (c.playerHeight - c.legHeight - c.headScale) / 2 - (t.store.skins[n.backIndex].sitOff || 0), -(t.store.skins[n.backIndex].sitOffZ || 0)),
            n.lowerBody.add(n.backMesh),
            e.loadMesh({
                src: "body/body_" + t.store.skins[n.backIndex].id,
                texSrc: t.store.skins[n.backIndex].tex ? "body/body_" + t.store.skins[n.backIndex].id + "_" + t.store.skins[n.backIndex].tex : null,
                glowText: t.store.skins[n.backIndex].glow,
                emissive: t.store.skins[n.backIndex].glow ? 16777215 : null,
                noGreen: !0
            }, 0, 0, 0, Math.PI / 2, 2.1 * (t.store.skins[n.backIndex].sclMlt || 1), n.backMesh)),
            0 <= n.hatIndex && l && (n.hatMesh = e.genObj3D(0, c.playerHeight - c.legHeight - (t.store.skins[n.hatIndex].sitOff || 0), -(t.store.skins[n.hatIndex].sitOffZ || 0)),
            n.lowerBody.add(n.hatMesh),
            e.loadMesh({
                src: "hats/hat_" + t.store.skins[n.hatIndex].id,
                texSrc: t.store.skins[n.hatIndex].tex ? "hats/hat_" + t.store.skins[n.hatIndex].id + "_" + t.store.skins[n.hatIndex].tex : null,
                glowText: t.store.skins[n.hatIndex].glow,
                emissive: t.store.skins[n.hatIndex].glow ? 16777215 : null,
                noGreen: !0
            }, 0, 0, 0, Math.PI / 2, 2.1 * (t.store.skins[n.hatIndex].sclMlt || 1), n.hatMesh)),
            l)
                for (var p = 0; 4 > p; ++p)
                    n.legMeshes.push(e.genLeg(1 == p || 3 == p, o[2], o[3], 1 < p)),
                    2 <= p && e.rotateMesh(n.legMeshes[p], 2 == p ? -Math.PI / 6 : Math.PI / 8, 0, 0),
                    n.legMeshes[p].visible = 1 >= p,
                    n.objInstances.add(n.legMeshes[p]);
            for (p = 0; p < n.ammos.length; ++p) {
                var h = e.genObj3D(0, 0, 0)
                  , u = t.weapons[n.loadout[p]]
                  , f = null == u.attach ? null : t.attach[u.attach];
                if (r && u.ammo) {
                    h.muzzles = [],
                    h.casings = [];
                    for (var d = 0; 2 > d; ++d)
                        (!d || u.akimbo) && (h.muzzles.push(new i.Sprite),
                        h.muzzles[d].visible = !1,
                        h.muzzles[d].static = !0,
                        a.particles.push(h.muzzles[d]),
                        h.add(h.muzzles[d]),
                        h.casings.push(e.genObj3D(d ? 2 * -u.xOff : 0, u.caseYOff || 0, u.caseZOff || 0)),
                        h.add(h.casings[d]));
                    h.muzzleFlash = e.genObj3D(0, .4, 0),
                    h.muzzles[0].add(h.muzzleFlash)
                }
                if (u.src || !r)
                    h.add(e.genArms(u, o[1], o[5], o[0], null, n.isPreview || n.isYou));
                else {
                    var m;
                    for (d = 0; 2 > d; ++d)
                        m = e.genArms(u, o[1], o[5], o[0], d + 1, n.isPreview || n.isYou),
                        h.add(m),
                        n.armMeshes.push(m)
                }
                if (n.weaponMeshes.push(h),
                n.weaponMeshes[p].visible = !1,
                n.upperBody.add(n.weaponMeshes[p]),
                u.src) {
                    var g = t.store.skins[n.skins[p]] || {}
                      , v = 0 <= n.skins[p] && (g.glow || g.sameGlow);
                    for (d = 0; 2 > d; ++d)
                        (!d || u.akimbo) && e.loadMesh({
                            src: "weapons/" + u.src,
                            texSrc: g.tex ? g.tex : 0 <= n.skins[p] ? "weapons/skins/" + u.src + "_" + g.id : null,
                            tFilter: i.LinearFilter,
                            mat: s || n.isYou ? i.MeshPhongMaterial : null,
                            movT: g.movT,
                            sameGlow: g.sameGlow,
                            glowText: v,
                            noGreen: !0,
                            uv2: !0,
                            ao: r && !u.noAo,
                            shininess: u.shine || 60,
                            transparent: u.seeThrough,
                            emissive: u.transp || v ? 16777215 : null
                        }, 1 == d ? -2 * u.xOff : 0, 0, 0, Math.PI / 2, u.scale, n.weaponMeshes[p])
                }
                r && u.flap && e.sniperFlap && (n.weaponMeshes[p].flapMesh = e.loadMesh({
                    src: "attach/" + u.flap.src,
                    tFilter: i.LinearFilter,
                    noGreen: !0,
                    mat: i.MeshPhongMaterial,
                    shininess: 60,
                    transparent: !0
                }, u.flap.xOff, u.flap.yOff, u.flap.zOff, Math.PI / 2, u.flap.scl, n.weaponMeshes[p])),
                f && (r || s) && e.loadMesh({
                    src: "attach/" + f.src,
                    tFilter: i.LinearFilter,
                    noGreen: !0,
                    mat: n.isYou ? i.MeshPhongMaterial : null,
                    shininess: 60,
                    transparent: !0
                }, 0, -(u.yOrg || 0) + (u.attachYOff || 0), -(u.attachZOff || 0), Math.PI / 2, f.scale, n.weaponMeshes[p])
            }
            return n.objInstances.add(n.lowerBody),
            r && n.objInstances.traverse(function(t) {
                t.layers.set(1)
            }),
            n.objInstances
        }
        ,
        this.regenMeshes = function(t) {
            t.objInstances && this.disposeMesh(t, !0),
            e && e.add(this.generateMeshes(t, t.isYou)),
            this.swapWeapon(t, 0, !0)
        }
        ,
        this.hideAll = function() {
            for (var t = 0; t < this.list.length; ++t)
                this.list[t].active && this.list[t].objInstances && (this.list[t].forcePos = !this.list[t].latestData,
                this.list[t].latestData = !1,
                this.list[t].isYou || (this.list[t].objInstances.visible = !1))
        }
        ,
        this.clear = function() {
            if (e)
                for (var t = 0; t < this.list.length; ++t)
                    this.disposeMesh(this.list[t]);
            this.list.length = 0
        }
        ,
        this.toggleLOD = function(t, e) {
            t.objInstances && (t.objInstances.visible = e),
            t.lodActive = !e
        }
        ,
        this.disposeMesh = function(t) {
            e.remove(t.objInstances),
            t.objInstances = null,
            t.hatMesh = null,
            t.backMesh = null,
            t.weaponMeshes.length = 0,
            t.armMeshes.length = 0,
            t.legMeshes.length = 0
        }
        ,
        this.add = function(n, i, s, a, p, h, u, f, d, m, g, v, y, b) {
            for (var w, x = 0; x < this.list.length; ++x)
                if (this.list[x].id == n) {
                    w = this.list[x];
                    break
                }
            return w ? (w.weaponMeshes.length = 0,
            w.legMeshes.length = 0,
            w.armMeshes.length = 0) : ((w = new r(n,this,o,c,t)).sid = i || o.generateSID(this.list),
            this.list.push(w)),
            h || (h = "Guest_" + w.sid),
            w.init(s, a, p, h, v, y),
            l && null != t.mode && this.setTeam(w),
            w.skins = f || [-1, -1],
            w.hatIndex = d,
            w.backIndex = m,
            w.secIndex = g,
            w.setClass(t, u, g, !!e),
            !b && t.mode.startingLoadout && (b = t.mode.startingLoadout),
            b && w.updateLoadout(t, w.weaponIndex, b[0], b[1], !1),
            e && e.add(this.generateMeshes(w, v)),
            this.swapWeapon(w, 0, !0),
            "undefined" != typeof window && "updateWindow"in window && window.updateWindow(23),
            w
        }
        ,
        this.remove = function(e) {
            var n = this.indexBySid(e);
            if (0 <= n) {
                l && this.list[n] && (t.dropFlag(this.list[n].flag),
                this.dropWeapon(this.list[n], !0));
                this.list[n].room;
                var i = this.list[n].id;
                if (this.list[n].objInstances && this.disposeMesh(this.list[n]),
                this.list.splice(n, 1),
                l) {
                    for (var r = this.list.length - 1; 0 <= r; --r)
                        0 <= (n = this.list[r].sentTo.indexOf(i)) && this.list[r].sentTo.splice(n, 1);
                    l.broadcast("game" + t.sid, "2", e),
                    this.syncLeaders()
                }
                "undefined" != typeof window && "updateWindow"in window && window.updateWindow(23)
            }
        }
        ;
        var d = [0, 1, 2];
        this.getStepSound = function() {
            var t = o.randInt(0, d.length - 1)
              , e = d[t];
            return d.splice(t, 1),
            0 >= d.length && d.push(0, 1, 2),
            e
        }
        ,
        this.playerStep = function(e, n, i) {
            if (n && (!e.isYou && e.crouchVal && (n *= 1.6),
            e.stepVal += n * c.stepMlt * e.stepDir,
            e.stepVal >= Math.PI / 2 && 1 == e.stepDir || e.stepVal <= -Math.PI / 2 && -1 == e.stepDir)) {
                if (s && !i) {
                    var r = o.randFloat(.15, .25) * (1 > e.crouchVal ? 1 : e.isYou ? .5 : 0)
                      , a = (1 > e.crouchVal ? 1 : .8) * o.randFloat(.8, 1.2)
                      , l = e.stepSrc ? "_" + e.stepSrc : "";
                    e.isYou ? s.play("step_" + this.getStepSound() + l, r, !1, a) : r && t.playerSound("step_" + o.randInt(0, 2) + l, 0, r, e, a, 180)
                }
                e.stepDir *= -1
            }
        }
        ,
        this.resetStep = function(e, n) {
            if (!n && e.isYou && e.yVel && (e.jumpTween && e.jumpTween.stop(),
            e.landTween && e.landTween.stop(),
            e.landTween = new TWEEN.Tween(e).to({
                landBobY: 6 * e.yVel,
                jumpBobY: 0
            }, 100).easing(TWEEN.Easing.Linear.None).onComplete(function() {
                e.landTween = new TWEEN.Tween(e).to({
                    landBobY: 0
                }, 1100).easing(TWEEN.Easing.Elastic.Out).start()
            }).start()),
            s && !n && e.yVel && (e.stepSrc && e.stepSrc,
            s.play("step_" + this.getStepSound(), .7, !1, o.randFloat(.9, 1.2)),
            e.isYou && e.crouchVal && t.config.canSlide && e.canSlide && s.play("slide_0", .35, !1, o.randFloat(.9, 1.1))),
            t.config.canSlide && e.crouchVal && e.canSlide) {
                e.canSlide = !1,
                e.slideTimer = c.slideTime * e.crouchVal;
                var i = this.onTerrain ? c.playerTerrainSlideVelMlt : c.playerSlideVelMlt;
                e.xVel *= i,
                e.zVel *= i
            }
        }
        ,
        this.tryJump = function(e, n) {
            t.config && t.config.autoJump && n ? this.jump(e) : (e.didJump && !n && (e.didJump = !1),
            !e.didJump && n && this.jump(e))
        }
        ,
        this.jump = function(e) {
            e.jumpCooldown = e.terrainSlipping ? c.playerSlippingJumpCooldown : 0,
            e.didJump = !0,
            e.onTerrain = !1;
            var n = c.jumpVel * (t.config ? t.config.jumpMlt : 1)
              , i = c.jumpPush * (t.config ? t.config.jumpMlt : 1);
            e.yVel += (n - n * (c.crouchJump * e.crouchVal)) * e.weapon.spdMlt * (e.aimVal ? 1 : c.aimJumpSlow);
            var r = o.getDistance(0, 0, e.xVel, e.zVel);
            if (e.xVel -= i * r * Math.sin(e.xDire),
            e.zVel -= i * r * Math.cos(e.xDire),
            s && !e.recon && e.isYou) {
                e.landTween && e.landTween.stop(),
                e.landTween = new TWEEN.Tween(e).to({
                    landBobY: 0
                }, 100).easing(TWEEN.Easing.Linear.None).start(),
                e.jumpTween && e.jumpTween.stop(),
                e.jumpTween = new TWEEN.Tween(e).to({
                    jumpBobY: .22
                }, 500).easing(TWEEN.Easing.Back.Out).start();
                var a = o.randFloat(.12, .15);
                new TWEEN.Tween(e).to({
                    jumpRot: [a, 0]
                }, 900).easing(TWEEN.Easing.Back.Out).start();
                s.play("jump_" + o.randInt(0, 1), .04, !1, o.randFloat(.9, 1))
            }
        }
        ,
        this.updateAim = function(t, n) {
            e.zoom(1 + (t.weapon.zoom - 1) * n)
        }
        ,
        this.toggleAim = function(n, i) {
            if (s && !n.recon && s.play("aim_" + i, .1),
            i || this.resetAim(),
            n.weapon.scope && (e.zoom(i ? n.weapon.zoom : 1),
            n.weaponMeshes[n.weaponIndex].visible = !t.hideWeapon && !i,
            aimRecticle.style.opacity = i ? 1 : 0),
            t.attach[n.weapon.attach]) {
                aimDot.style.opacity = i ? 1 : 0;
                var r = t.store.skins[n.skins[n.weaponIndex]]
                  , a = "./textures/dots/" + (r && r.dot || "dot_0") + ".png";
                aimDot.src != a && (aimDot.src = a)
            }
        }
        ,
        this.resetAim = function() {
            e.zoom(1),
            aimRecticle.style.opacity = 0,
            aimDot.style.opacity = 0
        }
        ,
        this.reload = function(t) {
            !t.reloadTimer && t.ammos[t.weaponIndex] < t.weapon.ammo && (s && s.play("reload_1", .25),
            t.reloadTimer = t.weapon.reload,
            t.isYou && this.cancelInspect(t))
        }
        ,
        this.endReload = function(t) {
            s && s.play("reload_2" + (t.custReload || ""), .25)
        }
        ,
        this.updatePlayerAmmo = function(t) {
            t.isYou && (ammoDisplay.style.display = t.weapon.melee ? "none" : "inline-block",
            t.weapon.melee ? reloadMsg.style.display = "none" : (ammoVal.innerHTML = t.ammos[t.weaponIndex] + " <span id='ammoMax'> | " + t.weapon.ammo + "</span>",
            0 >= t.ammos[t.weaponIndex] ? (reloadMsg.innerHTML = "[R] Reload",
            reloadMsg.style.display = "block") : reloadMsg.style.display = "none"))
        }
        ,
        this.cancelInspect = function(t) {
            t.inspecting = !1,
            t.inspectX = 0
        }
        ,
        this.wInspect = function(t) {
            t.inspecting ? this.cancelInspect(t) : !t.weapon.nInsp && !t.inspecting && 1 == t.aimVal && !t.reloadTimer && (t.inspecting = !0)
        }
        ,
        this.melee = function(e) {
            e.reloads[e.weaponIndex] = e.weapon.rate,
            e.didShoot = !0,
            e.isYou && (e.weapon.anim && e.weapon.anim(e, TWEEN),
            e.weapon.sounds && s.play(e.weapon.sounds[o.randInt(0, e.weapon.sounds.length - 1)], .1, !1, o.randFloat(.9, 1.1)));
            var n = e.xDire
              , i = e.yDire;
            m.length = 0;
            for (var r = 0, a = 1 / (e.weapon.range * Math.sin(n + Math.PI) * Math.cos(i)), p = 1 / (e.weapon.range * Math.cos(n + Math.PI) * Math.cos(i)), u = 1 / (e.weapon.range * Math.sin(i)), f = e.y + e.height - c.cameraHeight, d = 0; d < t.map.manager.objects.length; ++d)
                (h = t.map.manager.objects[d]).active && !h.noShoot && ((r = o.lineInRect(e.x, e.z, f, a, p, u, h.x - h.width, h.z - h.length, h.y - h.height, h.x + h.width, h.z + h.length, h.y + h.height)) && 1 >= r && m.push({
                    obj: h,
                    dst: r
                }));
            if (l)
                for (d = 0; d < this.list.length; ++d)
                    this.list[d].active && e != this.list[d] && (!e.team || e.team != this.list[d].team) && ((h = this.fetchState(this.list[d], e.ping)) && ((r = o.lineInRect(e.x, e.z, f, a, p, u, h.x - this.list[d].scale - c.hitBoxPad, h.z - this.list[d].scale - c.hitBoxPad, h.y, h.x + this.list[d].scale + c.hitBoxPad, h.z + this.list[d].scale + c.hitBoxPad, h.y + this.list[d].height + c.hitBoxPad)) && 1 >= r && m.push({
                        player: !0,
                        obj: this.list[d],
                        dst: r
                    })));
            e.weapon.range;
            if (m.length) {
                m.sort(o.orderByDst);
                var g = e.weapon.dmg;
                for (d = 0; d < m.length && (h = m[d],
                e.weapon.range * h.dst,
                l) && (l && !t.waitTimers && h.obj && h.obj.health && !h.player && (l.send(e.id, "4"),
                h.obj.health -= g,
                0 >= h.obj.health && (h.obj.active = !1,
                h.obj.health = 0,
                t.destObjs.push(h.obj.uid),
                l.broadcast("game" + t.sid, "do", h.obj.uid))),
                h.player || h.obj && h.obj.dummy) && (this.changeHealth(h.obj, e, g) && this.kill(h.obj, e, {}),
                !(0 >= (g -= null == e.weapon.pierce ? g : e.weapon.dmg * c.materialDens.flesh * e.weapon.pierce))); ++d)
                    ;
            }
        }
        ;
        var m = [];
        this.shoot = function(n, i) {
            var r = !1;
            if (l && t.incStat("s", n),
            n.reloads[n.weaponIndex] = n.weapon.rate,
            n.ammos[n.weaponIndex]--,
            n.didShoot = !0,
            this.updatePlayerAmmo(n),
            t.playSound) {
                var p = n.ammos[n.weaponIndex] / t.weapons[n.loadout[n.weaponIndex]].ammo;
                n.isYou && .25 >= p && !n.weapon.nRing ? t.playSound(n.weapon.sound, .85, n, !1, o.randFloat(.9, 1) + .15 * (1 - p / .25)) : t.playSound(n.weapon.sound, .85, n, !1, o.randFloat(.9, 1))
            }
            if (n.recoilForce += n.weapon.recoil,
            n.isYou) {
                t.controls && t.controls.gamepad.connected && t.controls.gamepad.rumble(0, n.weapon.rumbleDur || 200, n.weapon.rumble || .5);
                var u = o.randInt(0, 1) ? -n.weapon.recoilR : n.weapon.recoilR;
                n.recoilX += u,
                n.recoilZ += u,
                n.recoilTween && n.recoilTween.stop();
                var f = n.weapon.recoilAnim && n.weapon.recoilAnim.time || n.weapon.rate;
                0 == n.aimVal && n.weapon.recoilAnim && n.weapon.recoilAnim.aimTime && (f = n.weapon.recoilAnim.aimTime),
                n.recoilTween = new TWEEN.Tween(n).to(n.weapon.recoilAnim || {}, .15 * f).easing(TWEEN.Easing.Linear.None).onComplete(function() {
                    n.recoilTween = new TWEEN.Tween(n).to({
                        recoilTweenY: 0,
                        recoilTweenYM: 0,
                        recoilTweenZ: 0
                    }, .95 * f).easing(TWEEN.Easing.Back.Out).start()
                }).start(),
                this.cancelInspect(n)
            }
            if (n.isYou && !t.hideWeapon) {
                var d = n.weaponMeshes[n.weaponIndex]
                  , g = 0 == n.aimVal && n.weapon.scope;
                if (a.showMuzzle && !n.weapon.nMuz && (0 == e.useDepthMap || "0" == e.useDepthMap)) {
                    for (var v = 0; v < d.muzzles.length; ++v)
                        d.muzzles[v].visible = !0,
                        a.setMaterial(d.muzzles[v], n.weapon.muzID || 2, 1, !0),
                        d.muzzles[v].init(v ? -2 * n.weapon.xOff : 0, n.weapon.muzOffY || 0, -n.weapon.muzOff, 0, 0, 0, 4 * (n.weapon.muzMlt || 1), 1);
                    if (!g)
                        (J = n.weaponMeshes[n.weaponIndex].muzzles[0].getWorldPosition().clone()).project(e.camera),
                        J.x = (J.x + 1) / 2,
                        J.y = (J.y + 1) / 2,
                        e.flash(J.x, J.y)
                }
                if (!n.weapon.nCase && a.active)
                    for (v = 0; v < n.weaponMeshes[n.weaponIndex].casings.length; ++v)
                        if (J = n.weaponMeshes[n.weaponIndex].casings[v].getWorldPosition(),
                        s && 400 < t.now - (n.lastShell || 0) && (n.lastShell = t.now,
                        s.play3D("case_" + o.randInt(0, 1), J.x, J.y, J.z, .65, o.randFloat(.8, 1.3))),
                        !g) {
                            var y = o.randInt(0, 1) ? 1.4 : .8;
                            a.physObj(J.x, J.y, J.z, n.xDire - Math.PI / 2 * (v ? -1 : 1), Math.PI / 5 * o.randFloat(.75, 1.2) * y, 25, !1, n.weapon.caseInd || 1, n)
                        }
            }
            if (null == n.weapon.projectile)
                for (var b = n.weapon.physPow ? -1 : 0; b < (n.weapon.shots || 1); ++b) {
                    var w = 0 <= b ? (n.spread + (n.weapon.innac || 0)) * c.spreadAdj : 0
                      , x = n.xDire + o.randFloat(-w, w)
                      , M = n.yDire + n.recoilAnimY * c.recoilMlt + o.randFloat(-w, w)
                      , _ = n.weapon.range;
                    0 > b && (_ = n.weapon.physRang),
                    m.length = 0;
                    for (var S = 0, T = 1 / (_ * Math.sin(x + Math.PI) * Math.cos(M)), E = 1 / (_ * Math.cos(x + Math.PI) * Math.cos(M)), k = 1 / (_ * Math.sin(M)), A = n.y + n.height - c.cameraHeight, L = 0; L < t.map.manager.objects.length; ++L)
                        (h = t.map.manager.objects[L]).active && !h.noShoot && ((S = o.lineInRect(n.x, n.z, A, T, E, k, h.x - h.width, h.z - h.length, h.y - h.height, h.x + h.width, h.z + h.length, h.y + h.height)) && 1 >= S && m.push({
                            obj: h,
                            dst: S
                        }));
                    if (l && 0 <= b)
                        for (L = 0; L < this.list.length; ++L)
                            this.list[L].active && n != this.list[L] && (!n.team || n.team != this.list[L].team) && ((h = this.fetchState(this.list[L], n.ping)) && ((S = o.lineInRect(n.x, n.z, A, T, E, k, h.x - this.list[L].scale - c.hitBoxPad, h.z - this.list[L].scale - c.hitBoxPad, h.y, h.x + this.list[L].scale + c.hitBoxPad, h.z + this.list[L].scale + c.hitBoxPad, h.y + this.list[L].height + c.hitBoxPad)) && 1 >= S && m.push({
                                player: !0,
                                obj: this.list[L],
                                dst: S
                            })));
                    var P = t.map.terrain;
                    if (P) {
                        var C = P.raycast(n.x, -n.z, A, 1 / T, -1 / E, 1 / k);
                        if (C) {
                            let t = o.getDistance3D(n.x, A, n.z, C.x, C.z, -C.y);
                            m.push({
                                terrain: !0,
                                dst: t / _
                            })
                        }
                    }
                    var R = _;
                    if (m.length) {
                        m.sort(o.orderByDst);
                        var I = n.weapon.dmg;
                        for (L = 0; L < m.length; ++L) {
                            if (R = _ * (h = m[L]).dst,
                            0 > b) {
                                var O = (1 - h.dst) * (n.weapon.physPow * (t.config ? t.config.impulseMlt : 1))
                                  , D = O * Math.sin(x + Math.PI) * Math.cos(M);
                                n.xVel -= D;
                                var z = O * Math.cos(x + Math.PI) * Math.cos(M);
                                n.zVel -= z;
                                var B = O * Math.sin(M);
                                n.yVel -= B,
                                n.onGround = !1,
                                l || (i.velObj = {
                                    x: D,
                                    y: z,
                                    z: B
                                });
                                break
                            }
                            if (!l)
                                break;
                            var N = n.weapon.dropStart || 0
                              , j = Math.min(1, 1 - (1 - h.dst) * _ / (_ - N))
                              , U = I - n.weapon.dmgDrop * j
                              , F = !1
                              , H = !1;
                            if (h.player) {
                                var G = A + R * Math.sin(M);
                                F = h.obj.y + h.obj.height - G < c.headScale,
                                H = h.obj.y + c.legHeight > G,
                                U *= F && !n.weapon.noHeadShot ? 1.5 : 1,
                                U *= H ? .5 : 1
                            }
                            if (l && !t.waitTimers && h.obj && h.obj.health && !h.player && (h.obj.health -= U,
                            l.send(n.id, "4"),
                            0 >= h.obj.health && (h.obj.active = !1,
                            h.obj.health = 0,
                            t.destObjs.push(h.obj.uid),
                            l.broadcast("game" + t.sid, "do", h.obj.uid))),
                            h.player || h.obj && h.obj.dummy) {
                                if (h.player && (r = !0),
                                this.changeHealth(h.obj, n, U)) {
                                    var V = {
                                        dst: h.dst,
                                        headShot: F
                                    };
                                    this.kill(h.obj, n, V)
                                }
                                I -= null == n.weapon.pierce ? I : n.weapon.dmg * c.materialDens.flesh * n.weapon.pierce
                            } else {
                                if (!h.obj || !h.obj.penetrable)
                                    break;
                                I -= null == n.weapon.pierce ? I : n.weapon.dmg * c.materialDens.default * n.weapon.pierce
                            }
                            if (0 >= I)
                                break
                        }
                    }
                    R -= .12;
                    var W = n.x + R * Math.sin(x + Math.PI) * Math.cos(M)
                      , Y = (G = A + R * Math.sin(M),
                    n.z + R * Math.cos(x + Math.PI) * Math.cos(M))
                      , q = 0
                      , X = 0;
                    if (m.length && (h.terrain ? X = Math.PI / 2 : G >= h.obj.y + h.obj.height ? X = Math.PI / 2 : G <= h.obj.y - h.obj.height ? X = -Math.PI / 2 : W <= h.obj.x - h.obj.width ? q = -Math.PI / 2 : W >= h.obj.x + h.obj.width ? q = Math.PI / 2 : Y <= h.obj.z - h.obj.length && (q = Math.PI),
                    !l && a.effect(W, G, Y, q, X, 0)),
                    l) {
                        var Z = n.weapon && n.weapon.trail ? 1 : 0;
                        for (L = 0; L < this.list.length; ++L)
                            (this.list[L].active || this.list[L].spectating) && this.list[L] != n && (m.length && !h.player ? l.send(this.list[L].id, "9", n.sid, Math.round(W), Math.round(G), Math.round(Y), q.round(1), X.round(1), Z) : l.send(this.list[L].id, "9", n.sid, Math.round(W), Math.round(G), Math.round(Y), void 0, void 0, Z))
                    }
                    if (n.isYou && R >= c.tracerMinDst) {
                        var K = o.randInt(0, n.weaponMeshes[n.weaponIndex].muzzles.length - 1)
                          , J = n.weaponMeshes[n.weaponIndex].muzzles[K].getWorldPosition()
                          , $ = n.weapon && n.weapon.scope && 0 == n.aimVal ? 7 : 0
                          , Q = J.x - $ * Math.sin(x + Math.PI) * Math.cos(M)
                          , tt = J.y - $ * Math.sin(M)
                          , et = J.z - $ * Math.cos(x + Math.PI) * Math.cos(M);
                        o.getDistance3D(Q, tt, et, W, G, Y),
                        q = o.getDirection(et, Q, Y, W),
                        X = o.getDirection(o.getDistance(Q, et, W, Y), G, 0, tt);
                        a.physObj(Q, tt, et, q, X, Math.min(R + $, c.tracerMaxDst), n.weapon && n.weapon.trail, 0, n)
                    }
                }
            else if (l) {
                w = (n.spread + (n.weapon.innac || 0)) * c.spreadAdj,
                x = n.xDire + o.randFloat(-w, w),
                M = n.yDire + n.recoilAnimY * c.recoilMlt + o.randFloat(-w, w);
                t.projectiles.init(n.x, n.y + n.height - c.cameraHeight, n.z, x, M, n.weapon.projectile, n)
            }
            r && l && t.incStat("h", n)
        }
        ,
        this.spray = function(e) {
            if (t.now - e.lastSpray >= c.sprayTimer) {
                m.length = 0;
                for (var n = 0, i = 1 / (c.sprayRange * Math.sin(e.xDire + Math.PI) * Math.cos(e.yDire)), r = 1 / (c.sprayRange * Math.cos(e.xDire + Math.PI) * Math.cos(e.yDire)), s = 1 / (c.sprayRange * Math.sin(e.yDire)), a = 0; a < t.map.manager.objects.length; ++a)
                    (h = t.map.manager.objects[a]).noShoot || h.noVis || (n = o.lineInRect(e.x, e.z, e.y + e.height - c.cameraHeight, i, r, s, h.x - h.width, h.z - h.length, h.y - h.height, h.x + h.width, h.z + h.length, h.y + h.height)) && 1 >= n && m.push({
                        obj: h,
                        dst: n
                    });
                if (m.length && (m.sort(o.orderByDst),
                h = m[0].obj)) {
                    var p = c.sprayRange * m[0].dst - .1
                      , u = e.y + e.height - c.cameraHeight + p * Math.sin(e.yDire)
                      , f = e.x + p * Math.sin(e.xDire + Math.PI) * Math.cos(e.yDire)
                      , d = e.z + p * Math.cos(e.xDire + Math.PI) * Math.cos(e.yDire)
                      , g = 0
                      , v = 0;
                    u >= h.y + h.height ? v = -90 : u <= h.y - h.height ? v = 90 : f <= h.x - h.width ? g = -90 : f >= h.x + h.width ? g = 90 : d <= h.z - h.length && (g = 180);
                    var y = c.sprayScale / 2;
                    if (v) {
                        if (h.width < y || h.length < y)
                            return;
                        d - y < h.z - h.length ? d = h.z - h.length + y : d + y > h.z + h.length && (d = h.z + h.length - y),
                        f - y < h.x - h.width ? f = h.x - h.width + y : f + y > h.x + h.width && (f = h.x + h.width - y)
                    } else {
                        if (h.height < y)
                            return;
                        if (90 == g || -90 == g) {
                            if (h.length < y)
                                return;
                            d - y < h.z - h.length ? d = h.z - h.length + y : d + y > h.z + h.length && (d = h.z + h.length - y)
                        } else {
                            if (h.width < y)
                                return;
                            f - y < h.x - h.width ? f = h.x - h.width + y : f + y > h.x + h.width && (f = h.x + h.width - y)
                        }
                        u + y > h.y + h.height && (u = h.y + h.height - y)
                    }
                    e.lastSpray = t.now,
                    t.playSound && t.playSound("spray", .4, e, !0),
                    l.broadcast("game" + t.sid, "sp", e.sid, e.sprayIndex, f.round(2), u.round(2), d.round(2), g, v)
                }
            }
        }
        ,
        this.interact = function(e) {
            if (t.now - e.lastPickup >= c.pickupTimer && "inf" != e.team) {
                e.lastPickup = t.now;
                for (var n = 0; n < t.map.manager.pickups.length; ++n)
                    if (null != (p = t.map.manager.pickups[n]).pickup && e.collides(p) && -1 == e.loadout.indexOf(p.pickup)) {
                        if (t.weapons[p.pickup].type && 12 != e.loadout[0])
                            t.weapons[e.loadout[0]].type && 1 == e.loadout.length ? (h = e.loadout[0],
                            e.loadout[0] = p.pickup,
                            e.weaponIndex = 0) : (h = e.loadout[1],
                            1 == e.loadout.length ? e.loadout.push(p.pickup) : e.loadout[1] = p.pickup,
                            e.weaponIndex = 1),
                            this.removePicked(e, h),
                            p.pickupRep && null == h && this.addPicked(e, p.pickup);
                        else {
                            if (h = 12 == e.loadout[0] ? void 0 : e.loadout[0],
                            t.weapons[e.loadout[0]].type && t.weapons[p.pickup].type)
                                12 != e.loadout[0] && this.removePicked(e, e.loadout[0]),
                                e.loadout = [p.pickup],
                                p.pickupRep && null == h && this.addPicked(e, p.pickup);
                            else if (t.weapons[e.loadout[0]].type && !t.weapons[p.pickup].type)
                                e.loadout = [p.pickup, e.loadout[0]],
                                12 == e.loadout[1] && (e.loadout.length = 1),
                                h = void 0,
                                p.pickupRep && null == h && this.addPicked(e, p.pickup);
                            else {
                                var i = !1;
                                12 != e.loadout[0] && (i = this.removePicked(e, e.loadout[0])),
                                e.loadout[0] = p.pickup,
                                p.pickupRep && (null == h || i) && this.addPicked(e, p.pickup)
                            }
                            e.weaponIndex = 0
                        }
                        p.pickupRep && (p.pickup = h),
                        l.broadcast("game" + t.sid, "inat", e.sid, e.loadout, e.weaponIndex, p.uid, p.pickupRep ? h : p.pickup),
                        e.updateLoadout(t, e.weaponIndex, ...e.loadout);
                        break
                    }
            }
        }
        ,
        this.findEmptyPickup = function() {
            for (var e, n = 0; n < t.map.manager.pickups.length; ++n)
                if ((e = t.map.manager.pickups[n]).pickupRep && null == e.pickup)
                    return e.uid;
            return null
        }
        ,
        this.addPicked = function(t, e) {
            -1 == t.lastPicked.indexOf(e) && t.lastPicked.push(e)
        }
        ,
        this.removePicked = function(t, e) {
            var n = t.lastPicked.indexOf(e);
            return -1 < n && t.lastPicked.splice(n, 1),
            -1 < n
        }
        ,
        this.dropWeapon = function(e, n) {
            if (t.map.manager.pickups.length) {
                var i, r = e.weaponIndex, s = e.loadout[r], a = [e.x + o.randInt(-5, 5), e.y + 1, e.z + o.randInt(-5, 5)];
                if (n) {
                    for (var c = 0; c < e.loadout.length; c++)
                        s = e.loadout[c],
                        (i = this.findEmptyPickup()) && -1 < e.lastPicked.indexOf(s) && 12 != s && (a = [e.x + o.randInt(-5, 5), e.y + 1, e.z + o.randInt(-5, 5)],
                        t.updatePickup(i, s, null, a),
                        l.broadcast("game" + t.sid, "inat", null, null, null, i, s, !0, a));
                    e.lastPicked.length = 0
                } else if (12 != s) {
                    var p = (i = this.findEmptyPickup()) && -1 < e.lastPicked.indexOf(s);
                    p && (this.removePicked(e, s),
                    t.updatePickup(i, s, null, a)),
                    e.loadout = [1 == e.loadout.length ? 12 : e.loadout[r ? 0 : 1]],
                    e.weaponIndex = 0,
                    l.broadcast("game" + t.sid, "inat", e.sid, e.loadout, e.weaponIndex, i, s, p, a),
                    e.updateLoadout(t, e.weaponIndex, ...e.loadout)
                }
            }
        }
        ,
        this.updateInteract = function(e, n) {
            if (t.map.manager.pickups.length && e.isYou) {
                var i = "Press [" + o.getKeyName(parseInt(getSavedVal("cont_interactKey") || 71)) + "] to pickup"
                  , r = n ? "block" : "none";
                interactMsg.innerHTML != i && (interactMsg.innerHTML = i),
                interactMsg.style.display != r && (interactMsg.style.display = r)
            }
        }
        ;
        var g = [];
        this.syncLeaders = function() {
            u = t.mode.killSort ? this.list.slice().sort(o.orderByKills) : this.list.slice().sort(o.orderByScore),
            g.length = 0;
            for (var e = 0, n = 0, i = 0; i < u.length; ++i)
                u[i].spectating ? n++ : 10 > e && (e++,
                g.push(u[i].sid, u[i].account ? u[i].account.name : u[i].name, u[i].team, t.mode.killSort ? u[i].kills : u[i].score, u[i].account ? u[i].account.clan : 0, u[i].account ? u[i].account.featured : 0));
            l.broadcast("game" + t.sid, "7", g, n)
        }
        ,
        this.score = function(e, n, i) {
            l && (e.score += n,
            l.send(e.id, "5", n),
            this.syncLeaders(),
            t.mode.teams && e.team && t.teams && !t.mode.noScoreC && (!i || !t.mode.objective) && (t.teams[e.team] ? t.teams[e.team] += n : t.teams[e.team] = n,
            l.broadcast("game" + t.sid, "ts", e.team, t.teams[e.team])))
        }
        ,
        this.tickPlayer = function(t, e) {
            t.playTime += e,
            0 < t.hitTimer && (t.hitTimer -= e),
            t.ticker -= e,
            0 >= t.ticker && (t.ticker = 500,
            0 >= t.hitTimer && !t.challMode && this.changeHealth(t, null, -t.maxHealth * (t.regen || 0)))
        }
        ,
        this.changeHealth = function(e, n, i, r) {
            if ((!t.waitTimers || t.waitTimers[0].canDMG) && !(0 > i && e.health == e.maxHealth) && (n && n.isHacker && (i *= .1),
            n && n.lastHack && 300 >= t.now - n.lastHack && (3 <= n.hackSus ? i *= .4 : n.hackSus++,
            n.lastHack = 0),
            !(!r && e.team && n && e.team == n.team && 0 < i))) {
                if (n && n != e && l.send(n.id, "4"),
                e.dummy)
                    return !0;
                0 < i && (e.hitTimer = e.regenDelay || 0),
                e.health -= i,
                e.health = Math.max(Math.min(e.maxHealth, e.health), 0),
                n ? (l.send(e.id, "h", Math.ceil(e.health), null, Math.round(n.x), Math.round(n.z)),
                n != e && (e.dmgReceived[n.id] ? (e.dmgReceived[n.id].val += i,
                e.dmgReceived[n.id].time = t.now) : e.dmgReceived[n.id] = {
                    time: t.now,
                    val: i
                })) : l.send(e.id, "h", Math.ceil(e.health));
                for (var s = 0; s < this.list.length; ++s)
                    this.list[s] != e && l.send(this.list[s].id, "h", Math.ceil(e.health), e.sid);
                return 0 >= e.health
            }
        }
        ,
        this.swapWeapon = function(n, i, r, s) {
            if (!(1 >= n.ammos.length && i || s > n.ammos.length)) {
                var a = n.weaponIndex;
                if (i && (1 != i && -1 != i && (i = 0),
                n.reloadTimer = 0,
                n.weaponIndex += i,
                n.didShoot = !1,
                0 > n.weaponIndex && (n.weaponIndex = n.ammos.length - 1),
                n.weaponIndex > n.ammos.length - 1 && (n.weaponIndex = 0)),
                null != s && (n.weaponIndex = s),
                n.weapon = t.weapons[n.loadout[n.weaponIndex]],
                n.weapon || (n.weapon = t.weapons[n.loadout[0]],
                n.weapon && (n.weaponIndex = 0)),
                e && (a != n.weaponIndex || r)) {
                    this.cancelInspect(n);
                    for (var o = 0; o < n.weaponMeshes.length; ++o)
                        n.weaponMeshes[o].visible = !1;
                    n.weaponMeshes[n.weaponIndex] && (n.weaponMeshes[n.weaponIndex].visible = !t.hideWeapon || !n.isYou)
                }
                if (null == s && n.weapon && (!e || n.isYou) && (n.swapTime = n.weapon.swapTime,
                n.isYou && (a != n.weaponIndex || r))) {
                    var c, l = "";
                    for (o = n.ammos.length - 1; 0 <= o; --o)
                        c = o == n.weaponIndex,
                        t.weapons[n.loadout[o]].icon && (l += "<div class='weaponItem'><img style='opacity:" + (c ? 1 : .7) + "' class='weaponIcon' src='./textures/weapons/" + t.weapons[n.loadout[o]].icon + ".png' /></div>");
                    n.swapTween && n.swapTween.stop(),
                    n.swapTweenA = .5,
                    n.swapTween = new TWEEN.Tween(n).to({
                        swapTweenA: 1
                    }, 1200).easing(TWEEN.Easing.Elastic.Out).start(),
                    weaponDisplay.innerHTML = l,
                    this.updatePlayerAmmo(n)
                }
            }
        }
        ,
        this.checkStreak = function(e) {
            for (var n = 0; n < t.streaks.length; ++n)
                e.killStreak == t.streaks[n].kills && this.addStreak(e, n)
        }
        ,
        this.useStreak = function(e, n) {
            e.streaks[n] && e.streaks[n].activate(t, e) && (e.streaks[n] = null,
            l.send(e.id, "st", n, 1))
        }
        ,
        this.addStreak = function(e, n) {
            e.streaks[n] || (e.streaks[n] = t.streaks[n],
            l.send(e.id, "st", n))
        }
        ,
        this.kill = function(e, n, i, r, s) {
            if (e.dummy || e.active) {
                var a = !1;
                if (e.dummy || (e.active = !1,
                e.isYou && this.toggleAim(e, 0),
                e.objInstances && this.disposeMesh(e)),
                l) {
                    var o;
                    if (e.deaths++,
                    t.mode.noStreaks || e.deathStreak++,
                    e.lives && !t.waitTimers && (e.lives--,
                    l.send(e.id, "lv", e.lives)),
                    t.kills++,
                    n && n != e) {
                        if (e.dummy || n.kills++,
                        !t.mode.noStreaks) {
                            n.streak++,
                            n.killStreak++,
                            n.deathStreak = 0,
                            this.checkStreak(n);
                            var p = 0;
                            5 == n.killStreak ? p = 5 : 10 == n.killStreak ? p = 10 : 15 == n.killStreak ? p = 15 : 20 == n.killStreak ? p = 20 : 25 == n.killStreak ? p = 25 : 30 == n.killStreak && (p = 30),
                            p && l.broadcast("game" + t.sid, "kst", n.sid, p),
                            t.now - n.lastKill >= c.feedTimer && (n.streak = 0)
                        }
                        n.lastKill = t.now,
                        s || !t.config.killRewards || t.mode.noKillRewards || ((o = f.reward(this, n, e, i, t)) && l.send(n.id, "6", o, i.headShot ? 1 : 0, n.kills),
                        this.score(n, f.getScore(o), !0),
                        a = !0),
                        t.players.dropWeapon(e, !0)
                    }
                    if (t.mode.onKill && t.mode.onKill(t, e, n),
                    !e.dummy)
                        for (var h = 0; h < this.list.length; ++h)
                            !t.mode.noAssists && e.dmgReceived[this.list[h].id] && n != this.list[h] && e.dmgReceived[this.list[h].id].val >= c.assistMin && t.now - e.dmgReceived[this.list[h].id].time <= c.assistTime && (this.list[h].assists++,
                            this.score(this.list[h], c.assistScore, !0),
                            l.send(this.list[h].id, "10"),
                            a = !0),
                            this.list[h] == e ? l.send(e.id, "3", e.sid, e.deaths, n ? n.sid : 0, t.mode.killRes ? t.mode.killRes(n) : [n ? n.loadout[n.weaponIndex] : -1, o ? f.getScore(o) : 0], r) : l.send(this.list[h].id, "3", e.sid, e.deaths, n ? n.sid : 0, null, r)
                }
                l && !a && this.syncLeaders()
            }
        }
        ,
        this.indexBySid = function(t) {
            for (var e = 0; e < this.list.length; ++e)
                if (this.list[e].sid == t)
                    return e;
            return -1
        }
        ,
        this.findBySid = function(t) {
            for (var e = 0; e < this.list.length; ++e)
                if (this.list[e].sid === t)
                    return this.list[e];
            return null
        }
    }
}
, function(t, e, n) {
    n.r(e);
    var i = {};
    n.r(i),
    n.d(i, "FunctionToString", function() {
        return k
    }),
    n.d(i, "InboundFilters", function() {
        return z
    });
    var r = {};
    n.r(r),
    n.d(r, "GlobalHandlers", function() {
        return Ot
    }),
    n.d(r, "TryCatch", function() {
        return At
    }),
    n.d(r, "Breadcrumbs", function() {
        return Rt
    }),
    n.d(r, "LinkedErrors", function() {
        return Bt
    }),
    n.d(r, "UserAgent", function() {
        return jt
    });
    var s = {};
    n.r(s),
    n.d(s, "BaseTransport", function() {
        return ht
    }),
    n.d(s, "FetchTransport", function() {
        return ft
    }),
    n.d(s, "XHRTransport", function() {
        return dt
    });
    var a, o, c, l = n(0);
    (o = a || (a = {})).Fatal = "fatal",
    o.Error = "error",
    o.Warning = "warning",
    o.Log = "log",
    o.Info = "info",
    o.Debug = "debug",
    o.Critical = "critical",
    function(t) {
        t.fromString = function(e) {
            switch (e) {
            case "debug":
                return t.Debug;
            case "info":
                return t.Info;
            case "warn":
            case "warning":
                return t.Warning;
            case "error":
                return t.Error;
            case "fatal":
                return t.Fatal;
            case "critical":
                return t.Critical;
            case "log":
            default:
                return t.Log
            }
        }
    }(a || (a = {})),
    function(t) {
        t.Unknown = "unknown",
        t.Skipped = "skipped",
        t.Success = "success",
        t.RateLimit = "rate_limit",
        t.Invalid = "invalid",
        t.Failed = "failed"
    }(c || (c = {})),
    function(t) {
        t.fromHttpCode = function(e) {
            return 200 <= e && 300 > e ? t.Success : 429 === e ? t.RateLimit : 400 <= e && 500 > e ? t.Invalid : 500 <= e ? t.Failed : t.Unknown
        }
    }(c || (c = {}));
    var p = n(9);
    function h(t) {
        for (var e = [], n = 1; n < arguments.length; n++)
            e[n - 1] = arguments[n];
        var i = Object(p.b)();
        if (i && i[t])
            return i[t].apply(i, l.d(e));
        throw new Error("No hub defined or " + t + " was not found on the hub, please open a bug report.")
    }
    function u(t) {
        var e;
        try {
            throw new Error("Sentry syntheticException")
        } catch (t) {
            e = t
        }
        return h("captureException", t, {
            originalException: t,
            syntheticException: e
        })
    }
    function f(t, e) {
        var n;
        try {
            throw new Error(t)
        } catch (t) {
            n = t
        }
        return h("captureMessage", t, e, {
            originalException: t,
            syntheticException: n
        })
    }
    function d(t) {
        return h("captureEvent", t)
    }
    function m(t) {
        h("configureScope", t)
    }
    function g(t) {
        h("addBreadcrumb", t)
    }
    function v(t, e) {
        h("setContext", t, e)
    }
    function y(t) {
        h("setExtras", t)
    }
    function b(t) {
        h("setTags", t)
    }
    function w(t, e) {
        h("setExtra", t, e)
    }
    function x(t, e) {
        h("setTag", t, e)
    }
    function M(t) {
        h("setUser", t)
    }
    function _(t) {
        h("withScope", t)
    }
    var S, T = n(10), E = n(13), k = function() {
        function t() {
            this.name = t.id
        }
        return t.prototype.setupOnce = function() {
            S = Function.prototype.toString,
            Function.prototype.toString = function() {
                for (var t = [], e = 0; e < arguments.length; e++)
                    t[e] = arguments[e];
                var n = this.__sentry__ ? this.__sentry_original__ : this;
                return S.apply(n, t)
            }
        }
        ,
        t.id = "FunctionToString",
        t
    }(), A = n(24), L = n(2), P = n(5);
    function C(t, e) {
        return void 0 === e && (e = 0),
        "string" != typeof t || 0 === e ? t : t.length <= e ? t : t.substr(0, e) + "..."
    }
    function R(t, e) {
        if (!Array.isArray(t))
            return "";
        for (var n, i = [], r = 0; r < t.length; r++) {
            n = t[r];
            try {
                i.push(n + "")
            } catch (t) {
                i.push("[value cannot be serialized]")
            }
        }
        return i.join(e)
    }
    function I(t, e) {
        if (void 0 === e && (e = 40),
        !t.length)
            return "[object has no keys]";
        if (t[0].length >= e)
            return C(t[0], e);
        for (var n, i = t.length; 0 < i; i--)
            if (!((n = t.slice(0, i).join(", ")).length > e))
                return i === t.length ? n : C(n, e);
        return ""
    }
    function O(t, e) {
        return Object(P.g)(e) ? e.test(t) : !("string" != typeof e) && t.includes(e)
    }
    var D = [/^Script error\.?$/, /^Javascript error: Script error\.? on line 0$/]
      , z = function() {
        function t(e) {
            void 0 === e && (e = {}),
            this._options = e,
            this.name = t.id
        }
        return t.prototype.setupOnce = function() {
            Object(T.b)(function(e) {
                var n = Object(p.b)();
                if (!n)
                    return e;
                var i = n.getIntegration(t);
                if (i) {
                    var r = n.getClient()
                      , s = r ? r.getOptions() : {}
                      , a = i._mergeOptions(s);
                    if (i._shouldDropEvent(e, a))
                        return null
                }
                return e
            })
        }
        ,
        t.prototype._shouldDropEvent = function(t, e) {
            return this._isSentryError(t, e) ? (A.a.warn("Event dropped due to being internal Sentry Error.\nEvent: " + Object(L.d)(t)),
            !0) : this._isIgnoredError(t, e) ? (A.a.warn("Event dropped due to being matched by `ignoreErrors` option.\nEvent: " + Object(L.d)(t)),
            !0) : this._isBlacklistedUrl(t, e) ? (A.a.warn("Event dropped due to being matched by `blacklistUrls` option.\nEvent: " + Object(L.d)(t) + ".\nUrl: " + this._getEventFilterUrl(t)),
            !0) : !this._isWhitelistedUrl(t, e) && (A.a.warn("Event dropped due to not being matched by `whitelistUrls` option.\nEvent: " + Object(L.d)(t) + ".\nUrl: " + this._getEventFilterUrl(t)),
            !0)
        }
        ,
        t.prototype._isSentryError = function(t, e) {
            if (void 0 === e && (e = {}),
            !e.ignoreInternal)
                return !1;
            try {
                return "SentryError" === t.exception.values[0].type
            } catch (t) {
                return !1
            }
        }
        ,
        t.prototype._isIgnoredError = function(t, e) {
            return void 0 === e && (e = {}),
            !(!e.ignoreErrors || !e.ignoreErrors.length) && this._getPossibleEventMessages(t).some(function(t) {
                return e.ignoreErrors.some(function(e) {
                    return O(t, e)
                })
            })
        }
        ,
        t.prototype._isBlacklistedUrl = function(t, e) {
            if (void 0 === e && (e = {}),
            !e.blacklistUrls || !e.blacklistUrls.length)
                return !1;
            var n = this._getEventFilterUrl(t);
            return !!n && e.blacklistUrls.some(function(t) {
                return O(n, t)
            })
        }
        ,
        t.prototype._isWhitelistedUrl = function(t, e) {
            if (void 0 === e && (e = {}),
            !e.whitelistUrls || !e.whitelistUrls.length)
                return !0;
            var n = this._getEventFilterUrl(t);
            return !n || e.whitelistUrls.some(function(t) {
                return O(n, t)
            })
        }
        ,
        t.prototype._mergeOptions = function(t) {
            return void 0 === t && (t = {}),
            {
                blacklistUrls: l.d(this._options.blacklistUrls || [], t.blacklistUrls || []),
                ignoreErrors: l.d(this._options.ignoreErrors || [], t.ignoreErrors || [], D),
                ignoreInternal: void 0 === this._options.ignoreInternal || this._options.ignoreInternal,
                whitelistUrls: l.d(this._options.whitelistUrls || [], t.whitelistUrls || [])
            }
        }
        ,
        t.prototype._getPossibleEventMessages = function(t) {
            if (t.message)
                return [t.message];
            if (t.exception)
                try {
                    var e = t.exception.values[0]
                      , n = e.type
                      , i = e.value;
                    return ["" + i, n + ": " + i]
                } catch (e) {
                    return A.a.error("Cannot extract message for event " + Object(L.d)(t)),
                    []
                }
            return []
        }
        ,
        t.prototype._getEventFilterUrl = function(t) {
            try {
                if (t.stacktrace) {
                    var e = t.stacktrace.frames;
                    return e[e.length - 1].filename
                }
                if (t.exception) {
                    var n = t.exception.values[0].stacktrace.frames;
                    return n[n.length - 1].filename
                }
                return null
            } catch (e) {
                return A.a.error("Cannot extract url for event " + Object(L.d)(t)),
                null
            }
        }
        ,
        t.id = "InboundFilters",
        t
    }()
      , B = n(6)
      , N = function(t) {
        function e(e) {
            var n = this.constructor
              , i = t.call(this, e) || this;
            return i.message = e,
            i.name = n.prototype.constructor.name,
            Object.setPrototypeOf(i, n.prototype),
            i
        }
        return l.b(e, t),
        e
    }(Error)
      , j = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+))?@)([\w\.-]+)(?::(\d+))?\/(.+)/
      , U = function() {
        function t(t) {
            "string" == typeof t ? this._fromString(t) : this._fromComponents(t),
            this._validate()
        }
        return t.prototype.toString = function(t) {
            void 0 === t && (t = !1);
            var e = this
              , n = e.host
              , i = e.path
              , r = e.pass
              , s = e.port
              , a = e.projectId;
            return e.protocol + "://" + e.user + (t && r ? ":" + r : "") + "@" + n + (s ? ":" + s : "") + "/" + (i ? i + "/" : i) + a
        }
        ,
        t.prototype._fromString = function(t) {
            var e = j.exec(t);
            if (!e)
                throw new N("Invalid Dsn");
            var n = l.c(e.slice(1), 6)
              , i = n[0]
              , r = n[1]
              , s = n[2]
              , a = void 0 === s ? "" : s
              , o = n[3]
              , c = n[4]
              , p = void 0 === c ? "" : c
              , h = ""
              , u = n[5]
              , f = u.split("/");
            1 < f.length && (h = f.slice(0, -1).join("/"),
            u = f.pop()),
            Object.assign(this, {
                host: o,
                pass: a,
                path: h,
                projectId: u,
                port: p,
                protocol: i,
                user: r
            })
        }
        ,
        t.prototype._fromComponents = function(t) {
            this.protocol = t.protocol,
            this.user = t.user,
            this.pass = t.pass || "",
            this.host = t.host,
            this.port = t.port || "",
            this.path = t.path || "",
            this.projectId = t.projectId
        }
        ,
        t.prototype._validate = function() {
            var t = this;
            if (["protocol", "user", "host", "projectId"].forEach(function(e) {
                if (!t[e])
                    throw new N("Invalid Dsn")
            }),
            "http" !== this.protocol && "https" !== this.protocol)
                throw new N("Invalid Dsn");
            if (this.port && Number.isNaN(parseInt(this.port, 10)))
                throw new N("Invalid Dsn")
        }
        ,
        t
    }()
      , F = function() {
        function t(t) {
            this.dsn = t,
            this._dsnObject = new U(t)
        }
        return t.prototype.getDsn = function() {
            return this._dsnObject
        }
        ,
        t.prototype.getStoreEndpoint = function() {
            return "" + this._getBaseUrl() + this.getStoreEndpointPath()
        }
        ,
        t.prototype.getStoreEndpointWithUrlEncodedAuth = function() {
            var t = {
                sentry_key: this._dsnObject.user,
                sentry_version: "7"
            };
            return this.getStoreEndpoint() + "?" + Object(B.d)(t)
        }
        ,
        t.prototype._getBaseUrl = function() {
            var t = this._dsnObject
              , e = t.protocol ? t.protocol + ":" : ""
              , n = t.port ? ":" + t.port : "";
            return e + "//" + t.host + n
        }
        ,
        t.prototype.getStoreEndpointPath = function() {
            var t = this._dsnObject;
            return (t.path ? "/" + t.path : "") + "/api/" + t.projectId + "/store/"
        }
        ,
        t.prototype.getRequestHeaders = function(t, e) {
            var n = this._dsnObject
              , i = ["Sentry sentry_version=7"];
            return i.push("sentry_timestamp=" + (new Date).getTime()),
            i.push("sentry_client=" + t + "/" + e),
            i.push("sentry_key=" + n.user),
            n.pass && i.push("sentry_secret=" + n.pass),
            {
                "Content-Type": "application/json",
                "X-Sentry-Auth": i.join(", ")
            }
        }
        ,
        t.prototype.getReportDialogEndpoint = function(t) {
            void 0 === t && (t = {});
            var e = this._dsnObject
              , n = this._getBaseUrl() + (e.path ? "/" + e.path : "") + "/api/embed/error-page/"
              , i = [];
            for (var r in i.push("dsn=" + e.toString()),
            t)
                if ("user" == r) {
                    if (!t.user)
                        continue;
                    t.user.name && i.push("name=" + encodeURIComponent(t.user.name)),
                    t.user.email && i.push("email=" + encodeURIComponent(t.user.email))
                } else
                    i.push(encodeURIComponent(r) + "=" + encodeURIComponent(t[r]));
            return i.length ? n + "?" + i.join("&") : n
        }
        ,
        t
    }()
      , H = n(72)
      , G = [];
    function V(t) {
        var e = {};
        return function(t) {
            var e = t.defaultIntegrations && l.d(t.defaultIntegrations) || []
              , n = t.integrations
              , i = [];
            if (Array.isArray(n)) {
                var r = n.map(function(t) {
                    return t.name
                })
                  , s = [];
                e.forEach(function(t) {
                    -1 === r.indexOf(t.name) && -1 === s.indexOf(t.name) && (i.push(t),
                    s.push(t.name))
                }),
                n.forEach(function(t) {
                    -1 === s.indexOf(t.name) && (i.push(t),
                    s.push(t.name))
                })
            } else {
                if ("function" != typeof n)
                    return l.d(e);
                i = n(e),
                i = Array.isArray(i) ? i : [i]
            }
            return i
        }(t).forEach(function(t) {
            e[t.name] = t,
            function(t) {
                -1 !== G.indexOf(t.name) || (t.setupOnce(T.b, p.b),
                G.push(t.name),
                A.a.log("Integration installed: " + t.name))
            }(t)
        }),
        e
    }
    var W = function() {
        function t(t, e) {
            this._processing = !1,
            this._backend = new t(e),
            this._options = e,
            e.dsn && (this._dsn = new U(e.dsn)),
            this._integrations = V(this._options)
        }
        return t.prototype.captureException = function(t, e, n) {
            var i = this
              , r = e && e.event_id;
            return this._processing = !0,
            this._getBackend().eventFromException(t, e).then(function(t) {
                return i._processEvent(t, e, n)
            }).then(function(t) {
                r = t && t.event_id,
                i._processing = !1
            }).catch(function(t) {
                A.a.error(t),
                i._processing = !1
            }),
            r
        }
        ,
        t.prototype.captureMessage = function(t, e, n, i) {
            var r = this
              , s = n && n.event_id;
            return this._processing = !0,
            (Object(P.f)(t) ? this._getBackend().eventFromMessage("" + t, e, n) : this._getBackend().eventFromException(t, n)).then(function(t) {
                return r._processEvent(t, n, i)
            }).then(function(t) {
                s = t && t.event_id,
                r._processing = !1
            }).catch(function(t) {
                A.a.error(t),
                r._processing = !1
            }),
            s
        }
        ,
        t.prototype.captureEvent = function(t, e, n) {
            var i = this
              , r = e && e.event_id;
            return this._processing = !0,
            this._processEvent(t, e, n).then(function(t) {
                r = t && t.event_id,
                i._processing = !1
            }).catch(function(t) {
                A.a.error(t),
                i._processing = !1
            }),
            r
        }
        ,
        t.prototype.getDsn = function() {
            return this._dsn
        }
        ,
        t.prototype.getOptions = function() {
            return this._options
        }
        ,
        t.prototype.flush = function(t) {
            var e = this;
            return this._isClientProcessing(t).then(function(n) {
                return e._processingInterval && clearInterval(e._processingInterval),
                e._getBackend().getTransport().close(t).then(function(t) {
                    return n && t
                })
            })
        }
        ,
        t.prototype.close = function(t) {
            var e = this;
            return this.flush(t).then(function(t) {
                return e.getOptions().enabled = !1,
                t
            })
        }
        ,
        t.prototype.getIntegrations = function() {
            return this._integrations || {}
        }
        ,
        t.prototype.getIntegration = function(t) {
            try {
                return this._integrations[t.id] || null
            } catch (e) {
                return A.a.warn("Cannot retrieve integration " + t.id + " from the current Client"),
                null
            }
        }
        ,
        t.prototype._isClientProcessing = function(t) {
            var e = this;
            return new Promise(function(n) {
                var i = 0;
                e._processingInterval && clearInterval(e._processingInterval),
                e._processingInterval = setInterval(function() {
                    e._processing ? (i += 1,
                    t && i >= t && n(!1)) : n(!0)
                }, 1)
            }
            )
        }
        ,
        t.prototype._getBackend = function() {
            return this._backend
        }
        ,
        t.prototype._isEnabled = function() {
            return !1 !== this.getOptions().enabled && void 0 !== this._dsn
        }
        ,
        t.prototype._prepareEvent = function(t, e, n) {
            var i = this.getOptions()
              , r = i.environment
              , s = i.release
              , a = i.dist
              , o = i.maxValueLength
              , c = void 0 === o ? 250 : o
              , p = l.a({}, t);
            void 0 === p.environment && void 0 !== r && (p.environment = r),
            void 0 === p.release && void 0 !== s && (p.release = s),
            void 0 === p.dist && void 0 !== a && (p.dist = a),
            p.message && (p.message = C(p.message, c));
            var h = p.exception && p.exception.values && p.exception.values[0];
            h && h.value && (h.value = C(h.value, c));
            var u = p.request;
            u && u.url && (u.url = C(u.url, c)),
            void 0 === p.event_id && (p.event_id = Object(L.g)()),
            this._addIntegrations(p.sdk);
            var f = H.a.resolve(p);
            return e && (f = e.applyToEvent(p, n)),
            f
        }
        ,
        t.prototype._addIntegrations = function(t) {
            var e = Object.keys(this._integrations);
            t && 0 < e.length && (t.integrations = e)
        }
        ,
        t.prototype._processEvent = function(t, e, n) {
            var i = this
              , r = this.getOptions()
              , s = r.beforeSend
              , a = r.sampleRate;
            return this._isEnabled() ? "number" == typeof a && Math.random() > a ? H.a.reject("This event has been sampled, will not send event.") : new H.a(function(r, a) {
                i._prepareEvent(t, n, e).then(function(t) {
                    if (null !== t) {
                        var n = t;
                        try {
                            if (e && e.data && !0 === e.data.__sentry__ || !s)
                                return i._getBackend().sendEvent(n),
                                void r(n);
                            var o = s(t, e);
                            if (void 0 === o)
                                A.a.error("`beforeSend` method has to return `null` or a valid event.");
                            else if (Object(P.j)(o))
                                i._handleAsyncBeforeSend(o, r, a);
                            else {
                                if (null === (n = o))
                                    return A.a.log("`beforeSend` returned `null`, will not send event."),
                                    void r(null);
                                i._getBackend().sendEvent(n),
                                r(n)
                            }
                        } catch (t) {
                            i.captureException(t, {
                                data: {
                                    __sentry__: !0
                                },
                                originalException: t
                            }),
                            a("`beforeSend` throw an error, will not send event.")
                        }
                    } else
                        a("An event processor returned null, will not send event.")
                })
            }
            ) : H.a.reject("SDK not enabled, will not send event.")
        }
        ,
        t.prototype._handleAsyncBeforeSend = function(t, e, n) {
            var i = this;
            t.then(function(t) {
                return null === t ? void n("`beforeSend` returned `null`, will not send event.") : (i._getBackend().sendEvent(t),
                void e(t))
            }).catch(function(t) {
                n("beforeSend rejected with " + t)
            })
        }
        ,
        t
    }()
      , Y = function() {
        function t() {}
        return t.prototype.sendEvent = function() {
            return Promise.resolve({
                reason: "NoopTransport: Event has been skipped because no Dsn is configured.",
                status: c.Skipped
            })
        }
        ,
        t.prototype.close = function() {
            return Promise.resolve(!0)
        }
        ,
        t
    }()
      , q = function() {
        function t(t) {
            this._options = t,
            this._options.dsn || A.a.warn("No DSN provided, backend will not do anything."),
            this._transport = this._setupTransport()
        }
        return t.prototype._setupTransport = function() {
            return new Y
        }
        ,
        t.prototype.eventFromException = function() {
            throw new N("Backend has to implement `eventFromException` method")
        }
        ,
        t.prototype.eventFromMessage = function() {
            throw new N("Backend has to implement `eventFromMessage` method")
        }
        ,
        t.prototype.sendEvent = function(t) {
            this._transport.sendEvent(t).catch(function(t) {
                A.a.error("Error while sending event: " + t)
            })
        }
        ,
        t.prototype.getTransport = function() {
            return this._transport
        }
        ,
        t
    }();
    function X() {
        if (!("fetch"in Object(L.e)()))
            return !1;
        try {
            return new Headers,
            new Request(""),
            new Response,
            !0
        } catch (t) {
            return !1
        }
    }
    function Z() {
        if (!X())
            return !1;
        try {
            return new Request("_",{
                referrerPolicy: "origin"
            }),
            !0
        } catch (t) {
            return !1
        }
    }
    /**
 * TraceKit - Cross brower stack traces
 *
 * This was originally forked from github.com/occ/TraceKit, but has since been
 * largely modified and is now maintained as part of Sentry JS SDK.
 *
 * NOTE: Last merge with upstream repository
 * Jul 11,2018 - #f03357c
 *
 * https://github.com/csnover/TraceKit
 * @license MIT
 * @namespace TraceKit
 */
    var K = Object(L.e)()
      , J = {
        _report: !1,
        _collectWindowErrors: !1,
        _computeStackTrace: !1,
        _linesOfContext: !1
    }
      , $ = "?"
      , Q = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;
    function tt(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }
    function et() {
        return "undefined" == typeof document || null == document.location ? "" : document.location.href
    }
    J._report = function() {
        function t(t, e, n) {
            var i = null;
            if (!e || J._collectWindowErrors) {
                for (var r in o)
                    if (tt(o, r))
                        try {
                            o[r](t, e, n)
                        } catch (t) {
                            i = t
                        }
                if (i)
                    throw i
            }
        }
        function e(e, n, r, a, o) {
            var c = null;
            if (o = Object(P.d)(o) ? o.error : o,
            e = Object(P.d)(e) ? e.message : e,
            p)
                J._computeStackTrace._augmentStackTraceWithInitialElement(p, n, r, e),
                i();
            else if (o && Object(P.c)(o))
                (c = J._computeStackTrace(o)).mechanism = "onerror",
                t(c, !0, o);
            else {
                var h, u = {
                    url: n,
                    line: r,
                    column: a
                }, f = e;
                if ("[object String]" === {}.toString.call(e)) {
                    var d = e.match(Q);
                    d && (h = d[1],
                    f = d[2])
                }
                u.func = $,
                u.context = null,
                t(c = {
                    name: h,
                    message: f,
                    mode: "onerror",
                    mechanism: "onerror",
                    stack: [l.a({}, u, {
                        url: u.url || et()
                    })]
                }, !0, null)
            }
            return !!s && s.apply(this, arguments)
        }
        function n(e) {
            var n = e && (e.detail ? e.detail.reason : e.reason) || e
              , i = J._computeStackTrace(n);
            i.mechanism = "onunhandledrejection",
            i.message || (i.message = JSON.stringify(Object(B.b)(n))),
            t(i, !0, n)
        }
        function i() {
            var e = p
              , n = c;
            p = null,
            c = null,
            t(e, !1, n)
        }
        function r(t) {
            if (p) {
                if (c === t)
                    return;
                i()
            }
            var e = J._computeStackTrace(t);
            throw p = e,
            c = t,
            setTimeout(function() {
                c === t && i()
            }, e.incomplete ? 2e3 : 0),
            t
        }
        var s, a, o = [], c = null, p = null;
        return r._subscribe = function(t) {
            o.push(t)
        }
        ,
        r._installGlobalHandler = function() {
            !0 === a || (s = K.onerror,
            K.onerror = e,
            a = !0)
        }
        ,
        r._installGlobalUnhandledRejectionHandler = function() {
            K.onunhandledrejection = n
        }
        ,
        r
    }(),
    J._computeStackTrace = function() {
        function t(t) {
            if (!t || !t.stack)
                return null;
            for (var e, n, i, r = /^\s*at (?:(.*?) ?\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i, s = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js))(?::(\d+))?(?::(\d+))?\s*$/i, a = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i, o = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i, c = /\((\S*)(?::(\d+))(?::(\d+))\)/, l = t.stack.split("\n"), p = [], h = /^(.*) is undefined$/.exec(t.message), u = 0, f = l.length; u < f; ++u) {
                if (n = r.exec(l[u])) {
                    var d = n[2] && 0 === n[2].indexOf("native");
                    n[2] && 0 === n[2].indexOf("eval") && (e = c.exec(n[2])) && (n[2] = e[1],
                    n[3] = e[2],
                    n[4] = e[3]),
                    i = {
                        url: n[2],
                        func: n[1] || $,
                        args: d ? [n[2]] : [],
                        line: n[3] ? +n[3] : null,
                        column: n[4] ? +n[4] : null
                    }
                } else if (n = a.exec(l[u]))
                    i = {
                        url: n[2],
                        func: n[1] || $,
                        args: [],
                        line: +n[3],
                        column: n[4] ? +n[4] : null
                    };
                else {
                    if (!(n = s.exec(l[u])))
                        continue;
                    n[3] && -1 < n[3].indexOf(" > eval") && (e = o.exec(n[3])) ? (n[1] = n[1] || "eval",
                    n[3] = e[1],
                    n[4] = e[2],
                    n[5] = "") : 0 == u && !n[5] && void 0 !== t.columnNumber && (p[0].column = t.columnNumber + 1),
                    i = {
                        url: n[3],
                        func: n[1] || $,
                        args: n[2] ? n[2].split(",") : [],
                        line: n[4] ? +n[4] : null,
                        column: n[5] ? +n[5] : null
                    }
                }
                !i.func && i.line && (i.func = $),
                i.context = null,
                p.push(i)
            }
            return p.length ? (p[0] && p[0].line && !p[0].column && h && (p[0].column = null),
            {
                mode: "stack",
                name: t.name,
                message: t.message,
                stack: p
            }) : null
        }
        function e(t, e, n, i) {
            var r = {
                url: e,
                line: n
            };
            if (r.url && r.line) {
                if (t.incomplete = !1,
                r.func || (r.func = $),
                r.context || (r.context = null),
                / '([^']+)' /.exec(i) && (r.column = null),
                0 < t.stack.length && t.stack[0].url === r.url) {
                    if (t.stack[0].line === r.line)
                        return !1;
                    if (!t.stack[0].line && t.stack[0].func === r.func)
                        return t.stack[0].line = r.line,
                        t.stack[0].context = r.context,
                        !1
                }
                return t.stack.unshift(r),
                t.partial = !0,
                !0
            }
            return t.incomplete = !0,
            !1
        }
        function n(t, i) {
            for (var r, s, a = /function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i, o = [], c = {}, l = !1, p = n.caller; p && !l; p = p.caller)
                if (p !== st && p !== J._report) {
                    if (s = {
                        url: null,
                        func: $,
                        args: [],
                        line: null,
                        column: null
                    },
                    p.name ? s.func = p.name : (r = a.exec(p.toString())) && (s.func = r[1]),
                    void 0 === s.func)
                        try {
                            s.func = r.input.substring(0, r.input.indexOf("{"))
                        } catch (t) {}
                    c["" + p] ? l = !0 : c["" + p] = !0,
                    o.push(s)
                }
            i && o.splice(0, i);
            var h = {
                mode: "callers",
                name: t.name,
                message: t.message,
                stack: o
            };
            return e(h, t.sourceURL || t.fileName, t.line || t.lineNumber, t.message || t.description),
            h
        }
        function i(e, i) {
            var r = null;
            i = null == i ? 0 : +i;
            try {
                if (r = function(t) {
                    var e = t.stacktrace;
                    if (e) {
                        for (var n, i, r = / line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i, s = / line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^\)]+))\((.*)\))? in (.*):\s*$/i, a = e.split("\n"), o = [], c = 0; c < a.length; c += 2)
                            i = null,
                            (n = r.exec(a[c])) ? i = {
                                url: n[2],
                                line: +n[1],
                                column: null,
                                func: n[3],
                                args: []
                            } : (n = s.exec(a[c])) && (i = {
                                url: n[6],
                                line: +n[1],
                                column: +n[2],
                                func: n[3] || n[4],
                                args: n[5] ? n[5].split(",") : []
                            }),
                            i && (!i.func && i.line && (i.func = $),
                            i.line && (i.context = null),
                            !i.context && (i.context = [a[c + 1]]),
                            o.push(i));
                        return o.length ? {
                            mode: "stacktrace",
                            name: t.name,
                            message: t.message,
                            stack: o
                        } : null
                    }
                }(e))
                    return r
            } catch (t) {}
            try {
                if (r = t(e))
                    return r
            } catch (t) {}
            try {
                if (r = function(t) {
                    var e = t.message.split("\n");
                    if (4 > e.length)
                        return null;
                    var n, i = /^\s*Line (\d+) of linked script ((?:file|https?|blob)\S+)(?:: in function (\S+))?\s*$/i, r = /^\s*Line (\d+) of inline#(\d+) script in ((?:file|https?|blob)\S+)(?:: in function (\S+))?\s*$/i, s = /^\s*Line (\d+) of function script\s*$/i, a = [], o = K && K.document && K.document.getElementsByTagName("script"), c = [];
                    for (var l in o)
                        tt(o, l) && !o[l].src && c.push(o[l]);
                    for (var p, h = 2; h < e.length; h += 2)
                        p = null,
                        (n = i.exec(e[h])) ? p = {
                            url: n[2],
                            func: n[3],
                            args: [],
                            line: +n[1],
                            column: null
                        } : (n = r.exec(e[h])) ? p = {
                            url: n[3],
                            func: n[4],
                            args: [],
                            line: +n[1],
                            column: null
                        } : (n = s.exec(e[h])) && (p = {
                            url: et().replace(/#.*$/, ""),
                            func: "",
                            args: [],
                            line: n[1],
                            column: null
                        }),
                        p && (!p.func && (p.func = $),
                        p.context = [e[h + 1]],
                        a.push(p));
                    return a.length ? {
                        mode: "multiline",
                        name: t.name,
                        message: e[0],
                        stack: a
                    } : null
                }(e))
                    return r
            } catch (t) {}
            try {
                if (r = n(e, i + 1))
                    return r
            } catch (t) {}
            return {
                original: e,
                name: e.name,
                message: e.message,
                mode: "failed"
            }
        }
        return i._augmentStackTraceWithInitialElement = e,
        i._computeStackTraceFromStackProp = t,
        i
    }(),
    J._collectWindowErrors = !0,
    J._linesOfContext = 11;
    var nt = J._report._subscribe
      , it = J._report._installGlobalHandler
      , rt = J._report._installGlobalUnhandledRejectionHandler
      , st = J._computeStackTrace
      , at = 50;
    function ot(t) {
        var e = lt(t.stack)
          , n = {
            type: t.name,
            value: t.message
        };
        return e && e.length && (n.stacktrace = {
            frames: e
        }),
        void 0 === n.type && "" === n.value && (n.value = "Unrecoverable error caught"),
        n
    }
    function ct(t) {
        return {
            exception: {
                values: [ot(t)]
            }
        }
    }
    function lt(t) {
        if (!t || !t.length)
            return [];
        var e = t
          , n = e[0].func || ""
          , i = e[e.length - 1].func || "";
        return (n.includes("captureMessage") || n.includes("captureException")) && (e = e.slice(1)),
        i.includes("sentryWrapped") && (e = e.slice(0, -1)),
        e.map(function(t) {
            return {
                colno: t.column,
                filename: t.url || e[0].url,
                function: t.func || "?",
                in_app: !0,
                lineno: t.line
            }
        }).slice(0, at).reverse()
    }
    var pt = function() {
        function t(t) {
            this._limit = t,
            this._buffer = []
        }
        return t.prototype.isReady = function() {
            return void 0 === this._limit || this.length() < this._limit
        }
        ,
        t.prototype.add = function(t) {
            var e = this;
            return this.isReady() ? (-1 === this._buffer.indexOf(t) && this._buffer.push(t),
            t.then(function() {
                return e.remove(t)
            }).catch(function() {
                return e.remove(t).catch(function() {})
            }),
            t) : Promise.reject(new N("Not adding Promise due to buffer limit reached."))
        }
        ,
        t.prototype.remove = function(t) {
            return this._buffer.splice(this._buffer.indexOf(t), 1)[0]
        }
        ,
        t.prototype.length = function() {
            return this._buffer.length
        }
        ,
        t.prototype.drain = function(t) {
            var e = this;
            return new Promise(function(n) {
                var i = setTimeout(function() {
                    t && 0 < t && n(!1)
                }, t);
                Promise.all(e._buffer).then(function() {
                    clearTimeout(i),
                    n(!0)
                }).catch(function() {
                    n(!0)
                })
            }
            )
        }
        ,
        t
    }()
      , ht = function() {
        function t(t) {
            this.options = t,
            this._buffer = new pt(30),
            this.url = new F(this.options.dsn).getStoreEndpointWithUrlEncodedAuth()
        }
        return t.prototype.sendEvent = function() {
            throw new N("Transport Class has to implement `sendEvent` method")
        }
        ,
        t.prototype.close = function(t) {
            return this._buffer.drain(t)
        }
        ,
        t
    }()
      , ut = Object(L.e)()
      , ft = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return l.b(e, t),
        e.prototype.sendEvent = function(t) {
            var e = {
                body: JSON.stringify(t),
                method: "POST",
                referrerPolicy: Z() ? "origin" : ""
            };
            return this._buffer.add(ut.fetch(this.url, e).then(function(t) {
                return {
                    status: c.fromHttpCode(t.status)
                }
            }))
        }
        ,
        e
    }(ht)
      , dt = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return l.b(e, t),
        e.prototype.sendEvent = function(t) {
            var e = this;
            return this._buffer.add(new Promise(function(n, i) {
                var r = new XMLHttpRequest;
                r.onreadystatechange = function() {
                    4 !== r.readyState || (200 === r.status && n({
                        status: c.fromHttpCode(r.status)
                    }),
                    i(r))
                }
                ,
                r.open("POST", e.url),
                r.send(JSON.stringify(t))
            }
            ))
        }
        ,
        e
    }(ht)
      , mt = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return l.b(e, t),
        e.prototype._setupTransport = function() {
            if (!this._options.dsn)
                return t.prototype._setupTransport.call(this);
            var e = this._options.transportOptions ? this._options.transportOptions : {
                dsn: this._options.dsn
            };
            return this._options.transport ? new this._options.transport(e) : X() ? new ft(e) : new dt(e)
        }
        ,
        e.prototype.eventFromException = function(t, e) {
            var n, i = this;
            if (Object(P.d)(t) && t.error)
                return t = t.error,
                n = ct(st(t)),
                H.a.resolve(this._buildEvent(n, e));
            if (Object(P.a)(t) || Object(P.b)(t)) {
                var r = t
                  , s = r.name || (Object(P.a)(r) ? "DOMError" : "DOMException")
                  , o = r.message ? s + ": " + r.message : s;
                return this.eventFromMessage(o, a.Error, e).then(function(t) {
                    return Object(L.a)(t, o),
                    H.a.resolve(i._buildEvent(t, e))
                })
            }
            if (Object(P.c)(t))
                return n = ct(st(t)),
                H.a.resolve(this._buildEvent(n, e));
            if (Object(P.e)(t) && e && e.syntheticException)
                return n = function(t, e) {
                    var n = Object.keys(t).sort()
                      , i = {
                        extra: {
                            __serialized__: Object(B.c)(t)
                        },
                        message: "Non-Error exception captured with keys: " + I(n)
                    };
                    if (e) {
                        var r = lt(st(e).stack);
                        i.stacktrace = {
                            frames: r
                        }
                    }
                    return i
                }(t, e.syntheticException),
                Object(L.a)(n, "Custom Object", void 0, {
                    handled: !0,
                    synthetic: !0,
                    type: "generic"
                }),
                n.level = a.Error,
                H.a.resolve(this._buildEvent(n, e));
            var c = t;
            return this.eventFromMessage(c, void 0, e).then(function(t) {
                return Object(L.a)(t, "" + c, void 0, {
                    handled: !0,
                    synthetic: !0,
                    type: "generic"
                }),
                t.level = a.Error,
                H.a.resolve(i._buildEvent(t, e))
            })
        }
        ,
        e.prototype._buildEvent = function(t, e) {
            return l.a({}, t, {
                event_id: e && e.event_id
            })
        }
        ,
        e.prototype.eventFromMessage = function(t, e, n) {
            void 0 === e && (e = a.Info);
            var i = {
                event_id: n && n.event_id,
                level: e,
                message: t
            };
            if (this._options.attachStacktrace && n && n.syntheticException) {
                var r = lt(st(n.syntheticException).stack);
                i.stacktrace = {
                    frames: r
                }
            }
            return H.a.resolve(i)
        }
        ,
        e
    }(q)
      , gt = "sentry.javascript.browser"
      , vt = function(t) {
        function e(e) {
            return void 0 === e && (e = {}),
            t.call(this, mt, e) || this
        }
        return l.b(e, t),
        e.prototype._prepareEvent = function(e, n, i) {
            return e.platform = e.platform || "javascript",
            e.sdk = l.a({}, e.sdk, {
                name: gt,
                packages: l.d(e.sdk && e.sdk.packages || [], [{
                    name: "npm:@sentry/browser",
                    version: "5.4.3"
                }]),
                version: "5.4.3"
            }),
            t.prototype._prepareEvent.call(this, e, n, i)
        }
        ,
        e.prototype.showReportDialog = function(t) {
            void 0 === t && (t = {});
            var e = Object(L.e)().document;
            if (e) {
                if (!this._isEnabled())
                    return void A.a.error("Trying to call showReportDialog with Sentry Client is disabled");
                var n = t.dsn || this.getDsn();
                if (!t.eventId)
                    return void A.a.error("Missing `eventId` option in showReportDialog call");
                if (!n)
                    return void A.a.error("Missing `Dsn` option in showReportDialog call");
                var i = e.createElement("script");
                i.async = !0,
                i.src = new F(n).getReportDialogEndpoint(t),
                t.onLoad && (i.onload = t.onLoad),
                (e.head || e.body).appendChild(i)
            }
        }
        ,
        e
    }(W);
    var yt, bt, wt = 1e3, xt = 0;
    function Mt(t, e, n) {
        if (void 0 === e && (e = {}),
        "function" != typeof t)
            return t;
        try {
            if (t.__sentry__)
                return t;
            if (t.__sentry_wrapped__)
                return t.__sentry_wrapped__
        } catch (e) {
            return t
        }
        var i = function() {
            n && "function" == typeof n && n.apply(this, arguments);
            var i = Array.prototype.slice.call(arguments);
            try {
                var r = i.map(function(t) {
                    return Mt(t, e)
                });
                return t.handleEvent ? t.handleEvent.apply(this, r) : t.apply(this, r)
            } catch (t) {
                throw xt += 1,
                setTimeout(function() {
                    xt -= 1
                }),
                _(function(n) {
                    n.addEventProcessor(function(t) {
                        var n = l.a({}, t);
                        return e.mechanism && Object(L.a)(n, void 0, void 0, e.mechanism),
                        n.extra = l.a({}, n.extra, {
                            arguments: Object(B.b)(i, 3)
                        }),
                        n
                    }),
                    u(t)
                }),
                t
            }
        };
        try {
            for (var r in t)
                Object.prototype.hasOwnProperty.call(t, r) && (i[r] = t[r])
        } catch (t) {}
        t.prototype = t.prototype || {},
        i.prototype = t.prototype,
        Object.defineProperty(t, "__sentry_wrapped__", {
            enumerable: !1,
            value: i
        }),
        Object.defineProperties(i, {
            __sentry__: {
                enumerable: !1,
                value: !0
            },
            __sentry_original__: {
                enumerable: !1,
                value: t
            }
        });
        try {
            Object.getOwnPropertyDescriptor(i, "name").configurable && Object.defineProperty(i, "name", {
                get: function() {
                    return t.name
                }
            })
        } catch (t) {}
        return i
    }
    var _t = 0;
    function St(t, e) {
        return void 0 === e && (e = !1),
        function(n) {
            if (yt = void 0,
            n && bt !== n) {
                bt = n;
                var i = function() {
                    var e;
                    try {
                        e = n.target ? Et(n.target) : Et(n)
                    } catch (t) {
                        e = "<unknown>"
                    }
                    0 === e.length || Object(p.b)().addBreadcrumb({
                        category: "ui." + t,
                        message: e
                    }, {
                        event: n,
                        name: t
                    })
                };
                _t && clearTimeout(_t),
                e ? _t = setTimeout(i) : i()
            }
        }
    }
    function Tt() {
        return function(t) {
            var e;
            try {
                e = t.target
            } catch (t) {
                return
            }
            var n = e && e.tagName;
            n && ("INPUT" === n || "TEXTAREA" === n || e.isContentEditable) && (!yt && St("input")(t),
            clearTimeout(yt),
            yt = setTimeout(function() {
                yt = void 0
            }, wt))
        }
    }
    function Et(t) {
        for (var e, n = t, i = [], r = 0, s = 0, a = " > ".length; n && r++ < 5 && !("html" === (e = kt(n)) || 1 < r && s + i.length * a + e.length >= 80); )
            i.push(e),
            s += e.length,
            n = n.parentNode;
        return i.reverse().join(" > ")
    }
    function kt(t) {
        var e, n, i, r, s, a = [];
        if (!t || !t.tagName)
            return "";
        if (a.push(t.tagName.toLowerCase()),
        t.id && a.push("#" + t.id),
        (e = t.className) && Object(P.h)(e))
            for (n = e.split(/\s+/),
            s = 0; s < n.length; s++)
                a.push("." + n[s]);
        var o = ["type", "name", "title", "alt"];
        for (s = 0; s < o.length; s++)
            i = o[s],
            (r = t.getAttribute(i)) && a.push("[" + i + '="' + r + '"]');
        return a.join("")
    }
    var At = function() {
        function t() {
            this._ignoreOnError = 0,
            this.name = t.id
        }
        return t.prototype._wrapTimeFunction = function(t) {
            return function() {
                for (var e = [], n = 0; n < arguments.length; n++)
                    e[n] = arguments[n];
                var i = e[0];
                return e[0] = Mt(i, {
                    mechanism: {
                        data: {
                            function: Lt(t)
                        },
                        handled: !0,
                        type: "instrument"
                    }
                }),
                t.apply(this, e)
            }
        }
        ,
        t.prototype._wrapRAF = function(t) {
            return function(e) {
                return t(Mt(e, {
                    mechanism: {
                        data: {
                            function: "requestAnimationFrame",
                            handler: Lt(t)
                        },
                        handled: !0,
                        type: "instrument"
                    }
                }))
            }
        }
        ,
        t.prototype._wrapEventTarget = function(t) {
            var e = Object(L.e)()
              , n = e[t] && e[t].prototype;
            n && n.hasOwnProperty && n.hasOwnProperty("addEventListener") && (Object(B.a)(n, "addEventListener", function(e) {
                return function(n, i, r) {
                    try {
                        i.handleEvent = Mt(i.handleEvent.bind(i), {
                            mechanism: {
                                data: {
                                    function: "handleEvent",
                                    handler: Lt(i),
                                    target: t
                                },
                                handled: !0,
                                type: "instrument"
                            }
                        })
                    } catch (t) {}
                    return e.call(this, n, Mt(i, {
                        mechanism: {
                            data: {
                                function: "addEventListener",
                                handler: Lt(i),
                                target: t
                            },
                            handled: !0,
                            type: "instrument"
                        }
                    }), r)
                }
            }),
            Object(B.a)(n, "removeEventListener", function(t) {
                return function(e, n, i) {
                    var r = n;
                    try {
                        r = r && (r.__sentry_wrapped__ || r)
                    } catch (t) {}
                    return t.call(this, e, r, i)
                }
            }))
        }
        ,
        t.prototype.setupOnce = function() {
            this._ignoreOnError = this._ignoreOnError;
            var t = Object(L.e)();
            Object(B.a)(t, "setTimeout", this._wrapTimeFunction.bind(this)),
            Object(B.a)(t, "setInterval", this._wrapTimeFunction.bind(this)),
            Object(B.a)(t, "requestAnimationFrame", this._wrapRAF.bind(this)),
            ["EventTarget", "Window", "Node", "ApplicationCache", "AudioTrackList", "ChannelMergerNode", "CryptoOperation", "EventSource", "FileReader", "HTMLUnknownElement", "IDBDatabase", "IDBRequest", "IDBTransaction", "KeyOperation", "MediaController", "MessagePort", "ModalWindow", "Notification", "SVGElementInstance", "Screen", "TextTrack", "TextTrackCue", "TextTrackList", "WebSocket", "WebSocketWorker", "Worker", "XMLHttpRequest", "XMLHttpRequestEventTarget", "XMLHttpRequestUpload"].forEach(this._wrapEventTarget.bind(this))
        }
        ,
        t.id = "TryCatch",
        t
    }();
    function Lt(t) {
        try {
            return t && t.name || "<anonymous>"
        } catch (t) {
            return "<anonymous>"
        }
    }
    var Pt, Ct = Object(L.e)(), Rt = function() {
        function t(e) {
            this.name = t.id,
            this._options = l.a({
                console: !0,
                dom: !0,
                fetch: !0,
                history: !0,
                sentry: !0,
                xhr: !0
            }, e)
        }
        return t.prototype._instrumentConsole = function() {
            "console"in Ct && ["debug", "info", "warn", "error", "log", "assert"].forEach(function(e) {
                e in Ct.console && Object(B.a)(Ct.console, e, function(n) {
                    return function() {
                        for (var i = [], r = 0; r < arguments.length; r++)
                            i[r] = arguments[r];
                        var s = {
                            category: "console",
                            data: {
                                extra: {
                                    arguments: Object(B.b)(i, 3)
                                },
                                logger: "console"
                            },
                            level: a.fromString(e),
                            message: R(i, " ")
                        };
                        "assert" === e && !1 === i[0] && (s.message = "Assertion failed: " + (R(i.slice(1), " ") || "console.assert"),
                        s.data.extra.arguments = Object(B.b)(i.slice(1), 3)),
                        t.addBreadcrumb(s, {
                            input: i,
                            level: e
                        }),
                        n && Function.prototype.apply.call(n, Ct.console, i)
                    }
                })
            })
        }
        ,
        t.prototype._instrumentDOM = function() {
            "document"in Ct && (Ct.document.addEventListener("click", St("click"), !1),
            Ct.document.addEventListener("keypress", Tt(), !1),
            ["EventTarget", "Node"].forEach(function(t) {
                var e = Ct[t] && Ct[t].prototype;
                e && e.hasOwnProperty && e.hasOwnProperty("addEventListener") && (Object(B.a)(e, "addEventListener", function(t) {
                    return function(e, n, i) {
                        return n && n.handleEvent ? ("click" === e && Object(B.a)(n, "handleEvent", function(t) {
                            return function(e) {
                                return St("click")(e),
                                t.call(this, e)
                            }
                        }),
                        "keypress" === e && Object(B.a)(n, "handleEvent", Tt())) : ("click" === e && St("click", !0)(this),
                        "keypress" === e && Tt()(this)),
                        t.call(this, e, n, i)
                    }
                }),
                Object(B.a)(e, "removeEventListener", function(t) {
                    return function(e, n, i) {
                        var r = n;
                        try {
                            r = r && (r.__sentry_wrapped__ || r)
                        } catch (t) {}
                        return t.call(this, e, r, i)
                    }
                }))
            }))
        }
        ,
        t.prototype._instrumentFetch = function() {
            (function() {
                if (!X())
                    return !1;
                var t = function(t) {
                    return -1 !== t.toString().indexOf("native")
                }
                  , e = Object(L.e)()
                  , n = null
                  , i = e.document;
                if (i) {
                    var r = i.createElement("iframe");
                    r.hidden = !0;
                    try {
                        i.head.appendChild(r),
                        r.contentWindow && r.contentWindow.fetch && (n = t(r.contentWindow.fetch)),
                        i.head.removeChild(r)
                    } catch (t) {
                        A.a.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ", t)
                    }
                }
                return null === n && (n = t(e.fetch)),
                n
            }
            )() && Object(B.a)(Ct, "fetch", function(e) {
                return function() {
                    for (var n = [], i = 0; i < arguments.length; i++)
                        n[i] = arguments[i];
                    var r, s = n[0], o = "GET";
                    "string" == typeof s ? r = s : "Request"in Ct && s instanceof Request ? (r = s.url,
                    s.method && (o = s.method)) : r = s + "",
                    n[1] && n[1].method && (o = n[1].method);
                    var c = Object(p.b)().getClient()
                      , l = c && c.getDsn();
                    if (l) {
                        var h = new F(l).getStoreEndpoint();
                        if (h && r.includes(h))
                            return "POST" === o && n[1] && n[1].body && It(n[1].body),
                            e.apply(Ct, n)
                    }
                    var u = {
                        method: o,
                        url: r
                    };
                    return e.apply(Ct, n).then(function(e) {
                        return u.status_code = e.status,
                        t.addBreadcrumb({
                            category: "fetch",
                            data: u,
                            type: "http"
                        }, {
                            input: n,
                            response: e
                        }),
                        e
                    }).catch(function(e) {
                        throw t.addBreadcrumb({
                            category: "fetch",
                            data: u,
                            level: a.Error,
                            type: "http"
                        }, {
                            error: e,
                            input: n
                        }),
                        e
                    })
                }
            })
        }
        ,
        t.prototype._instrumentHistory = function() {
            function e(t) {
                return function() {
                    for (var e = [], n = 0; n < arguments.length; n++)
                        e[n] = arguments[n];
                    var r = 2 < e.length ? e[2] : void 0;
                    return r && i(Pt, r + ""),
                    t.apply(this, e)
                }
            }
            var n = this;
            if (function() {
                var t = Object(L.e)()
                  , e = t.chrome
                  , n = e && e.app && e.app.runtime
                  , i = "history"in t && !!t.history.pushState && !!t.history.replaceState;
                return !n && i
            }()) {
                var i = function(e, n) {
                    var i = Object(L.f)(Ct.location.href)
                      , r = Object(L.f)(n)
                      , s = Object(L.f)(e);
                    s.path || (s = i),
                    Pt = n,
                    i.protocol === r.protocol && i.host === r.host && (n = r.relative),
                    i.protocol === s.protocol && i.host === s.host && (e = s.relative),
                    t.addBreadcrumb({
                        category: "navigation",
                        data: {
                            from: e,
                            to: n
                        }
                    })
                }
                  , r = Ct.onpopstate;
                Ct.onpopstate = function() {
                    for (var t = [], e = 0; e < arguments.length; e++)
                        t[e] = arguments[e];
                    var s = Ct.location.href;
                    if (i(Pt, s),
                    r)
                        return r.apply(n, t)
                }
                ,
                Object(B.a)(Ct.history, "pushState", e),
                Object(B.a)(Ct.history, "replaceState", e)
            }
        }
        ,
        t.prototype._instrumentXHR = function() {
            if ("XMLHttpRequest"in Ct) {
                var e = XMLHttpRequest.prototype;
                Object(B.a)(e, "open", function(t) {
                    return function() {
                        for (var e = [], n = 0; n < arguments.length; n++)
                            e[n] = arguments[n];
                        var i = e[1];
                        this.__sentry_xhr__ = {
                            method: e[0],
                            url: e[1]
                        };
                        var r = Object(p.b)().getClient()
                          , s = r && r.getDsn();
                        if (s) {
                            var a = new F(s).getStoreEndpoint();
                            Object(P.h)(i) && a && i.includes(a) && (this.__sentry_own_request__ = !0)
                        }
                        return t.apply(this, e)
                    }
                }),
                Object(B.a)(e, "send", function(e) {
                    return function() {
                        function n() {
                            if (4 === s.readyState) {
                                if (s.__sentry_own_request__)
                                    return;
                                try {
                                    s.__sentry_xhr__ && (s.__sentry_xhr__.status_code = s.status)
                                } catch (t) {}
                                t.addBreadcrumb({
                                    category: "xhr",
                                    data: s.__sentry_xhr__,
                                    type: "http"
                                }, {
                                    xhr: s
                                })
                            }
                        }
                        for (var i = [], r = 0; r < arguments.length; r++)
                            i[r] = arguments[r];
                        var s = this;
                        return s.__sentry_own_request__ && It(i[0]),
                        ["onload", "onerror", "onprogress"].forEach(function(t) {
                            !function(t, e) {
                                t in e && "function" == typeof e[t] && Object(B.a)(e, t, function(e) {
                                    return Mt(e, {
                                        mechanism: {
                                            data: {
                                                function: t,
                                                handler: e && e.name || "<anonymous>"
                                            },
                                            handled: !0,
                                            type: "instrument"
                                        }
                                    })
                                })
                            }(t, s)
                        }),
                        "onreadystatechange"in s && "function" == typeof s.onreadystatechange ? Object(B.a)(s, "onreadystatechange", function(t) {
                            return Mt(t, {
                                mechanism: {
                                    data: {
                                        function: "onreadystatechange",
                                        handler: t && t.name || "<anonymous>"
                                    },
                                    handled: !0,
                                    type: "instrument"
                                }
                            }, n)
                        }) : s.onreadystatechange = n,
                        e.apply(this, i)
                    }
                })
            }
        }
        ,
        t.addBreadcrumb = function(e, n) {
            Object(p.b)().getIntegration(t) && Object(p.b)().addBreadcrumb(e, n)
        }
        ,
        t.prototype.setupOnce = function() {
            this._options.console && this._instrumentConsole(),
            this._options.dom && this._instrumentDOM(),
            this._options.xhr && this._instrumentXHR(),
            this._options.fetch && this._instrumentFetch(),
            this._options.history && this._instrumentHistory()
        }
        ,
        t.id = "Breadcrumbs",
        t
    }();
    function It(t) {
        try {
            var e = JSON.parse(t);
            Rt.addBreadcrumb({
                category: "sentry",
                event_id: e.event_id,
                level: e.level || a.fromString("error"),
                message: Object(L.d)(e)
            }, {
                event: e
            })
        } catch (t) {
            A.a.error("Error while adding sentry type breadcrumb")
        }
    }
    var Ot = function() {
        function t(e) {
            this.name = t.id,
            this._options = l.a({
                onerror: !0,
                onunhandledrejection: !0
            }, e)
        }
        return t.prototype.setupOnce = function() {
            Error.stackTraceLimit = 50,
            nt(function(e, n, i) {
                if (!(0 < xt)) {
                    var r = Object(p.b)().getIntegration(t);
                    r && Object(p.b)().captureEvent(r._eventFromGlobalHandler(e), {
                        data: {
                            stack: e
                        },
                        originalException: i
                    })
                }
            }),
            this._options.onerror && (A.a.log("Global Handler attached: onerror"),
            it()),
            this._options.onunhandledrejection && (A.a.log("Global Handler attached: onunhandledrejection"),
            rt())
        }
        ,
        t.prototype._eventFromGlobalHandler = function(t) {
            if (!Object(P.h)(t.message) && "onunhandledrejection" !== t.mechanism) {
                var e = t.message;
                t.message = e.error && Object(P.h)(e.error.message) ? e.error.message : "No error message"
            }
            var n = ct(t)
              , i = {
                mode: t.mode
            };
            t.message && (i.message = t.message),
            t.name && (i.name = t.name);
            var r = Object(p.b)().getClient()
              , s = r && r.getOptions().maxValueLength || 250
              , a = t.original ? C(JSON.stringify(Object(B.b)(t.original)), s) : ""
              , o = "onunhandledrejection" === t.mechanism ? "UnhandledRejection" : "Error";
            return Object(L.a)(n, a, o, {
                data: i,
                handled: !1,
                type: t.mechanism
            }),
            n
        }
        ,
        t.id = "GlobalHandlers",
        t
    }()
      , Dt = "cause"
      , zt = 5
      , Bt = function() {
        function t(e) {
            void 0 === e && (e = {}),
            this.name = t.id,
            this._key = e.key || Dt,
            this._limit = e.limit || zt
        }
        return t.prototype.setupOnce = function() {
            Object(T.b)(function(e, n) {
                var i = Object(p.b)().getIntegration(t);
                return i ? i._handler(e, n) : e
            })
        }
        ,
        t.prototype._handler = function(t, e) {
            if (!(t.exception && t.exception.values && e && e.originalException instanceof Error))
                return t;
            var n = this._walkErrorTree(e.originalException, this._key);
            return t.exception.values = l.d(n, t.exception.values),
            t
        }
        ,
        t.prototype._walkErrorTree = function(t, e, n) {
            if (void 0 === n && (n = []),
            !(t[e]instanceof Error) || n.length + 1 >= this._limit)
                return n;
            var i = ot(st(t[e]));
            return this._walkErrorTree(t[e], e, l.d([i], n))
        }
        ,
        t.id = "LinkedErrors",
        t
    }()
      , Nt = Object(L.e)()
      , jt = function() {
        function t() {
            this.name = t.id
        }
        return t.prototype.setupOnce = function() {
            Object(T.b)(function(e) {
                if (Object(p.b)().getIntegration(t)) {
                    if (!Nt.navigator || !Nt.location)
                        return e;
                    var n = e.request || {};
                    return n.url = n.url || Nt.location.href,
                    n.headers = n.headers || {},
                    n.headers["User-Agent"] = Nt.navigator.userAgent,
                    l.a({}, e, {
                        request: n
                    })
                }
                return e
            })
        }
        ,
        t.id = "UserAgent",
        t
    }()
      , Ut = [new i.InboundFilters, new i.FunctionToString, new At, new Rt, new Ot, new Bt, new jt];
    function Ft(t) {
        void 0 === t && (t = {}),
        void 0 === t.defaultIntegrations && (t.defaultIntegrations = Ut),
        function(t, e) {
            !0 === e.debug && A.a.enable(),
            Object(p.b)().bindClient(new t(e))
        }(vt, t)
    }
    function Ht(t) {
        void 0 === t && (t = {}),
        t.eventId || (t.eventId = Object(p.b)().lastEventId());
        var e = Object(p.b)().getClient();
        e && e.showReportDialog(t)
    }
    function Gt() {
        return Object(p.b)().lastEventId()
    }
    function Vt() {}
    function Wt(t) {
        t()
    }
    function Yt(t) {
        var e = Object(p.b)().getClient();
        return e ? e.flush(t) : Promise.reject(!1)
    }
    function qt(t) {
        var e = Object(p.b)().getClient();
        return e ? e.close(t) : Promise.reject(!1)
    }
    function Xt(t) {
        Mt(t)()
    }
    n.d(e, "Integrations", function() {
        return Jt
    }),
    n.d(e, "Severity", function() {
        return a
    }),
    n.d(e, "Status", function() {
        return c
    }),
    n.d(e, "addGlobalEventProcessor", function() {
        return T.b
    }),
    n.d(e, "addBreadcrumb", function() {
        return g
    }),
    n.d(e, "captureException", function() {
        return u
    }),
    n.d(e, "captureEvent", function() {
        return d
    }),
    n.d(e, "captureMessage", function() {
        return f
    }),
    n.d(e, "configureScope", function() {
        return m
    }),
    n.d(e, "getHubFromCarrier", function() {
        return p.c
    }),
    n.d(e, "getCurrentHub", function() {
        return p.b
    }),
    n.d(e, "Hub", function() {
        return p.a
    }),
    n.d(e, "Scope", function() {
        return T.a
    }),
    n.d(e, "setContext", function() {
        return v
    }),
    n.d(e, "setExtra", function() {
        return w
    }),
    n.d(e, "setExtras", function() {
        return y
    }),
    n.d(e, "setTag", function() {
        return x
    }),
    n.d(e, "setTags", function() {
        return b
    }),
    n.d(e, "setUser", function() {
        return M
    }),
    n.d(e, "Span", function() {
        return E.a
    }),
    n.d(e, "withScope", function() {
        return _
    }),
    n.d(e, "BrowserClient", function() {
        return vt
    }),
    n.d(e, "defaultIntegrations", function() {
        return Ut
    }),
    n.d(e, "forceLoad", function() {
        return Vt
    }),
    n.d(e, "init", function() {
        return Ft
    }),
    n.d(e, "lastEventId", function() {
        return Gt
    }),
    n.d(e, "onLoad", function() {
        return Wt
    }),
    n.d(e, "showReportDialog", function() {
        return Ht
    }),
    n.d(e, "flush", function() {
        return Yt
    }),
    n.d(e, "close", function() {
        return qt
    }),
    n.d(e, "wrap", function() {
        return Xt
    }),
    n.d(e, "SDK_NAME", function() {
        return gt
    }),
    n.d(e, "SDK_VERSION", function() {
        return "5.4.3"
    }),
    n.d(e, "Transports", function() {
        return s
    });
    var Zt = {}
      , Kt = Object(L.e)();
    Kt.Sentry && Kt.Sentry.Integrations && (Zt = Kt.Sentry.Integrations);
    var Jt = l.a({}, Zt, i, r)
}
, function(t, e, n) {
    n.d(e, "a", function() {
        return a
    });
    var i, r, s = n(5);
    (r = i || (i = {})).PENDING = "PENDING",
    r.RESOLVED = "RESOLVED",
    r.REJECTED = "REJECTED";
    var a = function() {
        function t(t) {
            var e = this;
            this._state = i.PENDING,
            this._handlers = [],
            this._resolve = function(t) {
                e._setResult(t, i.RESOLVED)
            }
            ,
            this._reject = function(t) {
                e._setResult(t, i.REJECTED)
            }
            ,
            this._setResult = function(t, n) {
                return e._state === i.PENDING ? Object(s.j)(t) ? void t.then(e._resolve, e._reject) : (e._value = t,
                e._state = n,
                void e._executeHandlers()) : void 0
            }
            ,
            this._executeHandlers = function() {
                if (e._state !== i.PENDING)
                    return e._state === i.REJECTED ? e._handlers.forEach(function(t) {
                        return t.onFail && t.onFail(e._value)
                    }) : e._handlers.forEach(function(t) {
                        return t.onSuccess && t.onSuccess(e._value)
                    }),
                    void (e._handlers = [])
            }
            ,
            this._attachHandler = function(t) {
                e._handlers = e._handlers.concat(t),
                e._executeHandlers()
            }
            ;
            try {
                t(this._resolve, this._reject)
            } catch (t) {
                this._reject(t)
            }
        }
        return t.prototype.then = function(e, n) {
            var i = this;
            return new t(function(t, r) {
                i._attachHandler({
                    onFail: function(e) {
                        if (n)
                            try {
                                return void t(n(e))
                            } catch (t) {
                                return void r(t)
                            }
                        else
                            r(e)
                    },
                    onSuccess: function(n) {
                        if (e)
                            try {
                                return void t(e(n))
                            } catch (t) {
                                return void r(t)
                            }
                        else
                            t(n)
                    }
                })
            }
            )
        }
        ,
        t.prototype.catch = function(t) {
            return this.then(function(t) {
                return t
            }, t)
        }
        ,
        t.prototype.toString = function() {
            return "[object SyncPromise]"
        }
        ,
        t.resolve = function(e) {
            return new t(function(t) {
                t(e)
            }
            )
        }
        ,
        t.reject = function(e) {
            return new t(function(t, n) {
                n(e)
            }
            )
        }
        ,
        t
    }()
}
, function(t, e) {
    t.exports = function(t, e) {
        var n;
        this.sounds = [],
        this.listener = {},
        this.rate = 1,
        this.setVolume = function(t) {
            Howler.volume(t)
        }
        ,
        this.getSound = function(t, e) {
            var i = t + (e || "");
            (n = this.sounds[i]) || (n = new Howl({
                src: ".././sound/" + t + ".mp3"
            }),
            this.sounds[i] = n)
        }
        ,
        this.play = function(t, e, i, r) {
            if (this.getSound(t),
            this.rate && (!i || !n.isPlaying)) {
                n.isPlaying = !0;
                var s = n.play();
                n.volume(e || 1, s),
                n.loop(i, s),
                n.rate((r || 1) * this.rate, s)
            }
        }
        ,
        this.stop = function(t) {
            this.getSound(t),
            n && (n.isPlaying = !1,
            n.stop())
        }
        ,
        this.play3Dv = function(i, r, s, a, o, c, l, p) {
            var h = 1 - t.getDistance3D(r, s, a, p.x, p.y, p.z) / o;
            if (.1 < h) {
                this.getSound(i, "3dv");
                var u = n.play();
                c = (c || 1) * h * e.otherSoundMlt,
                n.volume(c, u),
                n.rate(l || 1, u)
            }
        }
        ,
        this.play3D = function(t, i, r, s, a, o, c, l) {
            this.getSound(t, "3d");
            var p = n.play();
            .05 < (a = (a || 1) * e.otherSoundMlt) && (n.volume(a, p),
            n.rate(o || 1, p),
            n.pos(i, r, s, p),
            n.pannerAttr({
                refDistance: c || 25,
                rolloffFactor: l || 1
            }, p))
        }
    }
}
, function(t, e, n) {
    var i = n(4)
      , r = n(8)
      , s = n(23)
      , a = new i.Vector3
      , o = s.generateCube(null, 1, 1, 1, {})
      , c = function(t) {
        this.mesh = new i.Mesh(o),
        this.init = function(e) {
            this.dst = e.dst,
            this.spd = e.spd,
            this.xS = e.xS,
            this.zS = e.zS,
            this.yS = e.yS,
            this.scale = .45,
            this.len = 0,
            this.mesh.material = t.getMat("default", {
                mat: i.MeshBasicMaterial,
                color: 15592941,
                transparent: !0,
                opacity: .21
            });
            var n = e.mesh.position.x
              , r = e.mesh.position.y
              , s = e.mesh.position.z;
            t.moveMesh(this.mesh, n, r, s),
            this.mesh.lookAt(n + this.xS, r + this.yS, s + this.zS),
            this.mesh.rotateX(Math.PI / 2),
            t.scaleMesh(this.mesh, this.scale, this.len, this.scale),
            this.mesh.visible = !0
        }
        ,
        this.update = function(e) {
            this.mesh.visible && (this.len < this.dst && (this.len += this.spd * e,
            this.len >= this.dst && (this.len = this.dst)),
            this.scale -= 36e-5 * e,
            t.scaleMesh(this.mesh, this.scale, this.len, this.scale),
            0 >= this.scale && (this.scale = 0,
            this.mesh.visible = !1))
        }
    };
    function l() {
        i.Object3D.call(this),
        this.largeSpawnCount = 8,
        this.smallSpawnCount = 15,
        this.emissiveness = .55,
        this.velocityDamping = 3,
        this.lifeSpeedMin = 2.2,
        this.lifeSpeedRange = 3;
        var t = new i.Geometry({
            dynamic: !0
        })
          , e = new i.Color(12303291);
        this.mesh = new i.Mesh(t,new i.StrippedLambertMaterial({
            color: e,
            emissive: e.multiplyScalar(this.emissiveness),
            smoothShading: !0
        })),
        this.mesh.castShadow = !0,
        this.mesh.receiveShadow = !0,
        this.add(this.mesh),
        this.cubeTemplate = new i.BoxGeometry(1,1,1);
        for (var n = 0; n < this.cubeTemplate.faces.length; n++)
            this.cubeTemplate.faces[n].materialIndex = 0;
        this.cubeTemplate.faceVertexUvs = [[]],
        this.entities = []
    }
    l.staticMatrix = new i.Matrix4,
    l.prototype = Object.create(i.Object3D.prototype),
    Object.defineProperty(l, "finished", function() {
        return 0 === this.entities.length
    }),
    l.prototype.explodeAt = function(t, e, n, i) {
        this.sizeMin = .35 * i,
        this.sizeRange = 2.2 * i,
        this.velocityMin = 30 * i,
        this.velocityRange = 17 * i,
        a.set(t, e, n);
        for (var r = 0; r < this.largeSpawnCount; r++)
            this.spawnEntity(.1 * Math.random() + .9, a, !1);
        for (r = 0; r < this.smallSpawnCount; r++)
            this.spawnEntity(.9 * Math.random(), a, !1)
    }
    ,
    l.prototype.spawnEntity = function(t, e) {
        for (var n = Math.pow(t, 2.5), i = n * this.sizeRange + this.sizeMin, r = (1 - n) * this.velocityRange + this.velocityMin, s = this._randomVector().normalize().multiplyScalar(r), a = n * this.lifeSpeedRange + this.lifeSpeedMin, o = 0; ; ) {
            for (var c = !0, p = 0; p < this.entities.length; p++)
                if (this.entities[p].index === o) {
                    c = !1;
                    break
                }
            if (c)
                break;
            o++
        }
        8 * o > this.mesh.geometry.vertices.length - 1 && this.mesh.geometry.merge(this.cubeTemplate, l.emptyMatrix),
        this.entities.push({
            index: o,
            rank: n,
            rankSeed: t,
            life: 0,
            lifeSpeed: a,
            size: i,
            position: e.clone(),
            velocity: s
        })
    }
    ,
    l.prototype.destroyEntity = function(t) {
        this.entities.splice(this.entities.indexOf(t), 1);
        for (var e = 8 * t.index; e < 8 * (t.index + 1); e++)
            this.mesh.geometry.vertices[e].set(0, 0, 0);
        this.mesh.geometry.verticesNeedUpdate = !0,
        this.mesh.geometry.elementsNeedUpdate = !0,
        this._cleanGeometry()
    }
    ,
    l.prototype.update = function(t) {
        t /= 1e3;
        for (var e, n = 0; n < this.entities.length; n++) {
            (e = this.entities[n]).life += t * e.lifeSpeed,
            e.velocity.multiplyScalar(1 - this.velocityDamping * t),
            e.position.add(e.velocity.clone().multiplyScalar(t));
            var i = 2 - Math.pow(e.life / Math.sqrt(2), 2);
            i *= e.size;
            for (var r = 8 * e.index; r < 8 * (e.index + 1); r++) {
                var s = this.mesh.geometry.vertices[r]
                  , a = this.cubeTemplate.vertices[r % 8];
                s.set(e.position.x, e.position.y, e.position.z).addScaledVector(a, i)
            }
            0 >= i && this.destroyEntity(e)
        }
        this.mesh.geometry.verticesNeedUpdate = !0,
        this.mesh.geometry.elementsNeedUpdate = !0,
        this.mesh.geometry.computeBoundingSphere()
    }
    ,
    l.prototype._cleanGeometry = function() {
        for (var t, e = this.mesh.geometry.vertices, n = this.mesh.geometry.faces, i = -1, r = 0; r < this.entities.length; r++)
            (t = this.entities[r]).index > i && (i = t.index);
        var s = i + 1;
        e.splice(8 * s, e.length - 8 * s),
        n.splice(12 * s, n.length - 12 * s)
    }
    ,
    l.prototype._randomVector = function() {
        return new i.Vector3(Math.random() - .5,Math.random() - .5,Math.random() - .5)
    }
    ;
    var p = [{
        mat: i.MeshBasicMaterial,
        snd: {
            rng: 26,
            src: ["whizz_0", "whizz_1"],
            vol: .12
        },
        spd: 1.7,
        scale: 1,
        length: 13,
        color: 16777179
    }, {
        spd: [.03, .031],
        rand: !0,
        carryV: !0,
        grav: 3e-4,
        spn: [.04, .05],
        scale: .15,
        length: .5,
        color: 10124094
    }, {
        spd: [.03, .031],
        rand: !0,
        carryV: !0,
        grav: 3e-4,
        spn: [.03, .05],
        scale: .1,
        length: .4,
        color: 10124094
    }]
      , h = function(t) {
        this.mesh = new i.Mesh(t.cubeGeo),
        this.init = function(e, n, s, a, o, c, l, p) {
            this.dst = c,
            this.scale = l.scale,
            this.spd = l.spd[1] ? r.randFloat(l.spd[0], l.spd[1]) : l.spd;
            var h = l && l.carryV && p;
            a -= Math.PI,
            this.xS = this.spd * Math.sin(a) * Math.cos(o) + (h ? p.xVel : 0),
            this.zS = this.spd * Math.cos(a) * Math.cos(o) + (h ? p.zVel : 0),
            this.yS = this.spd * Math.sin(o) + (h ? p.yVel : 0),
            this.grav = l.grav,
            this.spin = l.spn ? l.spn[1] ? r.randFloat(l.spn[0], l.spn[1]) : l.spn : 0,
            this.mesh.receiveShadow = l.mat != i.MeshBasicMaterial,
            this.mesh.material = t.getMat("default", {
                fog: l.mat != i.MeshBasicMaterial,
                color: l.color,
                emissive: l.emis,
                mat: l.mat
            }),
            this.layer = p && p.isYou ? 1 : 0,
            this.sound = p && p.isYou ? null : l.snd,
            this.soundPlayed = !1,
            this.mesh.layers.set(this.layer),
            t.moveMesh(this.mesh, e, n, s),
            this.mesh.lookAt(e + this.xS, n + this.yS, s + this.zS),
            l && l.rand && this.mesh.rotateX(r.randFloat(-Math.PI, Math.PI)),
            t.scaleMesh(this.mesh, l.scale, l.scale, l.length)
        }
        ,
        this.checkSound = function() {
            if (this.sound && !this.soundPlayed) {
                var t = Howler.pos();
                r.getDistance3D(t[0], t[1], t[2], this.mesh.position.x, this.mesh.position.y, this.mesh.position.z) <= this.sound.rng && (SOUND.play(this.sound.src[r.randInt(0, this.sound.src.length - 1)], this.sound.vol, !1, r.randFloat(.8, 1.2)),
                this.soundPlayed = !0)
            }
        }
        ,
        this.update = function(t) {
            this.mesh.visible && (this.mesh.position.x += this.xS * t,
            this.mesh.position.z += this.zS * t,
            this.mesh.position.y += this.yS * t,
            this.spin && this.mesh.rotateX(this.spin * t),
            this.yS -= (this.grav || 0) * t,
            this.dst -= this.spd * t,
            this.checkSound(),
            0 >= this.dst && (this.mesh.visible = !1))
        }
    };
    i.Sprite.prototype.init = function(t, e, n, i, r, s, a, o, c, l) {
        this.position.x = t,
        this.position.y = e,
        this.position.z = n,
        this.xVel = i,
        this.yVel = r,
        this.zVel = s,
        this.scale.x = this.scale.y = a,
        this.life = o || 0,
        this.grav = c || 0,
        this.area = l,
        this.updC = 0
    }
    ,
    i.Sprite.prototype.update = function(t) {
        if (this.visible) {
            if (this.position.x += this.xVel * t,
            this.position.y += this.yVel * t,
            this.yVel -= this.grav * t,
            this.position.z += this.zVel * t,
            this.area) {
                var e = this.scale.x / 2;
                this.position.x - e >= this.area.x + this.area.w ? this.position.x = this.area.x - this.area.w - e : this.position.x + e <= this.area.x - this.area.w && (this.position.x = this.area.x + this.area.w + e),
                this.position.z - e >= this.area.z + this.area.l ? this.position.z = this.area.z - this.area.l - e : this.position.z + e <= this.area.z - this.area.l && (this.position.z = this.area.z + this.area.l + e),
                this.position.y - e >= this.area.y + this.area.h ? this.position.y = this.area.y - e : this.position.y + e <= this.area.y && (this.position.y = this.area.y + this.area.h + e)
            }
            0 < this.life ? (this.life -= t,
            0 >= this.life && this.updC && (this.visible = !1),
            this.updC++) : 0 >= this.life && this.updC && (this.visible = !1)
        }
    }
    ;
    var u = [Math.PI / 3, -Math.PI / 3]
      , f = [{
        hole: !0,
        count: 2,
        grav: -2e-5,
        scale: [5, 9],
        speed: [0, .025],
        spread: [-.4, .4],
        life: [300, 500]
    }, {}, {
        count: 1,
        blending: 2,
        scale: [5, 7],
        speed: [0, 0],
        spread: [0, 0],
        life: [30, 35]
    }, {
        count: 1,
        blending: 2,
        scale: [2e3, 2e3],
        speed: [0, 0],
        spread: [0, 0]
    }, {
        count: 4,
        src: "0",
        scale: [5, 6],
        speed: [0, .01],
        spread: [-1, 1],
        life: [600, 800]
    }];
    t.exports = function(t) {
        var e, n, s;
        this.particles = [],
        this.trails = [],
        this.physObjs = [],
        this.areas = [],
        this.active = !0,
        this.ExplosionManager = new l,
        this.prefabs = [{
            src: "glow_0",
            blending: 2,
            spd: .008,
            cnt: 2.2,
            grav: [-.015, -.005],
            scl: [.7, 1],
            dir: 0
        }, {
            src: "glow_1",
            blending: 1,
            spd: .003,
            cnt: 8,
            grav: [-.2, -.22],
            scl: [1, 1.5],
            dir: 0
        }, {
            src: "fog_0",
            blending: 1,
            spd: .002,
            cnt: 6,
            grav: [0, 0],
            scl: [25, 30],
            dir: 0
        }],
        this.addTrail = function(e) {
            s = null;
            for (var n = 0; n < this.trails.length; ++n)
                if (!this.trails[n].mesh.visible) {
                    s = this.trails[n];
                    break
                }
            s || (s = new c(t),
            this.trails.push(s),
            t.scene.add(s.mesh)),
            s.init(e)
        }
        ,
        this.area = function(t, e, n, i, s, a, o, c) {
            i /= 2,
            a /= 2,
            this.areas.push({
                f: c,
                x: t,
                y: e,
                z: n,
                w: i,
                h: s,
                l: a
            });
            for (var l = 0; l < o.count; ++l)
                this.add(o.src, t + r.randInt(-i, i), e + r.randInt(0, s), n + r.randInt(-a, a), o.spd * Math.sin(o.dir), o.grav ? r.randFloat(o.grav[0], o.grav[1]) : 0, o.spd * Math.cos(o.dir), r.randFloat(o.scl[0], o.scl[1]), 0, 0, o.blending, this.areas[this.areas.length - 1])
        }
        ,
        this.effect = function(n, s, a, o, c, l) {
            if (this.active && (0 == t.useDepthMap || "0" == t.useDepthMap)) {
                e = f[l];
                for (var p = 0; p < e.count; ++p) {
                    var h = r.randFloat(e.speed[0], e.speed[1])
                      , u = o + r.randFloat(e.spread[0], e.spread[1])
                      , d = c + r.randFloat(e.spread[0], e.spread[1]);
                    this.add(l, n, s, a, h * Math.sin(u) * Math.cos(d), h * Math.sin(d), h * Math.cos(u) * Math.cos(d), r.randFloat(e.scale[0], e.scale[1]), e.life ? r.randInt(e.life[0], e.life[1]) : 0, e.grav, e.blending, null, e.src)
                }
                e.hole && this.add(1, n, s, a, 0, 0, 0, r.randFloat(.4, 1), 5e3, 0, i.SubtractiveBlending)
            }
        }
        ,
        this.add = function(e, r, s, a, o, c, l, p, h, u, f, d, m) {
            n = null;
            for (var g = 0; g < this.particles.length; ++g)
                if (!this.particles[g].visible && !this.particles[g].static) {
                    n = this.particles[g];
                    break
                }
            n || (n = new i.Sprite,
            this.particles.push(n),
            t.scene.add(n)),
            this.setMaterial(n, m || e, f, !0),
            n.visible = !0,
            n.init(r, s, a, o, c, l, p, h, u, d)
        }
        ,
        this.setMaterial = function(e, n, s, a) {
            e.material = t.getMat("particles/" + n, {
                mat: i.SpriteMaterial,
                depthWrite: !1,
                blending: s || i.NormalBlending,
                rotation: a ? u[r.randInt(0, 2)] : 0
            })
        }
        ,
        this.physObj = function(e, i, r, s, a, o, c, l, u, f, d) {
            if (0 == t.useDepthMap || "0" == t.useDepthMap) {
                n = null;
                for (var m = 0; m < this.physObjs.length; ++m)
                    if (!this.physObjs[m].mesh.visible) {
                        n = this.physObjs[m];
                        break
                    }
                n || (n = new h(t),
                this.physObjs.push(n),
                t.scene.add(n.mesh)),
                n.sid = null == d ? null : d,
                n.mesh.visible = !0,
                n.init(e, i, r, s, a, o, f || p[l], u),
                c && this.showTrails && this.addTrail(n)
            }
        }
        ,
        this.disablePhys = function(t) {
            for (var e = 0; e < this.physObjs.length; ++e)
                this.physObjs[e].sid == t && (this.physObjs[e].mesh.visible = !1)
        }
        ,
        this.update = function(t, e) {
            if (e && e.active)
                for (var n = 0; n < this.areas.length; ++n)
                    this.areas[n].f && (this.areas[n].x = e.x,
                    this.areas[n].y = e.y,
                    this.areas[n].z = e.z);
            for (n = 0; n < this.trails.length; ++n)
                this.trails[n].update(t);
            for (n = 0; n < this.particles.length; ++n)
                this.particles[n].update(t);
            for (n = 0; n < this.physObjs.length; ++n)
                this.physObjs[n].update(t);
            this.ExplosionManager.update(t)
        }
        ,
        this.reset = function() {
            this.particles.length = 0,
            this.trails.length = 0,
            this.physObjs.length = 0,
            this.areas.length = 0
        }
    }
}
, function(t, e) {
    t.exports = [{
        name: "Red Dot",
        src: "attach_0",
        dotSrc: "dot_0",
        aimOffY: .16,
        scale: 1.2
    }]
}
, function(t, e) {
    t.exports = [{
        name: "Nuke",
        kills: 25,
        activate: function(t, e) {
            return !t.nukeTimer && (t.incStat("n", e),
            t.startNuke(e),
            !0)
        }
    }]
}
, function(t, e) {
    t.exports = [{
        name: "Krunker",
        opacity: .6
    }, {
        name: "Target",
        opacity: .6
    }, {
        name: "GG",
        opacity: .6
    }, {
        name: "Pumpkin",
        opacity: .6
    }, {
        name: "Spooky",
        opacity: .6
    }, {
        name: "Ded",
        opacity: .6
    }, {
        name: "Sadface",
        opacity: .6
    }, {
        name: "Laugh Cry",
        opacity: .7
    }, {
        name: "Sid",
        opacity: .9
    }, {
        name: "Vince",
        opacity: .9
    }, {
        name: "Kiki",
        opacity: .6
    }, {
        name: "Ladder",
        opacity: 1
    }, {
        name: "Dummy",
        opacity: 1
    }, {
        name: "8 Ball",
        opacity: .6
    }, {
        name: "xD",
        opacity: .6
    }, {
        name: "MMOK",
        opacity: .7
    }, {
        name: "Madman",
        opacity: .6
    }, {
        name: "Terminal",
        opacity: .6
    }, {
        name: "YODO",
        opacity: .6
    }, {
        name: "Crayon",
        opacity: .6
    }, {
        name: "Myth",
        opacity: .85
    }, {
        name: "SpikyJohn",
        opacity: .85
    }, {
        name: "LevelGaming",
        opacity: .9
    }, {
        name: "PolarAce",
        opacity: .9
    }, {
        name: "MrsYiibby",
        opacity: .85
    }, {
        name: "Vraxooo",
        opacity: .85
    }, {
        name: "Jazzmittens",
        opacity: .85
    }, {
        name: "Wolfmaan",
        opacity: .85
    }, {
        name: "KPL",
        opacity: .9
    }, {
        name: "BV Hype",
        opacity: .85
    }, {
        name: "LandPhil",
        opacity: .85
    }, {
        name: "Deal With It",
        opacity: .9
    }, {
        name: "Rice",
        opacity: .9
    }, {
        name: "Lore",
        opacity: .95
    }, {
        name: "Desu Sid",
        opacity: .85
    }, {
        name: "Anomaly",
        opacity: .85
    }]
}
, function(t, e) {
    var n = ["Double Kill", "Triple Kill", "Quad Kill", "Multi Kill", "Mega Kill", "Ultra Kill", "Super Kill"]
      , i = [];
    t.exports.reward = function(t, e, r, s, a) {
        if (i.length = 0,
        e.weapon.melee)
            i.push("Execution", 150);
        else {
            e.weapon.kill ? i.push(e.weapon.kill[0], e.weapon.kill[1]) : e.weapon.scope && 1 == e.aimVal ? i.push("No Scope", 100) : !e.weapon.scope || 0 == e.aimVal && 180 < e.aimTime || 1 == e.aimDir ? i.push("", 50) : i.push("Quick Scope", 75),
            1 >= a.kills && i.push("First Blood", 25);
            var o = t.getSpin(e);
            !e.weapon.nSkill && 360 <= o && i.push("360!", 150),
            s.headShot && i.push("Headshot", 50),
            !e.weapon.scope && 200 < s.dst * e.weapon.range && i.push("Longshot", 25)
        }
        r.flag && i.push("Snatched", 50),
        e.health <= .2 * e.maxHealth && e.active && i.push("Close Call", 20),
        3 <= e.deathStreak && i.push("Comeback", 25),
        10 <= r.killStreak ? i.push("Buzzkill", 25) : 5 <= r.killStreak && i.push("Buzzkill", 10),
        0 < e.slideTimer && i.push("Driftkill", 50),
        400 <= e.airTime && i.push("Mid Air", 25);
        for (var c = n.length - 1; 0 <= c; --c)
            if (e.streak > c) {
                i.push(n[c], 50 * (c + 1));
                break
            }
        return i.length ? i : null
    }
    ,
    t.exports.getScore = function(t) {
        var e = 0;
        if (t)
            for (var n = 1; n < t.length; n += 2)
                e += t[n];
        return e
    }
}
, function(t, e, n) {
    n(8);
    t.exports = function() {
        this.locale = "en",
        this.supported = ["en"],
        this.translations = {};
        for (var t = 0; t < this.supported.length; t++)
            this.translations[this.supported[t]] = n(80)("./" + this.supported[t] + ".js");
        this.setLocale = function(t) {
            -1 < this.supported.indexOf(t) && (this.locale = t)
        }
        ,
        this.setLocaleFromStorage = function() {
            "undefined" != typeof Storage && this.setLocale(localStorage.getItem("krk_lang"))
        }
        ,
        this.setLocaleFromStorage(),
        this.get = function(t) {
            let e = this.translations[this.locale][t] || "UNLOCALIZED STRING";
            for (var n = 1; n < arguments.length; n++)
                e = e.replace("{" + (n - 1) + "}", arguments[n]);
            return e
        }
    }
}
, function(t, e, n) {
    var i = {
        "./en.js": 81
    };
    function r(t) {
        var e = s(t);
        return n(e)
    }
    function s(t) {
        if (!n.o(i, t)) {
            var e = new Error("Cannot find module '" + t + "'");
            throw e.code = "MODULE_NOT_FOUND",
            e
        }
        return i[t]
    }
    r.keys = function() {
        return Object.keys(i)
    }
    ,
    r.resolve = s,
    t.exports = r,
    r.id = 80
}
, function(t, e) {
    t.exports = {
        "menu.btn.profile": "Profile",
        "menu.btn.shop": "Shop",
        "menu.btn.social": "Social",
        "menu.btn.maps": "Maps",
        "menu.btn.mods": "Mods",
        "menu.btn.settings": "Settings",
        "menu.btn.customize": "Customize",
        "menu.btn.invite": "Invite",
        "menu.btn.invite.clicked": "Copied",
        "menu.btn.join": "Join",
        "menu.btn.host": "Host Game",
        "menu.btn.browser": "Server Browser",
        "generic.wait": "Please wait...",
        "generic.loading": "LOADING...",
        "generic.connecting": "CONNECTING...",
        "generic.none": "None",
        "generic.select": "Select",
        "generic.delete": "Delete",
        "generic.save": "Save",
        "generic.load": "Load",
        "generic.search": "Search",
        "generic.leave": "Leave",
        "generic.default": "Default",
        "generic.submit": "Submit",
        "generic.create": "Create",
        "generic.failed": "Failed",
        "generic.success": "Success!",
        "generic.name": "Name",
        "generic.level": "Level",
        "generic.score": "Score",
        "generic.off": "Off",
        "generic.score": "Score",
        "generic.victory": "VICTORY",
        "generic.defeat": "DEFEAT",
        "generic.follow": "Follow",
        "generic.unfollow": "Unfollow",
        "generic.followers": "Followers",
        "generic.following": "following",
        "generic.games": "Games",
        "generic.wins": "Wins",
        "generic.clan": "Clan",
        "generic.kills": "Kills",
        "generic.deaths": "Deaths",
        "generic.kdr": "KDR",
        "generic.games.played": "Games Played",
        "generic.games.won": "Games Won",
        "generic.timep": "Time Played",
        "generic.time": "Time",
        "generic.logout": "Logout",
        "generic.logout.sessions": "Logout of all Sessions",
        "generic.username": "Enter Username",
        "generic.password": "Enter Password",
        "generic.register": "Register",
        "generic.login": "Login",
        "generic.accuracy": "Accuracy",
        "player.waiting": "waiting for players",
        "player.died": "You died",
        "player.killed": "Killed By",
        "player.killstreak": "{0} on a {1} Kill Streak",
        "player.inactive": "Kicked for inactivity",
        "player.disconnect": "DISCONNECTED",
        "timer.end": "Next Round in {0}",
        "leaderboard.empty": "Empty Lobby",
        "popup.checkpoint": "Checkpoint!",
        "app.play": "CLICK TO PLAY",
        "app.play.controller": "PRESS START",
        "purchase.error": "Error occurred",
        "purchase.error.click": "click here</a> and try again!",
        "purchase.error.limit": "You may have exceeded your daily transaction limit",
        "settings.reset": "Reset Settings",
        "settings.reset.confirm": "Are you sure you want to reset all your settings? This will also refresh the page",
        "settings.controls.change": "Change Controls",
        "settings.controls.press": "Press any Key",
        "settings.server.header": "Servers",
        "settings.server.region": "Default Region",
        "settings.quality.header": "Quality",
        "settings.quality.res": "Resolution",
        "settings.quality.part": "Particles",
        "settings.quality.trails": "Bullet Trails",
        "settings.quality.mflash": "Muzzle Flash",
        "settings.interface.header": "Interface",
        "settings.interface.ui": "Show UI",
        "settings.interface.hp": "Dynamic HP Bars",
        "settings.interface.chat": "Show Chat Box",
        "settings.interface.kills": "Show Kill Feed",
        "settings.interface.messages": "Show Player Messages",
        "settings.interface.unboxings": "Show Unboxings",
        "settings.interface.ping": "Show Ping",
        "settings.interface.fps": "Show FPS",
        "settings.interface.deaths": "Show Deaths",
        "settings.crosshair.header": "Crosshair",
        "settings.crosshair.type": "Type",
        "settings.crosshair.type.2": "Custom",
        "settings.crosshair.type.3": "Layered",
        "settings.crosshair.type.4": "Image",
        "settings.crosshair.style": "Style",
        "settings.crosshair.style.0": "Cross",
        "settings.crosshair.style.1": "Hollow Circle",
        "settings.crosshair.style.2": "Solid Circle",
        "settings.crosshair.style.3": "Hollow Square",
        "settings.crosshair.style.4": "Solid Square",
        "settings.crosshair.image": "Image",
        "settings.crosshair.image.paste": "Crosshair Image",
        "settings.crosshair.always": "Always Show",
        "settings.crosshair.color": "Color",
        "settings.crosshair.shadow": "Shadow",
        "settings.crosshair.size": "Size",
        "settings.crosshair.thickness": "Thickness",
        "settings.gameplay.header": "Gameplay",
        "settings.gameplay.sensitivity": "Sensitivity",
        "settings.gameplay.aimsens": "Aim Sensitivity",
        "settings.gameplay.fov": "Field of View",
        "settings.gameplay.fps": "Weapon FOV",
        "settings.gameplay.streamer": "Streamer Mode",
        "settings.gameplay.challenge": "Challenge Mode",
        "settings.gameplay.invert": "Invert Y-Axis",
        "settings.audio.header": "Audio",
        "settings.audio.sound": "Sound",
        "settings.audio.voice": "Voice Volume",
        "settings.editing.header": "Editing",
        "settings.editing.weapon": "Show Weapon",
        "settings.editing.bobbing": "Weapon Bobbing",
        "settings.editing.depth": "Depth Map",
        "settings.editing.green": "Green Screen",
        "settings.shaders.header": "Shaders",
        "settings.shaders.ambient": "Ambient Shading",
        "settings.mods.header": "Mods",
        "settings.mods.load": "Load Mods",
        "settings.mods.auto": "Auto-Load Mod",
        "settings.mods.borders": "Scope Borders",
        "settings.mods.scope": "Scope Image",
        "settings.mods.scope.paste": "Scope Image URL",
        "settings.mods.dot": "Red Dot Image",
        "settings.mods.dot.paste": "Red Dot URL",
        "settings.mods.endmessage": "Match End Message",
        "settings.mods.profile": "Profile Image",
        "settings.mods.profile.paste": "Profile Image URL",
        "windows.settings.header": "Game Settings",
        "windows.servers.header": "Server Browser",
        "windows.servers.none": "No Joinable Games Found...",
        "windows.servers.host": "+ Host Game",
        "windows.servers.hide": "Hide Full",
        "windows.servers.online": "{0} total online",
        "windows.loadout.header": "Change Loadout",
        "windows.loadout.class": "Class",
        "windows.loadout.primary": "Primary",
        "windows.loadout.secondary": "Secondary",
        "windows.loadout.melee": "Melee",
        "windows.loadout.hat": "Hat",
        "windows.loadout.body": "Body",
        "windows.loadout.spray": "Spray",
        "windows.mods.header": "Mod Manager",
        "windows.mods.guide": "Mod Guide",
        "windows.mods.list": "Mods List",
        "windows.mods.publish": "Publish Mod",
        "windows.mods.viewer": "Viewer",
        "windows.mods.drop": "drop mod file here or click",
        "windows.mods.paste": "Paste Mod Url",
        "windows.mods.load": "Load Mod",
        "windows.account.header": "Account",
        "windows.account.recover": "To recover an account contact <a>krunker@yendis.ch</a>",
        "windows.class.header": "Select Class",
        "windows.controls.header": "Change Controls",
        "windows.controls.forward": "Forward",
        "windows.controls.backward": "Backward",
        "windows.controls.left": "Left",
        "windows.controls.right": "Right",
        "windows.controls.reload": "Reload",
        "windows.controls.aim": "Aim",
        "windows.controls.inspect": "Inspect",
        "windows.controls.spray": "Spray",
        "windows.controls.jump": "Jump",
        "windows.controls.crouch": "Crouch",
        "windows.controls.next": "Next Weapon",
        "windows.controls.previous": "Previous Weapon",
        "windows.controls.chat": "Chat",
        "windows.controls.voice": "Voice",
        "windows.controls.list": "Player List",
        "windows.controls.interact": "Interact",
        "windows.controls.drop": "Drop",
        "windows.host.header": "Host Custom Game",
        "windows.host.maps": "Select Maps",
        "windows.host.cmaps": "Community Map",
        "windows.host.raw": "Raw Map Data",
        "windows.host.modes": "Select Modes",
        "windows.host.classes": "Select Classes",
        "windows.host.settings": "Server Settings",
        "windows.host.preset": "Host Presets",
        "windows.host.preset.load": "Loading Preset...",
        "windows.host.preset.name": "Preset name",
        "windows.host.start": "Start Game",
        "windows.spray.header": "Select Spray",
        "windows.spray.default": "Default Spray",
        "windows.maps.header": "Custom Maps",
        "windows.maps.none": "No maps found!",
        "windows.maps.name": "Map Name",
        "windows.maps.editor": "Map Editor",
        "windows.maps.publish": "Publish Map",
        "windows.maps.community": "Map Community",
        "windows.publish.map.header": "Publish Map",
        "windows.publish.map.thumbnail": "No Thumbnail",
        "windows.publish.map.paste": "Paste Map Data",
        "windows.publish.map.update": "Publish/Update",
        "windows.publish.map.login": "Login</a> to create and upload maps!",
        "windows.theatre.header": "Theatre Mode",
        "windows.theatre.record": "Enable Recording",
        "windows.theatre.key": "Record Key",
        "windows.clans.header": "Clans",
        "windows.clans.members": "Members ({0})",
        "windows.clans.requests": "Requests",
        "windows.clans.requests.none": "No Requests",
        "windows.clans.page": "[{0}] Clan Page",
        "windows.clans.create": "Create Clan",
        "windows.clans.name": "Clan Name",
        "windows.clans.view": "View Clans",
        "windows.clans.join": "Join Clan",
        "windows.clans.login": "Login</a> to create and join a clan!",
        "windows.store.header": "Store",
        "windows.store.spin": "{0} Spin",
        "windows.store.agree": "By purchasing you agree to the {0}Terms",
        "windows.store.purchase": "Purchase KR",
        "windows.store.market": "Marketplace",
        "windows.store.market2": "Krunker Market",
        "windows.store.buy": "Buy and Sell Items on the",
        "windows.store.wheels": "Prize Wheels",
        "windows.store.unlock": "Unlock new weapon skins and items",
        "windows.store.amount": "{0} KR in account",
        "windows.store.login": "Login</a> to buy and unlock items from the store!",
        "windows.store.purchasing": "Purchasing...",
        "windows.store.unboxed": "{0}{1} unboxed",
        "windows.skin.header": "Select Skin",
        "windows.hat.header": "Select Hat",
        "windows.back.header": "Select Back",
        "windows.mods.community.header": "Community Mods",
        "windows.mods.community.fav": "Your Favorites",
        "windows.mods.community.new": "New Mods",
        "windows.mods.community.hot": "Hot",
        "windows.mods.community.name": "Mod Name",
        "windows.mods.community.none": "No Mods found!",
        "windows.publish.mod.header": "Publish Mod",
        "windows.publish.mod.thumbnail": "No Thumbnail",
        "windows.publish.mod.name": "Mod Name",
        "windows.publish.mod.paste": "Mod Url",
        "windows.publish.mod.update": "Publish/Update",
        "windows.publish.mod.login": "Login</a> to create and upload mods!",
        "windows.secondary.header": "Select Secondary",
        "windows.secondary.unlocked": "Unlocked at lvl {0}",
        "windows.secondary.req": "Req lvl {0}",
        "windows.advertise.header": "Advertise",
        "windows.players.header": "Player List",
        "windows.players.none": "No players currently...",
        "windows.join.header": "Join",
        "windows.join.code": "Enter Game URL/Code",
        "windows.client.header": "Client",
        "windows.client.windows": "Windows Installer",
        "windows.client.mac": "macOS Installer",
        "windows.client.linux": "Linux Installer",
        "thumbnail.upload.limit": "Failed. 40kb Thumbnail Limit",
        "thumbnail.upload.error": "Thumbnail Error",
        "mod.extracting": "extracting {0}/{1}",
        "mod.disabled": "mods disabled",
        "mod.error": "mod error!",
        "mod.loading": "loading mod...",
        "mod.invalid": "invalid mod file!",
        "matchmaker.full": "FULL",
        "matchmaker.full2": "Game is full.",
        "matchmaker.none": "Game not found.",
        adblocker: "Disable your ad blocker to receive free Krunkies.",
        "streamers.views": "{0} viewers",
        "streamers.none": "No active streams!",
        "error.extentions": "If you have any extensions. Disable them",
        "error.seek": "Try seeking a new game by clicking",
        "custom.map.missing": "Select at least one Map",
        "custom.mode.missing": "Select at least one Mode",
        "custom.class.missing": "Select at least one Class",
        "server.config.maxPlayers": "Players",
        "server.config.minPlayers": "Min Players",
        "server.config.lives": "Lives",
        "server.config.gameTime": "Minutes",
        "server.config.gravMlt": "Gravity",
        "server.config.jumpMlt": "Jump Force",
        "server.config.deltaMlt": "Time Scale",
        "server.config.strafeSpd": "Strafe Speed",
        "server.config.healthMlt": "Health Multiplier",
        "server.config.impulseMlt": "Weapon Impulse",
        "server.config.nameTeam1": "Team 1 Name",
        "server.config.nameTeam2": "Team 2 Name",
        "server.config.selTeam": "Select Team",
        "server.config.allowSpect": "Spectating",
        "server.config.killRewards": "Kill Rewards",
        "server.config.canSlide": "Sliding",
        "server.config.autoJump": "Auto Jump",
        "server.config.thirdPerson": "3rd Person",
        "server.config.nameTags": "Hide Nametags",
        "server.config.private": "Private",
        "social.login": "Login/Register",
        "social.login.failed": "Login Failed",
        "social.login.buy": "Login to Buy",
        "social.login.sell": "Login to Sell",
        "social.login.proccessing": "Logging in...",
        "social.since": "Since",
        "social.user.maps": "User Maps",
        "social.user.mods": "User Mods",
        "social.maps.none": "No Maps found...",
        "social.market.head": "Head Item",
        "social.market.back": "Back Item",
        "social.market.notlisted": "Ready to Sell",
        "social.market.none": "No Items Found",
        "social.market.grace": "ready in {0}",
        "social.market.sort": "Filter/Sort",
        "social.market.filter": "Search",
        "social.market.price.high": "Highest Price",
        "social.market.price.low": "Lowest Price",
        "social.market.price.list": "List Price in",
        "social.market.searching": "Searching",
        "social.market.listed": "listed {0} ago",
        "social.market.list": "List Item",
        "social.market.unlist": "Unlist",
        "social.market.unlisting": "Unlisting Item...",
        "social.market.posting": "Posting Item...",
        "social.market.req": "lvl {0} required",
        "social.market.cant": "Can't Afford",
        "social.market.purchase": "Purchase",
        "social.market.fee": "Fee",
        "social.market.failed": "Failed. Try Again"
    }
}
, function(t, e, n) {
    (function(e) {
        var i = n(36)
          , r = n(113)
          , s = {
            "Content-Type": "application/x-www-form-urlencoded"
        };
        function a(t, e) {
            !i.isUndefined(t) && i.isUndefined(t["Content-Type"]) && (t["Content-Type"] = e)
        }
        var o, c = {
            adapter: ("undefined" == typeof XMLHttpRequest ? void 0 !== e && (o = n(91)) : o = n(91),
            o),
            transformRequest: [function(t, e) {
                return r(e, "Content-Type"),
                i.isFormData(t) || i.isArrayBuffer(t) || i.isBuffer(t) || i.isStream(t) || i.isFile(t) || i.isBlob(t) ? t : i.isArrayBufferView(t) ? t.buffer : i.isURLSearchParams(t) ? (a(e, "application/x-www-form-urlencoded;charset=utf-8"),
                t.toString()) : i.isObject(t) ? (a(e, "application/json;charset=utf-8"),
                JSON.stringify(t)) : t
            }
            ],
            transformResponse: [function(t) {
                if ("string" == typeof t)
                    try {
                        t = JSON.parse(t)
                    } catch (t) {}
                return t
            }
            ],
            timeout: 0,
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            maxContentLength: -1,
            validateStatus: function(t) {
                return 200 <= t && 300 > t
            }
        };
        c.headers = {
            common: {
                Accept: "application/json, text/plain, */*"
            }
        },
        i.forEach(["delete", "get", "head"], function(t) {
            c.headers[t] = {}
        }),
        i.forEach(["post", "put", "patch"], function(t) {
            c.headers[t] = i.merge(s)
        }),
        t.exports = c
    }
    ).call(this, n(14))
}
, function(t, e, n) {
    var i = n(7)
      , r = n(8)
      , s = n(84);
    t.exports = {
        ahNum: 0,
        socket: null,
        connected: !1,
        socketId: -1,
        sendQueue: [],
        connect: function(t, e, n) {
            if (!this.GqRublcgT) {
                var s = i.enableHttps ? "wss:" : "ws:"
                  , a = this;
                try {
                    var o = !1;
                    this.GqRublcgT = new WebSocket(s + t),
                    this.GqRublcgT.binaryType = "arraybuffer",
                    this.GqRublcgT.onmessage = function(t) {
                        var e = r.DoToY(t.data)[0]
                          , i = e[0]
                          , s = e[1];
                        "io-init" == i ? a.socketId = s[0] : n[i] ? n[i].apply(void 0, s) : console.error("Received unregistered event", i)
                    }
                    ,
                    this.GqRublcgT.onopen = function() {
                        a.connected = !0,
                        e();
                        for (let t of a.sendQueue)
                            a.send(t[0], ...t[1])
                    }
                    ,
                    this.GqRublcgT.onclose = function() {
                        a.connected = !1,
                        o || e("Disconnected. Try connecting to another server.")
                    }
                    ,
                    this.GqRublcgT.onerror = function() {
                        this.GqRublcgT.readyState != WebSocket.OPEN && (o = !0,
                        console.error("Socket error", arguments),
                        e("Socket error"))
                    }
                } catch (t) {
                    console.error("Socket connection error:", t),
                    e(t)
                }
            }
        },
        send: function(t, ...e) {
            if (!this.GqRublcgT || this.GqRublcgT.readyState !== WebSocket.OPEN)
                return console.warn("Socket not open yet", t, e),
                void this.sendQueue.push([t, e]);
            this.ahNum = r.wTwBDG(this.ahNum, s);
            var n = r.XzkvoOmJxYX([t, e], this.ahNum);
            this.GqRublcgT.send(n)
        },
        socketReady: function() {
            return this.GqRublcgT && this.connected
        }
    }
}
, function(t) {
    t.exports = 1361
}
, function(t, e, n) {
    (function(e) {
        var i = n(39)
          , r = n(8)
          , s = n(7)
          , a = n(68)
          , o = n(35)
          , c = 0;
        t.exports.validConfig = function(t) {
            if (t.modes)
                for (var e = 0; e < t.modes.length; ++e)
                    if (!i.modes[t.modes[e]])
                        return "Invalid Mode in Config.";
            if (t.classes)
                for (e = 0; e < t.classes.length; ++e)
                    if (!a[t.classes[e]])
                        return "Invalid Class in Config.";
            if (t.settings) {
                var n = 0;
                for (var o in t.settings)
                    if (t.settings.hasOwnProperty(o)) {
                        var c = t.settings[o]
                          , l = -1;
                        for (e = 0; e < s.serverConfig.length; ++e)
                            if (s.serverConfig[e].varN == o) {
                                l = e;
                                break
                            }
                        if (0 > l)
                            return "Invalid Setting in Config.";
                        var p = s.serverConfig[l];
                        if (!p.input && !p.bool) {
                            if (!r.isNumber(c))
                                return "Invalid Config Value.";
                            if (c > (p.maxF || p.max) || c < p.min)
                                return "Config Value out of Range."
                        }
                        if (++n > s.serverConfig.length + 1)
                            return "Settings Mismatch."
                    }
            }
            return null
        }
        ,
        t.exports.validMap = function(t, e) {
            if (!r.isString(t.name) || !t.name.replace(/\s/g, "").length)
                return "Missing map name.";
            if (-1 !== t.name.indexOf("<") || -1 !== t.name.indexOf(">"))
                return "Illegal characters in map name.";
            if (16 < t.name.length)
                return "Map name too long.";
            if (!r.isArray(t.spawns) || !t.spawns.length)
                return "Missing spawn points.";
            if (t.spawns.length > s.spawnLimit)
                return "Too many spawn points.";
            for (var n, i = 0; i < t.spawns.length; ++i) {
                if (n = t.spawns[i],
                !r.isArray(n) || !n.length || 3 > n.length || 5 < n.length)
                    return "Spawn point error.";
                for (var a = 0; a < n.length; ++a) {
                    if (3 > a && !r.isNumber(n[a]))
                        return "Spawn point error.";
                    if (3 == a && null == n[a] && 1 == n[a] && 2 == n[a])
                        return "Spawn team error."
                }
            }
            if (!r.isArray(t.objects) || !t.objects.length)
                return "Missing objects.";
            if (t.objects.length > (e ? s.objectLimitF : s.objectLimit))
                return "Map exceeds object limit.";
            var o;
            for (i = 0; i < t.objects.length; ++i) {
                if (o = t.objects[i],
                !r.isArray(o.s) || 3 != o.s.length || !r.arrayInts(o.s))
                    return "Object scale error.";
                if (!r.isArray(o.p) || 3 != o.p.length || !r.arrayInts(o.p))
                    return "Object position error.";
                if (r.isArray(o.r)) {
                    if (3 != o.r.length || !r.arrayInts(o.r))
                        return "Object rotation value error."
                } else if (null != o.r)
                    return "Object rotation error.";
                if (null != o.d && !r.isNumber(o.d))
                    return "Object direction error.";
                o.col = !!o.col
            }
            return null
        }
        ,
        t.exports.obj = function(l, p, h, u, f, d, m, g, v) {
            this.isCustom = l,
            this.isPrimary = 0 == p,
            this.sid = c++,
            this.gameInstance = null,
            this.connectedClients = 0,
            this.password = void 0,
            this.map = new i.manager(u,d,r,s),
            this.store = n(69),
            this.attach = n(75),
            this.weapons = n(22),
            this.classes = a,
            this.streaks = n(76),
            this.sprays = n(77),
            this.projectiles = new (n(86))(this,m),
            this.controls = null,
            this.players = new (n(70).manager)(this,u,f,d,r,s,m),
            this.endData = {
                ed: [],
                vo: null
            },
            this.endTimer = 0,
            this.banList = [],
            this.destObjs = [];
            var y, b, w, x = this;
            this.applyConfig = function(t, e) {
                t = t || {},
                this.config = {};
                for (var n, i = 0; i < s.serverConfig.length; ++i)
                    if ((n = s.serverConfig[i]).bool)
                        this.config[n.varN] = null == t[n.varN] ? n.def : !!t[n.varN];
                    else if (n.input) {
                        var a = t[n.varN];
                        r.isString(a) || (a = n.def),
                        this.config[n.varN] = r.sanitizeStr(a),
                        16 < a.length && (a = a.substring(0, 16))
                    } else {
                        a = t[n.varN];
                        r.isNumber(a) || (a = n.def),
                        this.config[n.varN] = r.limitMM(a, n.min, e && n.maxF || n.max)
                    }
                if (this.config.maps = t.maps,
                !r.isArray(this.config.maps) || !this.config.maps.length || this.config.maps.length > this.map.maps.length) {
                    this.config.maps = [];
                    for (i = 0; i < this.map.maps.length; i++)
                        this.config.maps.push(i)
                } else
                    for (i = 0; i < this.config.maps.length; i++)
                        if (!this.map.maps[this.config.maps[i]]) {
                            this.config.maps = [0];
                            break
                        }
                if (this.config.modes = t.modes,
                !r.isArray(this.config.modes) || !this.config.modes.length || this.config.modes.length > this.map.modes.length)
                    this.config.modes = null;
                else
                    for (i = 0; i < this.config.modes.length; i++)
                        if (!this.map.modes[this.config.modes[i]]) {
                            this.config.modes = null;
                            break
                        }
                var o = !1;
                if (this.config.classes = t.classes,
                !r.isArray(this.config.classes) || !this.config.classes.length || this.config.classes.length > this.classes.length)
                    o = !0;
                else
                    for (i = 0; i < this.config.classes.length; i++)
                        if (!this.classes[this.config.classes[i]]) {
                            o = !0;
                            break
                        }
                if (o) {
                    this.config.classes = [];
                    for (i = 0; i < this.classes.length; i++)
                        this.config.classes.push(i)
                }
            }
            ,
            this.applyConfig(),
            this.getInfo = function() {
                return this.mode.alias + "_" + this.map.maps[this.mapIndex].name
            }
            ,
            this.customMap = function(e, n, i, r, a) {
                if (e)
                    try {
                        var o = JSON.parse(e);
                        if (m && (this.customMapData = {
                            data: e,
                            id: n,
                            featured: r,
                            creator: i
                        }),
                        !a) {
                            var c = t.exports.validMap(o, r);
                            if (c)
                                return c
                        }
                        for (var l = 0; l < o.objects.length; ++l) {
                            if (o.objects[l].i = s.prefabIDS[o.objects[l].i || o.objects[l].id || 0],
                            !o.objects[l].i)
                                return "Object ID error.";
                            if (o.objects[l].t = s.textureIDS[o.objects[l].t || 0],
                            !o.objects[l].t)
                                return "Object Texture error."
                        }
                        o.creator = i,
                        this.map.setMaps([o]),
                        this.config.maps = [0]
                    } catch (e) {
                        return "Map error occured."
                    }
            }
            ,
            this.playSound = function(t, e, n, i, r) {
                if (e)
                    if (f)
                        f.play(t, e, !1, r);
                    else
                        for (var s = 0; s < this.players.list.length; ++s)
                            ((y = this.players.list[s]).active || y.spectating) && (n != y || i) && m.send(y.id, "s", t, n.sid, e)
            }
            ,
            this.playerSound = function(t, e, n, i, s, a) {
                y = i || this.players.findBySid(e);
                var o = Howler.pos();
                y && !(a && a < r.getDistance3D(y.x, y.y, y.z, o[0], o[1], o[2])) && f.play3D(t, y.x, y.y, y.z, n || 1, s)
            }
            ,
            this.moveObj = function(t, e, n, i) {
                t.x = e,
                t.y = n,
                t.z = i,
                t.meshRef && t.meshRef.position.set(e, n, i)
            }
            ,
            this.explosion = function(t, e, n, i, s, a) {
                for (var o = 0; o < this.players.list.length; ++o)
                    if (((y = this.players.list[o]).active || y.spectating) && (m.send(y.id, "ex", Math.round(t), Math.round(e), Math.round(n), Math.round(i)),
                    y.active)) {
                        var c = r.getDistance3D(t, e, n, y.x, y.y, y.z)
                          , l = 1 - c / i;
                        0 < l && this.players.changeHealth(y, a, s * l, a == y) && this.players.kill(y, a, {
                            dst: c
                        })
                    }
            }
            ;
            var M = [];
            this.getSpawnPoint = function(t, e, n) {
                if (n)
                    return this.map.spawns[0];
                M.length = 0;
                for (var i, a = 0; a < this.map.spawns.length; ++a) {
                    this.map.spawns[a].dst = 0;
                    for (var o = 0; o < this.players.list.length; ++o)
                        (y = this.players.list[o]) && y.active && y != e && (!t || y.team != t) && !this.canSee(y, this.map.spawns[a].x, this.map.spawns[a].y + s.playerHeight, this.map.spawns[a].z) && (this.map.spawns[a].dst++,
                        0)
                }
                this.map.spawns.sort(r.orderByDst),
                i = this.map.spawns[0].dst;
                for (a = 0; a < this.map.spawns.length; ++a)
                    if (this.map.spawns[a].dst == i) {
                        this.map.spawns[a].dst = 0;
                        for (o = 0; o < this.players.list.length; ++o)
                            (y = this.players.list[o]).active && y != e && (!t || y.team != t) && (this.map.spawns[a].dst += r.getDistance3D(this.map.spawns[a].x, this.map.spawns[a].y, this.map.spawns[a].z, y.x, y.y, y.z));
                        if (this.mode && this.mode.flags)
                            for (var c = 0; c < this.map.manager.flags.length; ++c)
                                y = this.map.manager.flags[c],
                                this.map.spawns[a].dst += r.getDistance3D(this.map.spawns[a].x, this.map.spawns[a].y, this.map.spawns[a].z, y.x, y.y, y.z) * (y.team == t ? -1 : 1);
                        (t && this.map.spawns[a].team == t || !this.map.spawns[a].team) && M.push(this.map.spawns[a])
                    }
                return M.sort(r.orderByDst),
                M.reverse(),
                M[0] || this.map.spawns[0]
            }
            ,
            this.canSee = function(t, e, n, i, a) {
                if (!t)
                    return !1;
                a = a || 0;
                for (var o, c = r.getDistance3D(t.x, t.y, t.z, e, n, i), l = r.getDirection(t.z, t.x, i, e), p = r.getDirection(r.getDistance(t.x, t.z, e, i), n, 0, t.y), h = 1 / (c * Math.sin(l - Math.PI) * Math.cos(p)), u = 1 / (c * Math.cos(l - Math.PI) * Math.cos(p)), f = 1 / (c * Math.sin(p)), d = t.y + t.height - s.cameraHeight, m = 0; m < this.map.manager.objects.length; ++m)
                    if (!(o = this.map.manager.objects[m]).noShoot && o.active && !o.transparent) {
                        var g = r.lineInRect(t.x, t.z, d, h, u, f, o.x - Math.max(0, o.width - a), o.z - Math.max(0, o.length - a), o.y - Math.max(0, o.height - a), o.x + Math.max(0, o.width - a), o.z + Math.max(0, o.length - a), o.y + Math.max(0, o.height - a));
                        if (g && 1 > g)
                            return g
                    }
                var v = this.map.terrain;
                if (v) {
                    var y = v.raycast(t.x, -t.z, d, 1 / h, -1 / u, 1 / f);
                    if (y)
                        return r.getDistance3D(t.x, t.y, t.z, y.x, y.z, -y.y)
                }
                return null
            }
            ,
            this.updateAccounts = function() {
                for (var t = [], e = 0; e < this.players.list.length; ++e)
                    (y = this.players.list[e]).account && !y.account.hack && (y.account.timePlayed += y.playTime || 0,
                    null == this.host && (y.account.games++,
                    y.account.kills += y.kills,
                    y.account.deaths += y.deaths,
                    y.account.score += y.score,
                    y.didWin && y.account.wins++),
                    m.send(y.id, "ua", y.account.getData()),
                    t.push(y));
                t.length && this.saveRewards(t)
            }
            ,
            this.saveRewards = function(t) {
                for (var e = "", n = 0; n < t.length; ++n)
                    t[n] && t[n].account && t[n].reward && (e += (e.length ? "," : "") + t[n].account.id + "," + t[n].reward);
                e.length && h.call(20, [e], function(e, n) {
                    if (n && n[0] && n[0][0] && (n = n[0][0].result))
                        try {
                            n = n.split(",");
                            for (var i, r = 0; r < n.length; ++r)
                                (i = parseInt(n[r])) && t[r] && (t[r].account.funds = i,
                                m.send(t[r].id, "uf", i))
                        } catch (t) {}
                })
            }
            ,
            this.incStat = function(t, e) {
                e && e.account && null == this.host && (!e.account.stats[t] && (e.account.stats[t] = 0),
                e.account.stats[t]++)
            }
            ,
            this.savePlayerData = function(t) {
                if (h && t.account) {
                    var e = t.account;
                    e && h.call(2, [e.id, e.kills, e.wins, e.games, e.deaths, e.score, e.clan, e.timePlayed, JSON.stringify(e.stats)])
                }
            }
            ,
            this.lockPlayer = function(t, e) {
                t.locked = e,
                m.send(y.id, "lock", e)
            }
            ,
            this.updateTeam = function(t, e) {
                t.team = e;
                for (var n = 0; n < t.sentTo.length; ++n)
                    m.send(t.sentTo[n], "tm", t.sid, e);
                this.players.syncLeaders()
            }
            ,
            this.startNuke = function(t) {
                this.nukeTimer = 1e4,
                this.nukePlayer = t,
                m.broadcast("game" + this.sid, "n", 0)
            }
            ;
            var _ = [];
            this.infectRandom = function() {
                _.length = 0;
                for (var t = 0; t < this.players.list.length; ++t)
                    this.players.list[t].active && _.push(t);
                var e = 1;
                14 <= _.length ? e = 3 : 8 <= _.length && (e = 2);
                var n;
                for (t = 0; t < e; ++t)
                    n = r.randInt(0, _.length - 1),
                    (y = this.players.list[_[n]]) && (this.players.kill(y, null, null, !0),
                    m.broadcast("game" + this.sid, "ac", y.sid, null, "got infected")),
                    _.splice(n, 1)
            }
            ,
            this.pickSimon = function() {
                _.length = 0;
                for (var t = null, e = 0; e < this.players.list.length; ++e)
                    if (this.players.list[e].active) {
                        if (this.host == this.players.list[e].id) {
                            t = this.players.list[e];
                            break
                        }
                        _.push(e)
                    }
                t || (t = this.players.list[_[r.randInt(0, _.length - 1)]]),
                t && (this.updateTeam(t, "simon"),
                t.maxHealth = 5e3,
                t.health = t.maxHealth,
                m.send(t.id, "h", t.health))
            }
            ,
            this.pickBoss = function() {
                _.length = 0;
                for (var t = 0; t < this.players.list.length; ++t)
                    this.players.list[t].active && _.push(t);
                (y = this.players.list[_[r.randInt(0, _.length - 1)]]) && (this.updateTeam(y, "boss"),
                y.maxHealth = 5e3,
                y.health = y.maxHealth,
                m.send(y.id, "h", y.health))
            }
            ,
            this.pickSeeker = function() {
                _.length = 0;
                for (var t = 0; t < this.players.list.length; ++t)
                    this.players.list[t].active && _.push(t);
                (y = this.players.list[_[r.randInt(0, _.length - 1)]]) && (this.updateTeam(y, "seek"),
                this.lockPlayer(y, !0))
            }
            ,
            this.releaseSeeker = function() {
                for (var t = 0; t < this.players.list.length; ++t)
                    "seek" == (y = this.players.list[t]).team && this.lockPlayer(y, !1)
            }
            ,
            this.destroyObj = function(t) {
                for (var e = 0; e < x.map.manager.objects.length; ++e)
                    if ((y = x.map.manager.objects[e]).uid == t) {
                        y.active = !1,
                        y.meshRef && (y.meshRef.visible = !1),
                        u && u.updateShadowMap();
                        break
                    }
            }
            ,
            this.capFlag = function(t, e) {
                m && (t.caps++,
                t.flag = null,
                this.teams[t.team] ? this.teams[t.team]++ : this.teams[t.team] = 1,
                m.broadcast("game" + this.sid, "ts", t.team, this.teams[t.team]),
                m.broadcast("game" + x.sid, "ac", t.sid, null, "captured the Flag"),
                m.send(t.id, "am", ["Capture", 150]),
                this.players.score(t, 150),
                this.resetFlag(e))
            }
            ,
            this.updateFlagCol = function(t, e) {
                e && e.team && t.teamCol != e.team && t.meshRef && (t.teamCol = e.team,
                t.meshRef.material = u.getMat("crystal_0", x.map.manager.getFlagDat(t.team, e)),
                t.meshRef.zoneMesh.material = u.getMat("zone_r", x.map.manager.getZoneDat(t.team, e)))
            }
            ,
            this.updateFlags = function(t, e) {
                if (x.mode && x.mode.flags) {
                    for (var n = !1, i = !1, r = 0; r < x.map.manager.flags.length; ++r)
                        (y = x.map.manager.flags[r]).meshRef && (t && x.updateFlagCol(y, t),
                        y.carrier ? (t && y.team == t.team && (i = !0),
                        t && y.carrier == t.sid && (n = !0),
                        (b = x.players.findBySid(y.carrier)) && u.moveMesh(y.meshRef, b.x, b.y + s.flagHOff, b.z)) : u.moveMesh(y.meshRef, y.x, y.y, y.z),
                        y.bobAnimY = (y.bobAnimY || 0) + .003 * e,
                        y.meshRef.position.y += Math.cos(y.bobAnimY),
                        y.meshRef.rotation.y += .002 * e);
                    i && n ? gameMessage.innerHTML != s.flagMsgRC && (gameMessage.innerHTML = s.flagMsgRC) : i ? gameMessage.innerHTML != s.flagMsgE && (gameMessage.innerHTML = s.flagMsgE) : n ? gameMessage.innerHTML != s.flagMsg && (gameMessage.innerHTML = s.flagMsg) : "" != gameMessage.innerHTML && (gameMessage.innerHTML = ""),
                    specGameMessage.innerHTML = gameMessage.innerHTML
                }
            }
            ,
            this.updateFlag = function(t, e, n, i, r) {
                for (var s = 0; s < x.map.manager.flags.length; ++s)
                    if ((y = x.map.manager.flags[s]).uid == t) {
                        y.carrier = r,
                        x.moveObj(y, e, n, i);
                        break
                    }
            }
            ,
            this.dropFlag = function(t) {
                if (m && t && t.carrier) {
                    var e = this.players.findBySid(t.carrier);
                    this.updateCarrier(t),
                    e ? (m.broadcast("game" + x.sid, "ac", e.sid, null, "dropped the Flag"),
                    e.flag = null,
                    this.updateObjPos(t, e.x, e.y + s.flagOff, e.z)) : this.updateObjPos(t, t.orgX, t.orgY, t.orgZ)
                }
            }
            ,
            this.pickupFlag = function(t, e) {
                m && x.mode && x.mode.flags && !e.carrier && (t.team == e.team ? (e.x != e.orgX || e.y != e.orgY || e.z != e.orgZ) && (m.broadcast("game" + x.sid, "ac", t.sid, null, "returned the Flag"),
                m.send(t.id, "am", ["Return", 50]),
                this.players.score(t, 50),
                this.resetFlag(e)) : !t.flag && (m.send(t.id, "am", ["Pickup", 20]),
                this.players.score(t, 20),
                this.updateCarrier(e, t),
                m.broadcast("game" + x.sid, "ac", t.sid, null, "got the Flag")))
            }
            ,
            this.syncFlag = function(t) {
                m.broadcast("game" + x.sid, "ufl", t.uid, t.x.round(1), t.y.round(1), t.z.round(1), t.carrier || 0)
            }
            ,
            this.updateCarrier = function(t, e) {
                t.carrier = e ? e.sid : 0,
                e && (e.flag = t),
                this.syncFlag(t)
            }
            ,
            this.resetFlags = function() {
                for (var t = 0; t < x.map.manager.flags.length; ++t)
                    if ((y = x.map.manager.flags[t]).carrier = 0,
                    y.x = y.orgX,
                    y.y = y.orgY,
                    y.z = y.orgZ,
                    y.meshRef) {
                        var e = !(!x.mode || !x.mode.flags);
                        y.meshRef.visible = e,
                        y.meshRef.zoneMesh.visible = e
                    }
            }
            ,
            this.resetFlag = function(t) {
                this.updateObjPos(t, t.orgX, t.orgY, t.orgZ),
                this.updateCarrier(t)
            }
            ,
            this.updatePickup = function(t, e, n, i) {
                for (var r = 0; r < this.map.manager.pickups.length; ++r)
                    if ((y = this.map.manager.pickups[r]).uid == t) {
                        if (u) {
                            b = y.meshRef;
                            var s = i || [b.position.x, b.position.y, b.position.z];
                            u.scene.remove(y.meshRef),
                            y.meshRef = u.loadMesh({
                                src: "weapons/" + this.weapons[e || 0].src,
                                texSrc: "weapons/" + this.weapons[e || 0].src,
                                noGroup: !0,
                                noShadow: !0,
                                transparent: !0,
                                noFog: !0
                            }, ...s, 0, this.weapons[e || 0].scale, u.scene),
                            y.meshRef.rotation.copy(b.rotation.clone()),
                            y.meshRef.visible = null != e
                        }
                        y.x = i ? i[0] : y.orgX,
                        y.y = i ? i[1] : y.orgY,
                        y.z = i ? i[2] : y.orgZ,
                        n && (y.orgPickup = n),
                        y.pickup = e;
                        break
                    }
            }
            ,
            this.resetPickups = function() {
                for (var t = 0; t < x.map.manager.pickups.length; ++t)
                    (y = x.map.manager.pickups[t]).pickup = y.orgPickup,
                    y.x = y.orgX,
                    y.y = y.orgY,
                    y.z = y.orgZ,
                    u && (b = y.meshRef,
                    u.scene.remove(y.meshRef),
                    y.meshRef = u.loadMesh({
                        src: "weapons/" + x.weapons[y.pickup].src,
                        texSrc: "weapons/" + x.weapons[y.pickup].src,
                        noGroup: !0,
                        noShadow: !0,
                        transparent: !0,
                        noFog: !0
                    }, y.x, y.y - s.pickupZoneH / 2 + s.pickupOff, y.z, 0, x.weapons[y.pickup].scale, u.scene),
                    y.meshRef.rotation.copy(b.rotation.clone()),
                    y.meshRef.visible = !0)
            }
            ,
            this.increaseWeapon = function(t) {
                if ((y = [...t.loadout]).length = 1,
                -1 == t.killList.indexOf(y[0])) {
                    t.killList.push(y[0]);
                    var e = this.mode.weaponOrder.indexOf(y[0]);
                    ++e > this.mode.weaponOrder.length - 1 || (y[0] = this.mode.weaponOrder[e]),
                    t.updateLoadout(this, 0, ...y),
                    m.broadcast("game" + this.sid, "inat", t.sid, y, 0, void 0, void 0, !1),
                    this.players.score(t, 1, !0)
                }
            }
            ,
            this.decreaseWeapon = function(t) {
                t.killList.pop(),
                (y = [...t.loadout]).length = 1;
                var e = this.mode.weaponOrder.indexOf(y[0]);
                0 > --e || (y[0] = this.mode.weaponOrder[e]),
                t.updateLoadout(this, 0, ...y),
                m.broadcast("game" + this.sid, "inat", t.sid, y, 0, void 0, void 0, !1),
                0 <= e && this.players.score(t, -1)
            }
            ,
            this.updateObjPos = function(t, e, n, i) {
                t.x = e,
                t.y = n,
                t.z = i,
                this.syncFlag(t)
            }
            ,
            this.updateZone = function(t) {
                x.map.zone.update(t)
            }
            ,
            this.resetZone = function() {
                x.map.zone && x.map.zone.reset()
            }
            ,
            this.setObjective = function(t) {
                try {
                    x.activeObjective = t;
                    for (var e = 0; e < x.map.manager.objectives.length; ++e)
                        x.map.manager.objectives[e].mesh.visible = t == e
                } catch (t) {}
            }
            ,
            this.nextObjective = function(t) {
                this.activeObjective++,
                this.activeObjective >= this.map.manager.objectives.length && (this.activeObjective = 0),
                m.broadcast("game" + this.sid, "obj", this.activeObjective),
                1 < this.map.manager.objectives.length && (this.waitTimers = [{
                    time: 6e4 - (t || 0),
                    contTime: !0,
                    canDMG: !0,
                    msg: "next objective ",
                    trigger: function(t, e) {
                        t.nextObjective(e)
                    }
                }])
            }
            ,
            this.setCheckPoint = function(t, e) {
                if (y = {
                    x: e.x,
                    y: e.y,
                    z: e.z,
                    dir: e.dir
                },
                b = Object.values(y).join(","),
                !t.checkPoint || Object.entries(t.checkPoint).toString() !== Object.entries(y).toString()) {
                    if (e.singleUse) {
                        if (t.checkPointList.includes(b))
                            return;
                        t.checkPointList.push(b)
                    }
                    t.checkPoint = y,
                    m && m.send(t.id, "chp")
                }
            }
            ,
            this.updateUI = function() {
                killCount.style.display = this.mode.friendly ? "none" : "inline-block"
            }
            ,
            this.instanceConfig = function() {}
            ,
            this.voteMode = function(t, e) {
                this.endData.vo && (this.endData.vo[t] = this.endData.vo[t] == e ? null : e,
                m.broadcast("game" + this.sid, "mv", this.endData.vo))
            }
            ;
            var S = [];
            this.init = function(t, a, c) {
                this.players.clear(),
                this.teams = {},
                S.length = 0;
                for (var l = 0; l < this.map.modes.length; ++l)
                    if (0,
                    S[l] = 0,
                    this.endData.vo)
                        for (var p in this.endData.vo)
                            this.endData.vo.hasOwnProperty(p) && l == this.endData.vo[p] && S[l]++;
                var h = 0
                  , u = null;
                for (l = 0; l < S.length; ++l)
                    S[l] > h && (h = S[l],
                    u = l);
                if (this.modeIndex = null == u ? null == a ? this.config.modes ? this.config.modes[r.randInt(0, this.config.modes.length - 1)] : r.randInt(0, 3) : a : u,
                this.mapIndex = null == t ? this.config.maps[r.randInt(0, this.config.maps.length - 1)] : t,
                this.destObjs.length = 0,
                this.mode = i.modes[this.modeIndex],
                this.map.generate(this.mapIndex, this.mode, c),
                this.resetFlags(),
                this.resetPickups(),
                this.resetZone(),
                !this.config.lives && this.mode.lives && (this.config.lives = this.mode.lives),
                this.minPlayers = this.config.minPlayers || this.mode.minPlayers,
                !this.minPlayers && this.config.lives && (this.minPlayers = 2),
                this.zoneTimer = 0,
                this.nukeTimer = 0,
                this.objectiveTimer = 0,
                this.activeObjective = null,
                this.gameTimer = null == this.mode.gameTime ? 6e4 * this.config.gameTime : this.mode.gameTime,
                this.lastTimer = 0,
                this.lastTimerW = 0,
                this.waitTimers = null,
                this.mode.waitTimers) {
                    this.waitTimers = [];
                    for (l = 0; l < this.mode.waitTimers.length; ++l)
                        this.waitTimers.push({
                            time: this.mode.waitTimers[l].time,
                            trigger: this.mode.waitTimers[l].trigger,
                            msg: this.mode.waitTimers[l].msg
                        })
                } else
                    this.config.lives && (this.waitTimers = [{
                        time: 2e4,
                        msg: "match starts in "
                    }]);
                if (this.condition = this.mode.condition,
                this.config.lives && (!this.condition && (this.mode.teams ? this.condition = function(t) {
                    for (var e = 0, n = 0, i = 0; i < t.players.list.length; ++i)
                        0 < t.players.list[i].lives && (1 == t.players.list[i].team ? e++ : n++);
                    return 1 <= e && 1 <= n
                }
                : this.condition = function(t) {
                    for (var e = 0, n = 0; n < t.players.list.length; ++n)
                        0 < t.players.list[n].lives && e++;
                    return 1 < e
                }
                ),
                !this.winCondition && (this.mode.teams ? this.winCondition = function(t) {
                    for (var e = 0; e < t.players.list.length; ++e)
                        if (t.players.list[e].team && 0 < t.players.list[e].lives)
                            return t.players.list[e].team;
                    return 1
                }
                : this.winCondition = function(t) {
                    for (var e = 0; e < t.players.list.length; ++e)
                        if (0 < t.players.list[e].lives)
                            return t.players.list[e];
                    return null
                }
                )),
                this.kills = 0,
                m && this.mode.gameStart && this.mode.gameStart(this),
                f) {
                    var d = this.map.maps[this.mapIndex].ambInd || 1;
                    d = parseInt(d);
                    for (l = 1; 4 > l; ++l)
                        f.stop("ambient_" + l);
                    f.play("ambient_" + d, .12, !0)
                }
                if (g) {
                    let t = {
                        mC: this.maxPlayers,
                        pv: this.private,
                        sk: !this.isCustom,
                        data: {
                            cs: this.isCustom,
                            i: this.getInfo(),
                            version: o
                        }
                    };
                    if (this.gameInstance)
                        this.gameInstance.update(t);
                    else if (this.gameInstance = g.createGame(v, t),
                    m && !s.isProd) {
                        function a(t) {
                            return n(87)(t)
                        }
                        var y = a("path")
                          , b = a("fs")
                          , w = y.join(e, "..", "..", "version.json");
                        b.watchFile(w, {
                            interval: 100
                        }, ()=>{
                            t.data.version = o = JSON.parse(b.readFileSync(w, "utf8")),
                            this.gameInstance.update(t)
                        }
                        )
                    }
                }
            }
            ,
            this.getTeamScores = function() {
                var t = null;
                return this.mode && this.mode.teams && this.teams && (t = [[1, this.teams[1] || 0], [2, this.teams[2] || 0]]),
                t
            }
            ,
            this.getSyncData = function() {
                for (var t = [], e = [], n = 0; n < this.map.manager.flags.length; ++n)
                    y = this.map.manager.flags[n],
                    t.push([y.uid, y.x.round(1), y.y.round(1), y.z.round(1), y.carrier || 0]);
                for (n = 0; n < this.map.manager.pickups.length; ++n)
                    y = this.map.manager.pickups[n],
                    e.push([y.uid, y.pickup, y.orgPickup || 0, [y.x, y.y, y.z]]);
                return {
                    dest: this.destObjs.length ? this.destObjs : 0,
                    flg: t.length ? t : 0,
                    pkups: e.length ? e : 0,
                    zone: this.map.zone ? this.map.zone.scale : 0
                }
            }
            ,
            this.endGame = function() {
                if (this.endTimer = s.endTimer,
                this.waitTimers = null,
                this.mode.endSort ? this.players.list.sort(this.mode.endSort) : this.players.list.sort(r.orderByScore),
                null == this.host || this.earnKR)
                    for (var t = 0; t < this.players.list.length; ++t)
                        (y = this.players.list[t]).reward = 0,
                        y.account && (y.reward = this.earnKR ? Math.min(10, Math.floor(y.score / 100)) : Math.min(30, Math.floor(y.score / 100)),
                        y.challMode && (y.reward = Math.floor(1.5 * y.reward)));
                this.endData.ed.length = 0;
                var e = this.mode.endStats || s.endStats;
                for (t = 0; t < this.players.list.length; ++t)
                    for (var n = 0; n < e.length; ++n)
                        this.endData.ed.push(s.endForm[e[n]] ? s.endForm[e[n]](this.players.list[t][e[n]], this, this.players.list[t]) : this.players.list[t][e[n]]);
                if (this.mode.winCondition)
                    this.winner = this.mode.winCondition(this);
                else if (this.mode.teams && this.teams) {
                    var i = 0
                      , a = null;
                    for (var o in this.teams)
                        this.teams.hasOwnProperty(o) && this.teams[o] >= i && (i = this.teams[o],
                        a = o);
                    this.winner = a
                } else
                    this.winner = this.players.list[0];
                this.endData.vo = {};
                for (t = 0; t < this.players.list.length; ++t)
                    (y = this.players.list[t]).didWin = y.team && y.team == this.winner || y == this.winner,
                    y.reset(),
                    m.send(y.id, "end", !1, y.didWin, this.endData);
                this.updateAccounts(),
                this.players.clear()
            }
            ,
            this.update = function(t, e, n) {
                if (this.now = e,
                m) {
                    var i = !0;
                    if (0 < this.endTimer ? (i = !1,
                    this.endTimer -= t,
                    0 >= this.endTimer ? (this.init(),
                    this.endTimer = 0,
                    m.broadcast("game" + this.sid, "init", this.mapIndex, this.modeIndex, this.getTeamScores(), this.activeObjective, this.host, this.config, 0, this.customMapData ? 1 : null, this.getSyncData()),
                    this.isPrimary && r.restartIfNeeded(m)) : (w = r.getTime(this.endTimer)) != this.lastTimer && (this.lastTimer = w,
                    m.broadcast("game" + this.sid, "t", w, 1))) : this.waitTimers && (i = !1,
                    this.minPlayers && this.players.activeCount() < this.minPlayers ? m.broadcast("game" + this.sid, "gmsg", "wt") : (this.waitTimers[0].time -= t,
                    0 >= this.waitTimers[0].time ? (this.waitTimers[0].trigger && this.waitTimers[0].trigger(this, -this.waitTimers[0].time),
                    0 >= this.waitTimers[0].time && (this.waitTimers.splice(0, 1),
                    !this.waitTimers.length && (this.waitTimers = null,
                    m.broadcast("game" + this.sid, "gmsg")))) : (w = r.getTime(this.waitTimers[0].time)) != this.lastTimerW && (this.lastTimerW = w,
                    m.broadcast("game" + this.sid, "gmsg", this.waitTimers[0].msg + w)))),
                    0 >= this.endTimer && (i || this.waitTimers && this.waitTimers[0].contTime) && (this.condition && !this.condition(this) && (this.gameTimer = "skip"),
                    "skip" != this.gameTimer && this.mode.timed ? (this.gameTimer += t,
                    (w = r.getTime(this.gameTimer, this.mode.showMS)) != this.lastTimer && (this.lastTimer = w,
                    m.broadcast("game" + this.sid, "t", w))) : (0 < this.gameTimer || "skip" == this.gameTimer) && ("skip" != this.gameTimer && (this.gameTimer -= t),
                    "skip" == this.gameTimer || 0 >= this.gameTimer ? (this.gameTimer = 0,
                    this.endGame()) : (w = r.getTime(this.gameTimer, this.mode.showMS)) != this.lastTimer && (this.lastTimer = w,
                    m.broadcast("game" + this.sid, "t", w)))),
                    0 >= this.endTimer && this.nukeTimer && (this.nukeTimer -= t,
                    0 >= this.nukeTimer && (this.nukeTimer = 0,
                    m.broadcast("game" + this.sid, "n", 1),
                    this.nukePlayer))) {
                        for (var s = 0, a = 0; a < this.players.list.length; ++a)
                            (y = this.players.list[a]).active && y != this.nukePlayer && (!y.team || this.nukePlayer.team != y.team) && (s += 50,
                            this.players.kill(y, this.nukePlayer, null, !1, !0));
                        s && (m.send(this.nukePlayer.id, "6", ["Nuke", s], 0, this.nukePlayer.kills),
                        m.send(this.nukePlayer.id, "4"),
                        this.players.score(this.nukePlayer, s))
                    }
                }
                if (this.players.update(t * this.config.deltaMlt),
                m && this.mode.objective && this.map.manager.objectives.length && (this.objectiveTimer -= t,
                0 >= this.objectiveTimer)) {
                    this.objectiveTimer = 1500;
                    for (a = 0; a < this.map.manager.objectives.length; ++a)
                        if (y = this.map.manager.objectives[a],
                        a == this.activeObjective)
                            for (var o = 0; o < this.players.list.length; ++o)
                                (b = this.players.list[o]).active && b.collides(y) && this.players.score(b, 10)
                }
                if (this.map.zone)
                    if (m) {
                        if (this.zoneTimer -= t,
                        0 >= this.zoneTimer) {
                            this.zoneTimer = 1e3,
                            this.map.zone.shrink(),
                            m.broadcast("game" + this.sid, "zn", this.map.zone.scale);
                            for (o = 0; o < this.players.list.length; ++o)
                                (b = this.players.list[o]).active && "inf" != b.team && this.map.zone.isOutside(b) && this.players.changeHealth(b, null, 10) && this.players.kill(b, null, {})
                        }
                    } else
                        this.map.zone.animate(t);
                this.projectiles.update(t * this.config.deltaMlt),
                d && d.update(t * this.config.deltaMlt, n),
                u && u.render(t * this.config.deltaMlt)
            }
        }
    }
    ).call(this, "/")
}
, function(t, e, n) {
    var i = n(8)
      , r = n(7)
      , s = function() {
        this.init = function(t, e, n, i, r, s, a) {
            this.x = t,
            this.y = e,
            this.z = n,
            i -= Math.PI,
            this.xD = i,
            this.yD = r,
            this.spd = s.spd,
            this.range = s.range,
            this.dmg = s.dmg,
            this.owner = a,
            this.skipMove = !0,
            this.expl = s.explode,
            this.xS = this.spd * Math.sin(i) * Math.cos(r),
            this.zS = this.spd * Math.cos(i) * Math.cos(r),
            this.yS = this.spd * Math.sin(r),
            this.active = !0
        }
        ,
        this.update = function(t) {
            this.active && (this.skipMove ? this.skipMove = !1 : (this.x += this.xS * t,
            this.z += this.zS * t,
            this.y += this.yS * t,
            this.range -= this.spd * t,
            0 >= this.range && (this.active = !1)))
        }
    };
    t.exports = function(t, e) {
        var a, o, c = e ? {} : n(4), l = [];
        this.projectiles = [],
        this.types = [{
            mat: c.MeshBasicMaterial,
            color: 16777179,
            explode: 50,
            dmg: 125,
            spd: .5,
            scale: 1.4,
            length: 10,
            range: 600
        }, {
            mat: c.MeshBasicMaterial,
            color: 16777179,
            dmg: 200,
            spd: .68,
            scale: .7,
            length: 10,
            range: 1e3
        }],
        this.update = function(n) {
            for (var s = 0; s < this.projectiles.length; ++s)
                if ((a = this.projectiles[s]).active) {
                    if (a.update(n),
                    a.active) {
                        l.length = 0;
                        for (var c = 1 / (a.spd * n * Math.sin(a.xD) * Math.cos(a.yD)), p = 1 / (a.spd * n * Math.cos(a.xD) * Math.cos(a.yD)), h = 1 / (a.spd * n * Math.sin(a.yD)), u = 0; u < t.map.manager.objects.length; ++u)
                            !(o = t.map.manager.objects[u]).noShoot && o.active && (tmpDst = i.lineInRect(a.x, a.z, a.y, c, p, h, o.x - o.width, o.z - o.length, o.y - o.height, o.x + o.width, o.z + o.length, o.y + o.height),
                            tmpDst && 1 >= tmpDst && l.push({
                                obj: o,
                                dst: tmpDst
                            }));
                        for (u = 0; u < t.players.list.length; ++u)
                            (o = t.players.list[u]).active && o != a.owner && (tmpDst = i.lineInRect(a.x, a.z, a.y, c, p, h, o.x - o.scale - r.hitBoxPad, o.z - o.scale - r.hitBoxPad, o.y, o.x + o.scale + r.hitBoxPad, o.z + o.scale + r.hitBoxPad, o.y + o.height + r.hitBoxPad),
                            tmpDst && 1 >= tmpDst && l.push({
                                plr: !0,
                                obj: o,
                                dst: tmpDst
                            }));
                        var f = t.map.terrain;
                        if (f) {
                            var d = f.raycast(a.x, -a.z, a.y, 1 / c, -1 / p, 1 / h);
                            if (d) {
                                let t = i.getDistance3D(a.x, a.y, a.z, d.x, d.z, -d.y);
                                l.push({
                                    dst: t / a.range
                                })
                            }
                        }
                        l.length && (l.sort(i.orderByNum),
                        l[0] && (l[0].obj && l[0].plr && t.players.changeHealth(l[0].obj, a.owner, a.dmg) && t.players.kill(l[0].obj, a.owner, {}),
                        a.x += l[0].dst * (a.xS * n),
                        a.y += l[0].dst * (a.yS * n),
                        a.z += l[0].dst * (a.zS * n)),
                        a.active = !1)
                    }
                    if (!a.active) {
                        a.expl && t.explosion(a.x, a.y, a.z, a.expl, a.dmg, a.owner);
                        for (u = 0; u < t.players.list.length; ++u)
                            e.send(t.players.list[u].id, "pre", a.sid)
                    }
                }
        }
        ,
        this.init = function(n, i, r, o, c, l, p) {
            n = n.round(1),
            i = i.round(1),
            r = r.round(1),
            o = o.round(3),
            c = c.round(3),
            a = null;
            for (var h = 0; h < this.projectiles.length; ++h)
                if (!this.projectiles[h].active) {
                    a = this.projectiles[h];
                    break
                }
            if (a || ((a = new s).sid = this.projectiles.length,
            this.projectiles.push(a)),
            a.init(n, i, r, o, c, this.types[l], p),
            e)
                for (h = 0; h < t.players.list.length; ++h)
                    (t.players.list[h].active || t.players.list[h].spectating) && e.send(t.players.list[h].id, "pr", n, i, r, o, c, l, a.sid)
        }
    }
}
, function(t, e) {
    function n(t) {
        var e = new Error("Cannot find module '" + t + "'");
        throw e.code = "MODULE_NOT_FOUND",
        e
    }
    n.keys = function() {
        return []
    }
    ,
    n.resolve = n,
    t.exports = n,
    n.id = 87
}
, function(t, e) {
    t.exports = function(t, e, n, i) {
        n = n || {},
        this.id = t,
        this.name = e,
        this.score = n.player_score || 0,
        this.kills = n.player_kills || 0,
        this.deaths = n.player_deaths || 0,
        this.wins = n.player_wins || 0,
        this.hack = n.player_hack || 0,
        this.games = n.player_games_played || 0,
        this.clan = n.player_clanid,
        this.funds = n.player_funds || 0,
        this.featured = n.player_featured || 0,
        this.clan = n.player_clan || null,
        this.timePlayed = n.player_timeplayed || 0,
        this.skins = n.skins || [],
        this.lastReward = n.player_lastreward || 0,
        this.developer = n.player_developer || 0,
        this.following = n.player_follow || 0,
        this.followers = n.player_followed || 0,
        this.isFollowing = n.player_following || 0,
        this.stats = n.player_stats ? JSON.parse(n.player_stats) : {},
        this.setData = function(t) {
            this.kills = t[1],
            this.wins = t[2],
            this.games = t[3],
            this.deaths = t[4],
            this.funds = t[5],
            this.score = t[6],
            this.updateLevel(),
            this.clan = t[7],
            this.timePlayed = t[8],
            this.featured = t[9],
            this.skins = t[10],
            this.lastReward = t[11],
            this.developer = t[12],
            this.following = t[13],
            this.followers = t[14],
            this.isFollowing = t[15],
            this.stats = t[16]
        }
        ,
        this.updateLevel = function() {
            var t = i.rankVar * Math.sqrt(this.score);
            this.level = Math.floor(t),
            this.levelProg = Math.round(100 * (t - this.level)),
            this.level = Math.max(1, this.level)
        }
        ,
        this.updateLevel(),
        this.getData = function() {
            return [this.id, this.kills, this.wins, this.games, this.deaths, this.funds, this.score, this.clan, this.timePlayed, this.featured, this.skins, this.lastReward, this.developer, this.following, this.followers, this.isFollowing, this.stats]
        }
    }
}
, , function(t, e, n) {
    t.exports = function(t, e) {
        return function() {
            for (var n = Array(arguments.length), i = 0; i < n.length; i++)
                n[i] = arguments[i];
            return t.apply(e, n)
        }
    }
}
, function(t, e, n) {
    var i = n(36)
      , r = n(114)
      , s = n(116)
      , a = n(117)
      , o = n(118)
      , c = n(92);
    t.exports = function(t) {
        return new Promise(function(e, l) {
            var p = t.data
              , h = t.headers;
            i.isFormData(p) && delete h["Content-Type"];
            var u = new XMLHttpRequest;
            if (t.auth) {
                var f = t.auth.username || ""
                  , d = t.auth.password || "";
                h.Authorization = "Basic " + btoa(f + ":" + d)
            }
            if (u.open(t.method.toUpperCase(), s(t.url, t.params, t.paramsSerializer), !0),
            u.timeout = t.timeout,
            u.onreadystatechange = function() {
                if (u && 4 === u.readyState && (0 !== u.status || u.responseURL && 0 === u.responseURL.indexOf("file:"))) {
                    var n = "getAllResponseHeaders"in u ? a(u.getAllResponseHeaders()) : null
                      , i = {
                        data: t.responseType && "text" !== t.responseType ? u.response : u.responseText,
                        status: u.status,
                        statusText: u.statusText,
                        headers: n,
                        config: t,
                        request: u
                    };
                    r(e, l, i),
                    u = null
                }
            }
            ,
            u.onerror = function() {
                l(c("Network Error", t, null, u)),
                u = null
            }
            ,
            u.ontimeout = function() {
                l(c("timeout of " + t.timeout + "ms exceeded", t, "ECONNABORTED", u)),
                u = null
            }
            ,
            i.isStandardBrowserEnv()) {
                var m = n(119)
                  , g = (t.withCredentials || o(t.url)) && t.xsrfCookieName ? m.read(t.xsrfCookieName) : void 0;
                g && (h[t.xsrfHeaderName] = g)
            }
            if ("setRequestHeader"in u && i.forEach(h, function(t, e) {
                void 0 === p && "content-type" === e.toLowerCase() ? delete h[e] : u.setRequestHeader(e, t)
            }),
            t.withCredentials && (u.withCredentials = !0),
            t.responseType)
                try {
                    u.responseType = t.responseType
                } catch (e) {
                    if ("json" !== t.responseType)
                        throw e
                }
            "function" == typeof t.onDownloadProgress && u.addEventListener("progress", t.onDownloadProgress),
            "function" == typeof t.onUploadProgress && u.upload && u.upload.addEventListener("progress", t.onUploadProgress),
            t.cancelToken && t.cancelToken.promise.then(function(t) {
                u && (u.abort(),
                l(t),
                u = null)
            }),
            void 0 === p && (p = null),
            u.send(p)
        }
        )
    }
}
, function(t, e, n) {
    var i = n(115);
    t.exports = function(t, e, n, r, s) {
        var a = new Error(t);
        return i(a, e, n, r, s)
    }
}
, function(t, e, n) {
    t.exports = function(t) {
        return !(!t || !t.__CANCEL__)
    }
}
, function(t, e, n) {
    function i(t) {
        this.message = t
    }
    i.prototype.toString = function() {
        return "Cancel" + (this.message ? ": " + this.message : "")
    }
    ,
    i.prototype.__CANCEL__ = !0,
    t.exports = i
}
, function(t, e, n) {
    let i = n(7)
      , r = n(8)
      , s = n(4)
      , a = {}
      , o = a.canvas = document.getElementById("game-overlay");
    function c() {
        o.width = window.innerWidth,
        o.height = window.innerHeight
    }
    window.addEventListener("resize", c),
    c();
    let l = new Image
      , p = !1;
    l.onload = (()=>p = !0),
    l.src = "./img/muzflash.png";
    let h = new Image
      , u = !1;
    h.onload = (()=>u = !0),
    h.src = "./textures/objective_1.png",
    a.showFlash = !1,
    a.flashX = 0,
    a.flashY = 0,
    a.crosshairType = 1,
    a.crosshairColor = "white",
    a.crosshairShadow = "black",
    a.crosshairOpacity = 0,
    a.crosshairScale = 0,
    a.crosshairAlways = !1,
    a.dynamicHP = !0,
    a.crosshairStyle = 1,
    a.crosshairThick = 2,
    a.crosshairLen = 16,
    a.crosshairImage = new Image;
    var f = new s.Vector3;
    function d(t, e, n, i, r, s=1, o=!1, c=!0, l=!0) {
        c && (t.save(),
        l ? t.fillStyle = a.crosshairShadow : t.strokeStyle = a.crosshairShadow,
        t.lineWidth = s,
        t.globalAlpha *= .5,
        t.beginPath(),
        o ? t.ellipse(e + i / 2, n + r / 2, i / 2 + 2, r / 2 + 2, 0, 0, 2 * Math.PI) : t.rect(e - 2, n - 2, i + 4, r + 4),
        l ? t.fill() : t.stroke(),
        t.restore()),
        l ? t.fillStyle = a.crosshairColor : t.strokeStyle = a.crosshairColor,
        t.lineWidth = s,
        t.beginPath(),
        o ? t.ellipse(e + i / 2, n + r / 2, i / 2, r / 2, 0, 0, 2 * Math.PI) : t.rect(e, n, i, r),
        l ? t.fill() : t.stroke()
    }
    a.render = function(t, e, n, s) {
        let c = o.getContext("2d")
          , m = a
          , g = o.width / t
          , v = o.height / t
          , y = "none" == menuHolder.style.display && "none" == endUI.style.display && "none" == killCardHolder.style.display;
        c.save(),
        c.scale(t, t),
        c.clearRect(0, 0, g, v);
        var b = n.camera.getWorldPosition();
        if ("none" == menuHolder.style.display && "none" == endUI.style.display)
            for (var w = 0; w < e.players.list.length; ++w) {
                if (tmpObj = e.players.list[w],
                !tmpObj.active)
                    continue;
                if (tmpObj.isYou || !tmpObj.objInstances)
                    continue;
                if (!tmpObj.inView)
                    continue;
                if ((M = tmpObj.objInstances.position.clone()).y += i.playerHeight + i.nameOffset - tmpObj.crouchVal * i.crouchDst,
                0 <= tmpObj.hatIndex && (M.y += i.nameOffsetHat),
                !(1 <= 20 * (_ = Math.max(.3, 1 - r.getDistance3D(b.x, b.y, b.z, M.x, M.y, M.z) / 600)) && n.frustum.containsPoint(M)))
                    continue;
                c.save(),
                M.project(n.camera),
                M.x = (M.x + 1) / 2,
                M.y = (M.y + 1) / 2,
                c.translate(g * M.x, v * (1 - M.y)),
                c.scale(_, _),
                c.fillStyle = "rgba(0, 0, 0, 0.4)",
                c.fillRect(-60, -16, 120, 16),
                m.dynamicHP && tmpObj.hpChase > tmpObj.health && (c.fillStyle = "#FFFFFF",
                c.fillRect(-60, -16, tmpObj.hpChase / tmpObj.maxHealth * 120, 16)),
                c.fillStyle = s && s.team && s.team == tmpObj.team ? "#9eeb56" : "#eb5656",
                c.fillRect(-60, -16, tmpObj.health / tmpObj.maxHealth * 120, 16);
                let t = tmpObj.name
                  , a = tmpObj.clan ? `[${tmpObj.clan}]` : null
                  , o = tmpObj.level;
                c.font = "30px GameFont";
                let l = o ? c.measureText(o).width + 10 : 0;
                c.font = "20px GameFont";
                let p = c.measureText(t).width + (a ? 5 : 0)
                  , h = l + p + (a ? c.measureText(a).width : 0);
                c.translate(0, -26),
                c.fillStyle = "white",
                c.font = "30px GameFont",
                o && c.fillText(o, -h / 2, 0),
                c.font = "20px GameFont",
                c.globalAlpha = 1,
                c.fillText(t, -h / 2 + l, 0),
                c.globalAlpha = .4,
                a && c.fillText(a, -h / 2 + l + p, 0),
                c.restore()
            }
        if (e.mode && e.mode.objective && y && 0 < e.map.manager.objectives.length) {
            var x = !0
              , M = e.map.manager.objectives[e.activeObjective];
            for (w = 0; w < e.map.manager.objectives.length; ++w)
                if (tmpObj = e.map.manager.objectives[w],
                w == e.activeObjective && r.pointInBox3D(b.x, b.y, b.z, tmpObj)) {
                    x = !1;
                    break
                }
            if (M && x) {
                f.set(M.x, M.y + 7, M.z);
                var _, S = 70 * (_ = Math.max(.3, 1 - r.getDistance3D(b.x, b.y, b.z, f.x, f.y, f.z) / 600));
                if (1 <= S && n.frustum.containsPoint(f) && u) {
                    f.project(n.camera),
                    f.x = (f.x + 1) / 2,
                    f.y = (f.y + 1) / 2;
                    let t = S / h.width;
                    c.save(),
                    c.translate(f.x * g, (1 - f.y) * v),
                    c.scale(t, t),
                    c.drawImage(h, -h.width / 2, -h.height / 2),
                    c.restore()
                }
            }
        }
        if (m.showFlash && p) {
            let t = 1.6 * g;
            c.drawImage(l, g * m.flashX - t / 2, v * m.flashY - t / 2, t, t)
        }
        if (y && 0 < m.crosshairType && !window.spectating) {
            let t = m.crosshairScale
              , e = g / 2
              , n = v / 2
              , i = e - t / 2
              , r = n - t / 2
              , s = 4
              , a = 21
              , o = m.crosshairThick
              , l = m.crosshairLen
              , p = m.crosshairAlways;
            c.save(),
            c.globalAlpha = 1 < m.crosshairType && p ? 1 : m.crosshairOpacity,
            4 == m.crosshairType && (c.translate(0, 0),
            c.beginPath(),
            c.drawImage(m.crosshairImage, e - m.crosshairImage.width / 2, n - m.crosshairImage.height / 2)),
            (2 == m.crosshairType || 3 == m.crosshairType) && (0 == m.crosshairStyle ? (d(c, e - .5 * o, n - l, o, 2 * l),
            d(c, e - l, n - o / 2, 2 * l, o),
            d(c, e - .5 * o, n - l, o, 2 * l, 1, !1, !1)) : 1 == m.crosshairStyle || 2 == m.crosshairStyle ? d(c, i + t / 2 - 2 * l / 2, r + t / 2 - 2 * l / 2, 2 * l, 2 * l, o / 2, !0, !0, 2 == m.crosshairStyle) : (3 == m.crosshairStyle || 4 == m.crosshairStyle) && d(c, i + t / 2 - 2 * l / 2, r + t / 2 - 2 * l / 2, 2 * l, 2 * l, o / 2, !1, !0, 4 == m.crosshairStyle)),
            c.globalAlpha = m.crosshairOpacity,
            (1 == m.crosshairType || 3 == m.crosshairType) && (d(c, i, r + t / 2 - s / 2, a, s),
            d(c, i + t - a, r + t / 2 - s / 2, a, s),
            d(c, i + t / 2 - s / 2, r, s, a),
            d(c, i + t / 2 - s / 2, r + t - a, s, a)),
            c.restore()
        }
        c.restore()
    }
    ,
    t.exports = a
}
, function(t, e, n) {
    t.exports = function(t, e) {
        return function() {
            for (var n = Array(arguments.length), i = 0; i < n.length; i++)
                n[i] = arguments[i];
            return t.apply(e, n)
        }
    }
}
, function(t, e, n) {
    var i = n(34);
    function r(t) {
        return encodeURIComponent(t).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
    }
    t.exports = function(t, e, n) {
        if (!e)
            return t;
        var s;
        if (n)
            s = n(e);
        else if (i.isURLSearchParams(e))
            s = e.toString();
        else {
            var a = [];
            i.forEach(e, function(t, e) {
                null == t || (i.isArray(t) ? e += "[]" : t = [t],
                i.forEach(t, function(t) {
                    i.isDate(t) ? t = t.toISOString() : i.isObject(t) && (t = JSON.stringify(t)),
                    a.push(r(e) + "=" + r(t))
                }))
            }),
            s = a.join("&")
        }
        if (s) {
            var o = t.indexOf("#");
            -1 !== o && (t = t.slice(0, o)),
            t += (-1 === t.indexOf("?") ? "?" : "&") + s
        }
        return t
    }
}
, function(t, e, n) {
    t.exports = function(t) {
        return !(!t || !t.__CANCEL__)
    }
}
, function(t, e, n) {
    (function(e) {
        var i = n(34)
          , r = n(137)
          , s = {
            "Content-Type": "application/x-www-form-urlencoded"
        };
        function a(t, e) {
            !i.isUndefined(t) && i.isUndefined(t["Content-Type"]) && (t["Content-Type"] = e)
        }
        var o, c = {
            adapter: (void 0 !== e && "[object process]" === Object.prototype.toString.call(e) ? o = n(100) : "undefined" != typeof XMLHttpRequest && (o = n(100)),
            o),
            transformRequest: [function(t, e) {
                return r(e, "Accept"),
                r(e, "Content-Type"),
                i.isFormData(t) || i.isArrayBuffer(t) || i.isBuffer(t) || i.isStream(t) || i.isFile(t) || i.isBlob(t) ? t : i.isArrayBufferView(t) ? t.buffer : i.isURLSearchParams(t) ? (a(e, "application/x-www-form-urlencoded;charset=utf-8"),
                t.toString()) : i.isObject(t) ? (a(e, "application/json;charset=utf-8"),
                JSON.stringify(t)) : t
            }
            ],
            transformResponse: [function(t) {
                if ("string" == typeof t)
                    try {
                        t = JSON.parse(t)
                    } catch (t) {}
                return t
            }
            ],
            timeout: 0,
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            maxContentLength: -1,
            validateStatus: function(t) {
                return 200 <= t && 300 > t
            }
        };
        c.headers = {
            common: {
                Accept: "application/json, text/plain, */*"
            }
        },
        i.forEach(["delete", "get", "head"], function(t) {
            c.headers[t] = {}
        }),
        i.forEach(["post", "put", "patch"], function(t) {
            c.headers[t] = i.merge(s)
        }),
        t.exports = c
    }
    ).call(this, n(14))
}
, function(t, e, n) {
    var i = n(34)
      , r = n(138)
      , s = n(97)
      , a = n(140)
      , o = n(141)
      , c = n(101);
    t.exports = function(t) {
        return new Promise(function(e, l) {
            var p = t.data
              , h = t.headers;
            i.isFormData(p) && delete h["Content-Type"];
            var u = new XMLHttpRequest;
            if (t.auth) {
                var f = t.auth.username || ""
                  , d = t.auth.password || "";
                h.Authorization = "Basic " + btoa(f + ":" + d)
            }
            if (u.open(t.method.toUpperCase(), s(t.url, t.params, t.paramsSerializer), !0),
            u.timeout = t.timeout,
            u.onreadystatechange = function() {
                if (u && 4 === u.readyState && (0 !== u.status || u.responseURL && 0 === u.responseURL.indexOf("file:"))) {
                    var n = "getAllResponseHeaders"in u ? a(u.getAllResponseHeaders()) : null
                      , i = {
                        data: t.responseType && "text" !== t.responseType ? u.response : u.responseText,
                        status: u.status,
                        statusText: u.statusText,
                        headers: n,
                        config: t,
                        request: u
                    };
                    r(e, l, i),
                    u = null
                }
            }
            ,
            u.onabort = function() {
                u && (l(c("Request aborted", t, "ECONNABORTED", u)),
                u = null)
            }
            ,
            u.onerror = function() {
                l(c("Network Error", t, null, u)),
                u = null
            }
            ,
            u.ontimeout = function() {
                l(c("timeout of " + t.timeout + "ms exceeded", t, "ECONNABORTED", u)),
                u = null
            }
            ,
            i.isStandardBrowserEnv()) {
                var m = n(142)
                  , g = (t.withCredentials || o(t.url)) && t.xsrfCookieName ? m.read(t.xsrfCookieName) : void 0;
                g && (h[t.xsrfHeaderName] = g)
            }
            if ("setRequestHeader"in u && i.forEach(h, function(t, e) {
                void 0 === p && "content-type" === e.toLowerCase() ? delete h[e] : u.setRequestHeader(e, t)
            }),
            t.withCredentials && (u.withCredentials = !0),
            t.responseType)
                try {
                    u.responseType = t.responseType
                } catch (e) {
                    if ("json" !== t.responseType)
                        throw e
                }
            "function" == typeof t.onDownloadProgress && u.addEventListener("progress", t.onDownloadProgress),
            "function" == typeof t.onUploadProgress && u.upload && u.upload.addEventListener("progress", t.onUploadProgress),
            t.cancelToken && t.cancelToken.promise.then(function(t) {
                u && (u.abort(),
                l(t),
                u = null)
            }),
            void 0 === p && (p = null),
            u.send(p)
        }
        )
    }
}
, function(t, e, n) {
    var i = n(139);
    t.exports = function(t, e, n, r, s) {
        var a = new Error(t);
        return i(a, e, n, r, s)
    }
}
, function(t, e, n) {
    var i = n(34);
    t.exports = function(t, e) {
        e = e || {};
        var n = {};
        return i.forEach(["url", "method", "params", "data"], function(t) {
            void 0 !== e[t] && (n[t] = e[t])
        }),
        i.forEach(["headers", "auth", "proxy"], function(r) {
            i.isObject(e[r]) ? n[r] = i.deepMerge(t[r], e[r]) : void 0 === e[r] ? i.isObject(t[r]) ? n[r] = i.deepMerge(t[r]) : void 0 !== t[r] && (n[r] = t[r]) : n[r] = e[r]
        }),
        i.forEach(["baseURL", "transformRequest", "transformResponse", "paramsSerializer", "timeout", "withCredentials", "adapter", "responseType", "xsrfCookieName", "xsrfHeaderName", "onUploadProgress", "onDownloadProgress", "maxContentLength", "validateStatus", "maxRedirects", "httpAgent", "httpsAgent", "cancelToken", "socketPath"], function(i) {
            void 0 === e[i] ? void 0 !== t[i] && (n[i] = t[i]) : n[i] = e[i]
        }),
        n
    }
}
, function(t, e, n) {
    function i(t) {
        this.message = t
    }
    i.prototype.toString = function() {
        return "Cancel" + (this.message ? ": " + this.message : "")
    }
    ,
    i.prototype.__CANCEL__ = !0,
    t.exports = i
}
, function(t, e, n) {
    n(61);
    var i = n(7)
      , r = "undefined" != typeof Storage;
    function s(t) {
        r && localStorage.removeItem(t)
    }
    window.saveVal = function(t, e) {
        r && localStorage.setItem(t, e)
    }
    ,
    window.getSavedVal = function(t) {
        return r ? localStorage.getItem(t) : null
    }
    ;
    var a = new (n(79));
    (function() {
        for (var t = ["Profile", "Shop", "Social", "Maps", "Mods", "Settings", "Host", "Browser", "Join"], e = 0; e < t.length; e++)
            document.getElementById("menuBtn" + t[e]).innerHTML = a.get("menu.btn." + t[e].toLowerCase());
        customizeButton.innerHTML = a.get("menu.btn.customize"),
        inviteButton.innerHTML = a.get("menu.btn.invite")
    }
    )(),
    window.openURL = function(t) {
        window.open(t, "_blank")
    }
    ;
    var o = n(105).default;
    o.PING_REGION_CACHE_KEY = "pingRegion4";
    var c = new o("krunker.io")
      , l = null
      , p = null;
    function h(t) {
        c.switchGame(t)
    }
    function u(t, e) {
        hostGameMsg && (hostGameMsg.innerHTML = t),
        e && function(t) {
            var e = c.generateHref(t);
            window.history.replaceState({}, "Krunker", e),
            windows[1].lastLoadTime = 0,
            l = t
        }(e),
        fe = null,
        de = null
    }
    window.switchServer = h,
    window.checkedSwitchServer = function(t, e) {
        e.innerText = "...",
        c.fetchGameInfo(t).then(n=>{
            n.clients >= n.maxClients ? (e.innerText = a.get("matchmaker.full"),
            setTimeout(()=>{
                e.innerText = `${Math.min(n.clients, n.maxClients)}/${n.maxClients}`
            }
            , 1e3)) : h(t)
        }
        )
    }
    ,
    window.createPrivateRoom = function() {
        for (var t, e = [], n = document.getElementById("rawMapData"), r = 0; r < C.length; r++)
            (t = document.getElementById("gameMap" + r)) && t.checked && e.push(r);
        if (0 != e.length || fe || "" != rawMapData.value) {
            var s = [];
            for (r = 0; r < R.length; r++)
                document.getElementById("gameMode" + r).checked && s.push(r);
            if (0 != s.length) {
                var o = [];
                for (r = 0; r < _.classes.length; r++)
                    document.getElementById("gameClass" + r).checked && o.push(r);
                if (0 != o.length) {
                    var c, l = {
                        customMap: fe,
                        rawMapData: n ? n.value : null,
                        private: makePrivate.checked,
                        maps: e,
                        modes: s,
                        classes: o
                    };
                    for (r = 0; r < i.serverConfig.length; r++)
                        c = document.getElementById("customS" + i.serverConfig[r].varN),
                        tmpV = i.serverConfig[r].bool ? c ? c.checked : 0 : i.serverConfig[r].input ? c ? d.sanitizeStr(c.value) : 0 : c ? parseFloat(c.value) : 0,
                        l[i.serverConfig[r].varN] = tmpV;
                    M.send("custom", l),
                    hostGameMsg.innerHTML = a.get("generic.wait")
                } else
                    hostGameMsg.innerHTML = "<span class='error'>" + a.get("custom.class.missing") + "</span>"
            } else
                hostGameMsg.innerHTML = "<span class='error'>" + a.get("custom.mode.missing") + "</span>"
        } else
            hostGameMsg.innerHTML = "<span class='error'>" + a.get("custom.map.missing") + "</span>"
    }
    ,
    Object.defineProperty(console, "_commandLineAPI", {
        get: function() {
            throw ""
        }
    });
    var f = n(4);
    f.OBJLoader = n(63)(f),
    f.Shaders = n(64)(f);
    var d = n(8)
      , m = n(95)
      , g = new (n(56))(f,d,i,m)
      , v = window.SOUND = new (n(73))(d,i)
      , y = new (n(74))(g,i)
      , b = n(127)
      , w = new (n(128))(g,i)
      , x = n(129)
      , M = n(83)
      , _ = n(85).obj;
    _ = new _(!1,0,null,g,v,y);
    var S = new (n(147))(g,f,b,d,_,i,M);
    _.controls = S;
    var T, E, k, A, L, P, C = n(39).maps, R = n(39).modes, I = n(88), O = n(70).Player, D = new (n(150)), z = n(35), B = (new f.Vector3,
    !1), N = null, j = !1;
    window.locked = !1;
    var U = []
      , F = !0
      , H = 0
      , G = 0
      , V = 0
      , W = -1;
    window.idleTimer = 0;
    var Y, q, X, Z, K = !0, J = !0, Q = !0, tt = [], et = "", nt = "", it = !1, rt = getSavedVal("krk_lastMod") || "";
    function st(t) {
        rt = t,
        saveVal("krk_lastMod", t)
    }
    st(rt);
    var at = 1
      , ot = 1
      , ct = 1700
      , lt = 900;
    function pt() {
        var t = window.innerWidth
          , e = window.innerHeight
          , n = ct * ot
          , i = lt * ot
          , r = t / n
          , s = e / i;
        s < r ? (at = s,
        uiBase.style.transform = "scale(" + s.toFixed(3) + ")",
        uiBase.style.width = (t / s).toFixed(3) + "px",
        uiBase.style.height = i + "px") : (at = r,
        uiBase.style.transform = "scale(" + r.toFixed(3) + ")",
        uiBase.style.width = n + "px",
        uiBase.style.height = (e / r).toFixed(3) + "px")
    }
    window.addEventListener("resize", pt),
    pt(),
    window.checkTerms = function(t) {
        t ? (consentBlock.style.display = "none",
        saveVal("consent", 1)) : $("#consentShake").effect("shake")
    }
    ;
    var ht = ["img/button/button-normal.png", "img/button/button-hover.png", "img/button/button-pressed.png", "img/social-buttons/discord-normal.png", "img/social-buttons/discord-hover.png", "img/social-buttons/discord-pressed.png", "img/social-buttons/reddit-normal.png", "img/social-buttons/reddit-hover.png", "img/social-buttons/reddit-pressed.png", "img/social-buttons/twitter-normal.png", "img/social-buttons/twitter-hover.png", "img/social-buttons/twitter-pressed.png", "img/social-buttons/fandom-normal.png", "img/social-buttons/fandom-hover.png", "img/social-buttons/fandom-pressed.png", "img/social-buttons/kr-normal.png", "img/social-buttons/kr-hover.png", "img/social-buttons/kr-pressed.png"]
      , ut = [];
    window.addEventListener("load", function() {
        for (var t of ht) {
            var e = new Image;
            e.src = t,
            ut.push(e)
        }
    });
    const ft = eval;
    Math.PI2 = 2 * Math.PI,
    Math.lerpAngle = function(t, e, n) {
        Math.abs(e - t) > Math.PI && (t > e ? e += Math.PI2 : t += Math.PI2);
        var i = e + (t - e) * n;
        return 0 <= i && i <= Math.PI2 ? i : i % Math.PI2
    }
    ,
    console.warn = function() {}
    ,
    console.info = function() {}
    ;
    var dt = !1;
    window.toggleStrm = function(t, e=!1) {
        dt = t,
        e || (t ? window.history.pushState(document.title, document.title, "/") : window.history.pushState(document.title, document.title, c.generateHref(l))),
        Tn(_n, Sn)
    }
    ;
    var mt = !1;
    window.loading = !1;
    var gt = !1;
    window.spectating = !1,
    window.toggleSpect = function(t) {
        gt = t
    }
    ;
    var vt, yt, bt = !1;
    function wt() {
        window.innerWidth,
        vt = window.innerHeight,
        yt = vt / at / 693,
        g.resize()
    }
    function xt(t) {
        return i.apiURL + t
    }
    window.toggleChal = function(t) {
        bt = t
    }
    ,
    window.enterGame = function() {
        if (_.singlePlayer && !mt) {
            Je("0:00");
            var t = _.getSpawnPoint(null, !0)
              , e = _.classes[parseInt(classIndex)];
            ln([M.socketId, 1, t.x, t.y, t.z, "TEST", classIndex, e.health, e.health, null, 100, null, [null == Zt[e.loadout[0]] ? -1 : Zt[e.loadout[0]], null == Zt[e.loadout[1]] ? -1 : Zt[e.loadout[1]]], null, null, e.secondary ? parseInt(Kt) : null, !1, null, -((t.dir || 0) + 1) * Math.PI / 2]),
            mt = !0,
            Tn([1, "TEST", 0, 0, 0, 0]),
            b.toggleMenu(!1)
        } else if (M.connected && (!mt || window.spectating && !gt)) {
            bloodDisplay.style.display = "none",
            mt = !0,
            window.idleTimer = 0,
            b.toggleMenu(!1),
            instructions.innerHTML = a.get("generic.loading"),
            window.loading = !0;
            e = parseInt(classIndex);
            var n = _.classes[e].loadout
              , i = [null == Zt[n[0]] ? -1 : Zt[n[0]], null == Zt[n[1]] ? -1 : Zt[n[1]]];
            M.send("etrg", [e, parseInt(sn), i, parseInt(qt), parseInt(Yt), parseInt(Kt), gt ? 1 : 0, bt ? 1 : 0, Wt])
        }
    }
    ,
    window.addEventListener("resize", wt),
    wt(),
    window.toggleAd = function() {}
    ;
    var Mt = 0;
    function _t(t) {
        E && (E.funds = t),
        zt()
    }
    function St(t, e) {
        window.idleTimer = 0,
        t ? purchaseError() : (E && (E.funds = e),
        zt(),
        updateWindow(null, !0),
        b.toggleMenuHider(!0),
        purchaseLoad.style.display = "none")
    }
    window.cancelPurchase = function() {
        window.idleTimer = 0,
        showWindow(14),
        instructions.style.display = "block",
        Mt = 0,
        context.toggleMenuHider(!0),
        purchaseLoad.style.display = "none"
    }
    ,
    window.showPurchase = function(t) {
        window.idleTimer = 0,
        Mt = t,
        purchaseHolder.style.display = "block";
        var e = document.getElementById("paypal-button");
        e && (e.innerHTML = ""),
        E && paypal.Button.render({
            style: {
                size: "large"
            },
            env: "production",
            commit: !0,
            payment: function(t, e) {
                return purchaseHolder.style.display = "none",
                e.request.post(xt("/my-api/create-payment/"), {
                    pIndex: Mt,
                    acID: E.id
                }).then(function(t) {
                    return t.id
                })
            },
            onAuthorize: function(t, e) {
                return e.request.post(xt("/my-api/execute-payment/"), {
                    pIndex: Mt,
                    acID: E.id,
                    paymentID: t.paymentID,
                    payerID: t.payerID
                }).then(function(t) {
                    t && null != t.funds && null != t.funds ? (E && (E.funds = t.funds),
                    zt(),
                    updateWindow(null, !0),
                    b.toggleMenuHider(!0),
                    purchaseLoad.style.display = "none") : purchaseError()
                })
            },
            onError: function() {
                purchaseError()
            }
        }, "#paypal-button")
    }
    ,
    purchaseHolder.onclick = function() {
        purchaseHolder.style.display = "none"
    }
    ,
    window.purchaseError = function() {
        showWindow(),
        b.toggleMenuHider(!1),
        instructions.style.display = "none",
        purchaseLoad.style.display = "block",
        purchLoadRing.style.display = "none",
        purchaseLabel.innerHTML = a.get("purchase.error") + " <a href='javascript:;' onclick='cancelPurchase()'>" + a.get("purchase.error.click") + "<div style='color:rgba(255,255,255,0.3);font-size:20px'>" + a.get("purchase.error.limit") + "</div>"
    }
    ;
    const Tt = new FileReader;
    var Et, kt, At = !1, Lt = 0, Pt = {};
    function Ct() {
        mt = !1,
        window.idleTimer = 0,
        b.toggleMenu(!0),
        S.toggle(!1),
        Ue = {
            states: []
        }
    }
    window.voiceChat = function(t, e) {
        if (Lt) {
            dt && D && (e = d.scrambleS(e));
            try {
                var n = new Howl({
                    src: [t],
                    volume: Lt
                });
                n.on("load", function() {
                    n.duration() <= i.voiceChatMaxLength && (n.on("end", function() {
                        if (Pt[e]--,
                        0 >= Pt[e]) {
                            var t = document.getElementById("speaker" + e);
                            t && t.parentElement.removeChild(t),
                            delete Pt[e]
                        }
                    }),
                    !Pt[e] && (Pt[e] = 0,
                    speakerDisplay.innerHTML += "<div id='speaker" + e + "' class='voiceSpeaker'>" + e + " <i class='material-icons' style='color:#fff;font-size:35px;vertical-align:middle'>volume_down</i></div>"),
                    Pt[e]++,
                    n.play())
                })
            } catch (e) {}
        }
    }
    ,
    Tt.addEventListener("loadend", function() {
        var t = Tt.result;
        M.send("vc", t)
    }),
    window.toggleRecord = function(t) {
        (T || window.spectating) && (t && !At ? (voiceDisplay.style.opacity = .9,
        At = !0,
        navigator.mediaDevices.getUserMedia({
            audio: !0,
            video: !1
        }).then(function(t) {
            (Et = new MediaRecorder(t,{
                mimetype: "audio/ogg",
                bitsPerSecond: 6e3
            })).start();
            const e = [];
            Et.addEventListener("dataavailable", function(t) {
                e.push(t.data)
            }),
            Et.addEventListener("stop", function() {
                recTimer.style.display = "none",
                voiceDisplay.style.opacity = .5;
                var t = new Blob(e,{
                    type: "audio/ogg; codecs=opus"
                });
                Tt.readAsDataURL(t)
            }),
            recTimer.style.display = "inline-block",
            recTimer.innerHTML = i.voiceChatMaxLength;
            var n = i.voiceChatMaxLength;
            kt = setInterval(function() {
                n--,
                recTimer.innerHTML = n,
                0 >= n && (At = !1,
                Et.stop(),
                clearInterval(kt))
            }, 1e3)
        }).catch(function() {
            At = !1,
            kt && clearInterval(kt),
            voiceDisplay.style.opacity = .5
        })) : !t && At && Et && (At = !1,
        Et.stop(),
        clearInterval(kt)))
    }
    ,
    window.updateSliderLabel = function(t, e) {
        var n = document.getElementById("customSet" + t);
        n && (n.innerHTML = e)
    }
    ,
    window.setSetting = function(t, e) {
        (Rt[t].min || Rt[t].max) && (e = Math.min(Rt[t].max, Math.max(Rt[t].min, e))),
        document.getElementById("slid_" + t) && (document.getElementById("slid_" + t).value = e),
        document.getElementById("slid_input_" + t) && (document.getElementById("slid_input_" + t).value = e),
        Rt[t].set(e),
        Rt[t].val = e,
        saveVal(`kro_setngss_${t}`, e)
    }
    ,
    window.resetSettings = function() {
        confirm(a.get("settings.reset.confirm")) && (Object.keys(localStorage).filter(t=>t.includes("kro_setngss_") || t.includes("cont_")).forEach(t=>localStorage.removeItem(t)),
        location.reload())
    }
    ;
    var Rt = {
        changeControls: {
            name: "<div style='width:100%'><a href='javascript:;' onclick='showWindow(7);' class='menuLink'>" + a.get("settings.controls.change") + "</a> | <a onclick='resetSettings()' class='+'>" + a.get("settings.reset") + "</a></div>",
            html: function() {
                return ""
            }
        },
        defaultRegion: {
            name: a.get("settings.server.region"),
            pre: "<div class='setHed'>" + a.get("settings.server.header") + "</div>",
            get val() {
                return localStorage[o.PING_REGION_CACHE_KEY]
            },
            set val(t) {},
            html: function() {
                var t = "<select onchange='setSetting(\"defaultRegion\", this.value)' class='inputGrey'>";
                for (var e of ii)
                    t += "<option value='" + e + "' " + (e == Rt.defaultRegion.val ? "selected" : "") + ">",
                    t += i.regionNames[e],
                    t += "</option>";
                return t += "</select>"
            },
            set: function(t) {
                t && i.isProd && localStorage.setItem(o.PING_REGION_CACHE_KEY, t)
            }
        },
        resolution: {
            name: a.get("settings.quality.res"),
            pre: "<div class='setHed'>" + a.get("settings.quality.header") + "</div>",
            val: .6,
            min: .1,
            max: 2,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_resolution' min='0.1' max='2' value='${Rt.resolution.val}' oninput='setSetting("resolution", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_resolution' min='0.1' max='2' step='0.1'" value='${Rt.resolution.val}' class='sliderM' oninput='setSetting("resolution", this.value)'></div>`
            },
            set: function(t) {
                g.setResMlt(t)
            }
        },
        particles: {
            name: a.get("settings.quality.part"),
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("particles", this.checked)'\n        ${Rt.particles.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                y.active = t
            }
        },
        showTrails: {
            name: a.get("settings.quality.trails"),
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showTrails", this.checked)'\n        ${Rt.showTrails.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                y.showTrails = t
            }
        },
        muzzleFlash: {
            name: a.get("settings.quality.mflash"),
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("muzzleFlash", this.checked)'\n        ${Rt.muzzleFlash.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                y.showMuzzle = t
            }
        },
        sniperFlap: {
            name: "Sniper Flap",
            val: !1,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("sniperFlap", this.checked)'\n        ${Rt.sniperFlap.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                g.sniperFlap = t
            }
        },
        showUI: {
            name: a.get("settings.interface.ui"),
            pre: "<div class='setHed'>" + a.get("settings.interface.header") + "</div>",
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showUI", this.checked)'\n        ${Rt.showUI.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                b.hideGameUI = !t,
                chatUI.style.display = t ? "block" : "none"
            }
        },
        dynamicHP: {
            name: a.get("settings.interface.hp"),
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("dynamicHP", this.checked)'\n        ${Rt.dynamicHP.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                m.dynamicHP = t
            }
        },
        showChat: {
            name: a.get("settings.interface.chat"),
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showChat", this.checked)'\n        ${Rt.showChat.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                chatHolder.style.display = t ? "block" : "none"
            }
        },
        showKills: {
            name: a.get("settings.interface.kills"),
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showKills", this.checked)'\n        ${Rt.showKills.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                K = t
            }
        },
        showMessages: {
            name: a.get("settings.interface.messages"),
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showMessages", this.checked)'\n        ${Rt.showMessages.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                J = t
            }
        },
        showUnboxings: {
            name: a.get("settings.interface.unboxings"),
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showUnboxings", this.checked)'\n        ${Rt.showUnboxings.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                Q = t
            }
        },
        showPing: {
            name: a.get("settings.interface.ping"),
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showPing", this.checked)'\n        ${Rt.showPing.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                pingDisplay.style.display = t ? "block" : "none"
            }
        },
        showFPS: {
            name: a.get("settings.interface.fps"),
            val: !1,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showFPS", this.checked)'\n        ${Rt.showFPS.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                fpsDisplay.style.display = menuFPSDisplay.style.display = t ? "block" : "none"
            }
        },
        showDeaths: {
            name: a.get("settings.interface.deaths"),
            val: !1,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showDeaths", this.checked)'\n        ${Rt.showDeaths.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                deathCount.style.display = t ? "inline-block" : "none"
            }
        },
        crosshairSho: {
            name: a.get("settings.crosshair.type"),
            pre: "<div class='setHed'>" + a.get("settings.crosshair.header") + "</div>",
            val: 1,
            html: function() {
                return `<select class='inputGrey' onchange="setSetting('crosshairSho', this.value)">\n            <option value="0"${0 == Rt.crosshairSho.val ? " selected" : ""}>${a.get("generic.off")}</option>\n            <option value="1"${1 == Rt.crosshairSho.val ? " selected" : ""}>${a.get("generic.default")}</option>\n            <option value="2"${2 == Rt.crosshairSho.val ? " selected" : ""}>${a.get("settings.crosshair.type.2")}</option>\n            <option value="3"${3 == Rt.crosshairSho.val ? " selected" : ""}>${a.get("settings.crosshair.type.3")}</option>\n            <option value="4"${4 == Rt.crosshairSho.val ? " selected" : ""}>${a.get("settings.crosshair.type.4")}</option>\n            </select>`
            },
            set: function(t) {
                m.crosshairType = t;
                let e = ["crosshairStyle", "crosshairAlways", "crosshairLen", "crosshairThick"];
                for (let n of e) {
                    Rt[n].hide = "crosshairAlways" == n ? 2 > t : 4 == t || 2 > t;
                    let e = document.getElementById(n + "_div");
                    e && (e.style.display = Rt[n].hide ? "none" : "block")
                }
                Rt.crosshairImage.hide = 4 != t;
                let n = document.getElementById("crosshairImage_div");
                n && (n.style.display = 4 == t ? "block" : "none")
            }
        },
        crosshairStyle: {
            name: a.get("settings.crosshair.style"),
            val: 0,
            hide: !0,
            html: function() {
                return `<select class='inputGrey' onchange="setSetting('crosshairStyle', this.value)">\n            <option value="0"${0 == Rt.crosshairStyle.val ? " selected" : ""}>${a.get("settings.crosshair.style.0")}</option>\n            <option value="1"${1 == Rt.crosshairStyle.val ? " selected" : ""}>${a.get("settings.crosshair.style.1")}</option>\n            <option value="2"${2 == Rt.crosshairStyle.val ? " selected" : ""}>${a.get("settings.crosshair.style.2")}</option>\n            <option value="3"${3 == Rt.crosshairStyle.val ? " selected" : ""}>${a.get("settings.crosshair.style.3")}</option>\n            <option value="4"${4 == Rt.crosshairStyle.val ? " selected" : ""}>${a.get("settings.crosshair.style.4")}</option>\n            </select>`
            },
            set: function(t) {
                m.crosshairStyle = t
            }
        },
        crosshairImage: {
            name: a.get("settings.crosshair.image"),
            val: "",
            hide: !0,
            html: function() {
                return `<input type='url' placeholder='${a.get("settings.crosshair.image.paste")}' name='url' class='inputGrey'\n            value='${Rt.crosshairImage.val}' oninput='setSetting("crosshairImage", this.value)'/>`
            },
            set: function(t) {
                t = d.isURL(t) && !/\.svg/.test(t) ? t : "",
                m.crosshairImage.src != t && t.length && (m.crosshairImage.src = t)
            }
        },
        crosshairAlways: {
            name: a.get("settings.crosshair.always"),
            val: !1,
            hide: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("crosshairAlways", this.checked)'\n            ${Rt.crosshairAlways.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                m.crosshairAlways = t
            }
        },
        crosshairColor: {
            name: a.get("settings.crosshair.color"),
            val: "#ffffff",
            html: function() {
                return `<input type='color' id='head' name='color' value='${Rt.crosshairColor.val}' oninput='setSetting("crosshairColor", this.value)' style='float:right;margin-top:5px'/>`
            },
            set: function(t) {
                m.crosshairColor = t
            }
        },
        crosshairShadow: {
            name: a.get("settings.crosshair.shadow"),
            val: "#000000",
            html: function() {
                return `<input type='color' id='head' name='color' value='${Rt.crosshairShadow.val}' oninput='setSetting("crosshairShadow", this.value)' style='float:right;margin-top:5px'/>`
            },
            set: function(t) {
                m.crosshairShadow = t
            }
        },
        crosshairLen: {
            name: a.get("settings.crosshair.size"),
            val: 16,
            min: 2,
            max: 50,
            hide: !0,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_crosshairLen' min='2' max='50' value='${Rt.crosshairLen.val}' oninput='setSetting("crosshairLen", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' min='2' max='50' step='1' value='${Rt.crosshairLen.val}' class='sliderM' oninput="setSetting('crosshairLen', this.value)"></div>`
            },
            set: function(t) {
                m.crosshairLen = t
            }
        },
        crosshairThick: {
            name: a.get("settings.crosshair.thickness"),
            val: 2,
            min: 2,
            max: 20,
            hide: !0,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_crosshairThick' min='2' max='20' value='${Rt.crosshairThick.val}' oninput='setSetting("crosshairThick", this.value)' style='border-width:0px'/>\n          <div class='slidecontainer'>\n          <input type='range' min='2' max='20' step='1' value='${Rt.crosshairThick.val}' class='sliderM' oninput="setSetting('crosshairThick', this.value)"></div>`
            },
            set: function(t) {
                m.crosshairThick = t
            }
        },
        sensitivity: {
            name: a.get("settings.gameplay.sensitivity"),
            pre: "<div class='setHed'>" + a.get("settings.gameplay.header") + "</div>",
            val: 1,
            min: .1,
            max: 15,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_sensitivity' min='0.1' max='15' value='${Rt.sensitivity.val}' oninput='setSetting("sensitivity", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_sensitivity' min='0.1' max='15' step='0.1' value='${Rt.sensitivity.val}' class='sliderM' oninput='setSetting("sensitivity", this.value)'></div>`
            },
            set: function(t) {
                S.sensMlt = t
            }
        },
        aimSensitivity: {
            name: a.get("settings.gameplay.aimsens"),
            val: 1,
            min: .1,
            max: 15,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_aimSensitivity' min='0.1' max='15' value='${Rt.aimSensitivity.val}' oninput='setSetting("aimSensitivity", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_aimSensitivity' min='0.1' max='15' step='0.1' value='${Rt.aimSensitivity.val}' class='sliderM' oninput='setSetting("aimSensitivity", this.value)'></div>`
            },
            set: function(t) {
                S.sensAimMlt = t
            }
        },
        fov: {
            name: a.get("settings.gameplay.fov"),
            val: i.fov,
            min: 60,
            max: 120,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_fov' min='60' max='120' value='${Rt.fov.val}' oninput='setSetting("fov", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_fov' min='60' max='120' step='5' value='${Rt.fov.val}"' class='sliderM' oninput='setSetting("fov", this.value)'></div>`
            },
            set: function(t) {
                g.setFov(t)
            }
        },
        fpsFOV: {
            name: a.get("settings.gameplay.fps"),
            val: i.fov,
            min: 60,
            max: 120,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_fpsFOV' min='60' max='120' value='${Rt.fpsFOV.val}' oninput='setSetting("fpsFOV", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_fpsFOV' min='60' max='120' step='5' value='${Rt.fpsFOV.val}' class='sliderM' oninput='setSetting("fpsFOV", this.value)'></div>`
            },
            set: function(t) {
                g.setFPSFov(t)
            }
        },
        streamMode: {
            name: a.get("settings.gameplay.streamer"),
            val: !1,
            dontInit: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("streamMode", this.checked)'\n        ${Rt.streamMode.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                toggleStrm(t)
            }
        },
        challMode: {
            name: a.get("settings.gameplay.challenge"),
            val: !1,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("challMode", this.checked)'\n        ${Rt.challMode.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                toggleChal(t)
            }
        },
        invertY: {
            name: a.get("settings.gameplay.invert"),
            val: !1,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("invertY", this.checked)'\n        ${Rt.invertY.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                S.invertY = t
            }
        },
        sound: {
            name: a.get("settings.audio.sound"),
            pre: "<div class='setHed'>" + a.get("settings.audio.header") + "</div>",
            val: 1,
            min: 0,
            max: 1,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_sound' min='0' max='1' value='${Rt.sound.val}' oninput='setSetting("sound", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_sound' min='0' max='1' step='0.1' value='${Rt.sound.val}' class='sliderM' oninput='setSetting("sound", this.value)'></div>`
            },
            set: function(t) {
                v.setVolume(t)
            }
        },
        voiceVolume: {
            name: a.get("settings.audio.voice"),
            val: 1,
            min: 0,
            max: 1,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_voiceVolume' min='0' max='1' value='${Rt.voiceVolume.val}' oninput='setSetting("voiceVolume", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_voiceVolume' min='0' max='1' step='0.1' value='${Rt.voiceVolume.val}' class='sliderM' oninput='setSetting("voiceVolume", this.value)'></div>`
            },
            set: function(t) {
                Lt = t
            }
        },
        showWeapon: {
            name: a.get("settings.editing.weapon"),
            pre: "<div class='setHed'>" + a.get("settings.editing.header") + "</div>",
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("showWeapon", this.checked)'\n        ${Rt.showWeapon.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                _.hideWeapon = !t,
                T && T.weaponMeshes[T.weaponIndex] && (T.weaponMeshes[T.weaponIndex].visible = t)
            }
        },
        weaponBob: {
            name: a.get("settings.editing.bobbing"),
            val: 1,
            min: 0,
            max: 2,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_weaponBob' min='0' max='2' value='${Rt.weaponBob.val}' oninput='setSetting("weaponBob", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_weaponBob' min='0' max='2' step='0.1' value='${Rt.weaponBob.val}' class='sliderM' oninput='setSetting("weaponBob", this.value)'></div>`
            },
            set: function(t) {
                g.weaponLean = t
            }
        },
        depthMap: {
            name: a.get("settings.editing.depth"),
            val: 0,
            min: 0,
            max: 500,
            html: function() {
                return `<input type='number' class='sliderVal' id='slid_input_depthMap' min='0' max='500' value='${Rt.depthMap.val}' oninput='setSetting("depthMap", this.value)' style='border-width:0px'/>\n            <div class='slidecontainer'>\n            <input type='range' id='slid_depthMap' min='0' max='500' step='5' value='${Rt.depthMap.val}' class='sliderM' oninput='setSetting("depthMap", this.value)'></div>`
            },
            set: function(t) {
                g.toggleDepthMap(t)
            }
        },
        greenScreen: {
            name: a.get("settings.editing.green"),
            val: !1,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("greenScreen", this.checked)'\n        ${Rt.greenScreen.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                g.toggleGreenscreen(t)
            }
        },
        ambientShading: {
            name: a.get("settings.shaders.ambient"),
            pre: "<div class='setHed'>" + a.get("settings.shaders.header") + "</div>",
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("ambientShading", this.checked)'\n        ${Rt.ambientShading.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                g.toggleMeshGroup("ambient_0", t),
                g.toggleMeshGroup("ambient_1", t)
            }
        },
        canLoadMods: {
            name: a.get("settings.mods.load"),
            pre: "<div class='setHed'>" + a.get("settings.mods.header") + "</div>",
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("canLoadMods", this.checked)'\n        ${Rt.canLoadMods.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                F = t
            }
        },
        autoLoadLast: {
            name: a.get("settings.mods.auto"),
            val: !1,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("autoLoadLast", this.checked)'\n        ${Rt.autoLoadLast.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function() {}
        },
        scopeBorders: {
            name: a.get("settings.mods.borders"),
            val: !0,
            html: function() {
                return `<label class='switch'><input type='checkbox' onclick='setSetting("scopeBorders", this.checked)'\n        ${Rt.scopeBorders.val ? "checked" : ""}><span class='slider'></span></label>`
            },
            set: function(t) {
                Array.from(document.querySelectorAll(".black")).forEach(e=>e.style.display = t ? "block" : "none")
            }
        },
        customScope: {
            name: a.get("settings.mods.scope"),
            val: "",
            html: function() {
                return `<input type='url' placeholder='${a.get("settings.mods.scope.paste")}' name='url' class='inputGrey'\n            value='${Rt.customScope.val}' oninput='setSetting("customScope", this.value)'/>`
            },
            set: function(t) {
                t = d.isURL(t) && !/\.svg/.test(t) ? t : "",
                recticleImg.src = 1 < t.length ? t : location.origin + "textures/recticle.png"
            }
        },
        customADSDot: {
            name: a.get("settings.mods.dot"),
            val: "",
            html: function() {
                return `<input type='url' id='customADSDot' placeholder='${a.get("settings.mods.dot.paste")}' name='url' class='inputGrey'\n            value='${Rt.customADSDot.val}' oninput='setSetting("customADSDot", this.value)'/>`
            },
            set: function(t) {
                (t = d.isURL(t) && !/\.svg/.test(t) ? t : "").length && (et = t)
            }
        },
        endMessage: {
            name: a.get("settings.mods.endmessage"),
            val: "",
            html: function() {
                return `<input type='text' placeholder='${a.get("settings.mods.endmessage")}' name='text' class='inputGrey'\n            value='${Rt.endMessage.val}' oninput='setSetting("endMessage", this.value)'/>`
            },
            set: function() {}
        },
        customProfile: {
            name: a.get("settings.mods.profile"),
            val: "",
            html: function() {
                return `<input type='url' id='customProfile' placeholder='${a.get("settings.mods.profile.paste")}' name='url' class='inputGrey'\n            value='${Rt.customProfile.val}' oninput='setSetting("customProfile", this.value)'/>`
            },
            set: function(t) {
                t = d.isURL(t) && !/\.svg/.test(t) ? t : "",
                nt = menuMiniProfilePic.src = hudClassImg.src = t
            }
        }
    };
    for (var It in Rt)
        if (Rt[It].set && !Rt[It].dontInit) {
            var Ot = getSavedVal(`kro_setngss_${It}`);
            Rt[It].val = null === Ot ? Rt[It].val : Ot,
            "false" == Rt[It].val && (Rt[It].val = !1),
            (Rt[It].min || Rt[It].max) && (Rt[It].val = Math.min(Rt[It].max, Math.max(Rt[It].min, Rt[It].val))),
            Rt[It].set(Rt[It].val, !0)
        }
    function Dt(t) {
        E && E.setData(t),
        updateWindow(5),
        zt()
    }
    function zt() {
        if (E) {
            signedOutHeaderBar.style.display = "none",
            signedInHeaderBar.style.display = null,
            E.level >= i.rewardMinLvl ? (claimHolder.style.display = "block",
            merchHolder.style.top = "170px",
            Gt()) : merchHolder.style.top = "75px",
            menuAccountUsername.innerText = E.name,
            menuKRCount.innerText = E.funds,
            menuLevelText.innerText = "LVL " + E.level,
            menuLevelBar.style.width = E.levelProg + "%";
            var t = d.levelIconId(E.level);
            menuLevelIcon.style.backgroundImage = "url('/img/levels/" + t + ".png')"
        } else
            signedOutHeaderBar.style.display = null,
            signedInHeaderBar.style.display = "none",
            claimHolder.style.display = "none",
            merchHolder.style.top = "75px"
    }
    function Bt(t) {
        try {
            accResp.innerHTML = t || "",
            accResp.style.display = t ? "block" : "none"
        } catch (t) {}
    }
    function Nt(t, e) {
        if (0 <= t && Bt(a.get("generic.wait")),
        0 != t || it)
            M.send("a", t, e);
        else {
            try {
                grecaptcha.reset()
            } catch (e) {}
            grecaptcha.render("captchaBtn", {
                sitekey: "6LchqW0UAAAAANOoHruD0Ql5aNJIZld4EwLiaf-W",
                callback: function(n) {
                    it = !0,
                    M.send("a", t, e, n)
                }
            }),
            grecaptcha.execute()
        }
    }
    function jt(t, e, n, r, s) {
        t ? Bt(t) : (E = new I(e,n,null,i),
        saveVal("krunker_id", e),
        saveVal("krunker_username", n),
        Dt(r),
        s && (saveVal("krunker_token", s),
        loginToken = s),
        updateWindow(null, !0))
    }
    new MutationObserver(t=>{
        1 < et.length && et != t[0].target.src && (t[0].target.src = et)
    }
    ).observe(aimDot, {
        attributes: !0,
        attributeFilter: ["src"]
    }),
    window.changeCont = function(t, e) {
        e || showWindow(7, !0),
        3 >= t ? S.inputChanger = t : 4 == t ? S.inputChanger = "jumpKey" : 5 == t ? S.inputChanger = "crouchKey" : 6 == t ? S.inputChanger = "swapKeyD" : 7 == t ? S.inputChanger = "swapKeyU" : 8 == t ? S.inputChanger = "reloadKey" : 9 == t ? S.inputChanger = "sprayKey" : 10 == t ? S.inputChanger = "aimKey" : 11 == t ? S.inputChanger = "chatKey" : 12 == t ? S.inputChanger = "voiceKey" : 13 == t ? S.inputChanger = "recordKey" : 14 == t ? S.inputChanger = "inspKey" : 15 == t ? S.inputChanger = "listKey" : 16 == t ? S.inputChanger = "interactKey" : 17 == t && (S.inputChanger = "dropKey"),
        document.getElementById("cont" + t).innerHTML = a.get("settings.controls.press")
    }
    ,
    window.registerAcc = function() {
        Nt(0, [accName.value, accPass.value])
    }
    ,
    window.loginAcc = function() {
        Nt(1, [accName.value, accPass.value, null])
    }
    ,
    window.logoutAcc = function() {
        Nt(-1),
        Bt(),
        s("krunker_id"),
        s("krunker_username"),
        s("krunker_token"),
        s("skins"),
        s("hatIndex"),
        s("backIndex"),
        qt = -1,
        Yt = -1,
        Zt = {},
        selectSecondary(2),
        windows[12].clanData = null,
        loginToken = null,
        E = null,
        Dt(),
        showWindow(5),
        re()
    }
    ;
    var Ut = !1;
    window.newTok = function(t) {
        t && (saveVal("krunker_token", t),
        loginToken = t)
    }
    ,
    window.logoutSessions = function(t) {
        t && (t.style.display = "none"),
        Ut = !0,
        M.send("las")
    }
    ;
    var Ft, Ht = 0;
    function Gt() {
        if ("block" == claimHolder.style.display) {
            Ht = i.rewardTime - ((Y || Date.now()) - E.lastReward);
            var t = d.getTimeH(Math.max(0, Ht));
            Ft != t && (Ft = t,
            claimTimer.innerHTML = "00:00:00" == t ? "" : t,
            merchHolder.style.top = "00:00:00" == t ? "170px" : "202px");
            var e = 0 >= Ht ? "./img/claim_0.png" : "./img/claim_1.png";
            claimImg.getAttribute("src") != e && (claimImg.src = e)
        }
    }
    function Vt(t, e) {
        _t(e),
        E && (E.lastReward = t),
        Gt()
    }
    window.claimReward = function() {
        0 < Ht || function() {
            if (ai)
                return void console.warn("Attempting to show pre ad when already showing");
            ai = !0;
            var t = document.createElement("script");
            t.src = "//cdn.playwire.com/bolt/js/zeus/embed.js",
            t.type = "text/javascript",
            t.setAttribute("charset", "utf-8"),
            t.setAttribute("data-config", "//config.playwire.com/1020124/v2/pre_content.json"),
            t.setAttribute("data-width", "640px"),
            t.setAttribute("data-height", "360px"),
            t.setAttribute("data-id", "pre-content-player"),
            t.setAttribute("data-hidden-container", "my-content"),
            t.setAttribute("data-onready", "window.boltEventHandlers");
            var e = document.getElementById("pre-content-container");
            e.style.display = "block",
            e.appendChild(t),
            ri = setTimeout(function() {
                let t = "none" != document.getElementById("my-content").style.display;
                t ? (console.log("Ad blocked"),
                oi(!1)) : console.log("Ad not blocked")
            }, 3e3),
            si = setTimeout(function() {
                console.log("Ad failed to load"),
                oi(!1)
            }, 6e4)
        }()
    }
    ,
    window.setClassIndex = function(t) {
        classIndex = t,
        menuMiniProfilePic.src = nt.length ? nt : "textures/classes/icon_" + classIndex + ".png"
    }
    ;
    var Wt = 1
      , Yt = getSavedVal("backIndex") || -1
      , qt = getSavedVal("hatIndex") || -1
      , Xt = getSavedVal("skins")
      , Zt = Xt ? JSON.parse(Xt) : {};
    setClassIndex(getSavedVal("classindex") || 0);
    var Kt = getSavedVal("secondaryInd") || 2
      , Jt = 0;
    window.selectHat = function(t) {
        saveVal("hatIndex", t),
        qt = t,
        re(),
        showWindow(3)
    }
    ,
    window.selectBack = function(t) {
        saveVal("backIndex", t),
        Yt = t,
        re(),
        showWindow(3)
    }
    ,
    window.selectSecondary = function(t) {
        saveVal("secondaryInd", t),
        Kt = t,
        re(),
        showWindow(3)
    }
    ,
    window.selectClass = function(t) {
        saveVal("classindex", t),
        _.classes[t].txts ? qn(_.classes[t].txts[d.randInt(0, _.classes[t].txts.length - 1)]) : !d.randInt(0, 2) && qn(["Let's Go!", "Alright!", "I'm Ready!"][d.randInt(0, 2)]),
        setClassIndex(t),
        re(),
        showWindow(3)
    }
    ,
    window.skinSelector = function(t) {
        Jt = t,
        re(),
        showWindow(15)
    }
    ,
    window.selectSkin = function(t, e) {
        k = _.store.skins[t],
        Zt[e] = k ? t : void 0,
        saveVal("skins", JSON.stringify(Zt)),
        re(),
        showWindow(3)
    }
    ;
    var $t, Qt, te = 660, ee = 350, ne = new f.PerspectiveCamera(15,1,.1,100), ie = new f.WebGLRenderer({
        canvas: classPreviewCanvas,
        precision: "mediump",
        antialias: !1,
        alpha: !0
    });
    function re() {
        function t(t, e=!0) {
            n && (n += " - ");
            var i = "inherit"
              , r = _.weapons[t].name;
            if (null != Zt[t]) {
                var s = _.store.skins[Zt[t]];
                s && (i = _.store.rarities[s.rarity].color,
                r = s.name)
            }
            n += "<span style='color:" + (e ? i : "inherit") + "'>" + r + "</span>"
        }
        var e = _.classes[classIndex];
        menuClassName.innerText = e.name;
        var n = "";
        for (var r of e.loadout)
            t(r);
        menuClassSubtext.innerHTML = n,
        ($t = new f.Scene).add(new f.AmbientLight(9937064));
        var s = new f.DirectionalLight(15923452,.5);
        s.position.set(10, 17, -10),
        $t.add(s);
        var a = [null == Zt[e.loadout[0]] ? -1 : Zt[e.loadout[0]], null == Zt[e.loadout[1]] ? -1 : Zt[e.loadout[1]]];
        (Qt = new O(-1,this,d,i,_)).sid = -1,
        Qt.init(0, 0, 0, "preview", !1),
        Qt.skins = a,
        Qt.hatIndex = qt,
        Qt.backIndex = Yt,
        Qt.secIndex = Kt,
        Qt.setClass(_, classIndex, Kt, !0),
        _.players.swapWeapon(Qt, 0, !0),
        $t.add(_.players.generateMeshes(Qt, !1)),
        Qt.swapTime = 0,
        Qt.weaponMeshes[0].visible = !0,
        ne.lookAt(new f.Vector3(0,.8 * i.playerHeight,0))
    }
    ne.position.x = -10,
    ne.position.y = 17,
    ne.position.z = -29,
    re();
    var se = !("true" != getSavedVal("krk_hideFull"));
    function ae(t, e) {
        for (var n = "", i = "map" == e ? "selectHostMap" : "loadUserMod", r = 0; r < t.length; ++r)
            n += "<div class='mapListItem'><img class='mapListThumb' src='" + (t[r][e + "_image"] ? t[r][e + "_image"] : "./img/noimg.png") + "' onclick='" + i + "(&quot;" + t[r][e + "_name"] + "&quot;,&quot;" + t[r].mod_url + "&quot;,&quot;" + t[r].mod_id + "&quot;)'/><div style='margin-top:-3px'><a href='javascript:;' onclick='" + i + "(&quot;" + t[r][e + "_name"] + "&quot;,&quot;" + t[r].mod_url + "&quot;,&quot;" + t[r].mod_id + "&quot;)'/>" + t[r][e + "_name"] + "</a></div><div style='display: flex'><span style='color:rgba(0,0,0,0.2);font-size:15px'> by <a target='_blank' class='grey' href='/social.html?p=profile&q=" + t[r].creatorname + "'>" + t[r].creatorname + "</a></span><div style='font-size:15px;text-align:right;flex-grow:1'>" + t[r][e + "_votes"] + "</div></div></div>";
        return n
    }
    function oe(t, e) {
        var n = "<div id='skinList'><div class='skinCard'>" + a.get("generic.none") + "<div class='itemOwn'>" + a.get("generic.default") + "</div><img class='skinImgC' src='." + d.versionifyUrl("textures/previews/cosmetics/" + e + "_default.png") + "'><div class='selctBtn' onmouseenter='playTick()' onclick='" + t + "(-1)'>" + a.get("generic.select") + "</div></div>";
        if (E || _.singlePlayer)
            for (var i = (_.singlePlayer ? Object.keys(_.store.skins).map(t=>t = {
                ind: parseInt(t),
                cnt: 1
            }) : E.skins).slice().sort(function(t, e) {
                return (null != e.ind && _.store.skins[e.ind] ? _.store.skins[e.ind].rarity : 0) - (null != t.ind && _.store.skins[t.ind] ? _.store.skins[t.ind].rarity : 0)
            }), r = 0; r < i.length; ++r)
                (k = _.store.skins[i[r].ind]) && k.type == e && (n += "<div class='skinCard' style='color:" + _.store.rarities[k.rarity].color + "'><div class='itemCnt' data-badge='x" + i[r].cnt + "'></div>" + k.name + "<div class='itemOwn'>by " + (k.creator || "Krunker.io") + "</div><img class='skinImg" + (k.type ? "C" : "") + "' src='." + d.versionifyUrl("textures/previews/" + (k.type ? "cosmetics/" + k.type + "_" + k.id + (k.tex ? "_" + k.tex : "") : "weapons/weapon_" + k.weapon + "_" + (null == k.pat ? k.id : "c" + k.pat)) + ".png") + "'/><div class='selctBtn' onmouseenter='playTick()'onclick='" + t + "(" + i[r].ind + ")'>" + a.get("generic.select") + "</div></div>");
        return n += "</div>"
    }
    window.toggleHF = function(t) {
        se = t,
        saveVal("krk_hideFull", t)
    }
    ,
    toggleHF(se),
    setInterval(()=>{
        window.kiH(M)
    }
    , 12e3),
    window.windows = [{
        header: a.get("windows.settings.header"),
        gen: function() {
            var t = "";
            for (var e in Rt)
                Rt[e].pre && (t += Rt[e].pre),
                t += "<div class='settName' id='" + e + "_div' style='display:" + (Rt[e].hide ? "none" : "block") + "'>" + Rt[e].name + " " + Rt[e].html() + "</div>";
            return t
        }
    }, {
        header: a.get("windows.servers.header"),
        lastLoadTime: 0,
        serverListData: [],
        gen: function() {
            return Date.now() - this.lastLoadTime < i.serverBrowserRate ? this.genList() : (this.lastLoadTime = Date.now(),
            this.loadData())
        },
        loadData: function() {
            return c.fetchGameList().then(t=>{
                this.serverListData = t;
                var e = !1;
                for (var n of t)
                    if (n.id === l) {
                        e = !0;
                        break
                    }
                e ? window.showWindow(2, !0) : c.fetchGameInfo(l).then(t=>{
                    this.privateServerData = t,
                    window.showWindow(2, !0)
                }
                )
            }
            ),
            a.get("generic.loading")
        },
        expandedRegion: -1,
        totalPlayerCount: 0,
        serverSearch: null,
        searchList: function() {
            var t = document.getElementById("serverSearch");
            this.serverSearch = t && "" != t.value ? t.value : null,
            (t = document.getElementById("serverHolder")) && (t.innerHTML = this.getServers())
        },
        getServers: function() {
            var t = !!localStorage.debugServerList
              , e = "";
            this.totalPlayerCount = 0;
            for (var n, r = {
                custom: {
                    order: 1,
                    name: "Custom Games",
                    players: 0,
                    games: []
                }
            }, s = !1, o = 0; o < this.serverListData.length; o++)
                if ((n = this.serverListData[o]).data) {
                    r[n.region] || (r[n.region] = {
                        name: i.regionNames[n.region],
                        players: 0,
                        games: []
                    });
                    var c = n.data.cs ? "custom" : n.region;
                    n.clients = Math.min(n.clients, n.maxClients),
                    l === n.id && (s = !0),
                    (!this.serverSearch || this.searchMatches(n)) && (r[c].players += n.clients),
                    this.totalPlayerCount += n.clients,
                    r[c].games.push(n)
                } else
                    console.warn("Server doesn't have data yet.");
            s || (this.privateServerData ? this.privateServerData.data ? r.custom.games.push(this.privateServerData) : console.warn("Server doesn't have data yet.") : console.warn("Missing private server data."));
            var p = [];
            for (var h in r)
                r.hasOwnProperty(h) && p.push(r[h]);
            for (var h of p = p.sort((t,e)=>(e.order || -1) - (t.order || -1)))
                h.games.sort((t,e)=>e.clients - t.clients);
            E && E.level;
            for (var u = 0; u < p.length; u++) {
                (h = p[u]).games = h.games.filter(t=>!se || t.clients != t.maxClients);
                var f = h.name + " - " + h.players + " online"
                  , d = this.expandedRegion == u;
                if (e += "<div class='menuSelectorHeader' onclick='setExpandedRegion(" + (d ? -1 : u) + ")' style='cursor: pointer;'>" + (d ? "&#x25BC;" : "&#x25B6;") + " " + f + "</div>",
                d) {
                    e += "<div class='menuSelectorHolder'>";
                    for (var m = 0, g = 0; g < h.games.length; g++) {
                        var v = h.games[g]
                          , y = l && l == v.id;
                        if (!this.serverSearch || this.searchMatches(v)) {
                            m++;
                            var b = (t ? v.id : v.data.i) + (v.data.earnKR ? " <i class='material-icons' style='color:#2196F3;font-size:33px;vertical-align:bottom;'>check_circle</i>" : "") + "<div class='serverPCount'>" + v.clients + "/" + v.maxClients + "</div>" + (v.data.cs ? "<div class='serverRegion'>" + v.id.split(":")[0] + " -&nbsp;</div>" : "");
                            e += "<div class='" + ("menuSelector" + (y ? " selectedMenuSelector" : "")) + "' onclick='" + ('checkedSwitchServer("' + v.id + '", this.querySelector(".serverPCount"))') + "'>" + b + "</div>"
                        }
                    }
                    h.games.length && m || (e += "<div style='margin-left:30px;margin-top:5px'>" + a.get("windows.servers.none") + "</div>"),
                    e += "</div>"
                }
            }
            return e
        },
        genList: function() {
            var t = this;
            window.setExpandedRegion = function(e) {
                t.expandedRegion = e,
                t.lastLoadTime = Date.now(),
                showWindow(2, !0)
            }
            ;
            var e = "<div style='font-size:20px'>";
            return e += "<a class='menuLink' onclick='openHostWindow()'>" + a.get("windows.servers.host") + "</a><div style='float:right;display:inline-block'><input id='serverSearch'" + (this.serverSearch ? "value='" + this.serverSearch + "'" : "") + " type='text' placeholder='" + a.get("generic.search") + '\' oninput=\'windows[1].searchList()\'></input></div></div><div id="serverFilters"><div id="hideFull" style="float:right;align-items:center;display:flex"><span class="grey">' + a.get("windows.servers.hide") + '</span><label class="switchsml"><input type="checkbox" onclick="toggleHF(this.checked);windows[1].searchList()"' + (se ? " checked" : "") + "><span class=\"sliderSml\"></span></label></div></div><div style='height:10px'></div>",
            e += "<div style='font-size:20px'>",
            e += "<div id='serverHolder'>" + this.getServers() + "</div>",
            e += "<div style='height:10px'></div><b style='color:rgba(0,0,0,0.6)'>" + a.get("windows.servers.online", this.totalPlayerCount) + "</b>",
            e += "</div>"
        },
        searchMatches(t) {
            return !!t.data && 0 <= (t.data.i || "").toLowerCase().indexOf((this.serverSearch || "").toLowerCase())
        }
    }, {
        header: a.get("windows.loadout.header"),
        gen: function() {
            var t = _.classes[classIndex];
            0 > _.config.classes.indexOf(parseInt(classIndex)) && (classIndex = _.config.classes[0],
            t = _.classes[classIndex]);
            var e = _.weapons[t.loadout[0]].name
              , n = "#2196F3"
              , i = t.secondary ? _.weapons[Kt].name : a.get("generic.none")
              , r = t.secondary ? "#2196F3" : "rgba(0,0,0,0.3)"
              , s = "rgba(0,0,0,0.3)"
              , o = s;
            return E && (null != Zt[t.loadout[0]] && ((e = _.store.skins[Zt[t.loadout[0]]]) && (n = _.store.rarities[e.rarity].color,
            e = e.name)),
            t.loadout[1] && null != Zt[t.loadout[1]] && ((i = _.store.skins[Zt[t.loadout[1]]]) && (r = _.store.rarities[i.rarity].color,
            i = i.name)),
            0 <= qt && _.store.skins[qt] && (s = _.store.rarities[_.store.skins[qt].rarity].color),
            0 <= Yt && _.store.skins[Yt] && (o = _.store.rarities[_.store.skins[Yt].rarity].color)),
            "<div class='settName'>" + a.get("windows.loadout.class") + "<span class='settText floatR' onclick='showWindow(6)'>" + t.name + "</span></div><div class='settName'>" + a.get("windows.loadout.primary") + "<span class='settLabel wepLink' style='color:" + n + "' onclick='skinSelector(" + t.loadout[0] + ")'>" + e + "</span></div><div class='settName'>" + a.get("windows.loadout.secondary") + "<span class='settLabel" + (t.secondary ? " wepLink" : "") + "' " + (t.secondary ? "onclick='showWindow(20)'" : "") + " style='color:" + r + "'>" + i + "</span></div><div class='settName'>" + a.get("windows.loadout.melee") + "<span class='settLabel' style='color:rgba(0,0,0,0.3)'>" + a.get("generic.none") + "</span></div><div class='settName'>" + a.get("windows.loadout.hat") + "<span onclick='showWindow(16)' class='settText floatR' style='color:" + s + "'>" + (_.store.skins[qt] ? _.store.skins[qt].name : a.get("generic.none")) + "</span></div><div class='settName'>" + a.get("windows.loadout.body") + "<span onclick='showWindow(17)' class='settText floatR' style='color:" + o + "'>" + (_.store.skins[Yt] ? _.store.skins[Yt].name : a.get("generic.none")) + "</span></div><div class='settName'>" + a.get("windows.loadout.spray") + "<span onclick='showWindow(9)' class='settText floatR'>" + _.sprays[sn].name + "</span></div>"
        }
    }, {
        header: a.get("windows.mods.header"),
        openList: function() {
            j = !1,
            showWindow(18)
        },
        gen: function() {
            return "<div id='modLinks'><a href='https://goo.gl/dPAxfr' class='menuLink'>" + a.get("windows.mods.guide") + "</a> | <a href='javascript:;' onclick='windows[3].openList()' class='menuLink'>" + a.get("windows.mods.list") + "</a> | <a href='javascript:;' onclick='showWindow(19)' class='menuLink'>" + a.get("windows.mods.publish") + "</a> | <a href='/viewer.html' class='menuLink'>" + a.get("windows.mods.viewer") + "</a></div><form id='modDropper'><input onchange='loadMod()' id='modInput'type='file'><p id='modLInfo'>" + a.get("windows.mods.drop") + "</p></form><input type='text' id='modURL' class='accountInput' style='width:78%' placeholder='" + a.get("windows.mods.paste") + "'><a class='menuLink' style='display:inline-block;margin-left:10px' onclick='loadModURL()'>" + a.get("windows.mods.load") + "</a>"
        }
    }, {
        header: a.get("windows.account.header"),
        gen: function() {
            return E ? "<div class='settName' style='width:100%'>" + a.get("generic.name") + "<a href='/social.html?p=profile&q=" + E.name + "' class='floatR'>" + E.name + "</a></div><div class='settName' style='width:100%'>" + a.get("generic.clan") + "<a class='floatR' class='menuLink' onclick='showWindow(13)'>" + (E.clan ? "[" + E.clan + "]" : "None") + "</a></div><div class='settName'>" + a.get("generic.level") + "<span class='floatR'>" + E.level + "</span></div><div class='xpBar'><div class='xpBarB' style='width:" + E.levelProg + "%'></div></div><div class='settName'>" + a.get("generic.score") + "<span class='floatR'>" + E.score + "</span></div><div class='settName'>KR<span class='floatR'>" + E.funds + "KR</span></div><div class='settName'>" + a.get("generic.kills") + "<span class='floatR'>" + E.kills + "</span></div><div class='settName'>" + a.get("generic.deaths") + "<span class='floatR'>" + E.deaths + "</span></div><div class='settName'>" + a.get("generic.kdr") + "<span class='floatR'>" + (E.kills / Math.max(E.deaths, 1)).toFixed(2) + "</span></div><div class='settName'>" + a.get("generic.games.played") + "<span class='floatR'>" + E.games + "</span></div><div class='settName'>" + a.get("generic.games.won") + "<span class='floatR'>" + E.wins + "</span></div><div class='settName'>W/L<span class='floatR'>" + (E.wins / Math.max(E.games, 1)).toFixed(2) + "</span></div><div class='settName'>" + a.get("generic.timep") + "<span class='floatR'>" + d.getReadableTime(E.timePlayed) + "</span></div><div style='height:10px'></div><a class='menuLink' onclick='logoutAcc()'>" + a.get("generic.logout") + "</a>" + (Ut ? "" : "<a style='float:right' class='menuLink' onclick='logoutSessions(this)'>" + a.get("generic.logout.sessions") + "</a>") : "<input id='accName' type='text' placeholder='" + a.get("generic.username") + "' class='accountInput' style='margin-top:0' value='" + (getSavedVal("krunker_username") || "") + "'></input><input id='accPass' type='password' placeholder='" + a.get("generic.password") + "' class='accountInput'></input><div id='accResp' style='margin-top:10px;color:rgba(0,0,0,0.5);display:none'></div><div style='margin-top:10px;color:rgba(0,0,0,0.3)'>" + a.get("windows.account.recover") + "</div><div class='accountButton' onclick='registerAcc()'>" + a.get("generic.register") + "</div><div class='accountButton' onclick='loginAcc()' style='margin-left: 20px'>" + a.get("generic.login") + "</div>"
        }
    }, {
        header: a.get("windows.class.header"),
        gen: function() {
            for (var t = "<div id='skinList'>", e = 0; e < _.classes.length; ++e)
                0 <= _.config.classes.indexOf(e) && !_.classes[e].hide && (t += "<div class='skinCard'>" + _.classes[e].name + "<div class='itemOwn'>" + _.weapons[_.classes[e].loadout[0]].name + "</div><img style='margin-top:6px;image-rendering:pixelated' class='skinImgC' src='." + d.versionifyUrl("textures/classes/icon_" + e + ".png") + "'/><div class='selctBtn' onmouseenter='playTick()'onclick='selectClass(" + e + ")'>" + a.get("generic.select") + "</div></div>");
            return t += "</div>"
        }
    }, {
        header: a.get("windows.controls.header"),
        gen: function() {
            var t = "";
            return t += "<div class='settName'>" + a.get("windows.controls.forward") + "<span class='settText floatR' id='cont0' onclick='changeCont(0)'>" + d.getKeyName(S.moveKeys[0]) + "</span></div>",
            t += "<div class='settName'>" + a.get("windows.controls.backward") + "<span class='settText floatR' id='cont1' onclick='changeCont(1)'>" + d.getKeyName(S.moveKeys[1]) + "</span></div>",
            t += "<div class='settName'>" + a.get("windows.controls.left") + "<span class='settText floatR' id='cont2' onclick='changeCont(2)'>" + d.getKeyName(S.moveKeys[2]) + "</span></div>",
            t += "<div class='settName'>" + a.get("windows.controls.right") + "<span class='settText floatR' id='cont3' onclick='changeCont(3)'>" + d.getKeyName(S.moveKeys[3]) + "</span></div>",
            t += "<div class='settName'>" + a.get("windows.controls.reload") + "<span class='settText floatR' id='cont8' onclick='changeCont(8)'>" + d.getKeyName(S.reloadKey) + "</span></div>",
            t += "<div class='settName'>" + a.get("windows.controls.aim") + "<span class='settText floatR' id='cont10' onclick='changeCont(10)'>" + d.getKeyName(S.aimKey) + "</span></div>",
            t += "<div class='settName'>" + a.get("windows.controls.inspect") + "<span class='settText floatR' id='cont14' onclick='changeCont(14)'>" + d.getKeyName(S.inspKey) + "</span></div>",
            t += "<div class='settName'>" + a.get("windows.controls.spray") + "<span class='settText floatR' id='cont9' onclick='changeCont(9)'>" + d.getKeyName(S.sprayKey) + "</span></div>",
            t += "<div class='settName'>" + a.get("windows.controls.jump") + "<span class='settText floatR' id='cont4' onclick='changeCont(4)'>" + d.getKeyName(S.jumpKey) + "</span></div>",
            t += "<div class='settName'>" + a.get("windows.controls.crouch") + "<span class='settText floatR' id='cont5' onclick='changeCont(5)'>" + d.getKeyName(S.crouchKey) + "</span></div>",
            t += "<div class='settName'>" + a.get("windows.controls.next") + "<span class='settText floatR' id='cont6' onclick='changeCont(6)'>" + d.getKeyName(S.swapKeyD) + "</span></div>",
            t += "<div class='settName'>" + a.get("windows.controls.previous") + "<span class='settText floatR' id='cont7' onclick='changeCont(7)'>" + d.getKeyName(S.swapKeyU) + "</span></div>",
            t += "<div class='settName'>" + a.get("windows.controls.chat") + "<span class='settText floatR' id='cont11' onclick='changeCont(11)'>" + d.getKeyName(S.chatKey) + "</span></div>",
            t += "<div class='settName'>" + a.get("windows.controls.voice") + "<span class='settText floatR' id='cont12' onclick='changeCont(12)'>" + d.getKeyName(S.voiceKey) + "</span></div>",
            t += "<div class='settName'>" + a.get("windows.controls.list") + "<span class='settText floatR' id='cont15' onclick='changeCont(15)'>" + d.getKeyName(S.listKey) + "</span></div>",
            t += "<div class='settName'>" + a.get("windows.controls.interact") + "<span class='settText floatR' id='cont16' onclick='changeCont(16)'>" + d.getKeyName(S.interactKey) + "</span></div>",
            t += "<div class='settName'>" + a.get("windows.controls.drop") + "<span class='settText floatR' id='cont17' onclick='changeCont(17)'>" + d.getKeyName(S.dropKey) + "</span></div>"
        }
    }, {
        header: a.get("windows.host.header"),
        presets: {},
        presetLoaded: function(t, e) {
            try {
                windows[7].presets[t].data = t && windows[7].presets[t] && e ? JSON.parse(e) : "DEFAULT"
            } catch (e) {
                windows[7].presets[t].data = "DEFAULT"
            }
            updateWindow(8)
        },
        gen: function() {
            var t = "";
            if (j = !0,
            t += "<div class='settName b'>" + a.get("windows.host.maps") + "</div>",
            t += "<div style='margin-top:5px'>",
            !fe)
                for (var e = 0; e < C.length; e++) {
                    var n = C[e]
                      , r = "<label class='switch'><input id='gameMap" + e + "' type='checkbox' checked=''><span class='slider'></span></label>";
                    t += "<div class='settNameSmall' style='margin:0'>" + d.capFirst(n.name) + r + "</div>"
                }
            t += "<div class='settNameSmall' style='margin:0;margin-top:10px'>" + a.get("windows.host.cmaps") + " <div style='float:right'>" + (fe ? "<span><i style='color:#eb5656;font-size:30px;vertical-align:-3px;cursor:pointer' onclick='openHostWindow(true)'class='material-icons'>delete</i> </span>" : "") + "<a id='commMap' href='javascript:;' onclick='showWindow(10);' class='menuLink' style='font-size:18px'>" + (fe || a.get("generic.select")) + "</a></div></div><br/>",
            fe || (t += "<div class='settNameSmall' style='margin:0;margin-top:-24px;'>" + a.get("windows.host.raw") + "<input id='rawMapData' type='text' class='formInput' " + (de ? "value='" + de + "'" : "placeholder='" + a.get("windows.host.raw") + "'") + " autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false'></div><br/>"),
            t += "</div>";
            var s = windows[7].presets[fe]
              , o = !fe || s && s.data;
            if (o) {
                s && (s = s.data),
                "DEFAULT" == s && (s = null),
                t += "<div class='settName b'>" + a.get("windows.host.modes") + "</div>",
                t += "<div style='margin-top:5px'>";
                for (e = 0; e < R.length; e++) {
                    var c = R[e];
                    r = "<label class='switch'><input id='gameMode" + e + "' type='checkbox' " + ((h = s ? s.modes && 0 <= s.modes.indexOf(e) : 0 == e) ? "checked" : "") + "><span class='slider'></span></label>";
                    t += "<div class='settNameSmall' style='margin:0'>" + d.capFirst(c.name) + r + "</div>"
                }
                t += "<div class='settName b' style='margin-top:20px'>" + a.get("windows.host.classes") + "</div>",
                t += "<div style='margin-top:5px'>";
                for (e = 0; e < _.classes.length; e++) {
                    var l = _.classes[e];
                    r = "<label class='switch'><input id='gameClass" + e + "' type='checkbox' " + ((h = !s || !s.classes || 0 <= s.classes.indexOf(e)) ? "checked" : "") + "><span class='slider'></span></label>";
                    t += "<div class='settNameSmall' style='margin:0'>" + l.name + r + "</div>"
                }
                t += "<div class='settName b' style='margin-top:25px'>" + a.get("windows.host.settings") + "</div>";
                for (e = 0; e < i.serverConfig.length; e++) {
                    k = i.serverConfig[e];
                    var p = a.get("server.config." + k.varN);
                    if (k.bool) {
                        var h = k.def;
                        s && s.settings && null != s.settings[k.varN] && (h = !!s.settings[k.varN]),
                        t += "<div class='settNameSmall' style='margin:0;margin-bottom:5px;'>" + p + " <label class='switch'><input type='checkbox' id='customS" + k.varN + "' " + (h ? "checked" : "") + "><span class='slider'></span></label></div>"
                    } else if (k.input)
                        t += "<div class='settNameSmall' style='margin:0;margin-bottom:5px;'>" + p + "<input id='customS" + k.varN + "' value='" + k.def + "' type='text'style='border-radius:12px;border:none;background:#eee;padding:6px;padding-bottom:6px;float:right;margin-top:5px;margin-bottom:5px;' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false'></div>";
                    else {
                        var u = k.def
                          , f = E && E.featured && k.maxF || k.max;
                        s && s.settings && null != s.settings[k.varN] && ((u = s.settings[k.varN]) > f && (u = f)),
                        t += "<div class='settNameSmall' style='margin-left:0'>" + p + "<span class='sliderVal' id='customSet" + e + "'>" + u + "</span><div class='slidecontainer'><input type='range' min='" + k.min + "' max='" + f + "' step='" + k.step + "' id='customS" + k.varN + "' value='" + u + "' oninput='updateSliderLabel(" + e + ",this.value)' class='sliderM'></div></div>"
                    }
                }
                t += "<div class='settNameSmall' style='margin:0'>" + a.get("server.config.private") + " <label class='switch'><input id='makePrivate' type='checkbox'><span class='slider'></span></label></div>",
                t += "<div id='hostGamePreset' style='text-align:left;margin-top:30px'>" + windows[7].genPresets(!0) + "</div>"
            } else
                windows[7].presets[fe] || (windows[7].presets[fe] = {},
                x.getMapPreset(fe, this.presetLoaded)),
                t += "<div style='color:rgba(0,0,0,0.3)'>" + a.get("windows.host.preset.load") + "</div>";
            return o && (t += "<div style='text-align:left;margin-top:30px'>",
            t += "<div style='color:#919191;margin-bottom:5px' id='hostGameMsg'></div>",
            t += "<a class='menuLink' onclick='createPrivateRoom()'>" + a.get("windows.host.start") + "</a>",
            t += "</div>"),
            t
        },
        presetAction: function(t) {
            if (0 == t && "Select" == presetSelect.value)
                return;
            if (1 == t && "Select" == presetName.value)
                return;
            if (2 == t && "Select" == presetSelect.value)
                return;
            let e = getSavedVal("krk_hostPresets");
            if (e = e ? JSON.parse(e) : {},
            2 == t)
                e[presetSelect.value] && delete e[presetSelect.value],
                saveVal("krk_hostPresets", JSON.stringify(e));
            else {
                let s = 1 == t ? {} : e[presetSelect.value];
                for (var n, r = 0; r < C.length; r++)
                    C[r],
                    n = document.getElementById("gameMap" + r),
                    1 == t ? 1 != n.checked && (s["gameMap" + r] = n.checked) : "gameMap" + r in s && (n.checked = s["gameMap" + r]);
                for (r = 0; r < R.length; r++)
                    n = document.getElementById("gameMode" + r),
                    1 == t ? n.checked != !r && (s["gameMode" + r] = n.checked) : "gameMode" + r in s && (n.checked = s["gameMode" + r]);
                for (r = 0; r < _.classes.length; r++)
                    _.classes[r],
                    n = document.getElementById("gameClass" + r),
                    1 == t ? 1 != n.checked && (s["gameClass" + r] = n.checked) : "gameClass" + r in s && (n.checked = s["gameClass" + r]);
                for (r = 0; r < i.serverConfig.length; r++)
                    k = i.serverConfig[r],
                    n = document.getElementById("customS" + k.varN),
                    1 == t ? n[k.bool ? "checked" : "value"] != k.def && (s[k.varN] = n[k.bool ? "checked" : "value"]) : k.varN in s && (!k.bool && !k.input && (document.getElementById("customSet" + r).innerText = s[k.varN]),
                    n[k.bool ? "checked" : "value"] = s[k.varN]);
                1 == t ? (fe && (s.commMap = fe),
                me && (s.hostModURL = me),
                "" != (n = document.getElementById("rawMapData")).value && (s.rawMapData = n.value),
                0 != (n = document.getElementById("makePrivate")).checked && (s.makePrivate = n.checked),
                e[presetName.value || "Preset1"] = s,
                saveVal("krk_hostPresets", JSON.stringify(e))) : ("commMap"in s && (document.getElementById("commMap").innerText = fe = s.commMap),
                "rawMapData"in s && (document.getElementById("rawMapData").value = s.rawMapData),
                "makePrivate"in s && (document.getElementById("makePrivate").checked = s.makePrivate))
            }
            windows[7].genPresets()
        },
        genPresets: function(t=!1) {
            let e = getSavedVal("krk_hostPresets");
            e = e ? JSON.parse(e) : {};
            var n = "<div class='settName b' style='margin-top:25px'>" + a.get("windows.host.preset") + "</div>";
            for (let t in n += "<span class='settNameSmall' style='margin:0;margin-bottom:5px;'><input id='presetName' type='text' class='formInput' placeholder='" + a.get("windows.host.preset.name") + "' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' style='border:none;background:#eee;padding:6px;padding-bottom:6px;float:left;margin-top:5px;margin-bottom:5px;'><select id='presetSelect' style='border-radius:12px;margin-left:10px;border:none;background:#eee;padding:6px;padding-bottom:6px;margin-top:5px;margin-bottom:5px;'><option selected>Select</option>",
            e)
                e[t],
                n += "<option>" + t + "</option>";
            return n += "</select>",
            n += "<div class='hostPresetBtn' onclick='windows[7].presetAction(2)'>" + a.get("generic.delete") + "</div><div class='hostPresetBtn' onclick='windows[7].presetAction(1)'>" + a.get("generic.save") + "</div><div class='hostPresetBtn' onclick='windows[7].presetAction(0)'>" + a.get("generic.load") + "</div></span>",
            t ? n : void (hostGamePreset.innerHTML = n)
        }
    }, {
        header: a.get("windows.spray.header"),
        gen: function() {
            for (var t = "<div id='skinList'>", e = 0; e < _.sprays.length; ++e)
                t += "<div class='skinCard'>" + _.sprays[e].name + "<div class='itemOwn'>" + a.get("windows.spray.default") + "</div><img style='margin-top:10px;image-rendering:pixelated' class='skinImgC' src='." + d.versionifyUrl("textures/sprays/" + e + ".png") + "'/><div class='selctBtn' onmouseenter='playTick()'onclick='selectSpray(" + e + ")'>" + a.get("generic.select") + "</div></div>";
            return t += "</div>"
        }
    }, {
        header: a.get("windows.maps.header"),
        searchMaps: function() {
            searchResults.innerHTML = a.get("generic.loading"),
            x.searchMap(mpSrch.value, je)
        },
        searchResp: function(t) {
            var e = "";
            t.length ? (e += "<div style='height:10px'></div>",
            e += ae(t, "map")) : e = a.get("windows.maps.none"),
            document.getElementById("searchResults") && (document.getElementById("searchResults").innerHTML = e)
        },
        mapsLoaded: function(t, e, n) {
            mapList && (t && t.length ? n ? (mapList.innerHTML = n,
            this.listData[e] = null) : (this.listData[e].dat = ae(t, "map"),
            updateWindow(10)) : (mapList.innerHTML = a.get("windows.maps.none"),
            this.listData[e] = null))
        },
        tabIndex: 0,
        listData: {},
        switchTab: function(t) {
            this.tabIndex != t && (this.tabIndex = t,
            updateWindow(10))
        },
        gen: function() {
            for (var t = i.mapTabs[this.tabIndex], e = "", n = 0; n < i.mapTabs.length; ++n)
                e += "<div class='menuTab" + (this.tabIndex == n ? " tabA" : "") + "' onclick='windows[9].switchTab(" + n + ")'>" + i.mapTabs[n].n + "</div>";
            var r = "";
            return t.search ? r = "<input style='margin-top:10px' type='text' id='mpSrch' class='smlInput' placeholder='" + a.get("windows.maps.name") + "' /><a class='menuLink' style='margin-left:20px' onclick='windows[9].searchMaps()'>" + a.get("generic.search") + "</a><div style='color:rgba(0,0,0,0.5);margin-top:5px' id='searchResults'></div>" : this.listData[this.tabIndex] ? r = this.listData[this.tabIndex].dat || a.get("generic.loading") : (r = a.get("generic.loading"),
            this.listData[this.tabIndex] = {},
            x.listMaps(this.tabIndex, E ? E.id : null, Ne)),
            "<a href='./editor.html' class='menuLink'>" + a.get("windows.maps.editor") + "</a> | <a href='javascript:;' onclick='showWindow(11)' class='menuLink'>" + a.get("windows.maps.publish") + "</a><a href='https://discord.gg/Kfypyp5' class='menuLink' style='float:right'>" + a.get("windows.maps.community") + "</a><br/><div style='margin-top:25px;margin-bottom:15px'>" + e + "</div><div style='color:rgba(0,0,0,0.3)' id='mapList'>" + r + "</div>"
        }
    }, {
        header: a.get("windows.publish.map.header"),
        gen: function() {
            return E ? "<div style='margin-top:-8px;margin-bottom:10px' class='setHed'>" + a.get("windows.publish.map.header") + "</div><div style='color:rgba(0,0,0,0.4);font-size:18px'><input onclick='selectMapThumb()' type='button' id='thumbBtn' style='cursor:pointer' value='Select' /><input id='mapThumb' type='file' accept='image/*' style='width:1px;visibility:hidden;' onchange='updateMapThumb()'><span style='color:rgba(0,0,0,0.4);margin-left:10px' id='mapThumbName'>" + a.get("windows.publish.map.thumbnail") + "</span></div><input id='mapDataNew' type='text' placeholder='" + a.get("windows.publish.map.paste") + "' class='mapInput' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false'/><div id='mapUpResp' style='color:rgba(0,0,0,0.3);margin-top:8px;margin-bottom:5px'></div><div class='mapLoadButton' style='margin-top:6px' onclick='uploadCustomMap()'>" + a.get("windows.publish.map.update") + "</div>" : "<div style='color:rgba(0,0,0,0.3);margin-top:20px'><a href='javascript:;' onclick='showWindow(5);' class='menuLink'>" + a.get("windows.publish.map.login") + "</div>"
        }
    }, {
        header: a.get("windows.theatre.header"),
        gen: function() {
            return "<div class='setHed' style='margin-top:0'>" + a.get("windows.theatre.header") + "</div><div class='settName'>" + a.get("windows.theatre.record") + "<label class='switch'><input type='checkbox' onclick='enableRecord(this.checked)' " + (He ? "checked" : "") + "><span class='slider'></span></label></div><div class='settName'>" + a.get("windows.theatre.key") + "<span class='settText floatR' id='cont13' onclick='changeCont(13, true)'>" + d.getKeyName(S.recordKey) + "</span></div><div style='height:20px'></div><a href='./theatre.html' class='menuLink'>" + a.get("windows.theatre.header") + "</a>"
        }
    }, {
        header: a.get("windows.clans.header"),
        clanData: null,
        kickReq: function(t) {
            if (M.send("cln", 5, t),
            this.clanData && this.clanData.members) {
                for (var e = this.clanData.members.length - 1; 0 <= e; --e)
                    this.clanData.members[e].player_id == t && this.clanData.members.splice(e, 1);
                updateWindow(13)
            }
        },
        sendReq: function(t, e) {
            var n = document.getElementById("clanErr");
            n && (n.style.color = "rgba(0,0,0,0.6)",
            n.innerHTML = a.get("generic.loading"));
            var i = (n = document.getElementById("clanInp" + t)) ? n.value : null;
            M.send("cln", t, e || i || 1)
        },
        updReq: function(t, e, n) {
            M.send("clnR", e, n),
            this.clanData.members && 1 == n && this.clanData.members.push({
                player_name: this.clanData.requests[t].player_name
            }),
            this.clanData.requests.splice(t, 1),
            updateWindow(13)
        },
        delReq: function() {
            this.clanData = null,
            E && (E.clan = null),
            M.send("cln", 4, 1),
            showWindow(5)
        },
        resp: function(t, e, n) {
            var i = document.getElementById("clanErr");
            t && i ? (i.style.color = n ? "rgba(0,0,0,0.6)" : "rgba(255,0,0,0.6)",
            i.innerHTML = t) : e && (E && (E.clan = e.clan_name),
            this.clanData = e,
            updateWindow(13))
        },
        gen: function() {
            var t = ""
              , e = "";
            if (this.clanData && this.clanData.members) {
                var n = E && this.clanData.clan_playerid == E.id;
                t = "<div class='setHed' style='margin-top:10px'>" + a.get("windows.clans.members", this.clanData.members.length) + "</div>";
                for (var r = 0; r < this.clanData.members.length; ++r)
                    t += "<div class='settName'><a target='_blank'href='/social.html?p=profile&q=" + this.clanData.members[r].player_name + "'>" + this.clanData.members[r].player_name + "</a>" + (n && this.clanData.clan_playerid != this.clanData.members[r].player_id ? "<i style='font-size:40px;float:right;color:rgba(255,0,0,0.6)'  class='material-icons h' onclick='windows[12].kickReq(" + this.clanData.members[r].player_id + ")'>clear</i>" : "") + "</div>"
            }
            if (this.clanData && this.clanData.requests) {
                e = "<div class='setHed' style='margin-top:10px'>" + a.get("windows.clans.requests") + "</div>";
                for (r = 0; r < this.clanData.requests.length; ++r)
                    e += "<div class='settName'><a target='_blank' href='/social.html?p=profile&q=" + this.clanData.requests[r].player_name + "'>" + this.clanData.requests[r].player_name + "</a><span style='float:right'><i style='font-size:40px;color:rgba(255,0,0,0.6)'  class='material-icons h' onclick='windows[12].updReq(" + r + "," + this.clanData.requests[r].cr_playerid + ", 0)'>clear</i><i style='font-size:40px;color:rgba(0,255,0,0.6);margin-left:10px' class='material-icons h' onclick='windows[12].updReq(" + r + "," + this.clanData.requests[r].cr_playerid + ", 1)'>done</i></span></div>";
                this.clanData.requests.length || (e += "<div style='color:rgba(0,0,0,0.4)'>" + a.get("windows.clans.requests.none") + "</div>")
            }
            var s = E ? E.clan ? "<div class='setHed' style='margin-top:0px'>" + a.get("windows.clans.page", E.clan) + "<a style='float:right' href='javascript:;' onclick='windows[12].delReq()' class='menuLink'>" + (this.clanData ? E && this.clanData.clan_playerid == E.id ? a.get("generic.delete") : a.get("generic.leave") : "") + "</a></div><div id='clanErr' style='margin-top:0px;color:rgba(0,0,0,0.5)'>" + (this.clanData ? "<div class='settName'>" + a.get("generic.level") + "<span class='floatR'>" + Math.max(1, Math.floor(i.rankVar * Math.sqrt(this.clanData.clan_score || 0))) + "</span></div><div class='settName'>" + a.get("generic.score") + "<span class='floatR'>" + (this.clanData.clan_score || 0) + "</span></div>" + t + e : a.get("generic.loading")) + "</div>" : "<div class='setHed' style='margin-top:-5px'>" + a.get("windows.clans.create") + "</div><input id='clanInp1' type='text' class='smlInput' maxlength='4' placeholder='" + a.get("windows.clans.name") + "' /><a class='menuLink' style='margin-left:20px' onclick='windows[12].sendReq(1)'>" + a.get("generic.create") + "</a><div style='margin-top:0px' class='setHed'>" + a.get("windows.clans.join") + " <a href='./social.html?q=clan' class='menuLink' style='margin-top:10px;display:inline-block'>" + a.get("windows.clans.view") + "</a></div><input id='clanInp2' type='text' class='smlInput' maxlength='4' placeholder='" + a.get("windows.clans.name") + "' /><a class='menuLink' style='margin-left:20px' onclick='windows[12].sendReq(2)'>" + a.get("generic.submit") + "</a><div id='clanErr' style='margin-top:10px'></div>" : "<div style='color:rgba(0,0,0,0.3);margin-top:20px'><a href='javascript:;' onclick='showWindow(5);' class='menuLink'>" + a.get("windows.clans.login") + "</div>";
            return E && E.clan && !this.clanData && this.sendReq(3),
            s
        }
    }, {
        header: a.get("windows.store.header"),
        gen: function() {
            v.play("store", .4);
            for (var t = "", e = 0; e < _.store.wheels.length; ++e)
                k = _.store.wheels[e],
                (E && 0 == E.following && k.free && E.level >= k.minLvl || !k.free) && (t += "<div><a href='javascript:;' class='menuLink' onclick='prizeWheel(" + e + ")'>" + a.get("windows.store.spin", k.name) + "</a> " + (k.lab ? "<span style='color:#fff;margin-left:5px;background-color:" + k.lab.col + ";font-size:15px;padding:3px;padding-left:8px;padding-right:8px'> " + k.lab.nm + " </span>" : "") + "<span style='float:right;color:rgba(0,0,0,0.3)'>" + (k.priceT || k.price) + "<span style='color:rgba(0,0,0,0.6)'> " + (k.priceT ? "" : "KR") + "</span></span></div>");
            var n = "<div style='color:rgba(0,0,0,0.3);font-size:19px;margin-bottom:20px'>" + a.get("windows.store.agree", "<a href='./docs/terms.txt'>") + "</a></div>";
            for (e = 0; e < _.store.purchases.length; ++e)
                n += "<div><a href='javascript:;' class='menuLink' onclick='showPurchase(" + e + ")'>" + (k = _.store.purchases[e]).val + " KR </a><span style='float:right;color:rgba(0,0,0,0.3)'>" + (k.tag ? "<span style='color:#fff;font-size:15px;padding:10px;padding-top:2px;vertical-align:middle;padding-bottom:2px;background-color:" + k.tagCol + "'>" + k.tag + "</span> " : "") + k.price + "<span style='color:rgba(0,0,0,0.6)'> USD</span></span></div>";
            var i = "<div style='height:10px;'></div><b style='font-size:26px;margin-bottom:10px'>" + a.get("windows.store.purchase") + "</b>" + n;
            return E ? "<b style='font-size:26px'>" + a.get("windows.store.market") + "</b><div style='color:rgba(0,0,0,0.3);margin-bottom:10px'>" + a.get("windows.store.buy") + " <a href='javascript:;' onclick='window.open(`/social.html?p=market`)'>" + a.get("windows.store.market2") + "</a></div><b style='font-size:26px'>" + a.get("windows.store.wheels") + "</b><div style='color:rgba(0,0,0,0.3);margin-bottom:10px'>" + a.get("windows.store.unlock") + "</div>" + t + i + "<div style='float:right;margin-top:10px'>" + a.get("windows.store.amount", E.funds) + "</div>" : "<div style='color:rgba(0,0,0,0.3)'><a href='javascript:;' onclick='showWindow(5);' class='menuLink'>" + a.get("windows.store.login") + "</div>"
        }
    }, {
        header: a.get("windows.skin.header"),
        gen: function() {
            var t = "<div id='skinList'><div class='skinCard'>" + a.get("generic.default") + "<div class='itemOwn'>by Krunker.io</div><img class='skinImg' src='." + d.versionifyUrl("textures/previews/weapons/" + _.weapons[Jt].src + ".png") + "' style='margin-top:-10px'><div class='selctBtn' onmouseenter='playTick()' style='margin-top:-40px' onclick='selectSkin(-1," + Jt + ")'>" + a.get("generic.select") + "</div></div>";
            if (E || _.singlePlayer)
                for (var e = (_.singlePlayer ? Object.keys(_.store.skins).map(t=>t = {
                    ind: parseInt(t),
                    cnt: 1
                }) : E.skins).slice().sort(function(t, e) {
                    return (null != e.ind && _.store.skins[e.ind] ? _.store.skins[e.ind].rarity : 0) - (null != t.ind && _.store.skins[t.ind] ? _.store.skins[t.ind].rarity : 0)
                }), n = 0; n < e.length; ++n)
                    (k = _.store.skins[e[n].ind]) && !k.type && k.weapon == Jt + 1 && (t += "<div class='skinCard' style='color:" + _.store.rarities[k.rarity].color + "'><div class='itemCnt' data-badge='x" + e[n].cnt + "'></div>" + k.name + "<div class='itemOwn'>by " + (k.creator || "Krunker.io") + "</div><img style='margin-top:-10px' class='skinImg" + (k.type ? "C" : "") + "' src='." + d.versionifyUrl("textures/previews/" + (k.type ? "cosmetics/" + k.type + "_" + k.id : "weapons/weapon_" + k.weapon + "_" + (null == k.pat ? k.id : "c" + k.pat)) + ".png") + "'/><div class='selctBtn' style='margin-top:-40px' onmouseenter='playTick()'onclick='selectSkin(" + e[n].ind + "," + (k.weapon - 1) + ")'>" + a.get("generic.select") + "</div></div>");
            return t += "</div>"
        }
    }, {
        header: a.get("windows.hat.header"),
        gen: function() {
            return oe("selectHat", 1)
        }
    }, {
        header: a.get("windows.back.header"),
        gen: function() {
            return oe("selectBack", 2)
        }
    }, {
        header: a.get("windows.mods.community.header"),
        modData: null,
        searchMods: function() {
            searchResults.innerHTML = a.get("generic.loading"),
            x.searchMod(moSrch.value, je)
        },
        searchResp: function(t) {
            var e = "";
            t.length ? (e += "<div style='height:10px'></div>",
            e += ae(t, "mod")) : e = a.get("windows.mods.community.none"),
            document.getElementById("searchResults") && (document.getElementById("searchResults").innerHTML = e)
        },
        resp: function(t) {
            if (t && t.length)
                this.modData = t,
                this.modData.loaded = !0,
                updateWindow(18);
            else {
                this.modData = null;
                var e = document.getElementById("modsList");
                e && (e.innerHTML = a.get("windows.mods.community.none"))
            }
        },
        gen: function() {
            var t = "";
            if (this.modData && this.modData.loaded) {
                t = "<div style='margin-bottom:-5px;margin-top:-5px;'>" + a.get("generic.search") + "</div><input type='text' id='moSrch' class='smlInput' placeholder='" + a.get("windows.mods.community.name") + "' /><a class='menuLink' style='margin-left:20px' onclick='windows[17].searchMods()'>" + a.get("generic.search") + "</a><div style='color:rgba(0,0,0,0.5);margin-top:5px' id='searchResults'></div>";
                for (var e = ["<div style='margin-bottom:5px;margin-top:15px'>" + a.get("windows.mods.community.hot") + "</div>", "<div style='margin-top:20px;margin-bottom:5px'>" + a.get("windows.mods.community.new") + "</div>", "<div style='margin-top:20px;margin-bottom:5px'>" + a.get("windows.mods.community.fav") + "</div>"], n = 0; n < this.modData.length; ++n)
                    this.modData[n] && (this.modData[n].length && (t += e[n]),
                    t += ae(this.modData[n], "mod"))
            } else
                t = a.get("generic.loading"),
                this.modData || (this.modData = {},
                x.listMods(E ? E.id : null, Be));
            return "<div style='color:rgba(0,0,0,0.3)' id='modsList'>" + t + "</div>"
        }
    }, {
        header: a.get("windows.publish.mod.header"),
        gen: function() {
            return E ? "<div style='margin-top:0px' class='setHed'>" + a.get("windows.publish.mod.header") + "</div><div style='color:rgba(0,0,0,0.4);font-size:18px'><input onclick='selectModThumb()' type='button' id='thumbBtn' style='cursor:pointer' value='Select' /><input id='modThumb' type='file' accept='image/*' style='width:1px;visibility:hidden;' onchange='updateModThumb()'><span style='color:rgba(0,0,0,0.4);margin-left:10px' id='modThumbName'>" + a.get("windows.publish.mod.thumbnail") + "</span></div><input id='pubModName' type='text' placeholder='" + a.get("windows.publish.mod.name") + "' class='mapInput' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false'/><input id='pubModURL' type='text' placeholder='" + a.get("windows.publish.mod.paste") + "' class='mapInput' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false'/><div id='modUpResp' style='color:rgba(0,0,0,0.3);margin-top:8px'></div><div class='mapLoadButton' style='margin-top:6px' onclick='uploadCustomMod()'>" + a.get("windows.publish.mod.update") + "</div>" : "<div style='color:rgba(0,0,0,0.3);'><a href='javascript:;' onclick='showWindow(5)' class='menuLink'>" + a.get("windows.publish.mod.login") + "</div>"
        }
    }, {
        header: a.get("windows.secondary.header"),
        gen: function() {
            for (var t = "<div id='skinList'>", e = 0; e < _.weapons.length; ++e)
                if ((k = _.weapons[e]) && k.secondary) {
                    var n = !k.minRec || E && E.level >= k.minRec || _.singlePlayer;
                    t += "<div class='skinCard'>" + k.name + "<div class='itemOwn'>" + (k.minRec ? a.get("unlocked", k.minRec) : a.get("generic.default")) + "</div><img style='margin-top:10px;image-rendering:pixelated' class='skinImgC' src='." + d.versionifyUrl("img/prev/" + k.src + ".png") + "'/><div class='selctBtn' onmouseenter='playTick()'" + (n ? "onclick='selectSecondary(" + e + ")" : "") + "'>" + a.get("generic.select") + "</div></div>"
                }
            return t += "</div>"
        }
    }, {
        header: a.get("windows.advertise.header"),
        gen: function() {
            return "<div class='setHed' style='margin-top:0'>Advertise in Game</div><div style='color:rgba(0,0,0,0.4)'>On krunker.io you have the ability to place advertisements in game.<div style='height:10px'></div> The game features several <b>3d Billboards</b> that yield a very high impression rate & that are <b>not affected by ad blockers</b>.</div><img src='./img/ad_1.png' style='width:100%;margin-top:10px'/><div style='color:rgba(0,0,0,0.4);margin-top:10px'><b>Daily Users:</b> ~ 2,000,000<br/><b>Registered Accounts:</b> ~ 5,000,000<br/><b>Daily Impressions:</b> ~ 6,500,000<br/><b>Peak CCU:</b> ~ 28,000<br/><b>Session Time avg:</b> 14 minutes<br/><div style='height:5px'></div><i style='color:rgba(0,0,0,0.2)'>as of 16/06/2019</i></div><div style='margin-top:10px;color:rgba(0,0,0,0.4)'>For inquiries contact <a>info@yendis.ch</a></div>"
        }
    }, {
        header: "Social",
        gen: function() {
            return "TODO"
        }
    }, {
        header: a.get("windows.players.header"),
        gen: function() {
            var t = "<div style='margin-top:0px' class='setHed'><center>" + (_.players.list.length ? a.get("windows.players.header") + "<hr>" : a.get("windows.players.none")) + "</div>";
            t += "<div style='background-color:gainsboro;border-radius: 12px;'>",
            T && (t += "<div><span class='settNameSmall'>" + (B ? "<i class='material-icons' style='font-size:25px'>stars</i>" : "") + T.name + (T.clan ? "<span> [" + T.clan + "]</span>" : "") + "</span>" + (E && E.developer ? "<span style='float:right'><span onmouseenter='playTick()' class='punishButton tpall' onclick='punishPlayer(null, 5)'>TPAll</span></span>" : "") + "</div>");
            for (let e of _.players.list.filter(t=>!t.isYou))
                t += "<div><span class='settNameSmall'>" + (N == e.id ? "<i class='material-icons' style='font-size:25px'>stars</i>" : "") + "<a target='_blank' class='" + (e.isHacker ? "red" : "grey") + "' href='/social.html?p=profile&q=" + e.name + "'>" + e.name + (e.clan ? "<span> [" + e.clan + "]</span>" : "") + "</a></span>" + (B || E && E.developer ? "<span style='float:right'><span onmouseenter='playTick()' class='punishButton kick' onclick='punishPlayer(\"" + e.id + "\", 0)'>Kick</span><span onmouseenter='playTick()' class='punishButton ban' onclick='punishPlayer(\"" + e.id + "\", 1)'>Ban</span>" + (E && E.developer ? "<span onmouseenter='playTick()' class='punishButton kill' onclick='punishPlayer(\"" + e.id + "\", 2)'>Kill</span>" : "") + (E && E.developer ? "<span onmouseenter='playTick()' class='punishButton tp2' onclick='punishPlayer(\"" + e.id + "\", 3)'>TP2</span>" : "") + (E && E.developer ? "<span onmouseenter='playTick()' class='punishButton tpme' onclick='punishPlayer(\"" + e.id + "\", 4)'>TPME</span>" : "") + "</span>" : "") + "</div>";
            return t += "</div>"
        }
    }, {
        header: a.get("windows.join.header"),
        gen: function() {
            return `<input id='gameURL' type='text' placeholder='${a.get("windows.join.code")}' class='accountInput' style='margin-top:0' value=''></input>\n        <div class='accountButton' onclick='joinGame()', style='width:100%'>${a.get("windows.join.header")}</div>`
        }
    }, {
        header: a.get("windows.client.header"),
        gen: function() {
            return "<div><ul style='padding:0;display:flex;list-style:none;text-align:center;margin:0;margin-top:-10px'><li style='display: flex;flex-basis:200px;-webkit-box-flex:1;flex-grow:1;margin-right:10px'><a href='//client.krunker.io/setup.exe' style='display:block;width:100%;padding-top:1em;'><img src ='./img/windows.png' style='width:80px;height:80px;display:block;margin:0 auto 10px;'>" + a.get("windows.client.windows") + "</a></li><li style='display: flex;flex-basis:200px;-webkit-box-flex:1;flex-grow:1;'><a href='//client.krunker.io/setup.dmg' style='display: block;width: 100%;padding-top:1em;'><img src ='./img/mac.png' style='width:80px;height:80px;display:block;margin:0 auto 10px;'>" + a.get("windows.client.mac") + "</a></li><li style='display: flex;flex-basis:200px;-webkit-box-flex:1;flex-grow:1;'><a href='//client.krunker.io/setup.AppImage' style='display: block;width: 100%;padding-top:1em;'><img src ='./img/linux.png' style='width:80px;height:80px;display:block;margin:0 auto 10px;'>" + a.get("windows.client.linux") + "</a></li></ul></div>"
        }
    }];
    for (var ce = 0; ce < windows.length; ++ce)
        windows[ce].html = "";
    var le = 0;
    window.updateWindow = function(t, e) {
        "block" == windowHolder.style.display && (le == t && null != t ? showWindow(t, !0) : e && showWindow(le, !0))
    }
    ,
    window.showWindow = function(t, e) {
        window.idleTimer = 0,
        e || t && ("block" != windowHolder.style.display || t != le) ? (b.toggleMenu(!0),
        menuWindow.innerHTML = windows[t - 1].gen ? windows[t - 1].gen() : windows[t - 1].html,
        le = t,
        windowHeader.innerHTML = windows[t - 1].header,
        b.toggleWindow(!0, S.gamepad.connected)) : (b.toggleWindow(!1, S.gamepad.connected),
        S.inputChanger = null)
    }
    ,
    window.playTick = function() {
        v.play("tick_0", .2)
    }
    ,
    window.copyInviteLink = function() {
        d.copyToClipboard(`https://${location.host}/?game=${l}`),
        inviteButton.innerText = a.get("menu.btn.invite.clicked"),
        setTimeout(()=>inviteButton.innerText = a.get("menu.btn.invite"), 1250)
    }
    ,
    window.punishPlayer = function(t, e) {
        if (!(2 < e || 0 > e) || E && E.developer) {
            let n = _.players.list.find(e=>e.id == t);
            n ? M.send("pnh", e, n.id) : 4 < e && M.send("pnh", e, null)
        }
    }
    ;
    var pe, he, ue, fe, de, me, ge = spinWindow, ve = ge.getContext("2d"), ye = .95, be = .6, we = null, xe = !1, Me = 0, _e = 0, Se = 0, Te = 0, Ee = 0, ke = 30, Ae = 300, Le = !0, Pe = 0, Ce = 0, Re = new f.PerspectiveCamera(45,1,.1,100), Ie = new f.WebGLRenderer({
        precision: "mediump",
        antialias: !1,
        alpha: !0
    });
    function Oe(t, e) {
        if (Q) {
            var n = _.store.skins[e];
            n && Vn(null, "<span style='color:#fff'>" + a.get("windows.store.unboxed", t, "</span>") + " <span style='color:" + _.store.rarities[n.rarity].color + "'>" + n.name + "</span>", !0)
        }
    }
    function De(t, e, n, i, r) {
        if (xe = !1,
        i)
            ;
        else {
            if (we = _.store.skins[e],
            spinItemName.innerHTML = we.name + "<div style='color:rgba(255,255,255,0.5)'>by " + (we.creator || "Krunker.io") + "</div>",
            _e = 2 * Math.PI * (t / 100 + 13) + Math.PI / 2,
            E)
                if (r && (E.following = r),
                E.funds = n,
                zt(),
                spinKR.innerHTML = E.funds + " KR",
                E.skins.some(t=>t.ind === e)) {
                    var s = E.skins.find(t=>t.ind === e);
                    s && s.cnt++
                } else
                    E.skins.push({
                        ind: e,
                        cnt: 1
                    });
            spinRotation = 0,
            Pe = 0,
            spinCost.innerHTML = "",
            (pe = new f.Scene).add(new f.AmbientLight(5197647));
            var a = new f.DirectionalLight(16777215,.5);
            a.position.set(3, 1, 0),
            pe.add(a);
            var o = we.type ? we : _.store.previews[we.weapon] || {};
            (he = g.genObj3D(0, 1 + (o.yOff || 0), o.xOff || 0)).rotateX(-Math.PI / 7),
            he.rotateY(Math.PI + .5 + (o.zRota || 0)),
            he.rotateZ(-.5),
            he.orgXR = he.rotation.x,
            he.orgYP = he.position.y,
            g.loadMesh({
                src: _.store.types[we.type || 0] + (we.type ? we.id : we.weapon),
                texSrc: we.type ? we.tex ? (1 == we.type ? "hats/hat_" : "body/body_") + we.id + "_" + we.tex : null : "weapons/skins/weapon_" + we.weapon + "_" + we.id,
                movT: we.movT,
                sameGlow: we.sameGlow,
                glowText: we.glow || we.sameGlow,
                emissive: we.glow || we.sameGlow ? 16777215 : null,
                noGreen: !0,
                uv2: !0,
                fillScale: 60,
                centerZ: !0
            }, 0, 0, 0, (we.type ? Math.PI : Math.PI / 2) + (o.xRot || 0), 2.2 * (o.scl || 1), he),
            pe.add(he),
            Re.lookAt(pe.position)
        }
    }
    function ze(t, e, n) {
        windows[12].resp(t, e, n)
    }
    function Be(t, e) {
        e && windows[17].resp(e.data, e.error)
    }
    function Ne(t, e) {
        e && windows[9].mapsLoaded(e.data, e.index, e.error)
    }
    function je(t, e) {
        e && windows[e.index].searchResp(e.data)
    }
    Ie.setPixelRatio(.6 * window.devicePixelRatio),
    Re.position.y = 10,
    spinItemCanvas.appendChild(Ie.domElement),
    window.prizeWheel = function(t) {
        (ue = _.store.wheels[t]).openURL && window.openURL(i.followURLS[d.randInt(0, i.followURLS.length - 1)]),
        Se = t,
        showWindow(0),
        Me = 0,
        Le = !xe,
        _e = 0,
        Ce = 0,
        spinRotation = 0,
        Te = Ee = 0,
        b.toggleMenuHider(!1),
        spinItem.style.display = "none",
        spinItemName.style.display = "none",
        spinUI.style.display = "block",
        Re.position.x = Ae,
        spinButton.style.opacity = 1,
        spinText.style.display = "table-cell",
        spinHeader.innerHTML = "SPIN",
        spinCost.innerHTML = "-" + ue.price + "KR";
        for (var e = "<div style='font-size:50px;color:#fff'>" + ue.name.toUpperCase() + "</div>", n = 0; n < _.store.rarities.length; ++n)
            (k = _.store.rarities[n]).noSpin || (e += "<div style='margin-top:5px;color:#fff'>" + k.name + "<span style='color:rgba(255,255,255,0.5)'>&emsp;" + ue.rarities[n] + "%</span><div class='colCub' style='background-color:" + k.color + "'></div></div>");
        spinInfo.innerHTML = e,
        E && (spinKR.innerHTML = E.funds + " KR")
    }
    ,
    spinButton.onclick = function(t) {
        t.stopPropagation(),
        t.preventDefault(),
        window.idleTimer = 0,
        M && !xe && Le && E && E.funds >= ue.price && (xe = !0,
        Le = !1,
        M.send("spin", Se),
        spinHeader.innerHTML = "",
        spinCost.innerHTML = a.get("windows.store.purchasing"),
        v.play("buy_1", .1))
    }
    ,
    spinUI.onclick = function() {
        showWindow(14),
        b.toggleMenuHider(!0),
        spinUI.style.display = "none",
        M && M.send("unbx")
    }
    ,
    window.selectHostMap = function(t, e=null) {
        fe = t,
        de = "undefined" == e ? null : e,
        showWindow(8)
    }
    ,
    window.selectHostMod = function(t) {
        me = t,
        showWindow(8)
    }
    ,
    window.openHostWindow = function(t) {
        fe = null,
        me = null,
        de = null,
        showWindow(8, t)
    }
    ;
    var Ue, Fe = 1e4, He = !("true" != getSavedVal("krk_record"));
    function Ge(t, e) {
        try {
            mapUpResp && !e && (mapUpResp.innerHTML = t)
        } catch (e) {}
        try {
            modUpResp && !e && (modUpResp.innerHTML = t)
        } catch (e) {}
    }
    window.enableRecord = function(t) {
        He = t,
        saveVal("krk_record", t)
    }
    ,
    enableRecord(He),
    window.updateMapThumb = function() {
        var t = null;
        try {
            t = document.getElementById("mapThumb").files[0]
        } catch (t) {}
        document.getElementById("mapThumbName").innerHTML = t ? t.name : a.get("generic.failed")
    }
    ,
    window.selectMapThumb = function() {
        document.getElementById("mapThumb").click()
    }
    ,
    window.uploadCustomMap = function() {
        mapUpResp && (mapUpResp.innerHTML = a.get("generic.loading"));
        var t = null;
        try {
            t = document.getElementById("mapThumb").files[0]
        } catch (e) {}
        if (t) {
            var e = new FileReader;
            e.readAsDataURL(t),
            e.onload = function() {
                return 40 < d.thumbnailSize(e.result) ? void Ge(a.get("thumbnail.upload.limit")) : void M.send("uploadM", mapDataNew.value, e.result)
            }
            ,
            e.onerror = function() {
                mapUpResp.innerHTML = a.get("thumbnail.upload.error")
            }
        } else
            M.send("uploadM", mapDataNew.value)
    }
    ,
    window.updateModThumb = function() {
        var t = null;
        try {
            t = document.getElementById("modThumb").files[0]
        } catch (t) {}
        document.getElementById("modThumbName").innerHTML = t ? t.name : a.get("generic.failed")
    }
    ,
    window.selectModThumb = function() {
        document.getElementById("modThumb").click()
    }
    ,
    window.uploadCustomMod = function() {
        modUpResp && (modUpResp.innerHTML = a.get("generic.loading"));
        var t = null;
        try {
            t = document.getElementById("modThumb").files[0]
        } catch (e) {}
        if (t) {
            var e = new FileReader;
            e.readAsDataURL(t),
            e.onload = function() {
                return 40 < d.thumbnailSize(e.result) ? void Ge(a.get("thumbnail.upload.limit")) : void M.send("uploadMo", pubModName.value, pubModURL.value, e.result)
            }
            ,
            e.onerror = function() {
                modUpResp.innerHTML = a.get("thumbnail.upload.error")
            }
        } else
            M.send("uploadMo", pubModName.value, pubModURL.value)
    }
    ,
    zip.workerScriptsPath = "./libs/";
    var Ve = new FileReader;
    function We(t) {
        this.imgAsDataURL = "",
        this.process = function(e) {
            if (this.imgAsDataURL = URL.createObjectURL(e),
            this.imgAsDataURL && t) {
                try {
                    var n = new Image;
                    n.onload = function() {
                        g.updateTexture(t.replace("textures/", "").replace(".png", ""), this)
                    }
                    ,
                    n.src = this.imgAsDataURL
                } catch (e) {}
                Ke.close()
            }
        }
    }
    function Ye(t) {
        this.filename = t;
        var e = this;
        this.process = function(t) {
            var n = URL.createObjectURL(t);
            if (n) {
                try {
                    var i = e.filename.split("/")[1];
                    "ambient_1" == i && v.stop("ambient_1"),
                    v.sounds[i] = new Howl({
                        src: [n],
                        format: "mp3"
                    }),
                    v.sounds[i + "3d"] = new Howl({
                        src: [n],
                        format: "mp3"
                    }),
                    "ambient_1" == i && v.play("ambient_1", .12, !0)
                } catch (t) {}
                Ke.close()
            }
        }
    }
    function qe(t) {
        this.process = function(e) {
            if (t) {
                try {
                    const n = new FileReader;
                    n.addEventListener("loadend", e=>{
                        const n = e.srcElement.result;
                        g.updateMesh(t.replace("models/", "").replace(".obj", ""), n)
                    }
                    ),
                    n.readAsText(e)
                } catch (t) {}
                Ke.close()
            }
        }
    }
    Ve.onload = function(t) {
        var e = t.target.result;
        loadModPack(e)
    }
    ;
    var Xe, Ze, Ke = new function() {
        this.init = function(t, e) {
            this.numFiles = e,
            this.progress = 0,
            this.reader = t
        }
        ,
        this.close = function() {
            this.reader && (this.progress++,
            document.getElementById("modLInfo") && (document.getElementById("modLInfo").innerHTML = a.get("mod.extracting", this.progress, this.numFiles)),
            this.numFiles === this.progress && (spriteIndex = 0,
            document.getElementById("modLInfo") && (document.getElementById("modLInfo").innerHTML = a.get("generic.success")),
            this.reader.close(),
            this.reader = void 0))
        }
    }
    ;
    function Je(t, e, n, i) {
        V = e,
        window.spectating = n,
        !V && n && (V = 1),
        cn(t),
        b.toggleMenu(!1),
        On.length = 0,
        Hn.length = 0,
        b.toggleGameUI(!0),
        w.reset(),
        S.reset(),
        Qe(!1),
        _.players.forcePos(),
        _.players.resetAim(),
        U.length = 0,
        window.loading = !1,
        window.idleTimer = 0,
        teamName.innerHTML = "",
        instructions.innerHTML = S.gamepad.connected ? a.get("app.play.controller") : a.get("app.play"),
        P = null,
        b.toggleControlUI(S.enabled),
        _.updateUI(),
        challIcon.src = i ? "./img/skull_0.png" : "./img/hp_0.png"
    }
    function $e(t, e, n, i, r, s, o, c, l, p) {
        if (c ? c.data && _.customMap(c.data, c.id, c.creator, null, !0) : _.map.setMaps(),
        N = r,
        B = r && r == M.socketId,
        mapVote.innerHTML = "",
        Ze = 0,
        r && c && null != c.id && (mapVote.innerHTML = "<i id='mapVoteD' onclick='voteMap(" + c.id + ",-1)' class='material-icons vote'>thumb_down</i><i id='mapVoteU' onclick='voteMap(" + c.id + ",1)' class='material-icons vote'>thumb_up</i>"),
        _.applyConfig(s, c && c.featured),
        _.init(t, e, p),
        _.setObjective(i),
        (l = l || {}).dest)
            for (var h = 0; h < l.dest.length; ++h)
                _.destroyObj(l.dest[h]);
        if (l.flg)
            for (h = 0; h < l.flg.length; ++h)
                _.updateFlag(...l.flg[h]);
        if (l.pkups)
            for (h = 0; h < l.pkups.length; ++h)
                _.updatePickup(...l.pkups[h]);
        if (l.zone && _.updateZone(l.zone),
        specNameTm0.innerHTML = teamNm1.innerHTML = 0 < _.config.nameTeam1.replace(/\s/g, "").length ? _.config.nameTeam1 : "Team 1",
        specNameTm1.innerHTML = teamNm2.innerHTML = 0 < _.config.nameTeam1.replace(/\s/g, "").length ? _.config.nameTeam2 : "Team 2",
        teamScores.style.display = "none",
        spec0.style.display = "none",
        spec1.style.display = "none",
        _.mode.teams && n) {
            teamScores.style.display = "inline-block",
            spec0.style.display = "inline-block",
            spec1.style.display = "inline-block";
            var u = "";
            for (h = 0; h < n.length; ++h)
                u += "<div class='tScore'><div id='tScoreC" + n[h][0] + "' class='tScoreC'></div><span class='tScoreT' id='tScoreV" + n[h][0] + "'>" + n[h][1] + "</span></div>",
                document.getElementById("specScoreTm" + (n[h][0] - 1)).innerHTML = n[h][1];
            teamScores.innerHTML = u
        }
        o && "" != o && loadModPack(o, !0);
        var f = 0
          , d = 0;
        for (h = 0; h < _.map.manager.objects.length; ++h)
            _.map.manager.objects[h].score && (f++,
            d += _.map.manager.objects[h].scoreP);
        f ? (scoreZoneCount.style.display = "inline-block",
        scoreZoneCount.innerHTML = "<i class='material-icons' style='color:#fff;font-size:35px'>flag</i> " + d) : scoreZoneCount.style.display = "none",
        _.config.lives ? (livesCount.style.display = "inline-block",
        livesCount.innerHTML = "<i class='material-icons' style='color:#fff;font-size:35px'>favorite</i> <span id='livesDisp' style='color:rgba(255,255,255,0.6)'>" + _.config.lives + "</span>") : livesCount.style.display = "none",
        b.setShowSpect(_.config.allowSpect),
        b.setShowSelTeam(_.config.selTeam),
        Z = null,
        S.reset();
        var v = _.map.maps[t];
        S.qHYTz(v.camPos[0], v.camPos[1], v.camPos[2]),
        S.mnZiqU(0, 0, 0),
        g.clearSprays(),
        g.scene.add(S.object),
        T = null,
        m.showObjective = !!_.mode.objective && 0 < _.map.manager.objectives.length,
        killStreakHolder.innerHTML = "",
        bloodDisplay.style.display = "none",
        killsVal.innerHTML = 0,
        deathsVal.innerHTML = 0,
        G = 0,
        Ct(),
        S.masterLock = !1,
        instructions.innerHTML = S.gamepad.connected ? a.get("app.play.controller") : a.get("app.play")
    }
    function Qe(t) {
        window.locked = t,
        blocker.style.display = t ? "block" : "none"
    }
    function tn(t, e, n) {
        instructions.innerHTML = S.gamepad.connected ? a.get("app.play.controller") : a.get("app.play"),
        victoryText.innerHTML = a.get("generic." + (e ? "victory" : "defeat")),
        victorySub.src = "./img/" + (e ? "sub" : "defeat") + ".png",
        b.toggleWindow(!1, S.gamepad.connected),
        Rt.endMessage.val.length && M.send("c", Rt.endMessage.val),
        T && T.active || window.spectating ? (b.showEndScreen(),
        Z = i.endAnim,
        setTimeout(function() {
            M.connected && (S.disable(),
            en(n))
        }, i.endAnim)) : t && (S.disable(),
        b.showEndScreen(),
        en(n))
    }
    function en(t) {
        if (t && t.ed.length) {
            var e = ""
              , n = _.config ? _.config.modes || _.map.rotationModes : null;
            if (n && 1 < n.length) {
                voteHolder.style.display = "inline-block",
                endTable.style.top = "265px";
                for (var r, s = 0; s < n.length; ++s)
                    (r = _.map.modes[n[s]]) && (e += "<div class='voteObj' onclick='voteOnMode(" + n[s] + ")'>" + r.id.toUpperCase() + " <span style='color:rgba(255,255,255,0.5)' id='modeVoteI" + n[s] + "'>0</span></div>");
                voteHolder.innerHTML = e,
                t.vo && updModeVote(t.vo)
            } else
                voteHolder.style.display = "none",
                endTable.style.top = "205px";
            endTable.style.display = "inline-block",
            e = "<tr><th>Rank</th>";
            var a = _.mode.endStats || i.endStats
              , o = a.length;
            for (s = 1; s < o; ++s)
                e += "<th>" + d.capFirst(a[s]) + "</th>";
            e += "<th></th></tr>";
            var c = 1;
            for (s = 0; s < t.ed.length; ) {
                k = _.players.findBySid(t.ed[s]),
                e += "<tr style='" + (s + o >= t.ed.length ? "border-bottom:none" : "") + "'><td style='color:#fff'>" + c + ".</td>";
                for (var l = 1; l < o; ++l)
                    e += "<td " + (1 == l ? "style='color:" + (T && k && T.sid == k.sid ? "#fff'" : T && k && T.team && T.team == k.team ? "rgba(255,255,255,0.6)'" : "#eb5656'") : "") + ">" + (dt && 1 == l && D ? d.scrambleS(t.ed[s + l] || 0) : t.ed[s + l] || 0) + (1 == l && k && k.clan ? "<span style='color:#fff'> [" + k.clan + "]<span>" : "") + "</td>";
                c++,
                s += o
            }
            endTable.innerHTML = e
        } else
            endTable.style.display = "none"
    }
    function nn(t, e, n) {
        _.playerSound(t, e, n)
    }
    function rn(t, e, n, i, r, s=!0, a) {
        (k = _.players.findBySid(t)) && (k == T && v.play("pick_0", .2),
        k.updateLoadout(_, n, ...e)),
        (k || null == t) && s && _.updatePickup(i, r, null, a)
    }
    window.loadUserMod = function(t, e, n) {
        j ? (j = !1,
        selectHostMod(e)) : (showWindow(4),
        document.getElementById("modLInfo") && (document.getElementById("modLInfo").innerHTML = a.get("generic.loading")),
        loadModPack(e, !0, t, n))
    }
    ,
    window.loadModURL = function() {
        modURL.value && loadModPack(modURL.value, !0)
    }
    ,
    window.loadModPack = function(t, e, n, i) {
        if (!(0 > t.indexOf("dropbox.com") && 0 > t.indexOf("dropboxusercontent.com") && e)) {
            if (!F)
                return void (document.getElementById("modLInfo") && (document.getElementById("modLInfo").innerHTML = a.get("mod.disabled")));
            modVote.innerHTML = "",
            e && st(t),
            null != n && null != i && (Xe = 0,
            modVote.innerHTML = "<i id='modVoteD' onclick='voteMod(" + i + ",-1)' class='material-icons vote'>thumb_down</i><i id='modVoteU' onclick='voteMod(" + i + ",1)' class='material-icons vote'>thumb_up</i></br>" + n + " Mod");
            try {
                t = t.replace("dropbox.com", "dl.dropboxusercontent.com");
                var r = ""
                  , s = e ? new zip.HttpReader(t) : new zip.Data64URIReader(t);
                zip.createReader(s, function(t) {
                    t.getEntries(function(e) {
                        if (e.length) {
                            Ke.init(t, e.length);
                            for (var n, i = 0; i < e.length; i++)
                                (n = e[i]).directory ? Ke.close() : "textures" == (r = n.filename.split("/")[0]) ? n.getData(new zip.BlobWriter("image/png"), new We(n.filename).process, function() {}) : "sound" == r ? n.getData(new zip.BlobWriter("audio/mp3"), new Ye(n.filename.replace(".mp3", "")).process, function() {}) : "models" == r && n.getData(new zip.BlobWriter("application/x-tgif"), new qe(n.filename).process, function() {})
                        }
                    })
                }, function() {
                    document.getElementById("modLInfo") && (document.getElementById("modLInfo").innerHTML = a.get("mod.error"))
                })
            } catch (e) {
                document.getElementById("modLInfo") && (document.getElementById("modLInfo").innerHTML = a.get("mod.error"))
            }
        }
    }
    ,
    Rt.autoLoadLast.val && rt.length && loadModPack(rt, !0),
    window.loadMod = function() {
        if (modInput.files && modInput.files[0]) {
            var t = modInput.files[0];
            "zip" == t.name.split(".").pop().toLowerCase() ? (document.getElementById("modLInfo") && (document.getElementById("modLInfo").innerHTML = a.get("mod.loading")),
            Ve.readAsDataURL(t)) : document.getElementById("modLInfo") && (document.getElementById("modLInfo").innerHTML = a.get("mod.invalid"))
        }
    }
    ,
    window.joinGame = function() {
        let t = gameURL.value || "";
        t.match(/^(https?:\/\/)?(www\.)?(.+)krunker\.io(|\/|\/\?game=.+)$/) ? location = t : t.match(/^([A-Z]+):(\w+)$/) && window.switchServer(t)
    }
    ,
    window.toggleTeam = function(t) {
        Wt = t ? 2 : 1,
        teamNm1.style.color = t ? "rgba(255,255,255,0.5)" : "#fff",
        teamNm2.style.color = t ? "#fff" : "rgba(255,255,255,0.5)"
    }
    ,
    window.updModeVote = function(t) {
        for (var e = 0; e < _.map.modes.length; ++e)
            if (k = document.getElementById("modeVoteI" + e)) {
                var n = 0;
                if (t)
                    for (var i in t)
                        t.hasOwnProperty(i) && e == t[i] && n++;
                k.innerHTML = n
            }
    }
    ,
    window.voteOnMode = function(t) {
        M.send("mVote", t)
    }
    ,
    window.voteMod = function(t, e) {
        if (E) {
            var n = document.getElementById("modVoteU")
              , i = document.getElementById("modVoteD")
              , r = 0;
            1 == e ? (r = 1,
            1 == Xe && (r = 0)) : -1 == e && (r = -1,
            -1 == Xe && (r = 0)),
            Xe = r,
            n.className = 1 == Xe ? "material-icons vote a" : "material-icons vote",
            i.className = -1 == Xe ? "material-icons vote a" : "material-icons vote",
            M.send("vote", E.id, loginToken, t, r, 1)
        }
    }
    ,
    window.voteMap = function(t, e) {
        if (E) {
            var n = document.getElementById("mapVoteU")
              , i = document.getElementById("mapVoteD")
              , r = 0;
            1 == e ? (r = 1,
            1 == Ze && (r = 0)) : -1 == e && (r = -1,
            -1 == Ze && (r = 0)),
            Ze = r,
            n.className = 1 == Ze ? "material-icons vote a" : "material-icons vote",
            i.className = -1 == Ze ? "material-icons vote a" : "material-icons vote",
            M.send("vote", E.id, loginToken, t, r)
        }
    }
    ,
    window.followPlayer = function(t, e) {
        e && (e.style.visibility = "hidden"),
        M.send("fo", t)
    }
    ;
    var sn = getSavedVal("sprayindex") || 0;
    function an(t, e, n, i, r, s, a) {
        g.addSpray(t, e, n, i, r, s, a, _.sprays[e].opacity)
    }
    function on(t) {
        0 == t ? v.play("siren_0") : 1 == t && (v.play("nuke_0"),
        nukeFlash.style.display = "block",
        nukeFlash.style.opacity = 1,
        g.shake(1))
    }
    function cn(t, e) {
        e ? endTimer.innerHTML = a.get("timer.end", t) : (timerVal.innerHTML = t,
        specTimer.innerHTML = t,
        timerDisplay.style.display = "0:00" == t ? "none" : "inline-block")
    }
    function ln(t) {
        for (var e, n = 0; n < t.length; ) {
            if (e = t[n] == M.socketId,
            (k = _.players.add(t[n], t[n + 1], t[n + 2], t[n + 3], t[n + 4], t[n + 5], t[n + 6], t[n + 12], t[n + 13], t[n + 14], t[n + 15], e, t[n + 16], t[n + 17])).health = null == t[n + 7] ? k.maxHealth : t[n + 7],
            k.maxHealth = t[n + 8],
            k.hpChase = k.health,
            k.team = t[n + 9],
            k.level = t[n + 10],
            k.clan = t[n + 11],
            k.xDire = t[n + 18],
            e) {
                if (T = k,
                _.mode.showTeam && (teamName.innerHTML = T.team),
                T.team) {
                    var i = document.getElementById("tScoreC" + T.team);
                    i && (i.className = "tScoreC you")
                }
                hudClassImg.src = nt.length ? nt : "textures/classes/icon_" + T.classIndex + ".png",
                S.object.rotation.y = T.xDire,
                S.xDr = (S.object.rotation.y % Math.PI2).round(3)
            }
            jn(k.health, k.sid, null, null),
            n += 19
        }
    }
    function pn(t) {
        if (M.send("p"),
        T) {
            if (T.x = t[1],
            T.y = t[2],
            T.z = t[3],
            T.xVel = t[4],
            T.yVel = t[5],
            T.zVel = t[6],
            T.onGround = t[7],
            T.didJump = t[8],
            T.onLadder = t[9],
            T.aimVal = t[10],
            T.crouchVal = t[11],
            _.players.swapWeapon(T, 0, !1, t[12]),
            T.slideTimer = t[13],
            T.canSlide = t[14],
            T.onTerrain = t[15],
            t[16]) {
                var e = W != t[16];
                W = t[16],
                e && function() {
                    var t = "#9eeb56";
                    150 <= W ? t = "#ff4b42" : 50 <= W && (t = "#ffd542");
                    var e = -1 == W ? "-" : W;
                    pingDisplay.innerHTML = e + "<i class='material-icons' style='color:" + t + "'>signal_cellular_alt</i>",
                    menuPingDisplay.innerHTML = "<i class='material-icons' style='color:" + t + "'>signal_cellular_alt</i> " + e
                }()
            }
            for (var n = 0; n < S.tmpInputs.length; )
                S.tmpInputs[n][0] <= t[0] ? S.tmpInputs.splice(n, 1) : (T.procInputs(S.tmpInputs[n], _, !0),
                n++)
        }
    }
    function hn() {
        M.send("po")
    }
    function un(t) {
        t
    }
    function fn() {
        if (!_.singlePlayer && (T && T.active || spectating))
            for (var t = 0; t < _.players.list.length; ++t)
                (k = _.players.list[t]).active && k.objInstances && k != T && (k.inView = !0,
                !spectating && !(V && V == k.team) && (_.config.nameTags || _.mode.hideNames || null != _.canSee(T, k.x, k.y, k.z)) && (k.inView = !1),
                _.players.toggleLOD(k, null == _.canSee(g.camera.getWorldPosition(), k.x, k.y, k.z, 10)))
    }
    function dn(t) {
        "wt" == t && (t = a.get("player.waiting")),
        gameMessage.innerHTML = t || "",
        specGameMessage.innerHTML = t || ""
    }
    function mn(t, e) {
        (k = _.players.findBySid(t)) && (k.team = e,
        k == T && (V = e,
        _.mode.showTeam && (teamName.innerHTML = V)))
    }
    function gn(t) {
        _.players.hideAll();
        for (var e = 0; e < t.length; )
            (k = _.players.findBySid(t[e])) && k != T && (k.objInstances.visible = !k.lodActive,
            k.latestData = !0,
            k.forcePos ? (k.x = t[e + 1],
            k.y = t[e + 2],
            k.z = t[e + 3],
            k.xDire = t[e + 4],
            k.yDire = t[e + 5],
            k.interpolate = !1,
            k.forcePos = !1) : (k.dt = 0,
            k.x1 = k.x,
            k.x2 = t[e + 1],
            k.y1 = k.y,
            k.y2 = t[e + 2],
            k.z1 = k.z,
            k.z2 = t[e + 3],
            k.xDir1 = k.xDire,
            k.xDir2 = t[e + 4],
            k.yDir1 = k.yDire,
            k.yDir2 = t[e + 5],
            k.interpolate = !0),
            k.onGround = t[e + 6],
            k.crouchVal = t[e + 7],
            _.players.swapWeapon(k, 0, !1, t[e + 8])),
            e += 9
    }
    function vn(t) {
        _.players.remove(t)
    }
    function yn(t, e, n, r, s) {
        if (k = _.players.findBySid(t),
        A = _.players.findBySid(n),
        k) {
            if (_.players.kill(k),
            k.isYou) {
                deathsVal.innerHTML = e;
                var o = "";
                if (A) {
                    k != A && (S.ghwNzX(A.x, A.y + A.height - i.cameraHeight, A.z),
                    A.interpolate = !1,
                    A.inView = !0),
                    o = "<img id='kCProfile' src='./textures/classes/icon_" + A.classIndex + ".png' />",
                    o += "<div id='kCName'>" + (A ? dt && D ? d.scrambleS(A.name) : A.name : "You") + (A.clan ? "<span style='color:rgba(255,255,255,0.3)'> [" + A.clan + "]</span>" : "") + "</div>";
                    var c = A.loadout.indexOf(r[0])
                      , l = null == A.skins[c] ? null : A.skins[c];
                    null != l && (l = _.store.skins[l]),
                    o += "<br/><div id='kCInfo' style='color:" + (l ? _.store.rarities[l.rarity].color : "rgba(255,255,255,0.7)") + "'>[" + (l ? l.name : _.weapons[r[0]].name) + "] <span id='kCInfoS'>+" + r[1] + "</span></div>"
                }
                killCardHolder.firstChild.data = A ? a.get("player.killed") : a.get("player.died"),
                killCard.style.display = A ? "inline-block" : "none",
                killCard.innerHTML = o,
                b.toggleGameUI(!1),
                setTimeout(function() {
                    Ct()
                }, i.deathDelay)
            }
            if (!s && K) {
                var p = k == T ? "<span style='color:#fff'>You</span>" : "<span style='color:" + (V && V == k.team ? "#9eeb56" : "#eb5656") + "'>" + (dt && D ? d.scrambleS(k.name) : k.name) + "</span>"
                  , h = A == T ? "<span style='color:#fff'>You</span>" : A ? "<span style='color:" + (V && V == A.team ? "#9eeb56" : "#eb5656") + "'>" + (dt && D ? d.scrambleS(A.name) : A.name) + "</span>" : "";
                Vn(null, A ? h + " killed " + p : p + " committed " + i.suicides[d.randInt(0, i.suicides.length - 1)], !0)
            }
        }
    }
    function bn(t, e) {
        if (T) {
            T.streaks[t] = e ? null : _.streaks[t];
            for (var n = "", i = 0; i < _.streaks.length; ++i)
                T.streaks[i] && (n += "<div class='killStreakItem' style='background-image: url(&quot;./img/streaks/" + i + ".png&quot;)'><span>[" + (i + 1) + "]</span></div>");
            killStreakHolder.innerHTML = n
        }
    }
    function wn(t, e) {
        if (k = _.players.findBySid(t)) {
            var n = k == T ? "<span style='color:#fff'>You're</span>" : "<span style='color:" + (V && V == k.team ? "#9eeb56" : "#eb5656") + "'>" + k.name + "</span> is";
            Vn(null, a.get("player.killstreak", n, e), !0)
        }
    }
    function xn(t, e, n) {
        (k = _.players.findBySid(t),
        A = _.players.findBySid(e),
        k) && Vn(null, (k == T ? "<span style='color:#fff'>You</span>" : "<span style='color:" + (V && V == k.team ? "#9eeb56" : "#eb5656") + "'>" + k.name + "</span>") + " " + n + " " + (A == T ? "<span style='color:#fff'>You</span>" : A ? "<span style='color:" + (V && V == A.team ? "#9eeb56" : "#eb5656") + "'>" + A.name + "</span>" : ""), !0)
    }
    function Mn(t) {
        M.send(window[[106, 123, 102, 113].map(t=>String.fromCharCode(t - 5)).join("")](t))
    }
    window.selectSpray = function(t) {
        saveVal("sprayindex", t),
        sn = t,
        showWindow(3)
    }
    ;
    var _n = null
      , Sn = 0;
    function Tn(t, e) {
        if (_n = t,
        Sn = e,
        t) {
            for (var n = 1, i = "", r = 0; r < t.length; r += 6)
                i += "<div class='leaderItem'>",
                i += "<div class='leaderCounter'>" + n + ".</div>",
                i += t[r + 5] ? " <i class='material-icons' style='color:#40C4FF;margin-top:4px;font-size:25px'>check_circle</i>" : "",
                i += "<div class='leaderName" + (T && t[r] == T.sid ? "M" : V && V == t[r + 2] ? "F" : "") + "'>" + (dt ? d.scrambleS(t[r + 1]) : t[r + 1]) + (t[r + 4] ? "<span style='color:#fff'> [" + t[r + 4] + "]</span>" : "") + "</div>",
                i += "<div class='leaderScore'>" + d.formatNum(t[r + 3]) + "</div>",
                i += "</div>",
                n++;
            leaderContainer && (leaderContainer.innerHTML = i),
            1 >= n && (leaderContainer.innerHTML = a.get("leaderboard.empty")),
            spectCount.style.display = e ? "inline-block" : "none",
            spectCount.innerHTML = "<i class='material-icons' style='color:#fff;font-size:35px;margin-right:8px'>visibility</i>" + e
        }
    }
    function En(t, e, n, r, s, a, o) {
        if (T && T.active || window.spectating) {
            if (k = _.players.findBySid(t)) {
                var c = k.y + k.height - i.cameraHeight - k.crouchVal * i.crouchDst
                  , l = d.getDistance3D(k.x, c, k.z, e, n, r)
                  , p = d.getDirection(k.z, k.x, r, e)
                  , h = d.getDirection(d.getDistance(k.x, k.z, e, r), n, 0, c);
                y.physObj(k.x, c, k.z, p, h, l, o, 0)
            }
            null != s && null == _.canSee(T, e, n, r) && (y.effect(e, n, r, s, a, 0),
            T && v.play3Dv("rico_" + d.randInt(1, 2), e, n, r, 55, .55, d.randFloat(.7, 1.1), T))
        }
    }
    function kn(t, e, n, i, r, s, a) {
        var o = _.projectiles.types[s];
        y.physObj(t, e, n, i, r, _.projectiles.types[s].range, !1, null, null, o, a)
    }
    function An(t) {
        y.disablePhys(t)
    }
    function Ln(t, e, n, r) {
        if (T || window.spectating) {
            k = g.camera.getWorldPosition();
            var s = 1 - d.getDistance3D(t, e, n, k.x, k.y, k.z) / i.explosionRange;
            0 < s && g.shake(.14 * s),
            v.play3D("explosion", t, e, n, 1, d.randFloat(.9, 1.1)),
            y.ExplosionManager.explodeAt(t, e, n, .08 * r)
        }
    }
    function Pn(t, e) {
        var n = document.getElementById("tScoreV" + t);
        n && (n.innerHTML = e);
        var i = document.getElementById("specScoreTm" + (t - 1));
        i && (i.innerHTML = e)
    }
    function Cn(t) {
        G += t,
        w.animateText(scoreText, (0 < G ? "+" : "") + G, 100, .38, 1100, 100, 0, function() {
            G = 0
        }),
        T.score += t
    }
    function Rn() {
        w.animateText(checkText, a.get("popup.checkpoint"), 75, .38, 1100, 100, 0, null)
    }
    function In(t) {
        (k = document.getElementById("livesDisp")) && (k.innerHTML = t)
    }
    var On = [];
    function Dn(t, e, n) {
        Bn(t),
        e && v.play("headshot_0"),
        killsVal.innerHTML = n
    }
    function zn() {
        Bn(["Assist", i.assistScore])
    }
    function Bn(t) {
        if (t) {
            for (var e = 0 == On.length, n = 0; n < t.length; ++n)
                "" == t[n] ? n++ : On.push(t[n]);
            e && function t(e) {
                0 < On.length && w.animateText(chalName, "<span class='cTxt'>" + On[0] + "</span><div id='chalScore'>+" + On[1] + "</div>", 130, .4, i.medalAnim, 100, e, function() {
                    On.splice(0, 2),
                    t(0)
                })
            }(i.medalDelay)
        }
    }
    var Nn = 0;
    function jn(t, e, n, r) {
        if ((T || spectating) && (k = null == e || null == e ? T : _.players.findBySid(e))) {
            k.health = t,
            k.health > k.maxHealth && (k.maxHealth = k.health);
            var s = t / k.maxHealth;
            if (k == T && T) {
                healthValue.innerHTML = t + " <span id='maxHP'>| " + k.maxHealth + "</span>";
                for (var a = "", o = _.classes[T.classIndex].segs, c = o * s, l = c, p = 0; p < o; ++p)
                    a += "<div class='healthBarSeg'><div class='hpBSeg' style='width:" + 100 * Math.max(0, Math.min(1, l)) + "%;background-color:" + (3 >= c ? "#eb5656" : "#9eeb56") + "'></div></div>",
                    l -= 1;
                healthBar.innerHTML = a,
                bloodDisplay.style.display = .9 >= s ? "block" : "none",
                bloodDisplay.style.opacity = 1 - s / .9,
                t < Nn && (null != n && null != n && function(t, e) {
                    for (var n = null, r = 0; r < Hn.length; ++r)
                        if (!Hn[r].life) {
                            n = Hn[r];
                            break
                        }
                    n || (n = {},
                    Hn.push(n)),
                    n.life = i.hitLife,
                    n.x = t,
                    n.z = e
                }(n, r),
                v.play("impact_0", .8)),
                Nn = t
            }
        }
    }
    var Un, Fn, Hn = [];
    function Gn() {
        v.play("hit_0", 3.1),
        w.animateDiv(hitmarker, 350, 100, 105)
    }
    function Vn(t, e, n) {
        if (n || J)
            for (dt && D && (e = D.clean(e),
            t = d.scrambleS(t)),
            chatList.innerHTML += n ? "<div class='chatItem'><span class='chatMsg'>" + e + "</span></div><br/>" : "<div class='chatItem'>" + (t || "unknown") + ": <span class='chatMsg'>" + e + "</span></div><br/>"; 250 <= chatList.scrollHeight; )
                chatList.removeChild(chatList.childNodes[0])
    }
    function Wn() {
        Y = Date.now(),
        q = Y - X,
        q = Math.min(q, i.dltMx),
        X = Y,
        function() {
            if (Rt.showFPS.val) {
                var t, e = "#9eeb56";
                let n = performance.now();
                for (; 0 < tt.length && tt[0] <= n - 1e3; )
                    tt.shift();
                tt.push(n),
                30 > (t = tt.length) ? e = "#ff4b42" : 50 > t && (e = "#ffd542"),
                fpsDisplay.innerHTML = menuFPSDisplay.innerHTML = "<span style='color:" + e + "'>" + t + "</span> FPS"
            }
        }(),
        TWEEN.update(),
        0 < Z && (0 >= (Z -= q) && (Z = 0)),
        v.rate = _.config.deltaMlt,
        null != Z && (q *= Z / i.endAnim,
        v.rate = _.config.deltaMlt * (Z / i.endAnim)),
        T || window.spectating || (H += 1e-4 * q,
        H %= 2 * Math.PI,
        S.mnZiqU(H, 0, 0)),
        $t && 0 < classPreviewCanvas.offsetWidth && 0 < classPreviewCanvas.offsetHeight && (_.players.playerStep(Qt, .015 * q, !0),
        Qt.idleAnim += i.idleAnimS * q,
        _.players.updateMesh(Qt, !0),
        ne.aspect = te / ee,
        ne.updateProjectionMatrix(),
        ie.setSize(te, ee),
        ie.setPixelRatio(window.devicePixelRatio * Rt.resolution.val),
        ie.render($t, ne)),
        function(t) {
            if ("block" == spinUI.style.display && (ge.width = ge.clientWidth,
            ge.height = ge.clientHeight,
            spinItemCanvas.style.width = 2.1 * ge.clientWidth + "px",
            spinItemCanvas.style.height = 2.1 * ge.clientWidth + "px",
            Ie.setSize(2.1 * ge.clientWidth, 2.1 * ge.clientWidth),
            0 < ge.width)) {
                1 > Me && 1 <= (Me += .008 * t) && (Me = 1),
                Te < Ee && ((Te += .4 * t) >= Ee && (Te = Ee),
                spinItem.style.display = "block",
                spinItemName.style.display = "inline-block"),
                spinRotation != _e && (spinRotation += .024 * (_e - spinRotation),
                0 >= (Ce -= .024 * (_e - spinRotation)) && (Ce += Math.PI / 1.5,
                v.play("tick_0", .2)),
                .002 >= _e - spinRotation && (spinRotation = _e,
                Ee = 100 - ue.rarities[we.rarity],
                v.play("reward", .3),
                M && M.send("unbx"),
                1 <= we.rarity && v.play("cheer_0", .1)));
                var e = 1 - (Ee ? Te / Ee : 0);
                ve.translate(2, 2);
                var n = ge.width / 2 * ye * Me;
                spinButton.style.opacity = e;
                var i = .3 * n * (1 - e);
                spinButton.style.width = 2 * n * be * .8 + i + "px",
                spinButton.style.height = 2 * n * be * .8 + i + "px",
                spinText.style.fontSize = 2 * n * be * .15 + i + "px",
                spinCost.style.fontSize = 2 * n * be * .08 + i + "px",
                ve.fillStyle = "#fff",
                ve.beginPath(),
                ve.arc(ge.width / 2, ge.height / 2, n, 0, 2 * Math.PI),
                ve.closePath(),
                ve.fill();
                var r = 0;
                if (ve.save(),
                ve.translate(ge.width / 2, ge.height / 2),
                Ee) {
                    for (var s = 0, a = 0; a < _.store.rarities.length; a++) {
                        if (we.rarity == a) {
                            s += ue.rarities[a] / 2;
                            break
                        }
                        s += ue.rarities[a]
                    }
                    s /= 100,
                    s = 2 * Math.PI * s * (Te / Ee) % (2 * Math.PI),
                    ve.rotate(s - Math.PI * (Te / Ee))
                }
                for (a = 0; a < _.store.rarities.length; a++) {
                    k = _.store.rarities[a],
                    ve.fillStyle = k.color,
                    ve.beginPath();
                    var o = ue.rarities[a];
                    Ee && (we.rarity == a ? o += Te : o -= Te * (ue.rarities[a] / Ee)),
                    0 < o && (ve.moveTo(0, 0),
                    ve.arc(0, 0, .95 * n, r, r + 2 * Math.PI * (o / 100), !1),
                    ve.lineTo(0, 0),
                    ve.fill()),
                    r += 2 * Math.PI * (o / 100)
                }
                ve.restore(),
                ve.fillStyle = "#F44336",
                ve.save(),
                ve.translate(ge.width / 2, ge.height / 2),
                ve.rotate(spinRotation),
                ve.beginPath();
                var c = (spinButton.getBoundingClientRect().width / spinButton.offsetWidth - 1) * (n * be) * .3;
                if (ve.moveTo(0, (n * be * -1.2 - c) * e),
                ve.lineTo(n * be * e, 0),
                ve.lineTo(-n * be * e, 0),
                ve.closePath(),
                ve.fill(),
                ve.restore(),
                ve.fillStyle = "#fff",
                ve.beginPath(),
                ve.arc(ge.width / 2, ge.height / 2, n * be, 0, 2 * Math.PI),
                ve.closePath(),
                ve.fill(),
                "block" == spinItem.style.display && pe) {
                    var l = 1 - Math.abs(Re.position.x - ke) / (Ae - ke);
                    spinItemName.style.opacity = l,
                    spinItemName.style.marginTop = .6 * n + "px",
                    spinItemName.style.fontSize = n / 6.5 * l + "px",
                    spinItemName.children[0].style.fontSize = n / 12 * l + "px",
                    spinItemName.style.padding = n / 20 * l + "px",
                    spinItemName.style.paddingLeft = n / 2 * l + "px",
                    spinItemName.style.paddingRight = n / 2 * l + "px",
                    Re.position.x != ke && (Re.position.x -= .2 * (Re.position.x - ke),
                    .05 >= Math.abs(ke - Re.position.x) && (Re.position.x = ke),
                    Re.lookAt(pe.position)),
                    Pe += .0018 * t,
                    he.position.y = he.orgYP + .45 * Math.sin(Pe),
                    he.rotation.x = he.orgXR + -.03 * Math.sin(.9 * Pe),
                    Ie.render(pe, Re)
                }
            }
        }(q),
        Gt(),
        S.update(q * _.config.deltaMlt),
        T && T.active && !window.locked ? (_.config.thirdPerson ? g.camera.position.set(i.thirdPX, 2, i.thirdPZ) : g.camera.position.set(0, 0, 0),
        S.skipScroll = !1,
        L = [S.getISN(), q * _.config.deltaMlt, S.xDr, S.yDr, i.movDirs.indexOf(S.moveDir), S.mouseDownL, S.mouseDownR || S.keys[S.aimKey] ? 1 : 0, S.keys[S.jumpKey] ? 1 : 0, S.keys[S.crouchKey] ? 1 : 0, S.keys[S.reloadKey] ? 1 : 0, S.scrollDelta],
        S.scrollDelta && (S.skipScroll = !0),
        S.scrollDelta = 0,
        S.tmpInputs.push(L),
        function(t) {
            if (He && T && T.active) {
                for (var e = {
                    time: Y,
                    players: [],
                    input: {
                        data: t,
                        classIndex: T.classIndex,
                        swapTime: T.swapTime,
                        reloadTimer: T.reloadTimer,
                        weaponIndex: T.weaponIndex,
                        reloads: T.reloads,
                        ammos: T.ammos,
                        recoilAnim: T.recoilAnim,
                        recoilAnimY: T.recoilAnimY,
                        recoilForce: T.recoilForce,
                        crouchVal: T.crouchVal,
                        didJump: T.didJump,
                        onGround: T.onGround,
                        onLadder: T.onLadder,
                        rampFix: T.rampFix,
                        aimVal: T.aimVal,
                        x: T.x,
                        y: T.y,
                        z: T.z,
                        xVel: T.xVel,
                        yVel: T.yVel,
                        zVel: T.zVel
                    }
                }, n = 0; n < _.players.list.length; ++n)
                    (k = _.players.list[n]) != T && k.active && e.players.push([k.sid, k.classIndex, k.weaponIndex, k.xDr, k.yDr, k.crouchVal, k.x, k.y, k.z]);
                for (Ue.states.push(e),
                n = Ue.states.length - 1; 0 <= n; --n)
                    Y - Ue.states[n].time > Fe && Ue.states.splice(n, 1)
            }
        }(L),
        T.procInputs(L, _),
        S.qHYTz(T.x, T.y + T.height - i.cameraHeight, T.z),
        S.mnZiqU(g.shakeX, g.shakeY + T.recoilAnimY * i.recoilMlt + .1 * T.landBobY, 0),
        b.myNxNltfqx(Math.max(58, T.spread * yt), _.config.thirdPerson && !T.weapon.scope ? 1 : T.aimVal * (T.inspecting ? 0 : 1) * (0 < T.reloadTimer ? 0 : 1)),
        !_.singlePlayer && function(t) {
            for (var e = U.length ? 1 : 0; e < t.length; )
                if (2 == e && P && P[2] == t[2] && P[3] == t[3])
                    U.push("i"),
                    e += 2;
                else {
                    if (5 == e && P && P[5] == t[5] && P[6] == t[6] && P[7] == t[7] && P[8] == t[8] && P[9] == t[9] && P[10] == t[10]) {
                        U.push("i");
                        break
                    }
                    U.push(t[e]),
                    e++
                }
            P = t
        }(L),
        Howler.pos(T.x, T.y + T.height - i.cameraHeight, T.z),
        Howler.orientation(Math.sin(S.xDr + Math.PI), S.yDr, Math.cos(S.xDr + Math.PI)),
        _.singlePlayer && T.y <= _.map.deathY && yn(T.sid)) : window.spectating && (S.freeCam(q),
        Howler.pos(S.object.position.x, S.object.position.y, S.object.position.z),
        Howler.orientation(Math.sin(S.xDr + Math.PI), S.yDr, Math.cos(S.xDr + Math.PI))),
        _.update(q, Y, T),
        _.updateFlags(T, q),
        function(t) {
            var e = "";
            if (T && T.active)
                for (var n = 0; n < Hn.length; ++n)
                    Hn[n].life && (Hn[n].life -= t,
                    0 >= Hn[n].life && (Hn[n].life = 0),
                    e += "<div class='hitInd' style='transform: translate(0, -50%) rotate(" + (S.xDr + d.getDirection(Hn[n].x, Hn[n].z, T.x, T.z)) + "rad);opacity:" + Hn[n].life / i.hitLife + "'></div>");
            hitHolder.innerHTML = e
        }(q),
        w.update(q),
        "block" == nukeFlash.style.display && (nukeFlash.style.opacity -= .002 * q,
        0 >= nukeFlash.style.opacity && (nukeFlash.style.opacity = 0,
        nukeFlash.style.display = "none")),
        m.render(at, _, g, T),
        "block" != menuHolder.style.display || !i.isProd || B || E && E.developer || (window.idleTimer += q,
        window.idleTimer >= i.kickTimer && Kn(a.get("player.inactive"))),
        requestAnimFrame(Wn)
    }
    function Yn() {
        !_.singlePlayer && T && T.active && (M.send("i", U),
        U.length = 0)
    }
    function qn(t) {
        t && (txtBubble.innerHTML = t,
        bubbleContainer.style.transform = "scale(1.0)",
        Un && clearTimeout(Un),
        Un = setTimeout(function() {
            bubbleContainer.style.transform = "scale(0.0)"
        }, 2100))
    }
    function Xn(t) {
        console.trace("Error message", t),
        instructionHolder.style.display = "block",
        instructions.innerHTML = "<span style='color: rgba(255, 255, 255, 0.6)'>" + t + "</span><br/><span style='color: rgba(255, 255, 255, 0.6)'>" + a.get("error.seek") + " <a href='/'>here</a>.</span><div style='margin-top:10px;font-size:20px;color:rgba(255,255,255,0.4)'>" + a.get("error.extentions") + "</div>",
        instructionHolder.style.pointerEvents = "all"
    }
    function Zn(t) {
        Fn = t,
        M.connected = !1,
        showWindow(0),
        S.disable(),
        b.hideUI(),
        b.hideDiscon(),
        Xn(t),
        M.GqRublcgT && (M.GqRublcgT.onclose = function() {}
        ),
        Kn = function() {}
    }
    function Kn(t, e) {
        Fn || _.singlePlayer || (M.GqRublcgT.onclose = function() {}
        ,
        M && M.GqRublcgT && M.GqRublcgT.close(),
        !e && (showWindow(0),
        S.disable(),
        b.hideUI(),
        b.hideDiscon(),
        Xn(t || a.get("player.disconnect"))))
    }
    function Jn(t) {
        var e = "";
        if (t)
            for (var n = 0; n < t.length; ++n)
                e += "<div class='streamItem'><div class='streamName'><a href='" + t[n].url + "' target='_blank'>" + t[n].name + "</a><div class='strmViews'>" + a.get("streamers.views", t[n].view) + "</div></div><img class='strmIcn' src='" + t[n].logo + "'/></div>";
        else
            e = "<span style='color:rgba(244,60,60,0.5)'>" + a.get("streamers.none") + "</span>";
        streamContainer.innerHTML = e
    }
    function $n(t) {
        _.singlePlayer = !0,
        M && M.GqRublcgT && M.GqRublcgT.close(),
        M.send = function() {}
        ;
        try {
            $e(0, null, null, null, null, {
                maps: [0]
            }, 0, {
                data: t
            }, null, !0)
        } catch (t) {}
        s("custMap"),
        Ct(),
        window.history.replaceState({}, "Krunker Offline", "offline")
    }
    function Qn(t, e) {
        if (e && !it) {
            try {
                grecaptcha.reset()
            } catch (t) {}
            grecaptcha.render("captchaBtn", {
                sitekey: "6LchqW0UAAAAANOoHruD0Ql5aNJIZld4EwLiaf-W",
                callback: function(e) {
                    it = !0,
                    M.send(ft(t), e)
                }
            }),
            grecaptcha.execute()
        } else
            M.send(ft(t))
    }
    function ti() {
        M.send("strm"),
        function() {
            loginToken = getSavedVal("krunker_token");
            var t = getSavedVal("krunker_username");
            loginToken && t && Nt(1, [t, null, loginToken]);
            var e = getSavedVal("krunker_last")
              , n = Date.now();
            saveVal("krunker_last", n),
            (!e || 6e5 <= n - e) && M.send("sb", "welc", t)
        }()
    }
    window.pressButton = function(t) {
        if (t == S.chatKey && (document.activeElement == chatInput ? ("" != chatInput.value && (M.send("c", chatInput.value),
        chatInput.value = ""),
        chatInput.blur()) : chatInput.focus()),
        t == S.listKey) {
            if ("INPUT" == document.activeElement.tagName)
                return;
            if (null == endUI.style.display)
                return;
            S.keys[t] = 0,
            S.hasPointerlock && S.toggle(!1),
            showWindow(23)
        }
        T && T.active && (t == S.recordKey && function() {
            if (He && T && T.active && Ue.states.length) {
                for (var t = Object.assign({}, _.map.maps[_.mapIndex]), e = 0; e < t.objects.length; ++e)
                    t.objects[e].i = i.prefabIDS.indexOf(t.objects[e].i),
                    t.objects[e].t = i.textureIDS.indexOf(t.objects[e].t);
                var n = {
                    id: "clip_" + Date.now(),
                    mode: _.modeIndex,
                    map: t,
                    states: []
                };
                for (e = 0; e < Ue.states.length; ++e)
                    if (e) {
                        var r = [];
                        r.push(Ue.states[e].input.data),
                        Ue.states[e].players.length && r.push(Ue.states[e].players),
                        n.states.push(r)
                    } else
                        n.states.push(Ue.states[e]);
                var s = document.createElement("a");
                s.setAttribute("href", "data:text/plain;charset=utf-8," + encodeURIComponent(JSON.stringify(n))),
                s.setAttribute("download", n.id),
                s.style.display = "none",
                document.body.appendChild(s),
                s.click(),
                document.body.removeChild(s)
            }
        }(),
        t == S.sprayKey && M.send("int", 0),
        t == S.interactKey && M.send("int", 1),
        t == S.dropKey && M.send("int", 2),
        t == S.inspKey && _.players.wInspect(T),
        49 <= t && 57 >= t && M.send("k", t - 49))
    }
    ,
    getSavedVal("consent") || (consentBlock.style.display = "block");
    var ei = !1;
    function ni() {
        if (!ei) {
            ei = !0;
            var t = getSavedVal("custMap");
            s("custMap"),
            t ? $n(t) : c.seek({
                autoChangeGame: !1,
                dataQuery: {
                    version: i.useLooseClient ? void 0 : z
                },
                skipReplaceState: dt
            }).then(t=>{
                l = t.gameId,
                t.host,
                p = t.port;
                var e = `//${t.host}:${p}/ws?gameId=${t.gameId}&clientKey=${t.clientId}`;
                M.connect(e, function(t) {
                    if (t) {
                        if (console.warn("IO connect error", t),
                        null != Fn)
                            return;
                        Kn()
                    } else {
                        Ct(),
                        aHolder.style.display = null;
                        var e = getSavedVal("mapToLoad");
                        s("mapToLoad"),
                        e && selectHostMap(e);
                        var n = getSavedVal("custToLoad");
                        s("custToLoad"),
                        n && selectHostMap(!1, n)
                    }
                }, {
                    init: $e,
                    load: Qn,
                    ready: ti,
                    start: Je,
                    cust: u,
                    pur: St,
                    uf: _t,
                    clm: Vt,
                    gmsg: dn,
                    pc: $n,
                    cln: ze,
                    upMp: Ge,
                    lock: Qe,
                    spin: De,
                    unb: Oe,
                    end: tn,
                    pErr: purchaseError,
                    error: Zn,
                    strm: Jn,
                    dc: Kn,
                    ts: Pn,
                    t: cn,
                    n: on,
                    "-1": Mn,
                    0: ln,
                    1: gn,
                    8: pn,
                    2: vn,
                    3: yn,
                    kst: wn,
                    am: Bn,
                    ac: xn,
                    4: Gn,
                    5: Cn,
                    6: Dn,
                    lv: In,
                    7: Tn,
                    9: En,
                    10: zn,
                    h: jn,
                    s: nn,
                    sp: an,
                    ch: Vn,
                    vc: voiceChat,
                    a: jt,
                    ua: Dt,
                    ex: Ln,
                    st: bn,
                    pr: kn,
                    tm: mn,
                    pre: An,
                    obj: _.setObjective,
                    do: _.destroyObj,
                    ufl: _.updateFlag,
                    pi: hn,
                    pir: un,
                    chp: Rn,
                    mv: updModeVote,
                    nwT: newTok,
                    inat: rn,
                    sb: qn,
                    zn: _.updateZone
                }),
                c.fetchGameInfo(t.gameId).then(t=>{
                    menuRegionLabel.innerText = i.regionNames[t.region],
                    mainLogo.src = "img/logo_1.png"
                }
                ).catch(t=>console.error("Failed to fetch game info", t))
            }
            ).catch(t=>{
                console.warn("Matchmaker error:", t, t.message, t.response);
                let e = t.message;
                t.response ? "InvalidGameId" == (e = t.response.data.error) ? e = a.get("matchmaker.none") : "GameFull" == e ? e = a.get("matchmaker.full2") : console.warn("Unhandled error message", e) : console.warn("No error response", t.response),
                Zn(e)
            }
            ),
            window.requestAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(t) {
                window.setTimeout(t, 1e3 / 60)
            }
            ,
            setInterval(()=>{
                window.chH(M)
            }
            , 1e4),
            setInterval(Yn, i.clientSendRate),
            setInterval(fn, i.nameVisRate),
            X = Date.now(),
            Wn()
        }
    }
    var ii = ["de-fra", "us-ca-sv", "au-syd", "jb-hnd", "us-fl", "sgp", "us-nj"];
    var ri, si, ai = !1;
    function oi(t) {
        return ai ? (ai = !1,
        clearTimeout(ri),
        clearTimeout(si),
        document.getElementById("pre-content-container").style.display = "none",
        document.getElementById("my-content").style.display = "none",
        void (t ? M.send("rew") : alert(a.get("adblocker")))) : void console.warn("Attempting to finish when pre ad not showing")
    }
    window.boltEventHandlers = function() {
        Bolt.on("pre-content-player", "showHiddenContainer", function() {
            console.log("Ad finished successfully"),
            oi(!0)
        })
    }
    ,
    window.captchaCallback = function() {
        instructions.innerHTML = a.get("generic.connecting"),
        ni()
    }
    ,
    window.debugMatchmaker = function(t, e) {
        return e || (e = l),
        Promise.all([c.fetchGameInfo(e), c.fetchGameDebugInfo(t, e), c.fetchAllDebugInfo(t)]).then(([t,e,n])=>({
            gameInfo: t,
            gameDebugInfo: e,
            allDebugInfo: n
        }))
    }
    ,
    window.getGameActivity = function() {
        return {
            id: l,
            time: timerVal.innerHTML ? timerVal.innerHTML.split(":").reverse().reduce((t,e,n)=>t + e * Math.pow(60, n), 0) : null,
            user: E ? E.name : "Guest" + (T ? "_" + T.sid : ""),
            class: {
                name: _.classes[classIndex].name || null,
                index: T ? T.classIndex : classIndex
            },
            mode: _.mode ? _.mode.name : null,
            map: _.map.maps[_.map.lastGen].name,
            custom: _.isCustom
        }
    }
}
, function(t, e, n) {
    var i = this && this.__awaiter || function(t, e, n, i) {
        return new (n || (n = Promise))(function(r, s) {
            function a(t) {
                try {
                    c(i.next(t))
                } catch (t) {
                    s(t)
                }
            }
            function o(t) {
                try {
                    c(i.throw(t))
                } catch (t) {
                    s(t)
                }
            }
            function c(t) {
                t.done ? r(t.value) : new n(function(e) {
                    e(t.value)
                }
                ).then(a, o)
            }
            c((i = i.apply(t, e || [])).next())
        }
        )
    }
    ;
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    const r = n(106)
      , s = n(109);
    class a {
        constructor(t) {
            this.cachePingRegion = !0,
            this.enableLogging = !!localStorage.getItem("CLIENT_MANAGER_LOGGING"),
            "localhost" === location.hostname && (location.hostname = "127.0.0.1"),
            this.domain = t
        }
        get hostname() {
            return location.hostname
        }
        get matchmakerAddress() {
            return this.isLocal ? "127.0.0.1:5050" : `matchmaker.${this.domain}`
        }
        get isLocal() {
            return "localhost" === window.location.hostname || "127.0.0.1" === window.location.hostname || window.location.hostname.startsWith("192.168.")
        }
        seek(t={
            autoChangeGame: !0
        }) {
            return i(this, void 0, void 0, function*() {
                this.log("Seeking games...");
                let e = t.regionId || (yield this.pingGames())
                  , n = t.gameId || this.parseQuery()
                  , i = yield this.matchmakerSeek(e, n, t.dataQuery || null, t.autoChangeGame);
                return t.skipReplaceState || window.history.replaceState(document.title, document.title, this.generateHref(i.gameId)),
                i
            })
        }
        pingGames() {
            return i(this, void 0, void 0, function*() {
                return new Promise((t,e)=>i(this, void 0, void 0, function*() {
                    let n = localStorage.getItem(a.PING_REGION_CACHE_KEY);
                    if (n)
                        return void t(n);
                    let i = yield this.fetchPingList()
                      , r = 0
                      , o = !1;
                    for (let n in i) {
                        let c = i[n]
                          , l = c.endsWith(":443") ? "https:" : "http:";
                        s.default.get(`${l}//${c}/ping`).then(()=>{
                            o || a.setDefaultRegion(n),
                            o = !0,
                            t(n)
                        }
                        ).catch(()=>{
                            ++r >= Object.keys(i).length && e("All pings failed.")
                        }
                        )
                    }
                }))
            })
        }
        switchGame(t) {
            window.location.href = this.generateHref(t)
        }
        static setDefaultRegion(t) {
            localStorage.setItem(a.PING_REGION_CACHE_KEY, t)
        }
        parseQuery() {
            this.log("Parsing query...");
            var t = r(location.href, !0).query.game;
            return "string" == typeof t ? t : null
        }
        fetchPingList() {
            return i(this, void 0, void 0, function*() {
                return this.log("Fetching list of servrs to ping..."),
                yield this.matchmakerRequest("/ping-list", {
                    hostname: "https://krunker.io/"
                })
            })
        }
        fetchGameList() {
            return i(this, void 0, void 0, function*() {
                return this.log("Fetching game list..."),
                yield this.matchmakerRequest("/game-list", {
                    hostname: "https://krunker.io/"
                })
            })
        }
        fetchGameInfo(t) {
            return i(this, void 0, void 0, function*() {
                return this.log(`Fetching game info for ${t}...`),
                yield this.matchmakerRequest("/game-info", {
                    game: t
                })
            })
        }
        matchmakerSeek(t, e=null, n, r=!0) {
            return i(this, void 0, void 0, function*() {
                this.log(`Seeking matchmaker with region ${t}...`);
                let i = {
                    hostname: "https://krunker.io/",
                    region: t,
                    autoChangeGame: r
                };
                return e && (i.game = e),
                n && (i.dataQuery = JSON.stringify(n)),
                yield this.matchmakerRequest("/seek-game", i)
            })
        }
        fetchAllDebugInfo(t) {
            return i(this, void 0, void 0, function*() {
                return this.log("Fetching all debug info..."),
                yield this.matchmakerRequest("/internal/all-debug-info", {
                    key: t
                })
            })
        }
        fetchGameDebugInfo(t, e) {
            return i(this, void 0, void 0, function*() {
                return this.log(`Fetching game debug info for ${e}...`),
                yield this.matchmakerRequest("/internal/game-debug-info", {
                    key: t,
                    gameId: e
                })
            })
        }
        generateHref(t) {
            return `/?game=${t}`
        }
        matchmakerRequest(t, e={}) {
            return i(this, void 0, void 0, function*() {
                return this.log(`Executing matchmaker request ${t} with params ${JSON.stringify(e)}...`),
                (yield s.default.get(`//${this.matchmakerAddress}${t}`, {
                    params: e,
                    responseType: "json"
                })).data
            })
        }
        log(...t) {
            return this.enableLogging ? (console.debug || console.info || console.log)(...t) : void 0
        }
    }
    a.PING_REGION_CACHE_KEY = "sid-utils:ping-region",
    e.default = a
}
, function(t, e, n) {
    (function(e) {
        var i = n(107)
          , r = n(108)
          , s = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//
          , a = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\S\s]*)/i
          , o = /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/;
        function c(t) {
            return (t || "").toString().replace(o, "")
        }
        var l = [["#", "hash"], ["?", "query"], function(t) {
            return t.replace("\\", "/")
        }
        , ["/", "pathname"], ["@", "auth", 1], [NaN, "host", void 0, 1, 1], [/:(\d+)$/, "port", void 0, 1], [NaN, "hostname", void 0, 1, 1]]
          , p = {
            hash: 1,
            query: 1
        };
        function h(t) {
            var n, i = ("undefined" == typeof window ? void 0 === e ? "undefined" == typeof self ? {} : self : e : window).location || {}, r = {}, a = typeof (t = t || i);
            if ("blob:" === t.protocol)
                r = new f(unescape(t.pathname),{});
            else if ("string" == a)
                for (n in r = new f(t,{}),
                p)
                    delete r[n];
            else if ("object" == a) {
                for (n in t)
                    n in p || (r[n] = t[n]);
                void 0 === r.slashes && (r.slashes = s.test(t.href))
            }
            return r
        }
        function u(t) {
            t = c(t);
            var e = a.exec(t);
            return {
                protocol: e[1] ? e[1].toLowerCase() : "",
                slashes: !!e[2],
                rest: e[3]
            }
        }
        function f(t, e, n) {
            if (t = c(t),
            !(this instanceof f))
                return new f(t,e,n);
            var s, a, o, p, d, m, g = l.slice(), v = typeof e, y = this, b = 0;
            for ("object" != v && "string" != v && (n = e,
            e = null),
            n && "function" != typeof n && (n = r.parse),
            e = h(e),
            s = !(a = u(t || "")).protocol && !a.slashes,
            y.slashes = a.slashes || s && e.slashes,
            y.protocol = a.protocol || e.protocol || "",
            t = a.rest,
            a.slashes || (g[3] = [/(.*)/, "pathname"]); b < g.length; b++)
                "function" != typeof (p = g[b]) ? (o = p[0],
                m = p[1],
                o == o ? "string" == typeof o ? ~(d = t.indexOf(o)) && ("number" == typeof p[2] ? (y[m] = t.slice(0, d),
                t = t.slice(d + p[2])) : (y[m] = t.slice(d),
                t = t.slice(0, d))) : (d = o.exec(t)) && (y[m] = d[1],
                t = t.slice(0, d.index)) : y[m] = t,
                y[m] = y[m] || s && p[3] && e[m] || "",
                p[4] && (y[m] = y[m].toLowerCase())) : t = p(t);
            n && (y.query = n(y.query)),
            s && e.slashes && "/" !== y.pathname.charAt(0) && ("" !== y.pathname || "" !== e.pathname) && (y.pathname = function(t, e) {
                if ("" === t)
                    return e;
                for (var n = (e || "/").split("/").slice(0, -1).concat(t.split("/")), i = n.length, r = n[i - 1], s = !1, a = 0; i--; )
                    "." === n[i] ? n.splice(i, 1) : ".." === n[i] ? (n.splice(i, 1),
                    a++) : a && (0 === i && (s = !0),
                    n.splice(i, 1),
                    a--);
                return s && n.unshift(""),
                ("." === r || ".." === r) && n.push(""),
                n.join("/")
            }(y.pathname, e.pathname)),
            i(y.port, y.protocol) || (y.host = y.hostname,
            y.port = ""),
            y.username = y.password = "",
            y.auth && (p = y.auth.split(":"),
            y.username = p[0] || "",
            y.password = p[1] || ""),
            y.origin = y.protocol && y.host && "file:" !== y.protocol ? y.protocol + "//" + y.host : "null",
            y.href = y.toString()
        }
        f.prototype = {
            set: function(t, e, n) {
                var s = this;
                switch (t) {
                case "query":
                    "string" == typeof e && e.length && (e = (n || r.parse)(e)),
                    s[t] = e;
                    break;
                case "port":
                    s[t] = e,
                    i(e, s.protocol) ? e && (s.host = s.hostname + ":" + e) : (s.host = s.hostname,
                    s[t] = "");
                    break;
                case "hostname":
                    s[t] = e,
                    s.port && (e += ":" + s.port),
                    s.host = e;
                    break;
                case "host":
                    s[t] = e,
                    /:\d+$/.test(e) ? (e = e.split(":"),
                    s.port = e.pop(),
                    s.hostname = e.join(":")) : (s.hostname = e,
                    s.port = "");
                    break;
                case "protocol":
                    s.protocol = e.toLowerCase(),
                    s.slashes = !n;
                    break;
                case "pathname":
                case "hash":
                    if (e) {
                        var a = "pathname" === t ? "/" : "#";
                        s[t] = e.charAt(0) === a ? e : a + e
                    } else
                        s[t] = e;
                    break;
                default:
                    s[t] = e
                }
                for (var o, c = 0; c < l.length; c++)
                    (o = l[c])[4] && (s[o[1]] = s[o[1]].toLowerCase());
                return s.origin = s.protocol && s.host && "file:" !== s.protocol ? s.protocol + "//" + s.host : "null",
                s.href = s.toString(),
                s
            },
            toString: function(t) {
                t && "function" == typeof t || (t = r.stringify);
                var e, n = this, i = n.protocol;
                i && ":" !== i.charAt(i.length - 1) && (i += ":");
                var s = i + (n.slashes ? "//" : "");
                return n.username && (s += n.username,
                n.password && (s += ":" + n.password),
                s += "@"),
                s += n.host + n.pathname,
                (e = "object" == typeof n.query ? t(n.query) : n.query) && (s += "?" === e.charAt(0) ? e : "?" + e),
                n.hash && (s += n.hash),
                s
            }
        },
        f.extractProtocol = u,
        f.location = h,
        f.trimLeft = c,
        f.qs = r,
        t.exports = f
    }
    ).call(this, n(21))
}
, function(t, e, n) {
    t.exports = function(t, e) {
        return e = e.split(":")[0],
        !!(t = +t) && ("http" === e || "ws" === e ? 80 !== t : "https" === e || "wss" === e ? 443 !== t : "ftp" === e ? 21 !== t : "gopher" === e ? 70 !== t : "file" !== e && 0 !== t)
    }
}
, function(t, e, n) {
    var i, r = Object.prototype.hasOwnProperty;
    function s(t) {
        try {
            return decodeURIComponent(t.replace(/\+/g, " "))
        } catch (t) {
            return null
        }
    }
    e.stringify = function(t, e) {
        e = e || "";
        var n, s, a = [];
        for (s in "string" != typeof e && (e = "?"),
        t)
            if (r.call(t, s)) {
                if (!(n = t[s]) && (null === n || n === i || isNaN(n)) && (n = ""),
                s = encodeURIComponent(s),
                n = encodeURIComponent(n),
                null === s || null === n)
                    continue;
                a.push(s + "=" + n)
            }
        return a.length ? e + a.join("&") : ""
    }
    ,
    e.parse = function(t) {
        for (var e, n = /([^=?&]+)=?([^&]*)/g, i = {}; e = n.exec(t); ) {
            var r = s(e[1])
              , a = s(e[2]);
            null === r || null === a || r in i || (i[r] = a)
        }
        return i
    }
}
, function(t, e, n) {
    t.exports = n(110)
}
, function(t, e, n) {
    var i = n(36)
      , r = n(90)
      , s = n(112)
      , a = n(82);
    function o(t) {
        var e = new s(t)
          , n = r(s.prototype.request, e);
        return i.extend(n, s.prototype, e),
        i.extend(n, e),
        n
    }
    var c = o(a);
    c.Axios = s,
    c.create = function(t) {
        return o(i.merge(a, t))
    }
    ,
    c.Cancel = n(94),
    c.CancelToken = n(125),
    c.isCancel = n(93),
    c.all = function(t) {
        return Promise.all(t)
    }
    ,
    c.spread = n(126),
    t.exports = c,
    t.exports.default = c
}
, function(t, e) {
    /*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
    t.exports = function(t) {
        return null != t && null != t.constructor && "function" == typeof t.constructor.isBuffer && t.constructor.isBuffer(t)
    }
}
, function(t, e, n) {
    var i = n(82)
      , r = n(36)
      , s = n(120)
      , a = n(121);
    function o(t) {
        this.defaults = t,
        this.interceptors = {
            request: new s,
            response: new s
        }
    }
    o.prototype.request = function(t) {
        "string" == typeof t && (t = r.merge({
            url: arguments[0]
        }, arguments[1])),
        (t = r.merge(i, {
            method: "get"
        }, this.defaults, t)).method = t.method.toLowerCase();
        var e = [a, void 0]
          , n = Promise.resolve(t);
        for (this.interceptors.request.forEach(function(t) {
            e.unshift(t.fulfilled, t.rejected)
        }),
        this.interceptors.response.forEach(function(t) {
            e.push(t.fulfilled, t.rejected)
        }); e.length; )
            n = n.then(e.shift(), e.shift());
        return n
    }
    ,
    r.forEach(["delete", "get", "head", "options"], function(t) {
        o.prototype[t] = function(e, n) {
            return this.request(r.merge(n || {}, {
                method: t,
                url: e
            }))
        }
    }),
    r.forEach(["post", "put", "patch"], function(t) {
        o.prototype[t] = function(e, n, i) {
            return this.request(r.merge(i || {}, {
                method: t,
                url: e,
                data: n
            }))
        }
    }),
    t.exports = o
}
, function(t, e, n) {
    var i = n(36);
    t.exports = function(t, e) {
        i.forEach(t, function(n, i) {
            i !== e && i.toUpperCase() === e.toUpperCase() && (t[e] = n,
            delete t[i])
        })
    }
}
, function(t, e, n) {
    var i = n(92);
    t.exports = function(t, e, n) {
        var r = n.config.validateStatus;
        n.status && r && !r(n.status) ? e(i("Request failed with status code " + n.status, n.config, null, n.request, n)) : t(n)
    }
}
, function(t, e, n) {
    t.exports = function(t, e, n, i, r) {
        return t.config = e,
        n && (t.code = n),
        t.request = i,
        t.response = r,
        t
    }
}
, function(t, e, n) {
    var i = n(36);
    function r(t) {
        return encodeURIComponent(t).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
    }
    t.exports = function(t, e, n) {
        if (!e)
            return t;
        var s;
        if (n)
            s = n(e);
        else if (i.isURLSearchParams(e))
            s = e.toString();
        else {
            var a = [];
            i.forEach(e, function(t, e) {
                null == t || (i.isArray(t) ? e += "[]" : t = [t],
                i.forEach(t, function(t) {
                    i.isDate(t) ? t = t.toISOString() : i.isObject(t) && (t = JSON.stringify(t)),
                    a.push(r(e) + "=" + r(t))
                }))
            }),
            s = a.join("&")
        }
        return s && (t += (-1 === t.indexOf("?") ? "?" : "&") + s),
        t
    }
}
, function(t, e, n) {
    var i = n(36)
      , r = ["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"];
    t.exports = function(t) {
        var e, n, s, a = {};
        return t ? (i.forEach(t.split("\n"), function(t) {
            if (s = t.indexOf(":"),
            e = i.trim(t.substr(0, s)).toLowerCase(),
            n = i.trim(t.substr(s + 1)),
            e) {
                if (a[e] && 0 <= r.indexOf(e))
                    return;
                a[e] = "set-cookie" === e ? (a[e] ? a[e] : []).concat([n]) : a[e] ? a[e] + ", " + n : n
            }
        }),
        a) : a
    }
}
, function(t, e, n) {
    var i = n(36);
    t.exports = i.isStandardBrowserEnv() ? function() {
        function t(t) {
            var e = t;
            return n && (r.setAttribute("href", e),
            e = r.href),
            r.setAttribute("href", e),
            {
                href: r.href,
                protocol: r.protocol ? r.protocol.replace(/:$/, "") : "",
                host: r.host,
                search: r.search ? r.search.replace(/^\?/, "") : "",
                hash: r.hash ? r.hash.replace(/^#/, "") : "",
                hostname: r.hostname,
                port: r.port,
                pathname: "/" === r.pathname.charAt(0) ? r.pathname : "/" + r.pathname
            }
        }
        var e, n = /(msie|trident)/i.test(navigator.userAgent), r = document.createElement("a");
        return e = t(window.location.href),
        function(n) {
            var r = i.isString(n) ? t(n) : n;
            return r.protocol === e.protocol && r.host === e.host
        }
    }() : function() {
        return !0
    }
}
, function(t, e, n) {
    var i = n(36);
    t.exports = i.isStandardBrowserEnv() ? {
        write: function(t, e, n, r, s, a) {
            var o = [];
            o.push(t + "=" + encodeURIComponent(e)),
            i.isNumber(n) && o.push("expires=" + new Date(n).toGMTString()),
            i.isString(r) && o.push("path=" + r),
            i.isString(s) && o.push("domain=" + s),
            !0 === a && o.push("secure"),
            document.cookie = o.join("; ")
        },
        read: function(t) {
            var e = document.cookie.match(new RegExp("(^|;\\s*)(" + t + ")=([^;]*)"));
            return e ? decodeURIComponent(e[3]) : null
        },
        remove: function(t) {
            this.write(t, "", Date.now() - 864e5)
        }
    } : {
        write: function() {},
        read: function() {
            return null
        },
        remove: function() {}
    }
}
, function(t, e, n) {
    var i = n(36);
    function r() {
        this.handlers = []
    }
    r.prototype.use = function(t, e) {
        return this.handlers.push({
            fulfilled: t,
            rejected: e
        }),
        this.handlers.length - 1
    }
    ,
    r.prototype.eject = function(t) {
        this.handlers[t] && (this.handlers[t] = null)
    }
    ,
    r.prototype.forEach = function(t) {
        i.forEach(this.handlers, function(e) {
            null !== e && t(e)
        })
    }
    ,
    t.exports = r
}
, function(t, e, n) {
    var i = n(36)
      , r = n(122)
      , s = n(93)
      , a = n(82)
      , o = n(123)
      , c = n(124);
    function l(t) {
        t.cancelToken && t.cancelToken.throwIfRequested()
    }
    t.exports = function(t) {
        return l(t),
        t.baseURL && !o(t.url) && (t.url = c(t.baseURL, t.url)),
        t.headers = t.headers || {},
        t.data = r(t.data, t.headers, t.transformRequest),
        t.headers = i.merge(t.headers.common || {}, t.headers[t.method] || {}, t.headers || {}),
        i.forEach(["delete", "get", "head", "post", "put", "patch", "common"], function(e) {
            delete t.headers[e]
        }),
        (t.adapter || a.adapter)(t).then(function(e) {
            return l(t),
            e.data = r(e.data, e.headers, t.transformResponse),
            e
        }, function(e) {
            return s(e) || (l(t),
            e && e.response && (e.response.data = r(e.response.data, e.response.headers, t.transformResponse))),
            Promise.reject(e)
        })
    }
}
, function(t, e, n) {
    var i = n(36);
    t.exports = function(t, e, n) {
        return i.forEach(n, function(n) {
            t = n(t, e)
        }),
        t
    }
}
, function(t, e, n) {
    t.exports = function(t) {
        return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(t)
    }
}
, function(t, e, n) {
    t.exports = function(t, e) {
        return e ? t.replace(/\/+$/, "") + "/" + e.replace(/^\/+/, "") : t
    }
}
, function(t, e, n) {
    var i = n(94);
    function r(t) {
        if ("function" != typeof t)
            throw new TypeError("executor must be a function.");
        var e;
        this.promise = new Promise(function(t) {
            e = t
        }
        );
        var n = this;
        t(function(t) {
            n.reason || (n.reason = new i(t),
            e(n.reason))
        })
    }
    r.prototype.throwIfRequested = function() {
        if (this.reason)
            throw this.reason
    }
    ,
    r.source = function() {
        var t;
        return {
            token: new r(function(e) {
                t = e
            }
            ),
            cancel: t
        }
    }
    ,
    t.exports = r
}
, function(t, e, n) {
    t.exports = function(t) {
        return function(e) {
            return t.apply(null, e)
        }
    }
}
, function(t, e, n) {
    var i = n(95)
      , r = t.exports;
    r.active = !0;
    var s = !0;
    r.toggleMenu = function(t) {
        menuHolder.style.display = t ? "block" : "none",
        speakerDisplay.style.display = t ? "none" : "block",
        chatHolder.style.bottom = (t ? 20 : 140) + "px",
        voiceDisplay.style.bottom = (t ? 18 : 135) + "px",
        r.toggleMenuHider(t),
        t && (endUI.style.display = "none",
        instructionHolder.style.display = "block",
        "block" != windowHolder.style.display && (baseLinks.style.display = "block")),
        r.active = !0
    }
    ,
    r.hideUI = function() {
        r.toggleMenu(!1),
        inGameUI.style.display = "none",
        spectateUI.style.display = "none",
        aimRecticle.style.display = "none",
        instructionHolder.style.display = "none",
        baseLinks.style.display = "none",
        chatHolder.style.bottom = "20px",
        voiceDisplay.style.bottom = "18px",
        speakerDisplay.style.right = "20px",
        purchaseHolder.style.display = "none",
        consentBlock.style.display = "none",
        r.active = !1
    }
    ,
    r.hideDiscon = function() {
        chatHolder.style.display = "none",
        voiceDisplay.style.display = "none",
        speakerDisplay.style.display = "none",
        purchaseHolder.style.display = "none"
    }
    ,
    r.showEndScreen = function() {
        endTable.style.display = "none",
        voteHolder.style.display = "none",
        endUI.style.display = null,
        r.hideUI()
    }
    ,
    r.toggleWindow = function(t, e) {
        windowHolder.style.display = t ? "block" : "none",
        baseLinks.style.display = t ? "none" : "block",
        instructions.innerHTML = t ? "" : e ? "PRESS START" : "CLICK TO PLAY"
    }
    ,
    r.toggleMenuHider = function(t) {
        menuHider.style.display = t ? "block" : "none",
        uiBase.classList.toggle("onMenu", t),
        gameNameHolder.style.display = t ? null : "none",
        spectButton.style.display = s && t ? null : "none",
        t && (spinUI.style.display = "none")
    }
    ,
    r.setShowSpect = function(t) {
        s = t,
        spectButton.style.display = t ? null : "none"
    }
    ,
    r.setShowSelTeam = function(t) {
        teamSelector.style.display = t ? "block" : "none"
    }
    ,
    r.showError = function(t) {
        r.toggleMenu(!0),
        instructions.innerHTML = t
    }
    ,
    r.toggleGameUI = function(t) {
        var e = t && !window.spectating;
        spectateUI.style.display = window.spectating && t ? "block" : "none",
        gameMessage.style.display = e ? "block" : "none",
        topLeftHolder.style.display = e ? "block" : "none",
        topRight.style.display = t ? "block" : "none",
        reloadMsg.style.display = e ? "block" : "none",
        healthHolder.style.display = e ? "block" : "none",
        weaponDisplay.style.display = e ? "block" : "none",
        bottomRight.style.display = e ? "block" : "none",
        killCardHolder.style.display = t ? "none" : "block",
        speakerDisplay.style.right = (t ? 380 : 20) + "px",
        chatHolder.style.bottom = (e ? 140 : 20) + "px",
        voiceDisplay.style.bottom = (e ? 135 : 18) + "px"
    }
    ,
    r.toggleControlUI = function(t) {
        window.loading && (t = !1),
        spectateUI.style.display = window.spectating && t && !r.hideGameUI ? "block" : "none",
        inGameUI.style.display = t && r.active && !r.hideGameUI ? "block" : "none",
        aimRecticle.style.display = t && r.active ? "block" : "none",
        instructionHolder.style.display = !t && r.active ? "block" : "none",
        aHolder.style.display = t ? "none" : "block",
        toggleAd(!t),
        infoHolder.style.display = t ? "none" : null,
        chatHolder.style.bottom = (t && !window.spectating ? 140 : 20) + "px",
        voiceDisplay.style.bottom = (t && !window.spectating ? 135 : 18) + "px",
        speakerDisplay.style.display = t && r.active ? "block" : "none",
        endUI.style.display && (menuHolder.style.display = t ? "none" : "block",
        r.toggleMenuHider(!t))
    }
    ;
    r.myNxNltfqx = function(t, e) {
        i.crosshairOpacity = e,
        i.crosshairScale = t
    }
}
, function(t, e) {
    t.exports = function() {
        var t;
        this.divs = [],
        this.update = function(e) {
            for (var n = this.divs.length - 1; 0 <= n; --n)
                if (0 < (t = this.divs[n]).delay)
                    t.delay -= e,
                    0 >= t.delay && (t.style.display = "inline-block");
                else {
                    if (t.scale > t.minScale && (t.scale -= t.scaleSpeed * e,
                    t.scale <= t.minScale && (t.scale = t.minScale),
                    t.style.fontSize = t.scale + "px"),
                    t.scaleSpd && (t.startS += t.scaleSpd * e,
                    t.style.width = t.startS + "px",
                    t.style.height = t.startS + "px"),
                    t.life -= e,
                    0 >= t.life) {
                        t.style.display = "none";
                        var i = t.callback;
                        this.divs.splice(n, 1),
                        i && i()
                    }
                    if (t.fade && t.life <= t.fade && (t.style.opacity = t.life / t.fade),
                    t.srcA && t.srcA.cnt && t.maxLife - t.life <= t.srcA.tim) {
                        var r = Math.floor(t.srcA.cnt * ((t.maxLife - t.life) / t.srcA.tim));
                        t.src = "./textures/" + t.srcA.src + "_" + r + ".png"
                    }
                }
        }
        ,
        this.animateText = function(t, e, n, i, r, s, a, o) {
            0 > this.divs.indexOf(t) && this.divs.push(t),
            t.delay = a,
            a || (t.style.display = "inline-block"),
            t.style.fontSize = n + "px",
            t.scale = n,
            t.minScale = i ? .4 * n : n,
            t.innerHTML = e,
            t.scaleSpeed = i,
            t.life = r,
            t.fade = s,
            t.style.opacity = 1,
            t.callback = o
        }
        ,
        this.animateDiv = function(t, e, n, i, r, s) {
            0 > this.divs.indexOf(t) && this.divs.push(t),
            t.style.display = "block",
            t.life = e,
            t.maxLife = e,
            t.srcA = s,
            s && (t.src = "./textures/" + s.src + "_0.png"),
            t.style.opacity = 1,
            t.fade = n,
            i && (t.style.width = i + "px",
            t.style.height = i + "px",
            t.startS = i,
            t.scaleSpd = r)
        }
        ,
        this.reset = function() {
            for (var t = 0; t < this.divs.length; ++t)
                this.divs[t].style.display = "none";
            this.divs.length = 0
        }
    }
}
, function(t, e, n) {
    const i = n(130)
      , r = n(7).apiURL
      , s = {
        listMaps(t, e, n) {
            i.get(r + "/maps", {
                params: {
                    index: t,
                    accountId: e
                }
            }).then(t=>{
                n(null, t.data)
            }
            ).catch(t=>{
                n(t, t.response && t.response.data)
            }
            )
        },
        listMods(t, e) {
            i.get(r + "/mods", {
                params: {
                    accountId: t
                }
            }).then(t=>{
                e(null, t.data)
            }
            ).catch(t=>{
                e(t, t.response && t.response.data)
            }
            )
        },
        searchMap(t, e) {
            i.get(r + "/search", {
                params: {
                    type: "map",
                    val: t
                }
            }).then(t=>{
                e(null, t.data)
            }
            ).catch(t=>{
                e(t, t.response && t.response.data)
            }
            )
        },
        getMapPreset(t, e) {
            i.get(r + "/config", {
                params: {
                    mn: t
                }
            }).then(n=>{
                var i = n.data || {};
                e(t, i.da)
            }
            ).catch(()=>{
                e(t, null)
            }
            )
        },
        searchMod(t, e) {
            i.get(r + "/search", {
                params: {
                    type: "mod",
                    val: t
                }
            }).then(t=>{
                e(null, t.data)
            }
            ).catch(t=>{
                e(t, t.response && t.response.data)
            }
            )
        }
    };
    t.exports = s
}
, function(t, e, n) {
    t.exports = n(131)
}
, function(t, e, n) {
    var i = n(34)
      , r = n(96)
      , s = n(133)
      , a = n(102);
    function o(t) {
        var e = new s(t)
          , n = r(s.prototype.request, e);
        return i.extend(n, s.prototype, e),
        i.extend(n, e),
        n
    }
    var c = o(n(99));
    c.Axios = s,
    c.create = function(t) {
        return o(a(c.defaults, t))
    }
    ,
    c.Cancel = n(103),
    c.CancelToken = n(145),
    c.isCancel = n(98),
    c.all = function(t) {
        return Promise.all(t)
    }
    ,
    c.spread = n(146),
    t.exports = c,
    t.exports.default = c
}
, function(t, e) {
    /*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
    t.exports = function(t) {
        return null != t && null != t.constructor && "function" == typeof t.constructor.isBuffer && t.constructor.isBuffer(t)
    }
}
, function(t, e, n) {
    var i = n(34)
      , r = n(97)
      , s = n(134)
      , a = n(135)
      , o = n(102);
    function c(t) {
        this.defaults = t,
        this.interceptors = {
            request: new s,
            response: new s
        }
    }
    c.prototype.request = function(t) {
        "string" == typeof t ? (t = arguments[1] || {}).url = arguments[0] : t = t || {},
        (t = o(this.defaults, t)).method = t.method ? t.method.toLowerCase() : "get";
        var e = [a, void 0]
          , n = Promise.resolve(t);
        for (this.interceptors.request.forEach(function(t) {
            e.unshift(t.fulfilled, t.rejected)
        }),
        this.interceptors.response.forEach(function(t) {
            e.push(t.fulfilled, t.rejected)
        }); e.length; )
            n = n.then(e.shift(), e.shift());
        return n
    }
    ,
    c.prototype.getUri = function(t) {
        return t = o(this.defaults, t),
        r(t.url, t.params, t.paramsSerializer).replace(/^\?/, "")
    }
    ,
    i.forEach(["delete", "get", "head", "options"], function(t) {
        c.prototype[t] = function(e, n) {
            return this.request(i.merge(n || {}, {
                method: t,
                url: e
            }))
        }
    }),
    i.forEach(["post", "put", "patch"], function(t) {
        c.prototype[t] = function(e, n, r) {
            return this.request(i.merge(r || {}, {
                method: t,
                url: e,
                data: n
            }))
        }
    }),
    t.exports = c
}
, function(t, e, n) {
    var i = n(34);
    function r() {
        this.handlers = []
    }
    r.prototype.use = function(t, e) {
        return this.handlers.push({
            fulfilled: t,
            rejected: e
        }),
        this.handlers.length - 1
    }
    ,
    r.prototype.eject = function(t) {
        this.handlers[t] && (this.handlers[t] = null)
    }
    ,
    r.prototype.forEach = function(t) {
        i.forEach(this.handlers, function(e) {
            null !== e && t(e)
        })
    }
    ,
    t.exports = r
}
, function(t, e, n) {
    var i = n(34)
      , r = n(136)
      , s = n(98)
      , a = n(99)
      , o = n(143)
      , c = n(144);
    function l(t) {
        t.cancelToken && t.cancelToken.throwIfRequested()
    }
    t.exports = function(t) {
        return l(t),
        t.baseURL && !o(t.url) && (t.url = c(t.baseURL, t.url)),
        t.headers = t.headers || {},
        t.data = r(t.data, t.headers, t.transformRequest),
        t.headers = i.merge(t.headers.common || {}, t.headers[t.method] || {}, t.headers || {}),
        i.forEach(["delete", "get", "head", "post", "put", "patch", "common"], function(e) {
            delete t.headers[e]
        }),
        (t.adapter || a.adapter)(t).then(function(e) {
            return l(t),
            e.data = r(e.data, e.headers, t.transformResponse),
            e
        }, function(e) {
            return s(e) || (l(t),
            e && e.response && (e.response.data = r(e.response.data, e.response.headers, t.transformResponse))),
            Promise.reject(e)
        })
    }
}
, function(t, e, n) {
    var i = n(34);
    t.exports = function(t, e, n) {
        return i.forEach(n, function(n) {
            t = n(t, e)
        }),
        t
    }
}
, function(t, e, n) {
    var i = n(34);
    t.exports = function(t, e) {
        i.forEach(t, function(n, i) {
            i !== e && i.toUpperCase() === e.toUpperCase() && (t[e] = n,
            delete t[i])
        })
    }
}
, function(t, e, n) {
    var i = n(101);
    t.exports = function(t, e, n) {
        var r = n.config.validateStatus;
        !r || r(n.status) ? t(n) : e(i("Request failed with status code " + n.status, n.config, null, n.request, n))
    }
}
, function(t, e, n) {
    t.exports = function(t, e, n, i, r) {
        return t.config = e,
        n && (t.code = n),
        t.request = i,
        t.response = r,
        t.isAxiosError = !0,
        t.toJSON = function() {
            return {
                message: this.message,
                name: this.name,
                description: this.description,
                number: this.number,
                fileName: this.fileName,
                lineNumber: this.lineNumber,
                columnNumber: this.columnNumber,
                stack: this.stack,
                config: this.config,
                code: this.code
            }
        }
        ,
        t
    }
}
, function(t, e, n) {
    var i = n(34)
      , r = ["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"];
    t.exports = function(t) {
        var e, n, s, a = {};
        return t ? (i.forEach(t.split("\n"), function(t) {
            if (s = t.indexOf(":"),
            e = i.trim(t.substr(0, s)).toLowerCase(),
            n = i.trim(t.substr(s + 1)),
            e) {
                if (a[e] && 0 <= r.indexOf(e))
                    return;
                a[e] = "set-cookie" === e ? (a[e] ? a[e] : []).concat([n]) : a[e] ? a[e] + ", " + n : n
            }
        }),
        a) : a
    }
}
, function(t, e, n) {
    var i = n(34);
    t.exports = i.isStandardBrowserEnv() ? function() {
        function t(t) {
            var e = t;
            return n && (r.setAttribute("href", e),
            e = r.href),
            r.setAttribute("href", e),
            {
                href: r.href,
                protocol: r.protocol ? r.protocol.replace(/:$/, "") : "",
                host: r.host,
                search: r.search ? r.search.replace(/^\?/, "") : "",
                hash: r.hash ? r.hash.replace(/^#/, "") : "",
                hostname: r.hostname,
                port: r.port,
                pathname: "/" === r.pathname.charAt(0) ? r.pathname : "/" + r.pathname
            }
        }
        var e, n = /(msie|trident)/i.test(navigator.userAgent), r = document.createElement("a");
        return e = t(window.location.href),
        function(n) {
            var r = i.isString(n) ? t(n) : n;
            return r.protocol === e.protocol && r.host === e.host
        }
    }() : function() {
        return !0
    }
}
, function(t, e, n) {
    var i = n(34);
    t.exports = i.isStandardBrowserEnv() ? {
        write: function(t, e, n, r, s, a) {
            var o = [];
            o.push(t + "=" + encodeURIComponent(e)),
            i.isNumber(n) && o.push("expires=" + new Date(n).toGMTString()),
            i.isString(r) && o.push("path=" + r),
            i.isString(s) && o.push("domain=" + s),
            !0 === a && o.push("secure"),
            document.cookie = o.join("; ")
        },
        read: function(t) {
            var e = document.cookie.match(new RegExp("(^|;\\s*)(" + t + ")=([^;]*)"));
            return e ? decodeURIComponent(e[3]) : null
        },
        remove: function(t) {
            this.write(t, "", Date.now() - 864e5)
        }
    } : {
        write: function() {},
        read: function() {
            return null
        },
        remove: function() {}
    }
}
, function(t, e, n) {
    t.exports = function(t) {
        return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(t)
    }
}
, function(t, e, n) {
    t.exports = function(t, e) {
        return e ? t.replace(/\/+$/, "") + "/" + e.replace(/^\/+/, "") : t
    }
}
, function(t, e, n) {
    var i = n(103);
    function r(t) {
        if ("function" != typeof t)
            throw new TypeError("executor must be a function.");
        var e;
        this.promise = new Promise(function(t) {
            e = t
        }
        );
        var n = this;
        t(function(t) {
            n.reason || (n.reason = new i(t),
            e(n.reason))
        })
    }
    r.prototype.throwIfRequested = function() {
        if (this.reason)
            throw this.reason
    }
    ,
    r.source = function() {
        var t;
        return {
            token: new r(function(e) {
                t = e
            }
            ),
            cancel: t
        }
    }
    ,
    t.exports = r
}
, function(t, e, n) {
    t.exports = function(t) {
        return function(e) {
            return t.apply(null, e)
        }
    }
}
, function(t, e, n) {
    n(4);
    var i = n(148);
    t.exports = function(t, e, n, r, s, a, o) {
        function c(t, e) {
            if (window.idleTimer = 0,
            h.keys)
                if (e && h.keys[t] !== e && null != h.inputChanger)
                    h.moveKeys[h.inputChanger] ? h.moveKeys[h.inputChanger] = t : h[h.inputChanger] = t,
                    saveVal("cont_" + h.inputChanger, t),
                    "recordKey" == h.inputChanger ? showWindow(12, !0) : showWindow(7, !0),
                    h.inputChanger = null;
                else {
                    if (h.keys[t] !== e && t == h.voiceKey && toggleRecord(e),
                    !h.enabled)
                        return;
                    h.keys[t] !== e && (h.keys[t] = e,
                    0 <= h.moveKeys.indexOf(t) && h.updateMoveDir(),
                    e && (t == h.swapKeyU ? h.scrollDelta = 1 : t == h.swapKeyD ? h.scrollDelta = -1 : window.pressButton(t)))
                }
        }
        function l(t, e) {
            var n = t.which
              , i = t.keyCode;
            e && (t.preventDefault(),
            n = i = 1e4 + t.which),
            (n || i) == h.chatKey ? window.pressButton(n || i) : document.activeElement != chatInput && (h.enabled && t.preventDefault(),
            c(n || i || 0, 1))
        }
        function p(t, e) {
            var n = t.which
              , i = t.keyCode;
            e && (t.preventDefault(),
            n = i = 1e4 + t.which),
            h.enabled && t.preventDefault(),
            c(n || i || 0, 0)
        }
        var h = this;
        this.gamepad = new i,
        this.gamepad.connected = !1;
        var u = t.renderer.domElement;
        if (this.hasPointerlock = "pointerLockElement"in document || "mozPointerLockElement"in document || "webkitPointerLockElement"in document,
        this.hasPointerlock) {
            u.requestPointerLock = u.requestPointerLock || u.mozRequestPointerLock || u.webkitRequestPointerLock;
            var f = function() {
                h.enabled = document.pointerLockElement === u || document.mozPointerLockElement === u || document.webkitPointerLockElement === u,
                (o.connected || s.singlePlayer) && (h.enabled && enterGame(),
                n.toggleControlUI(h.enabled))
            };
            document.addEventListener("pointerlockchange", f, !1),
            document.addEventListener("mozpointerlockchange", f, !1),
            document.addEventListener("webkitpointerlockchange", f, !1)
        }
        this.isn = 0,
        this.tmpInputs = [],
        this.getISN = function() {
            return this.isn++
        }
        ,
        this.masterLock = !0,
        this.sensMlt = 1,
        this.sensAimMlt = 1,
        this.locked = !1,
        this.enabled = !1,
        t.camera.rotation.set(0, 0, 0),
        this.pitchObject = new e.Object3D,
        this.pitchObject.add(t.camera),
        this.object = new e.Object3D,
        this.object.add(this.pitchObject);
        var d = Math.PI / 2
          , m = function(e) {
            if (h.enabled && !window.locked) {
                e.preventDefault(),
                window.idleTimer = 0;
                var n = e.movementX || e.mozMovementX || e.webkitMovementX || 0
                  , i = e.movementY || e.mozMovementY || e.webkitMovementY || 0
                  , r = h.mouseDownR ? h.sensAimMlt : h.sensMlt
                  , s = a.mouseSens * r * (h.target ? a.camChaseSen : 1) * (t.camera.fov / t.fov);
                h.pitchObject.rotation.x -= i * s * (h.invertY ? -1 : 1),
                h.unlockView || (h.pitchObject.rotation.x = Math.max(-d, Math.min(d, h.pitchObject.rotation.x)));
                var o = Math.abs(h.pitchObject.rotation.x % (2 * Math.PI));
                dirFlip = o > Math.PI / 2 && o < Math.PI + Math.PI / 2 ? -1 : 1,
                h.object.rotation.y -= n * s * dirFlip,
                h.yDr = (h.pitchObject.rotation.x % Math.PI2).round(3),
                h.xDr = (h.object.rotation.y % Math.PI2).round(3)
            }
        };
        u.addEventListener("mousemove", m, !1);
        var g = function(t) {
            if (!h.masterLock)
                switch (h.enabled || h.toggle(!0),
                document.activeElement == chatInput && chatInput.blur(),
                t.which) {
                case 3:
                    h.mouseDownR = 1;
                    break;
                default:
                    3 < t.which || 2 == t.which ? (t.preventDefault(),
                    l(t, !0)) : h.mouseDownL = 1
                }
        };
        u.addEventListener("mousedown", g, !1),
        window.addEventListener("mousedown", function(t) {
            h.enabled || (3 < t.which || 2 == t.which) && (t.preventDefault(),
            l(t, !0))
        }, !1);
        var v = function(t) {
            if (!h.locked)
                switch (t.which) {
                case 3:
                    h.mouseDownR = 0;
                    break;
                default:
                    3 < t.which || 2 == t.which ? (t.preventDefault(),
                    p(t, !0)) : h.mouseDownL = 0
                }
        };
        u.addEventListener("mouseup", v, !1),
        window.addEventListener("mouseup", function(t) {
            h.enabled || (3 < t.which || 2 == t.which) && (t.preventDefault(),
            p(t, !0))
        }, !1),
        this.specSpeed = 1;
        var y = function(t) {
            t = window.event || t;
            var e = -Math.max(-1, Math.min(1, t.wheelDelta || -t.detail));
            return h.skipScroll ? h.skipScroll = !1 : h.scrollDelta = e,
            window.spectating && (h.specSpeed += 0 < e ? -1 : 1,
            1 > h.specSpeed && (h.specSpeed = 1),
            10 < h.specSpeed && (h.specSpeed = 10)),
            !1
        };
        u.addEventListener ? (u.addEventListener("mousewheel", y, !1),
        u.addEventListener("DOMMouseScroll", y, !1)) : myitem.attachEvent("onmousewheel", y),
        this.xVel = 0,
        this.yVel = 0,
        this.zVel = 0;
        var b = new e.Vector3(0,0,0);
        for (let e in this.freeCam = function(e) {
            b.set(0, 0, 0),
            this.keys[this.moveKeys[0]] && (b.z -= 1),
            this.keys[this.moveKeys[1]] && (b.z += 1),
            this.keys[this.moveKeys[2]] && (b.x -= 1),
            this.keys[this.moveKeys[3]] && (b.x += 1),
            this.keys[81] && (b.y -= 1),
            this.keys[69] && (b.y += 1),
            b.applyQuaternion(t.camera.getWorldQuaternion());
            var n = (this.keys[this.crouchKey] ? .08 : .04) * this.specSpeed * e;
            h.object.position.add(b.multiplyScalar(n)),
            t.updateFrustum()
        }
        ,
        this.update = function(e) {
            if (this.target) {
                var n = r.getAngleDist(this.object.rotation.y, this.target.yD);
                this.object.rotation.y += n * e * a.camChaseTrn,
                n = r.getAngleDist(h.pitchObject.rotation.x, this.target.xD),
                this.pitchObject.rotation.x += n * e * a.camChaseTrn,
                n = r.getDistance3D(this.object.position.x, this.object.position.y, this.object.position.z, this.target.x, this.target.y, this.target.z) * e * a.camChaseSpd;
                var i = r.getDirection(this.object.position.z, this.object.position.x, this.target.z, this.target.x)
                  , s = r.getXDir(this.object.position.x, this.object.position.y, this.object.position.z, this.target.x, this.target.y, this.target.z);
                this.object.position.x -= n * Math.sin(i) * Math.cos(s),
                this.object.position.y += n * Math.sin(s),
                this.object.position.z -= n * Math.cos(i) * Math.cos(s),
                t.updateFrustum()
            }
        }
        ,
        this.ghwNzX = function(t, e, n) {
            var i = r.getXDir(this.object.position.x, this.object.position.y, this.object.position.z, t, e, n)
              , s = r.getDirection(this.object.position.z, this.object.position.x, n, t);
            this.target = {
                xD: i,
                yD: s,
                x: t + a.camChaseDst * Math.sin(s) * Math.cos(i),
                y: e - a.camChaseDst * Math.sin(i),
                z: n + a.camChaseDst * Math.cos(s) * Math.cos(i)
            }
        }
        ,
        this.qHYTz = function(e, n, i) {
            h.object.position.set(e, n, i),
            t.camera.updateProjectionMatrix(),
            t.updateFrustum()
        }
        ,
        this.mnZiqU = function(e, n, i) {
            t.camera.rotation.y = e,
            t.camera.rotation.x = n,
            t.camera.rotation.z = i
        }
        ,
        this.jumpKey = parseInt(getSavedVal("cont_jumpKey") || 32),
        this.crouchKey = parseInt(getSavedVal("cont_crouchKey") || 16),
        this.swapKeyD = parseInt(getSavedVal("cont_swapKeyD") || 81),
        this.swapKeyU = parseInt(getSavedVal("cont_swapKeyU") || 69),
        this.reloadKey = parseInt(getSavedVal("cont_reloadKey") || 82),
        this.sprayKey = parseInt(getSavedVal("cont_sprayKey") || 70),
        this.inspKey = parseInt(getSavedVal("cont_inspKey") || 88),
        this.aimKey = parseInt(getSavedVal("cont_aimKey") || 67),
        this.chatKey = parseInt(getSavedVal("cont_chatKey") || 13),
        this.voiceKey = parseInt(getSavedVal("cont_voiceKey") || 86),
        this.recordKey = parseInt(getSavedVal("cont_recordKey") || 84),
        this.listKey = parseInt(getSavedVal("cont_listKey") || 9),
        this.interactKey = parseInt(getSavedVal("cont_interactKey") || 71),
        this.dropKey = parseInt(getSavedVal("cont_dropKey") || 90),
        this.moveKeys = [parseInt(getSavedVal("cont_0") || 87), parseInt(getSavedVal("cont_1") || 83), parseInt(getSavedVal("cont_2") || 65), parseInt(getSavedVal("cont_3") || 68)],
        this.moveDirs = [[0, -1], [0, 1], [-1, 0], [1, 0]],
        this.updateMoveDir = function() {
            for (var t = 0, e = 0, n = 0; n < h.moveKeys.length; ++n)
                h.keys[h.moveKeys[n]] && (t += h.moveDirs[n][0],
                e += h.moveDirs[n][1]);
            this.moveDir = 0 == t && 0 == e ? null : Math.atan2(e, t)
        }
        ,
        window.addEventListener("keydown", l, !1),
        window.addEventListener("keyup", p, !1),
        this.gamepad.on("connect", ()=>{
            this.gamepad.connected = !0
        }
        ),
        this.gamepad.on("disconnect", ()=>{
            this.gamepad.connected = !1
        }
        ),
        this.gamepad.setCustomMapping("keyboard", {}),
        this.mapping = {
            JUMP: {
                INPUT: "button_1",
                KEY: "jumpKey"
            },
            CROUCH: {
                INPUT: "button_2",
                KEY: "crouchKey"
            },
            RELOAD: {
                INPUT: "button_3",
                KEY: "reloadKey"
            },
            SWAP: {
                INPUT: "button_4",
                KEY: "swapKeyU"
            },
            SWAP_UP: {
                INPUT: "shoulder_top_left",
                KEY: "swapKeyU"
            },
            SWAP_DOWN: {
                INPUT: "shoulder_top_right",
                KEY: "swapKeyD"
            },
            AIM: {
                INPUT: "shoulder_bottom_left",
                KEY: "aimKey"
            },
            SHOOT: {
                INPUT: ["shoulder_bottom_right", .5],
                KEY: null,
                MOUSE: !0
            },
            PLAYER_LIST: {
                INPUT: "select",
                KEY: "listKey"
            },
            START: {
                INPUT: "start",
                KEY: null,
                MOUSE: !0,
                EXTRA: !0
            },
            VOICE: {
                INPUT: "d_pad_up",
                KEY: "voiceKey"
            },
            SPRAY: {
                INPUT: "d_pad_down",
                KEY: "sprayKey"
            },
            PICKUP: {
                INPUT: "d_pad_left",
                KEY: "interactKey"
            },
            DROP: {
                INPUT: "d_pad_right",
                KEY: "dropKey"
            }
        },
        this.mapping) {
            var w = Array.isArray(this.mapping[e].INPUT) ? this.mapping[e].INPUT[0] : this.mapping[e].INPUT
              , x = !!Array.isArray(this.mapping[e].INPUT) && this.mapping[e].INPUT[1];
            this.gamepad.on("press", w, t=>{
                this.mapping[e].MOUSE ? (t.value >= x || !1 === x) && this.fakeMouse(0) : this.mapping[e].KEY && this.fakeKey(this[this.mapping[e].KEY])
            }
            ),
            this.gamepad.on("release", w, ()=>{
                this.mapping[e].MOUSE ? this.fakeMouse(1) : this.fakeKey(this[this.mapping[e].KEY], 1)
            }
            )
        }
        this.gamepad.on("hold", "stick_axis_left", t=>{
            -.3 > t.value[1] ? (this.fakeKey(this.moveKeys[1], 1),
            this.fakeKey(this.moveKeys[0])) : this.fakeKey(this.moveKeys[0], 1),
            .3 < t.value[1] ? (this.fakeKey(this.moveKeys[0], 1),
            this.fakeKey(this.moveKeys[1])) : this.fakeKey(this.moveKeys[1], 1),
            -.3 > t.value[0] ? (this.fakeKey(this.moveKeys[3], 1),
            this.fakeKey(this.moveKeys[2])) : this.fakeKey(this.moveKeys[2], 1),
            .3 < t.value[0] ? (this.fakeKey(this.moveKeys[2], 1),
            this.fakeKey(this.moveKeys[3])) : this.fakeKey(this.moveKeys[3], 1)
        }
        ),
        this.gamepad.on("release", "stick_axis_left", ()=>{
            this.fakeKey(this.moveKeys[0], 1),
            this.fakeKey(this.moveKeys[1], 1),
            this.fakeKey(this.moveKeys[2], 1),
            this.fakeKey(this.moveKeys[3], 1)
        }
        ),
        this.gamepad.on("hold", "stick_axis_right", t=>{
            this.fakeMouse(2, 40 * this.applyDeadzone(t.value[0], .25), 22.5 * this.applyDeadzone(t.value[1], .25))
        }
        ),
        this.gamepad.on("press", "start", ()=>{
            "none" == inGameUI.style.display ? this.fakeMouse(0) : this.enabled && (document.exitPointerLock = document.exitPointerLock || document.mozExitPointerLock,
            document.exitPointerLock())
        }
        ),
        this.gamepad.on("release", "start", ()=>{
            this.fakeMouse(1)
        }
        ),
        this.applyDeadzone = function(t, e) {
            let n = (Math.abs(t) - e) / (1 - e);
            return 0 > n && (n = 0),
            n * (0 < t ? 1 : -1)
        }
        ,
        this.fakeKey = function(t, e=0) {
            var n = {
                preventDefault: function() {},
                keyCode: t,
                which: t
            };
            0 == e && l(n),
            1 == e && p(n)
        }
        ,
        this.fakeMouse = function(t=0, e=0, n=0, i=0) {
            var r = {
                preventDefault: function() {},
                movementX: e,
                movementY: n,
                which: i
            };
            0 == t && g(r),
            1 == t && v(r),
            2 == t && m(r)
        }
        ,
        this.toggle = function(t) {
            this.locked || this.masterLock || ("block" == windowHolder.style.display ? t && n.toggleWindow(!1, this.gamepad.connected) : t ? u.requestPointerLock() : document.exitPointerLock())
        }
        ,
        this.disable = function() {
            h.toggle(!1),
            h.locked = !0
        }
        ,
        this.reset = function() {
            this.mouseDownL = 0,
            this.mouseDownR = 0,
            this.keys = {},
            this.tmpInputs.length = 0,
            this.scrollDelta = 0,
            this.xDr = 0,
            this.yDr = 0,
            this.isn = 0,
            this.moveDir = null,
            this.skipScroll = !1,
            this.inputChanger = null,
            this.target = null,
            this.locked = !1,
            h.pitchObject.rotation.x = 0,
            h.object.rotation.y = 0,
            t.camera.rotation.set(0, 0, 0)
        }
    }
}
, function(t, e, n) {
    var i;
    /*!
 * gamepad.js v0.0.5-alpha
 * https://github.com/neogeek/gamepad.js
 *
 * Copyright (c) 2017 Scott Doxey
 * Released under the MIT license.
 */
    /*!
 * gamepad.js v0.0.5-alpha
 * https://github.com/neogeek/gamepad.js
 *
 * Copyright (c) 2017 Scott Doxey
 * Released under the MIT license.
 */
    !function() {
        "use strict";
        function r(t, e) {
            var n = [];
            return Object.keys(e).forEach(function(i) {
                e[i] === t ? n.push(i) : Array.isArray(e[i]) && -1 !== e[i].indexOf(t) && n.push(i)
            }),
            n
        }
        function s() {
            this._events = {
                gamepad: [],
                axes: [],
                keyboard: {}
            },
            this._handlers = {
                gamepad: {
                    connect: null,
                    disconnect: null
                }
            },
            this._keyMapping = {
                gamepad: {
                    button_1: 0,
                    button_2: 1,
                    button_3: 2,
                    button_4: 3,
                    shoulder_top_left: 4,
                    shoulder_top_right: 5,
                    shoulder_bottom_left: 6,
                    shoulder_bottom_right: 7,
                    select: 8,
                    start: 9,
                    stick_button_left: 10,
                    stick_button_right: 11,
                    d_pad_up: 12,
                    d_pad_down: 13,
                    d_pad_left: 14,
                    d_pad_right: 15,
                    vendor: 16
                },
                axes: {
                    stick_axis_left: [0, 2],
                    stick_axis_right: [2, 4]
                },
                keyboard: {
                    button_1: 32,
                    start: 27,
                    d_pad_up: [38, 87],
                    d_pad_down: [40, 83],
                    d_pad_left: [37, 65],
                    d_pad_right: [39, 68]
                }
            },
            this._threshold = .3,
            this._listeners = [],
            this._handleKeyboardEventListener = this._handleKeyboardEventListener.bind(this),
            this.resume()
        }
        var a, o, c = void 0 !== window.navigator.getGamepads || void 0 !== window.navigator.webkitGetGamepads;
        "undefined" != typeof window && ["webkit", "moz"].forEach(function(t) {
            a = a || window.requestAnimationFrame || window[t + "RequestAnimationFrame"] || null,
            o = o || window.cancelAnimationFrame || window[t + "CancelAnimationFrame"] || null
        }),
        s.prototype._handleGamepadConnected = function(t) {
            this._handlers.gamepad.connect && this._handlers.gamepad.connect({
                index: t
            })
        }
        ,
        s.prototype._handleGamepadDisconnected = function(t) {
            this._handlers.gamepad.disconnect && this._handlers.gamepad.disconnect({
                index: t
            })
        }
        ,
        s.prototype._handleGamepadEventListener = function(t) {
            var e = this;
            t && t.connected && t.buttons.forEach(function(n, i) {
                var s = r(i, e._keyMapping.gamepad);
                s && s.forEach(function(i) {
                    n.pressed ? (!e._events.gamepad[t.index][i] && (e._events.gamepad[t.index][i] = {
                        pressed: !0,
                        hold: !1,
                        released: !1,
                        player: t.index
                    }),
                    e._events.gamepad[t.index][i].value = n.value) : !n.pressed && e._events.gamepad[t.index][i] && (e._events.gamepad[t.index][i].released = !0,
                    e._events.gamepad[t.index][i].hold = !1)
                })
            })
        }
        ,
        s.prototype._handleGamepadAxisEventListener = function(t) {
            var e = this;
            t && t.connected && Object.keys(e._keyMapping.axes).forEach(function(n) {
                var i = Array.prototype.slice.apply(t.axes, e._keyMapping.axes[n]);
                Math.abs(i[0]) > e._threshold || Math.abs(i[1]) > e._threshold ? e._events.axes[t.index][n] = {
                    pressed: !e._events.axes[t.index][n],
                    hold: !!e._events.axes[t.index][n],
                    released: !1,
                    value: i
                } : e._events.axes[t.index][n] && (e._events.axes[t.index][n] = {
                    pressed: !1,
                    hold: !1,
                    released: !0,
                    value: i
                })
            })
        }
        ,
        s.prototype._handleKeyboardEventListener = function(t) {
            var e = this
              , n = r(t.keyCode, e._keyMapping.keyboard);
            n && n.forEach(function(n) {
                "keydown" !== t.type || e._events.keyboard[n] ? "keyup" === t.type && e._events.keyboard[n] && (e._events.keyboard[n].released = !0,
                e._events.keyboard[n].hold = !1) : e._events.keyboard[n] = {
                    pressed: !0,
                    hold: !1,
                    released: !1
                }
            })
        }
        ,
        s.prototype._handleEvent = function(t, e, n) {
            e[t].pressed ? (this.trigger("press", t, e[t].value, n),
            e[t].pressed = !1,
            e[t].hold = !0) : e[t].hold ? this.trigger("hold", t, e[t].value, n) : e[t].released && (this.trigger("release", t, e[t].value, n),
            delete e[t])
        }
        ,
        s.prototype._loop = function() {
            var t, e = this, n = !!c && (window.navigator.getGamepads() || navigator.webkitGetGamepads());
            if (n) {
                for (t = 0; t < 4; ++t)
                    n[t] ? (e._events.gamepad[t] || (e._handleGamepadConnected(t),
                    e._events.gamepad[t] = {},
                    e._events.axes[t] = {}),
                    e._handleGamepadEventListener(n[t]),
                    e._handleGamepadAxisEventListener(n[t])) : e._events.gamepad[t] && (e._handleGamepadDisconnected(t),
                    e._events.gamepad[t] = null,
                    e._events.axes[t] = null);
                e._events.gamepad.forEach(function(t, n) {
                    t && Object.keys(t).forEach(function(i) {
                        e._handleEvent(i, t, n)
                    })
                }),
                e._events.axes.forEach(function(t, n) {
                    t && Object.keys(t).forEach(function(i) {
                        e._handleEvent(i, t, n)
                    })
                })
            }
            Object.keys(e._events.keyboard).forEach(function(t) {
                e._handleEvent(t, e._events.keyboard, "keyboard")
            }),
            e._requestAnimation && (e._requestAnimation = a(e._loop.bind(e)))
        }
        ,
        s.prototype.on = function(t, e, n, i) {
            var r = this;
            -1 !== Object.keys(this._handlers.gamepad).indexOf(t) && "function" == typeof e ? (this._handlers.gamepad[t] = e,
            this._events.gamepad = []) : ("string" == typeof t && t.match(/\s+/) && (t = t.split(/\s+/g)),
            "string" == typeof e && e.match(/\s+/) && (e = e.split(/\s+/g)),
            Array.isArray(t) ? t.forEach(function(t) {
                r.on(t, e, n, i)
            }) : Array.isArray(e) ? e.forEach(function(e) {
                r.on(t, e, n, i)
            }) : this._listeners.push({
                type: t,
                button: e,
                callback: n,
                options: i,
                rumble: this.rumble
            }))
        }
        ,
        s.prototype.off = function(t, e) {
            var n = this;
            "string" == typeof t && t.match(/\s+/) && (t = t.split(/\s+/g)),
            "string" == typeof e && e.match(/\s+/) && (e = e.split(/\s+/g)),
            Array.isArray(t) ? t.forEach(function(t) {
                n.off(t, e)
            }) : Array.isArray(e) ? e.forEach(function(e) {
                n.off(t, e)
            }) : this._listeners = this._listeners.filter(function(n) {
                return n.type !== t && n.button !== e
            })
        }
        ,
        s.prototype.setCustomMapping = function(t, e) {
            if (void 0 === this._keyMapping[t])
                throw new Error('The device "' + t + '" is not supported through gamepad.js');
            this._keyMapping[t] = e
        }
        ,
        s.prototype.setGlobalThreshold = function(t) {
            this._threshold = parseFloat(t)
        }
        ,
        s.prototype.trigger = function(t, e, n, i) {
            this._listeners && this._listeners.forEach(function(r) {
                r.type === t && r.button === e && r.callback({
                    type: r.type,
                    button: r.button,
                    value: n,
                    player: i,
                    event: r,
                    timestamp: Date.now()
                })
            })
        }
        ,
        s.prototype.pause = function() {
            o(this._requestAnimation),
            this._requestAnimation = null,
            document.removeEventListener("keydown", this._handleKeyboardEventListener),
            document.removeEventListener("keyup", this._handleKeyboardEventListener)
        }
        ,
        s.prototype.resume = function() {
            this._requestAnimation = a(this._loop.bind(this)),
            document.addEventListener("keydown", this._handleKeyboardEventListener),
            document.addEventListener("keyup", this._handleKeyboardEventListener)
        }
        ,
        s.prototype.destroy = function() {
            this.pause(),
            delete this._listeners
        }
        ,
        s.prototype.rumble = function(t, e, n) {
            var i = !!c && (window.navigator.getGamepads() || navigator.webkitGetGamepads());
            if (t = t || 0,
            i && i[t]) {
                var r = i[t];
                r.vibrationActuator && "dual-rumble" == r.vibrationActuator.type && r.vibrationActuator.playEffect && r.vibrationActuator.playEffect("dual-rumble", {
                    startDelay: 0,
                    duration: e || 200,
                    weakMagnitude: .5 * (n || .5),
                    strongMagnitude: n || .5
                })
            }
        }
        ,
        void 0 !== n(149) ? void 0 === (i = function() {
            return s
        }
        .apply(e, [])) || (t.exports = i) : void 0 !== t.exports ? t.exports = s : window.Gamepad = s
    }()
}
, function(t, e) {
    (function(e) {
        t.exports = e
    }
    ).call(this, {})
}
, function(t, e, n) {
    const i = n(151).words
      , r = n(152).array;
    t.exports = class {
        constructor(t={}) {
            Object.assign(this, {
                list: t.emptyList && [] || Array.prototype.concat.apply(i, [r, t.list || []]),
                exclude: t.exclude || [],
                placeHolder: t.placeHolder || "*",
                regex: t.regex || /[^a-zA-Z0-9|\$|\@]|\^/g,
                replaceRegex: t.replaceRegex || /\w/g
            })
        }
        isProfane(t) {
            return 0 < this.list.filter(e=>{
                const n = new RegExp(`\\b${e.replace(/(\W)/g, "\\$1")}\\b`,"gi");
                return !this.exclude.includes(e.toLowerCase()) && n.test(t)
            }
            ).length || !1
        }
        replaceWord(t) {
            return t.replace(this.regex, "").replace(this.replaceRegex, this.placeHolder)
        }
        clean(t) {
            return t.split(/\b/).map(t=>this.isProfane(t) ? this.replaceWord(t) : t).join("")
        }
        addWords() {
            let t = Array.from(arguments);
            this.list.push(...t),
            t.map(t=>t.toLowerCase()).forEach(t=>{
                this.exclude.includes(t) && this.exclude.splice(this.exclude.indexOf(t), 1)
            }
            )
        }
        removeWords() {
            this.exclude.push(...Array.from(arguments).map(t=>t.toLowerCase()))
        }
    }
}
, function(t) {
    t.exports = {
        words: ["ahole", "anus", "ash0le", "ash0les", "asholes", "ass", "Ass Monkey", "Assface", "assh0le", "assh0lez", "asshole", "assholes", "assholz", "asswipe", "azzhole", "bassterds", "bastard", "bastards", "bastardz", "basterds", "basterdz", "Biatch", "bitch", "bitches", "Blow Job", "boffing", "butthole", "buttwipe", "c0ck", "c0cks", "c0k", "Carpet Muncher", "cawk", "cawks", "Clit", "cnts", "cntz", "cock", "cockhead", "cock-head", "cocks", "CockSucker", "cock-sucker", "crap", "cum", "cunt", "cunts", "cuntz", "dick", "dild0", "dild0s", "dildo", "dildos", "dilld0", "dilld0s", "dominatricks", "dominatrics", "dominatrix", "dyke", "enema", "f u c k", "f u c k e r", "fag", "fag1t", "faget", "fagg1t", "faggit", "faggot", "fagg0t", "fagit", "fags", "fagz", "faig", "faigs", "fart", "flipping the bird", "fuck", "fucker", "fuckin", "fucking", "fucks", "Fudge Packer", "fuk", "Fukah", "Fuken", "fuker", "Fukin", "Fukk", "Fukkah", "Fukken", "Fukker", "Fukkin", "g00k", "God-damned", "h00r", "h0ar", "h0re", "hells", "hoar", "hoor", "hoore", "jackoff", "jap", "japs", "jerk-off", "jisim", "jiss", "jizm", "jizz", "knob", "knobs", "knobz", "kunt", "kunts", "kuntz", "Lezzian", "Lipshits", "Lipshitz", "masochist", "masokist", "massterbait", "masstrbait", "masstrbate", "masterbaiter", "masterbate", "masterbates", "Motha Fucker", "Motha Fuker", "Motha Fukkah", "Motha Fukker", "Mother Fucker", "Mother Fukah", "Mother Fuker", "Mother Fukkah", "Mother Fukker", "mother-fucker", "Mutha Fucker", "Mutha Fukah", "Mutha Fuker", "Mutha Fukkah", "Mutha Fukker", "n1gr", "nastt", "nigger;", "nigur;", "niiger;", "niigr;", "orafis", "orgasim;", "orgasm", "orgasum", "oriface", "orifice", "orifiss", "packi", "packie", "packy", "paki", "pakie", "paky", "pecker", "peeenus", "peeenusss", "peenus", "peinus", "pen1s", "penas", "penis", "penis-breath", "penus", "penuus", "Phuc", "Phuck", "Phuk", "Phuker", "Phukker", "polac", "polack", "polak", "Poonani", "pr1c", "pr1ck", "pr1k", "pusse", "pussee", "pussy", "puuke", "puuker", "queer", "queers", "queerz", "qweers", "qweerz", "qweir", "recktum", "rectum", "retard", "sadist", "scank", "schlong", "screwing", "semen", "sex", "sexy", "Sh!t", "sh1t", "sh1ter", "sh1ts", "sh1tter", "sh1tz", "shit", "shits", "shitter", "Shitty", "Shity", "shitz", "Shyt", "Shyte", "Shytty", "Shyty", "skanck", "skank", "skankee", "skankey", "skanks", "Skanky", "slag", "slut", "sluts", "Slutty", "slutz", "son-of-a-bitch", "tit", "turd", "va1jina", "vag1na", "vagiina", "vagina", "vaj1na", "vajina", "vullva", "vulva", "w0p", "wh00r", "wh0re", "whore", "xrated", "xxx", "b!+ch", "bitch", "blowjob", "clit", "arschloch", "fuck", "shit", "ass", "asshole", "b!tch", "b17ch", "b1tch", "bastard", "bi+ch", "boiolas", "buceta", "c0ck", "cawk", "chink", "cipa", "clits", "cock", "cum", "cunt", "dildo", "dirsa", "ejakulate", "fatass", "fcuk", "fuk", "fux0r", "hoer", "hore", "jism", "kawk", "l3itch", "l3i+ch", "lesbian", "masturbate", "masterbat*", "masterbat3", "motherfucker", "s.o.b.", "mofo", "nazi", "nigga", "nigger", "nutsack", "phuck", "pimpis", "pusse", "pussy", "scrotum", "sh!t", "shemale", "shi+", "sh!+", "slut", "smut", "teets", "tits", "boobs", "b00bs", "teez", "testical", "testicle", "titt", "w00se", "jackoff", "wank", "whoar", "whore", "*damn", "*dyke", "*fuck*", "*shit*", "@$$", "amcik", "andskota", "arse*", "assrammer", "ayir", "bi7ch", "bitch*", "bollock*", "breasts", "butt-pirate", "cabron", "cazzo", "chraa", "chuj", "Cock*", "cunt*", "d4mn", "daygo", "dego", "dick*", "dike*", "dupa", "dziwka", "ejackulate", "Ekrem*", "Ekto", "enculer", "faen", "fag*", "fanculo", "fanny", "feces", "feg", "Felcher", "ficken", "fitt*", "Flikker", "foreskin", "Fotze", "Fu(*", "fuk*", "futkretzn", "gook", "guiena", "h0r", "h4x0r", "hell", "helvete", "hoer*", "honkey", "Huevon", "hui", "injun", "jizz", "kanker*", "kike", "klootzak", "kraut", "knulle", "kuk", "kuksuger", "Kurac", "kurwa", "kusi*", "kyrpa*", "lesbo", "mamhoon", "masturbat*", "merd*", "mibun", "monkleigh", "mouliewop", "muie", "mulkku", "muschi", "nazis", "nepesaurio", "nigger*", "orospu", "paska*", "perse", "picka", "pierdol*", "pillu*", "pimmel", "piss*", "pizda", "poontsee", "poop", "porn", "p0rn", "pr0n", "preteen", "pula", "pule", "puta", "puto", "qahbeh", "queef*", "rautenberg", "schaffer", "scheiss*", "schlampe", "schmuck", "screw", "sh!t*", "sharmuta", "sharmute", "shipal", "shiz", "skribz", "skurwysyn", "sphencter", "spic", "spierdalaj", "splooge", "suka", "b00b*", "testicle*", "titt*", "twat", "vittu", "wank*", "wetback*", "wichser", "wop*", "yed", "zabourah"]
    }
}
, function(t, e, n) {
    t.exports = {
        object: n(153),
        array: n(154),
        regex: n(155)
    }
}
, function(t, e) {
    t.exports = {
        "4r5e": 1,
        "5h1t": 1,
        "5hit": 1,
        a55: 1,
        anal: 1,
        anus: 1,
        ar5e: 1,
        arrse: 1,
        arse: 1,
        ass: 1,
        "ass-fucker": 1,
        asses: 1,
        assfucker: 1,
        assfukka: 1,
        asshole: 1,
        assholes: 1,
        asswhole: 1,
        a_s_s: 1,
        "b!tch": 1,
        b00bs: 1,
        b17ch: 1,
        b1tch: 1,
        ballbag: 1,
        balls: 1,
        ballsack: 1,
        bastard: 1,
        beastial: 1,
        beastiality: 1,
        bellend: 1,
        bestial: 1,
        bestiality: 1,
        "bi+ch": 1,
        biatch: 1,
        bitch: 1,
        bitcher: 1,
        bitchers: 1,
        bitches: 1,
        bitchin: 1,
        bitching: 1,
        bloody: 1,
        "blow job": 1,
        blowjob: 1,
        blowjobs: 1,
        boiolas: 1,
        bollock: 1,
        bollok: 1,
        boner: 1,
        boob: 1,
        boobs: 1,
        booobs: 1,
        boooobs: 1,
        booooobs: 1,
        booooooobs: 1,
        breasts: 1,
        buceta: 1,
        bugger: 1,
        bum: 1,
        "bunny fucker": 1,
        butt: 1,
        butthole: 1,
        buttmuch: 1,
        buttplug: 1,
        c0ck: 1,
        c0cksucker: 1,
        "carpet muncher": 1,
        cawk: 1,
        chink: 1,
        cipa: 1,
        cl1t: 1,
        clit: 1,
        clitoris: 1,
        clits: 1,
        cnut: 1,
        cock: 1,
        "cock-sucker": 1,
        cockface: 1,
        cockhead: 1,
        cockmunch: 1,
        cockmuncher: 1,
        cocks: 1,
        cocksuck: 1,
        cocksucked: 1,
        cocksucker: 1,
        cocksucking: 1,
        cocksucks: 1,
        cocksuka: 1,
        cocksukka: 1,
        cok: 1,
        cokmuncher: 1,
        coksucka: 1,
        coon: 1,
        cox: 1,
        crap: 1,
        cum: 1,
        cummer: 1,
        cumming: 1,
        cums: 1,
        cumshot: 1,
        cunilingus: 1,
        cunillingus: 1,
        cunnilingus: 1,
        cunt: 1,
        cuntlick: 1,
        cuntlicker: 1,
        cuntlicking: 1,
        cunts: 1,
        cyalis: 1,
        cyberfuc: 1,
        cyberfuck: 1,
        cyberfucked: 1,
        cyberfucker: 1,
        cyberfuckers: 1,
        cyberfucking: 1,
        d1ck: 1,
        damn: 1,
        dick: 1,
        dickhead: 1,
        dildo: 1,
        dildos: 1,
        dink: 1,
        dinks: 1,
        dirsa: 1,
        dlck: 1,
        "dog-fucker": 1,
        doggin: 1,
        dogging: 1,
        donkeyribber: 1,
        doosh: 1,
        duche: 1,
        dyke: 1,
        ejaculate: 1,
        ejaculated: 1,
        ejaculates: 1,
        ejaculating: 1,
        ejaculatings: 1,
        ejaculation: 1,
        ejakulate: 1,
        "f u c k": 1,
        "f u c k e r": 1,
        f4nny: 1,
        fag: 1,
        fagging: 1,
        faggitt: 1,
        faggot: 1,
        faggs: 1,
        fagot: 1,
        fagots: 1,
        fags: 1,
        fanny: 1,
        fannyflaps: 1,
        fannyfucker: 1,
        fanyy: 1,
        fatass: 1,
        fcuk: 1,
        fcuker: 1,
        fcuking: 1,
        feck: 1,
        fecker: 1,
        felching: 1,
        fellate: 1,
        fellatio: 1,
        fingerfuck: 1,
        fingerfucked: 1,
        fingerfucker: 1,
        fingerfuckers: 1,
        fingerfucking: 1,
        fingerfucks: 1,
        fistfuck: 1,
        fistfucked: 1,
        fistfucker: 1,
        fistfuckers: 1,
        fistfucking: 1,
        fistfuckings: 1,
        fistfucks: 1,
        flange: 1,
        fook: 1,
        fooker: 1,
        fuck: 1,
        fucka: 1,
        fucked: 1,
        fucker: 1,
        fuckers: 1,
        fuckhead: 1,
        fuckheads: 1,
        fuckin: 1,
        fucking: 1,
        fuckings: 1,
        fuckingshitmotherfucker: 1,
        fuckme: 1,
        fucks: 1,
        fuckwhit: 1,
        fuckwit: 1,
        "fudge packer": 1,
        fudgepacker: 1,
        fuk: 1,
        fuker: 1,
        fukker: 1,
        fukkin: 1,
        fuks: 1,
        fukwhit: 1,
        fukwit: 1,
        fux: 1,
        fux0r: 1,
        f_u_c_k: 1,
        gangbang: 1,
        gangbanged: 1,
        gangbangs: 1,
        gaylord: 1,
        gaysex: 1,
        goatse: 1,
        God: 1,
        "god-dam": 1,
        "god-damned": 1,
        goddamn: 1,
        goddamned: 1,
        hardcoresex: 1,
        hell: 1,
        heshe: 1,
        hoar: 1,
        hoare: 1,
        hoer: 1,
        homo: 1,
        hore: 1,
        horniest: 1,
        horny: 1,
        hotsex: 1,
        "jack-off": 1,
        jackoff: 1,
        jap: 1,
        "jerk-off": 1,
        jism: 1,
        jiz: 1,
        jizm: 1,
        jizz: 1,
        kawk: 1,
        knob: 1,
        knobead: 1,
        knobed: 1,
        knobend: 1,
        knobhead: 1,
        knobjocky: 1,
        knobjokey: 1,
        kock: 1,
        kondum: 1,
        kondums: 1,
        kum: 1,
        kummer: 1,
        kumming: 1,
        kums: 1,
        kunilingus: 1,
        "l3i+ch": 1,
        l3itch: 1,
        labia: 1,
        lust: 1,
        lusting: 1,
        m0f0: 1,
        m0fo: 1,
        m45terbate: 1,
        ma5terb8: 1,
        ma5terbate: 1,
        masochist: 1,
        "master-bate": 1,
        masterb8: 1,
        "masterbat*": 1,
        masterbat3: 1,
        masterbate: 1,
        masterbation: 1,
        masterbations: 1,
        masturbate: 1,
        "mo-fo": 1,
        mof0: 1,
        mofo: 1,
        mothafuck: 1,
        mothafucka: 1,
        mothafuckas: 1,
        mothafuckaz: 1,
        mothafucked: 1,
        mothafucker: 1,
        mothafuckers: 1,
        mothafuckin: 1,
        mothafucking: 1,
        mothafuckings: 1,
        mothafucks: 1,
        "mother fucker": 1,
        motherfuck: 1,
        motherfucked: 1,
        motherfucker: 1,
        motherfuckers: 1,
        motherfuckin: 1,
        motherfucking: 1,
        motherfuckings: 1,
        motherfuckka: 1,
        motherfucks: 1,
        muff: 1,
        mutha: 1,
        muthafecker: 1,
        muthafuckker: 1,
        muther: 1,
        mutherfucker: 1,
        n1gga: 1,
        n1gger: 1,
        nazi: 1,
        nigg3r: 1,
        nigg4h: 1,
        nigga: 1,
        niggah: 1,
        niggas: 1,
        niggaz: 1,
        nigger: 1,
        niggers: 1,
        nob: 1,
        "nob jokey": 1,
        nobhead: 1,
        nobjocky: 1,
        nobjokey: 1,
        numbnuts: 1,
        nutsack: 1,
        orgasim: 1,
        orgasims: 1,
        orgasm: 1,
        orgasms: 1,
        p0rn: 1,
        pawn: 1,
        pecker: 1,
        penis: 1,
        penisfucker: 1,
        phonesex: 1,
        phuck: 1,
        phuk: 1,
        phuked: 1,
        phuking: 1,
        phukked: 1,
        phukking: 1,
        phuks: 1,
        phuq: 1,
        pigfucker: 1,
        pimpis: 1,
        piss: 1,
        pissed: 1,
        pisser: 1,
        pissers: 1,
        pisses: 1,
        pissflaps: 1,
        pissin: 1,
        pissing: 1,
        pissoff: 1,
        poop: 1,
        porn: 1,
        porno: 1,
        pornography: 1,
        pornos: 1,
        prick: 1,
        pricks: 1,
        pron: 1,
        pube: 1,
        pusse: 1,
        pussi: 1,
        pussies: 1,
        pussy: 1,
        pussys: 1,
        rectum: 1,
        retard: 1,
        rimjaw: 1,
        rimming: 1,
        "s hit": 1,
        "s.o.b.": 1,
        sadist: 1,
        schlong: 1,
        screwing: 1,
        scroat: 1,
        scrote: 1,
        scrotum: 1,
        semen: 1,
        sex: 1,
        "sh!+": 1,
        "sh!t": 1,
        sh1t: 1,
        shag: 1,
        shagger: 1,
        shaggin: 1,
        shagging: 1,
        shemale: 1,
        "shi+": 1,
        shit: 1,
        shitdick: 1,
        shite: 1,
        shited: 1,
        shitey: 1,
        shitfuck: 1,
        shitfull: 1,
        shithead: 1,
        shiting: 1,
        shitings: 1,
        shits: 1,
        shitted: 1,
        shitter: 1,
        shitters: 1,
        shitting: 1,
        shittings: 1,
        shitty: 1,
        skank: 1,
        slut: 1,
        sluts: 1,
        smegma: 1,
        smut: 1,
        snatch: 1,
        "son-of-a-bitch": 1,
        spac: 1,
        spunk: 1,
        s_h_i_t: 1,
        t1tt1e5: 1,
        t1tties: 1,
        teets: 1,
        teez: 1,
        testical: 1,
        testicle: 1,
        tit: 1,
        titfuck: 1,
        tits: 1,
        titt: 1,
        tittie5: 1,
        tittiefucker: 1,
        titties: 1,
        tittyfuck: 1,
        tittywank: 1,
        titwank: 1,
        tosser: 1,
        turd: 1,
        tw4t: 1,
        twat: 1,
        twathead: 1,
        twatty: 1,
        twunt: 1,
        twunter: 1,
        v14gra: 1,
        v1gra: 1,
        vagina: 1,
        viagra: 1,
        vulva: 1,
        w00se: 1,
        wang: 1,
        wank: 1,
        wanker: 1,
        wanky: 1,
        whoar: 1,
        whore: 1,
        willies: 1,
        willy: 1,
        xrated: 1,
        xxx: 1
    }
}
, function(t, e) {
    t.exports = ["4r5e", "5h1t", "5hit", "a55", "anal", "anus", "ar5e", "arrse", "arse", "ass", "ass-fucker", "asses", "assfucker", "assfukka", "asshole", "assholes", "asswhole", "a_s_s", "b!tch", "b00bs", "b17ch", "b1tch", "ballbag", "balls", "ballsack", "bastard", "beastial", "beastiality", "bellend", "bestial", "bestiality", "bi+ch", "biatch", "bitch", "bitcher", "bitchers", "bitches", "bitchin", "bitching", "bloody", "blow job", "blowjob", "blowjobs", "boiolas", "bollock", "bollok", "boner", "boob", "boobs", "booobs", "boooobs", "booooobs", "booooooobs", "breasts", "buceta", "bugger", "bum", "bunny fucker", "butt", "butthole", "buttmuch", "buttplug", "c0ck", "c0cksucker", "carpet muncher", "cawk", "chink", "cipa", "cl1t", "clit", "clitoris", "clits", "cnut", "cock", "cock-sucker", "cockface", "cockhead", "cockmunch", "cockmuncher", "cocks", "cocksuck", "cocksucked", "cocksucker", "cocksucking", "cocksucks", "cocksuka", "cocksukka", "cok", "cokmuncher", "coksucka", "coon", "cox", "crap", "cum", "cummer", "cumming", "cums", "cumshot", "cunilingus", "cunillingus", "cunnilingus", "cunt", "cuntlick", "cuntlicker", "cuntlicking", "cunts", "cyalis", "cyberfuc", "cyberfuck", "cyberfucked", "cyberfucker", "cyberfuckers", "cyberfucking", "d1ck", "damn", "dick", "dickhead", "dildo", "dildos", "dink", "dinks", "dirsa", "dlck", "dog-fucker", "doggin", "dogging", "donkeyribber", "doosh", "duche", "dyke", "ejaculate", "ejaculated", "ejaculates", "ejaculating", "ejaculatings", "ejaculation", "ejakulate", "f u c k", "f u c k e r", "f4nny", "fag", "fagging", "faggitt", "faggot", "faggs", "fagot", "fagots", "fags", "fanny", "fannyflaps", "fannyfucker", "fanyy", "fatass", "fcuk", "fcuker", "fcuking", "feck", "fecker", "felching", "fellate", "fellatio", "fingerfuck", "fingerfucked", "fingerfucker", "fingerfuckers", "fingerfucking", "fingerfucks", "fistfuck", "fistfucked", "fistfucker", "fistfuckers", "fistfucking", "fistfuckings", "fistfucks", "flange", "fook", "fooker", "fuck", "fucka", "fucked", "fucker", "fuckers", "fuckhead", "fuckheads", "fuckin", "fucking", "fuckings", "fuckingshitmotherfucker", "fuckme", "fucks", "fuckwhit", "fuckwit", "fudge packer", "fudgepacker", "fuk", "fuker", "fukker", "fukkin", "fuks", "fukwhit", "fukwit", "fux", "fux0r", "f_u_c_k", "gangbang", "gangbanged", "gangbangs", "gaylord", "gaysex", "goatse", "God", "god-dam", "god-damned", "goddamn", "goddamned", "hardcoresex", "hell", "heshe", "hoar", "hoare", "hoer", "homo", "hore", "horniest", "horny", "hotsex", "jack-off", "jackoff", "jap", "jerk-off", "jism", "jiz", "jizm", "jizz", "kawk", "knob", "knobead", "knobed", "knobend", "knobhead", "knobjocky", "knobjokey", "kock", "kondum", "kondums", "kum", "kummer", "kumming", "kums", "kunilingus", "l3i+ch", "l3itch", "labia", "lust", "lusting", "m0f0", "m0fo", "m45terbate", "ma5terb8", "ma5terbate", "masochist", "master-bate", "masterb8", "masterbat*", "masterbat3", "masterbate", "masterbation", "masterbations", "masturbate", "mo-fo", "mof0", "mofo", "mothafuck", "mothafucka", "mothafuckas", "mothafuckaz", "mothafucked", "mothafucker", "mothafuckers", "mothafuckin", "mothafucking", "mothafuckings", "mothafucks", "mother fucker", "motherfuck", "motherfucked", "motherfucker", "motherfuckers", "motherfuckin", "motherfucking", "motherfuckings", "motherfuckka", "motherfucks", "muff", "mutha", "muthafecker", "muthafuckker", "muther", "mutherfucker", "n1gga", "n1gger", "nazi", "nigg3r", "nigg4h", "nigga", "niggah", "niggas", "niggaz", "nigger", "niggers", "nob", "nob jokey", "nobhead", "nobjocky", "nobjokey", "numbnuts", "nutsack", "orgasim", "orgasims", "orgasm", "orgasms", "p0rn", "pawn", "pecker", "penis", "penisfucker", "phonesex", "phuck", "phuk", "phuked", "phuking", "phukked", "phukking", "phuks", "phuq", "pigfucker", "pimpis", "piss", "pissed", "pisser", "pissers", "pisses", "pissflaps", "pissin", "pissing", "pissoff", "poop", "porn", "porno", "pornography", "pornos", "prick", "pricks", "pron", "pube", "pusse", "pussi", "pussies", "pussy", "pussys", "rectum", "retard", "rimjaw", "rimming", "s hit", "s.o.b.", "sadist", "schlong", "screwing", "scroat", "scrote", "scrotum", "semen", "sex", "sh!+", "sh!t", "sh1t", "shag", "shagger", "shaggin", "shagging", "shemale", "shi+", "shit", "shitdick", "shite", "shited", "shitey", "shitfuck", "shitfull", "shithead", "shiting", "shitings", "shits", "shitted", "shitter", "shitters", "shitting", "shittings", "shitty", "skank", "slut", "sluts", "smegma", "smut", "snatch", "son-of-a-bitch", "spac", "spunk", "s_h_i_t", "t1tt1e5", "t1tties", "teets", "teez", "testical", "testicle", "tit", "titfuck", "tits", "titt", "tittie5", "tittiefucker", "titties", "tittyfuck", "tittywank", "titwank", "tosser", "turd", "tw4t", "twat", "twathead", "twatty", "twunt", "twunter", "v14gra", "v1gra", "vagina", "viagra", "vulva", "w00se", "wang", "wank", "wanker", "wanky", "whoar", "whore", "willies", "willy", "xrated", "xxx"]
}
, function(t, e) {
    t.exports = /\b(4r5e|5h1t|5hit|a55|anal|anus|ar5e|arrse|arse|ass|ass-fucker|asses|assfucker|assfukka|asshole|assholes|asswhole|a_s_s|b!tch|b00bs|b17ch|b1tch|ballbag|balls|ballsack|bastard|beastial|beastiality|bellend|bestial|bestiality|bi\+ch|biatch|bitch|bitcher|bitchers|bitches|bitchin|bitching|bloody|blow job|blowjob|blowjobs|boiolas|bollock|bollok|boner|boob|boobs|booobs|boooobs|booooobs|booooooobs|breasts|buceta|bugger|bum|bunny fucker|butt|butthole|buttmuch|buttplug|c0ck|c0cksucker|carpet muncher|cawk|chink|cipa|cl1t|clit|clitoris|clits|cnut|cock|cock-sucker|cockface|cockhead|cockmunch|cockmuncher|cocks|cocksuck|cocksucked|cocksucker|cocksucking|cocksucks|cocksuka|cocksukka|cok|cokmuncher|coksucka|coon|cox|crap|cum|cummer|cumming|cums|cumshot|cunilingus|cunillingus|cunnilingus|cunt|cuntlick|cuntlicker|cuntlicking|cunts|cyalis|cyberfuc|cyberfuck|cyberfucked|cyberfucker|cyberfuckers|cyberfucking|d1ck|damn|dick|dickhead|dildo|dildos|dink|dinks|dirsa|dlck|dog-fucker|doggin|dogging|donkeyribber|doosh|duche|dyke|ejaculate|ejaculated|ejaculates|ejaculating|ejaculatings|ejaculation|ejakulate|f u c k|f u c k e r|f4nny|fag|fagging|faggitt|faggot|faggs|fagot|fagots|fags|fanny|fannyflaps|fannyfucker|fanyy|fatass|fcuk|fcuker|fcuking|feck|fecker|felching|fellate|fellatio|fingerfuck|fingerfucked|fingerfucker|fingerfuckers|fingerfucking|fingerfucks|fistfuck|fistfucked|fistfucker|fistfuckers|fistfucking|fistfuckings|fistfucks|flange|fook|fooker|fuck|fucka|fucked|fucker|fuckers|fuckhead|fuckheads|fuckin|fucking|fuckings|fuckingshitmotherfucker|fuckme|fucks|fuckwhit|fuckwit|fudge packer|fudgepacker|fuk|fuker|fukker|fukkin|fuks|fukwhit|fukwit|fux|fux0r|f_u_c_k|gangbang|gangbanged|gangbangs|gaylord|gaysex|goatse|God|god-dam|god-damned|goddamn|goddamned|hardcoresex|hell|heshe|hoar|hoare|hoer|homo|hore|horniest|horny|hotsex|jack-off|jackoff|jap|jerk-off|jism|jiz|jizm|jizz|kawk|knob|knobead|knobed|knobend|knobhead|knobjocky|knobjokey|kock|kondum|kondums|kum|kummer|kumming|kums|kunilingus|l3i\+ch|l3itch|labia|lust|lusting|m0f0|m0fo|m45terbate|ma5terb8|ma5terbate|masochist|master-bate|masterb8|masterbat*|masterbat3|masterbate|masterbation|masterbations|masturbate|mo-fo|mof0|mofo|mothafuck|mothafucka|mothafuckas|mothafuckaz|mothafucked|mothafucker|mothafuckers|mothafuckin|mothafucking|mothafuckings|mothafucks|mother fucker|motherfuck|motherfucked|motherfucker|motherfuckers|motherfuckin|motherfucking|motherfuckings|motherfuckka|motherfucks|muff|mutha|muthafecker|muthafuckker|muther|mutherfucker|n1gga|n1gger|nazi|nigg3r|nigg4h|nigga|niggah|niggas|niggaz|nigger|niggers|nob|nob jokey|nobhead|nobjocky|nobjokey|numbnuts|nutsack|orgasim|orgasims|orgasm|orgasms|p0rn|pawn|pecker|penis|penisfucker|phonesex|phuck|phuk|phuked|phuking|phukked|phukking|phuks|phuq|pigfucker|pimpis|piss|pissed|pisser|pissers|pisses|pissflaps|pissin|pissing|pissoff|poop|porn|porno|pornography|pornos|prick|pricks|pron|pube|pusse|pussi|pussies|pussy|pussys|rectum|retard|rimjaw|rimming|s hit|s.o.b.|sadist|schlong|screwing|scroat|scrote|scrotum|semen|sex|sh!\+|sh!t|sh1t|shag|shagger|shaggin|shagging|shemale|shi\+|shit|shitdick|shite|shited|shitey|shitfuck|shitfull|shithead|shiting|shitings|shits|shitted|shitter|shitters|shitting|shittings|shitty|skank|slut|sluts|smegma|smut|snatch|son-of-a-bitch|spac|spunk|s_h_i_t|t1tt1e5|t1tties|teets|teez|testical|testicle|tit|titfuck|tits|titt|tittie5|tittiefucker|titties|tittyfuck|tittywank|titwank|tosser|turd|tw4t|twat|twathead|twatty|twunt|twunter|v14gra|v1gra|vagina|viagra|vulva|w00se|wang|wank|wanker|wanky|whoar|whore|willies|willy|xrated|xxx)\b/gi
}
]);
//# sourceMappingURL=game.taMMt.js.map
